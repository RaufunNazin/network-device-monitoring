# SNMP MIB module (V1600D) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://app/mibs/V1600D
# Produced by pysmi-1.6.1 at Thu Jun 19 14:04:08 2025
# On host user-HP platform Linux version 6.11.0-26-generic by user user
# Using Python version 3.12.3 (main, May 26 2025, 18:50:19) [GCC 13.3.0]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 PhysAddress,
 RowStatus,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "PhysAddress",
    "RowStatus",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Vsolution_ObjectIdentity = ObjectIdentity
vsolution = _Vsolution_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950)
)
_Business_ObjectIdentity = ObjectIdentity
business = _Business_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1)
)
_Devices_ObjectIdentity = ObjectIdentity
devices = _Devices_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1)
)
_V1600d_ObjectIdentity = ObjectIdentity
v1600d = _V1600d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5)
)
_V1600dSwitch_ObjectIdentity = ObjectIdentity
v1600dSwitch = _V1600dSwitch_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10)
)
_V1600dPort_ObjectIdentity = ObjectIdentity
v1600dPort = _V1600dPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1)
)
_UpLinkPort_ObjectIdentity = ObjectIdentity
upLinkPort = _UpLinkPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1)
)
_UplinkPortConfigTable_Object = MibTable
uplinkPortConfigTable = _UplinkPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1)
)
if mibBuilder.loadTexts:
    uplinkPortConfigTable.setStatus("current")
_UplinkPortConfigEntry_Object = MibTableRow
uplinkPortConfigEntry = _UplinkPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1)
)
uplinkPortConfigEntry.setIndexNames(
    (0, "V1600D", "upLinkPortIndex"),
)
if mibBuilder.loadTexts:
    uplinkPortConfigEntry.setStatus("current")


class _UpLinkPortIndex_Type(Integer32):
    """Custom type upLinkPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UpLinkPortIndex_Type.__name__ = "Integer32"
_UpLinkPortIndex_Object = MibTableColumn
upLinkPortIndex = _UpLinkPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 1),
    _UpLinkPortIndex_Type()
)
upLinkPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortIndex.setStatus("current")
_UpLinkPortDescr_Type = OctetString
_UpLinkPortDescr_Object = MibTableColumn
upLinkPortDescr = _UpLinkPortDescr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 2),
    _UpLinkPortDescr_Type()
)
upLinkPortDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortDescr.setStatus("current")


class _UpLinkPortType_Type(Integer32):
    """Custom type upLinkPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fiber", 0),
          ("copper", 1))
    )


_UpLinkPortType_Type.__name__ = "Integer32"
_UpLinkPortType_Object = MibTableColumn
upLinkPortType = _UpLinkPortType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 3),
    _UpLinkPortType_Type()
)
upLinkPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortType.setStatus("current")


class _UpLinkPortAdminStatus_Type(Integer32):
    """Custom type upLinkPortAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UpLinkPortAdminStatus_Type.__name__ = "Integer32"
_UpLinkPortAdminStatus_Object = MibTableColumn
upLinkPortAdminStatus = _UpLinkPortAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 4),
    _UpLinkPortAdminStatus_Type()
)
upLinkPortAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortAdminStatus.setStatus("current")


class _UpLinkPortAutoNegotiation_Type(Integer32):
    """Custom type upLinkPortAutoNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UpLinkPortAutoNegotiation_Type.__name__ = "Integer32"
_UpLinkPortAutoNegotiation_Object = MibTableColumn
upLinkPortAutoNegotiation = _UpLinkPortAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 5),
    _UpLinkPortAutoNegotiation_Type()
)
upLinkPortAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortAutoNegotiation.setStatus("current")


class _UpLinkPortSpeed_Type(Integer32):
    """Custom type upLinkPortSpeed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("s10M", 2),
          ("s100M", 3),
          ("s1000M", 4))
    )


_UpLinkPortSpeed_Type.__name__ = "Integer32"
_UpLinkPortSpeed_Object = MibTableColumn
upLinkPortSpeed = _UpLinkPortSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 6),
    _UpLinkPortSpeed_Type()
)
upLinkPortSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortSpeed.setStatus("current")


class _UpLinkPortDuplex_Type(Integer32):
    """Custom type upLinkPortDuplex based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("full", 2),
          ("half", 3))
    )


_UpLinkPortDuplex_Type.__name__ = "Integer32"
_UpLinkPortDuplex_Object = MibTableColumn
upLinkPortDuplex = _UpLinkPortDuplex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 7),
    _UpLinkPortDuplex_Type()
)
upLinkPortDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortDuplex.setStatus("current")


class _UpLinkPortFlowControl_Type(Integer32):
    """Custom type upLinkPortFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UpLinkPortFlowControl_Type.__name__ = "Integer32"
_UpLinkPortFlowControl_Object = MibTableColumn
upLinkPortFlowControl = _UpLinkPortFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 8),
    _UpLinkPortFlowControl_Type()
)
upLinkPortFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortFlowControl.setStatus("current")


class _UpLinkPortMacLearnEn_Type(Integer32):
    """Custom type upLinkPortMacLearnEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UpLinkPortMacLearnEn_Type.__name__ = "Integer32"
_UpLinkPortMacLearnEn_Object = MibTableColumn
upLinkPortMacLearnEn = _UpLinkPortMacLearnEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 9),
    _UpLinkPortMacLearnEn_Type()
)
upLinkPortMacLearnEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortMacLearnEn.setStatus("current")


class _UpLinkPortPriEn_Type(Integer32):
    """Custom type upLinkPortPriEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UpLinkPortPriEn_Type.__name__ = "Integer32"
_UpLinkPortPriEn_Object = MibTableColumn
upLinkPortPriEn = _UpLinkPortPriEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 10),
    _UpLinkPortPriEn_Type()
)
upLinkPortPriEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortPriEn.setStatus("current")


class _UpLinkPortPriValue_Type(Integer32):
    """Custom type upLinkPortPriValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_UpLinkPortPriValue_Type.__name__ = "Integer32"
_UpLinkPortPriValue_Object = MibTableColumn
upLinkPortPriValue = _UpLinkPortPriValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 11),
    _UpLinkPortPriValue_Type()
)
upLinkPortPriValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortPriValue.setStatus("current")


class _UpLinkPortIngressRate_Type(Integer32):
    """Custom type upLinkPortIngressRate based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_UpLinkPortIngressRate_Type.__name__ = "Integer32"
_UpLinkPortIngressRate_Object = MibTableColumn
upLinkPortIngressRate = _UpLinkPortIngressRate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 12),
    _UpLinkPortIngressRate_Type()
)
upLinkPortIngressRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortIngressRate.setStatus("current")


class _UpLinkPortEgressRate_Type(Integer32):
    """Custom type upLinkPortEgressRate based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_UpLinkPortEgressRate_Type.__name__ = "Integer32"
_UpLinkPortEgressRate_Object = MibTableColumn
upLinkPortEgressRate = _UpLinkPortEgressRate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 13),
    _UpLinkPortEgressRate_Type()
)
upLinkPortEgressRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortEgressRate.setStatus("current")


class _UpLinkPortBCStromCtrl_Type(Integer32):
    """Custom type upLinkPortBCStromCtrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_UpLinkPortBCStromCtrl_Type.__name__ = "Integer32"
_UpLinkPortBCStromCtrl_Object = MibTableColumn
upLinkPortBCStromCtrl = _UpLinkPortBCStromCtrl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 14),
    _UpLinkPortBCStromCtrl_Type()
)
upLinkPortBCStromCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortBCStromCtrl.setStatus("current")


class _UpLinkPortMCStromCtrl_Type(Integer32):
    """Custom type upLinkPortMCStromCtrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_UpLinkPortMCStromCtrl_Type.__name__ = "Integer32"
_UpLinkPortMCStromCtrl_Object = MibTableColumn
upLinkPortMCStromCtrl = _UpLinkPortMCStromCtrl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 15),
    _UpLinkPortMCStromCtrl_Type()
)
upLinkPortMCStromCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortMCStromCtrl.setStatus("current")


class _UpLinkPortUCStromCtrl_Type(Integer32):
    """Custom type upLinkPortUCStromCtrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_UpLinkPortUCStromCtrl_Type.__name__ = "Integer32"
_UpLinkPortUCStromCtrl_Object = MibTableColumn
upLinkPortUCStromCtrl = _UpLinkPortUCStromCtrl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 16),
    _UpLinkPortUCStromCtrl_Type()
)
upLinkPortUCStromCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortUCStromCtrl.setStatus("current")


class _UpLinkPortIsolate_Type(Integer32):
    """Custom type upLinkPortIsolate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no_isolate", 0),
          ("isolate", 1))
    )


_UpLinkPortIsolate_Type.__name__ = "Integer32"
_UpLinkPortIsolate_Object = MibTableColumn
upLinkPortIsolate = _UpLinkPortIsolate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 17),
    _UpLinkPortIsolate_Type()
)
upLinkPortIsolate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortIsolate.setStatus("current")


class _UpLinkPortPvid_Type(Integer32):
    """Custom type upLinkPortPvid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4096),
    )


_UpLinkPortPvid_Type.__name__ = "Integer32"
_UpLinkPortPvid_Object = MibTableColumn
upLinkPortPvid = _UpLinkPortPvid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 18),
    _UpLinkPortPvid_Type()
)
upLinkPortPvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortPvid.setStatus("current")


class _UplinkPortJumboFrameEn_Type(Integer32):
    """Custom type uplinkPortJumboFrameEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UplinkPortJumboFrameEn_Type.__name__ = "Integer32"
_UplinkPortJumboFrameEn_Object = MibTableColumn
uplinkPortJumboFrameEn = _UplinkPortJumboFrameEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 19),
    _UplinkPortJumboFrameEn_Type()
)
uplinkPortJumboFrameEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortJumboFrameEn.setStatus("current")
_UpLinkPortDescr2_Type = OctetString
_UpLinkPortDescr2_Object = MibTableColumn
upLinkPortDescr2 = _UpLinkPortDescr2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 20),
    _UpLinkPortDescr2_Type()
)
upLinkPortDescr2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortDescr2.setStatus("current")


class _UplinkPortHardwareSpeed_Type(Integer32):
    """Custom type uplinkPortHardwareSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("GE", 0),
          ("GE10", 1))
    )


_UplinkPortHardwareSpeed_Type.__name__ = "Integer32"
_UplinkPortHardwareSpeed_Object = MibTableColumn
uplinkPortHardwareSpeed = _UplinkPortHardwareSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 21),
    _UplinkPortHardwareSpeed_Type()
)
uplinkPortHardwareSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortHardwareSpeed.setStatus("current")


class _UplinkPortMode_Type(Integer32):
    """Custom type uplinkPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("access", 1),
          ("trunk", 2),
          ("hybrid", 3))
    )


_UplinkPortMode_Type.__name__ = "Integer32"
_UplinkPortMode_Object = MibTableColumn
uplinkPortMode = _UplinkPortMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 22),
    _UplinkPortMode_Type()
)
uplinkPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortMode.setStatus("current")


class _UplinkPortMacAddrLearnState_Type(Integer32):
    """Custom type uplinkPortMacAddrLearnState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UplinkPortMacAddrLearnState_Type.__name__ = "Integer32"
_UplinkPortMacAddrLearnState_Object = MibTableColumn
uplinkPortMacAddrLearnState = _UplinkPortMacAddrLearnState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 1, 1, 23),
    _UplinkPortMacAddrLearnState_Type()
)
uplinkPortMacAddrLearnState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortMacAddrLearnState.setStatus("current")
_UplinkPortPerformanceDataTable_Object = MibTable
uplinkPortPerformanceDataTable = _UplinkPortPerformanceDataTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2)
)
if mibBuilder.loadTexts:
    uplinkPortPerformanceDataTable.setStatus("current")
_UplinkPortPerformanceDataEntry_Object = MibTableRow
uplinkPortPerformanceDataEntry = _UplinkPortPerformanceDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1)
)
uplinkPortPerformanceDataEntry.setIndexNames(
    (0, "V1600D", "upLinkPIndex"),
)
if mibBuilder.loadTexts:
    uplinkPortPerformanceDataEntry.setStatus("current")


class _UpLinkPIndex_Type(Integer32):
    """Custom type upLinkPIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UpLinkPIndex_Type.__name__ = "Integer32"
_UpLinkPIndex_Object = MibTableColumn
upLinkPIndex = _UpLinkPIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 1),
    _UpLinkPIndex_Type()
)
upLinkPIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPIndex.setStatus("current")
_UpLinkPortDownOctets_Type = Counter32
_UpLinkPortDownOctets_Object = MibTableColumn
upLinkPortDownOctets = _UpLinkPortDownOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 2),
    _UpLinkPortDownOctets_Type()
)
upLinkPortDownOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownOctets.setStatus("current")
_UpLinkDownSpeed_Type = Counter32
_UpLinkDownSpeed_Object = MibTableColumn
upLinkDownSpeed = _UpLinkDownSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 3),
    _UpLinkDownSpeed_Type()
)
upLinkDownSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkDownSpeed.setStatus("current")
_UpLinkPortDownMaxBand_Type = Counter32
_UpLinkPortDownMaxBand_Object = MibTableColumn
upLinkPortDownMaxBand = _UpLinkPortDownMaxBand_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 4),
    _UpLinkPortDownMaxBand_Type()
)
upLinkPortDownMaxBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownMaxBand.setStatus("current")
_UpLinkPortDownProportion_Type = Counter32
_UpLinkPortDownProportion_Object = MibTableColumn
upLinkPortDownProportion = _UpLinkPortDownProportion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 5),
    _UpLinkPortDownProportion_Type()
)
upLinkPortDownProportion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownProportion.setStatus("current")
_UpLinkPortDownUcastPkts_Type = Counter32
_UpLinkPortDownUcastPkts_Object = MibTableColumn
upLinkPortDownUcastPkts = _UpLinkPortDownUcastPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 6),
    _UpLinkPortDownUcastPkts_Type()
)
upLinkPortDownUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownUcastPkts.setStatus("current")
_UpLinkPortDownMulicastPkts_Type = Counter32
_UpLinkPortDownMulicastPkts_Object = MibTableColumn
upLinkPortDownMulicastPkts = _UpLinkPortDownMulicastPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 7),
    _UpLinkPortDownMulicastPkts_Type()
)
upLinkPortDownMulicastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownMulicastPkts.setStatus("current")
_UpLinkPortDownBrocastPkts_Type = Counter32
_UpLinkPortDownBrocastPkts_Object = MibTableColumn
upLinkPortDownBrocastPkts = _UpLinkPortDownBrocastPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 8),
    _UpLinkPortDownBrocastPkts_Type()
)
upLinkPortDownBrocastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownBrocastPkts.setStatus("current")
_UpLinkPortDownPackets_Type = Counter32
_UpLinkPortDownPackets_Object = MibTableColumn
upLinkPortDownPackets = _UpLinkPortDownPackets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 9),
    _UpLinkPortDownPackets_Type()
)
upLinkPortDownPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownPackets.setStatus("current")
_UpLinkPortDownNormalOctets_Type = Counter32
_UpLinkPortDownNormalOctets_Object = MibTableColumn
upLinkPortDownNormalOctets = _UpLinkPortDownNormalOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 10),
    _UpLinkPortDownNormalOctets_Type()
)
upLinkPortDownNormalOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownNormalOctets.setStatus("current")
_UpLinkPortDownErrOctets_Type = Counter32
_UpLinkPortDownErrOctets_Object = MibTableColumn
upLinkPortDownErrOctets = _UpLinkPortDownErrOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 11),
    _UpLinkPortDownErrOctets_Type()
)
upLinkPortDownErrOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownErrOctets.setStatus("current")
_UpLinkPortDownPausePkts_Type = Counter32
_UpLinkPortDownPausePkts_Object = MibTableColumn
upLinkPortDownPausePkts = _UpLinkPortDownPausePkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 12),
    _UpLinkPortDownPausePkts_Type()
)
upLinkPortDownPausePkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDownPausePkts.setStatus("current")
_UpLinkPortUpOctets_Type = Counter32
_UpLinkPortUpOctets_Object = MibTableColumn
upLinkPortUpOctets = _UpLinkPortUpOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 13),
    _UpLinkPortUpOctets_Type()
)
upLinkPortUpOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpOctets.setStatus("current")
_UpLinkPortUpSpeed_Type = Counter32
_UpLinkPortUpSpeed_Object = MibTableColumn
upLinkPortUpSpeed = _UpLinkPortUpSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 14),
    _UpLinkPortUpSpeed_Type()
)
upLinkPortUpSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpSpeed.setStatus("current")
_UpLinkPortUpMaxBand_Type = Counter32
_UpLinkPortUpMaxBand_Object = MibTableColumn
upLinkPortUpMaxBand = _UpLinkPortUpMaxBand_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 15),
    _UpLinkPortUpMaxBand_Type()
)
upLinkPortUpMaxBand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortUpMaxBand.setStatus("current")
_UpLinkPortUpProportion_Type = Counter32
_UpLinkPortUpProportion_Object = MibTableColumn
upLinkPortUpProportion = _UpLinkPortUpProportion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 16),
    _UpLinkPortUpProportion_Type()
)
upLinkPortUpProportion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpProportion.setStatus("current")
_UpLinkPortUpUcastPkts_Type = Counter32
_UpLinkPortUpUcastPkts_Object = MibTableColumn
upLinkPortUpUcastPkts = _UpLinkPortUpUcastPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 17),
    _UpLinkPortUpUcastPkts_Type()
)
upLinkPortUpUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpUcastPkts.setStatus("current")
_UpLinkPortUpMulicastPkts_Type = Counter32
_UpLinkPortUpMulicastPkts_Object = MibTableColumn
upLinkPortUpMulicastPkts = _UpLinkPortUpMulicastPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 18),
    _UpLinkPortUpMulicastPkts_Type()
)
upLinkPortUpMulicastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpMulicastPkts.setStatus("current")
_UpLinkPortUpBrocastPkts_Type = Counter32
_UpLinkPortUpBrocastPkts_Object = MibTableColumn
upLinkPortUpBrocastPkts = _UpLinkPortUpBrocastPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 19),
    _UpLinkPortUpBrocastPkts_Type()
)
upLinkPortUpBrocastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpBrocastPkts.setStatus("current")
_UpLinkPortUpPackets_Type = Counter32
_UpLinkPortUpPackets_Object = MibTableColumn
upLinkPortUpPackets = _UpLinkPortUpPackets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 20),
    _UpLinkPortUpPackets_Type()
)
upLinkPortUpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpPackets.setStatus("current")
_UpLinkPortUpNormalOctets_Type = Counter32
_UpLinkPortUpNormalOctets_Object = MibTableColumn
upLinkPortUpNormalOctets = _UpLinkPortUpNormalOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 21),
    _UpLinkPortUpNormalOctets_Type()
)
upLinkPortUpNormalOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpNormalOctets.setStatus("current")
_UpLinkPortUpErrOctets_Type = Counter32
_UpLinkPortUpErrOctets_Object = MibTableColumn
upLinkPortUpErrOctets = _UpLinkPortUpErrOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 22),
    _UpLinkPortUpErrOctets_Type()
)
upLinkPortUpErrOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpErrOctets.setStatus("current")
_UpLinkPortUpPausePkts_Type = Counter32
_UpLinkPortUpPausePkts_Object = MibTableColumn
upLinkPortUpPausePkts = _UpLinkPortUpPausePkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 23),
    _UpLinkPortUpPausePkts_Type()
)
upLinkPortUpPausePkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUpPausePkts.setStatus("current")
_UpLinkPortDroppedPkts_Type = Counter32
_UpLinkPortDroppedPkts_Object = MibTableColumn
upLinkPortDroppedPkts = _UpLinkPortDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 24),
    _UpLinkPortDroppedPkts_Type()
)
upLinkPortDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortDroppedPkts.setStatus("current")
_UpLinkPortCrcError_Type = Counter32
_UpLinkPortCrcError_Object = MibTableColumn
upLinkPortCrcError = _UpLinkPortCrcError_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 25),
    _UpLinkPortCrcError_Type()
)
upLinkPortCrcError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortCrcError.setStatus("current")
_UpLinkPortJabber_Type = Counter32
_UpLinkPortJabber_Object = MibTableColumn
upLinkPortJabber = _UpLinkPortJabber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 26),
    _UpLinkPortJabber_Type()
)
upLinkPortJabber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortJabber.setStatus("current")
_UpLinkPortOverSize_Type = Counter32
_UpLinkPortOverSize_Object = MibTableColumn
upLinkPortOverSize = _UpLinkPortOverSize_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 27),
    _UpLinkPortOverSize_Type()
)
upLinkPortOverSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortOverSize.setStatus("current")
_UpLinkPortUnderSize_Type = Counter32
_UpLinkPortUnderSize_Object = MibTableColumn
upLinkPortUnderSize = _UpLinkPortUnderSize_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 28),
    _UpLinkPortUnderSize_Type()
)
upLinkPortUnderSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortUnderSize.setStatus("current")
_UpLinkPortCollision_Type = Counter32
_UpLinkPortCollision_Object = MibTableColumn
upLinkPortCollision = _UpLinkPortCollision_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 29),
    _UpLinkPortCollision_Type()
)
upLinkPortCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortCollision.setStatus("current")
_UpLinkPort64OctetFrames_Type = Counter32
_UpLinkPort64OctetFrames_Object = MibTableColumn
upLinkPort64OctetFrames = _UpLinkPort64OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 30),
    _UpLinkPort64OctetFrames_Type()
)
upLinkPort64OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPort64OctetFrames.setStatus("current")
_UpLinkPort65To127OctetFrames_Type = Counter32
_UpLinkPort65To127OctetFrames_Object = MibTableColumn
upLinkPort65To127OctetFrames = _UpLinkPort65To127OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 31),
    _UpLinkPort65To127OctetFrames_Type()
)
upLinkPort65To127OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPort65To127OctetFrames.setStatus("current")
_UpLinkPort128To255OctetFrames_Type = Counter32
_UpLinkPort128To255OctetFrames_Object = MibTableColumn
upLinkPort128To255OctetFrames = _UpLinkPort128To255OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 32),
    _UpLinkPort128To255OctetFrames_Type()
)
upLinkPort128To255OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPort128To255OctetFrames.setStatus("current")
_UpLinkPort256To511OctetFrames_Type = Counter32
_UpLinkPort256To511OctetFrames_Object = MibTableColumn
upLinkPort256To511OctetFrames = _UpLinkPort256To511OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 33),
    _UpLinkPort256To511OctetFrames_Type()
)
upLinkPort256To511OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPort256To511OctetFrames.setStatus("current")
_UpLinkPort512To1023OctetFrames_Type = Counter32
_UpLinkPort512To1023OctetFrames_Object = MibTableColumn
upLinkPort512To1023OctetFrames = _UpLinkPort512To1023OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 34),
    _UpLinkPort512To1023OctetFrames_Type()
)
upLinkPort512To1023OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPort512To1023OctetFrames.setStatus("current")
_UpLinkPortOver1024OctetFrames_Type = Counter32
_UpLinkPortOver1024OctetFrames_Object = MibTableColumn
upLinkPortOver1024OctetFrames = _UpLinkPortOver1024OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 35),
    _UpLinkPortOver1024OctetFrames_Type()
)
upLinkPortOver1024OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLinkPortOver1024OctetFrames.setStatus("current")
_UplinkPortDownBytes_Type = Counter64
_UplinkPortDownBytes_Object = MibTableColumn
uplinkPortDownBytes = _UplinkPortDownBytes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 36),
    _UplinkPortDownBytes_Type()
)
uplinkPortDownBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uplinkPortDownBytes.setStatus("current")
_UplinkPortUpBytes_Type = Counter64
_UplinkPortUpBytes_Object = MibTableColumn
uplinkPortUpBytes = _UplinkPortUpBytes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 2, 1, 37),
    _UplinkPortUpBytes_Type()
)
uplinkPortUpBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uplinkPortUpBytes.setStatus("current")
_UplinkPortLinkTable_Object = MibTable
uplinkPortLinkTable = _UplinkPortLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 3)
)
if mibBuilder.loadTexts:
    uplinkPortLinkTable.setStatus("current")
_UplinkPortLinkEntry_Object = MibTableRow
uplinkPortLinkEntry = _UplinkPortLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 3, 1)
)
uplinkPortLinkEntry.setIndexNames(
    (0, "V1600D", "portNumIndex"),
)
if mibBuilder.loadTexts:
    uplinkPortLinkEntry.setStatus("current")


class _PortNumIndex_Type(Integer32):
    """Custom type portNumIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PortNumIndex_Type.__name__ = "Integer32"
_PortNumIndex_Object = MibTableColumn
portNumIndex = _PortNumIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 3, 1, 1),
    _PortNumIndex_Type()
)
portNumIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portNumIndex.setStatus("current")


class _PortLinkStatus_Type(Integer32):
    """Custom type portLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_PortLinkStatus_Type.__name__ = "Integer32"
_PortLinkStatus_Object = MibTableColumn
portLinkStatus = _PortLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 3, 1, 2),
    _PortLinkStatus_Type()
)
portLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portLinkStatus.setStatus("current")
_UplinkPortLinkSpeed_Type = OctetString
_UplinkPortLinkSpeed_Object = MibTableColumn
uplinkPortLinkSpeed = _UplinkPortLinkSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 3, 1, 3),
    _UplinkPortLinkSpeed_Type()
)
uplinkPortLinkSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uplinkPortLinkSpeed.setStatus("current")
_UplinkPortPerfThresholdTable_Object = MibTable
uplinkPortPerfThresholdTable = _UplinkPortPerfThresholdTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 4)
)
if mibBuilder.loadTexts:
    uplinkPortPerfThresholdTable.setStatus("current")
_UplinkPortPerfThresholdEntry_Object = MibTableRow
uplinkPortPerfThresholdEntry = _UplinkPortPerfThresholdEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 4, 1)
)
uplinkPortPerfThresholdEntry.setIndexNames(
    (0, "V1600D", "porIndex"),
)
if mibBuilder.loadTexts:
    uplinkPortPerfThresholdEntry.setStatus("current")


class _PorIndex_Type(Integer32):
    """Custom type porIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PorIndex_Type.__name__ = "Integer32"
_PorIndex_Object = MibTableColumn
porIndex = _PorIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 4, 1, 1),
    _PorIndex_Type()
)
porIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    porIndex.setStatus("current")
_UplinkPortCRCThreshold_Type = Integer32
_UplinkPortCRCThreshold_Object = MibTableColumn
uplinkPortCRCThreshold = _UplinkPortCRCThreshold_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 4, 1, 2),
    _UplinkPortCRCThreshold_Type()
)
uplinkPortCRCThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortCRCThreshold.setStatus("current")
_UplinkPortOpticalTransTable_Object = MibTable
uplinkPortOpticalTransTable = _UplinkPortOpticalTransTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5)
)
if mibBuilder.loadTexts:
    uplinkPortOpticalTransTable.setStatus("current")
_UplinkPortOpticalTransEntry_Object = MibTableRow
uplinkPortOpticalTransEntry = _UplinkPortOpticalTransEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1)
)
uplinkPortOpticalTransEntry.setIndexNames(
    (0, "V1600D", "transceiverPortIndex"),
)
if mibBuilder.loadTexts:
    uplinkPortOpticalTransEntry.setStatus("current")
_TransceiverPortIndex_Type = Integer32
_TransceiverPortIndex_Object = MibTableColumn
transceiverPortIndex = _TransceiverPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1, 1),
    _TransceiverPortIndex_Type()
)
transceiverPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverPortIndex.setStatus("current")
_TransceiverTempperature_Type = OctetString
_TransceiverTempperature_Object = MibTableColumn
transceiverTempperature = _TransceiverTempperature_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1, 2),
    _TransceiverTempperature_Type()
)
transceiverTempperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverTempperature.setStatus("current")
_TransceiverVoltage_Type = OctetString
_TransceiverVoltage_Object = MibTableColumn
transceiverVoltage = _TransceiverVoltage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1, 3),
    _TransceiverVoltage_Type()
)
transceiverVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverVoltage.setStatus("current")
_TransceiverBiasCurrent_Type = OctetString
_TransceiverBiasCurrent_Object = MibTableColumn
transceiverBiasCurrent = _TransceiverBiasCurrent_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1, 4),
    _TransceiverBiasCurrent_Type()
)
transceiverBiasCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverBiasCurrent.setStatus("current")
_TransceiverTransmitPower_Type = OctetString
_TransceiverTransmitPower_Object = MibTableColumn
transceiverTransmitPower = _TransceiverTransmitPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1, 5),
    _TransceiverTransmitPower_Type()
)
transceiverTransmitPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverTransmitPower.setStatus("current")
_TransceiverReceivedPower_Type = OctetString
_TransceiverReceivedPower_Object = MibTableColumn
transceiverReceivedPower = _TransceiverReceivedPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 5, 1, 6),
    _TransceiverReceivedPower_Type()
)
transceiverReceivedPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverReceivedPower.setStatus("current")
_UplinkPortAggregationTable_Object = MibTable
uplinkPortAggregationTable = _UplinkPortAggregationTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6)
)
if mibBuilder.loadTexts:
    uplinkPortAggregationTable.setStatus("current")
_UplinkPortAggregationEntry_Object = MibTableRow
uplinkPortAggregationEntry = _UplinkPortAggregationEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1)
)
uplinkPortAggregationEntry.setIndexNames(
    (0, "V1600D", "upLinkAIndex"),
)
if mibBuilder.loadTexts:
    uplinkPortAggregationEntry.setStatus("current")
_UpLinkAIndex_Type = Integer32
_UpLinkAIndex_Object = MibTableColumn
upLinkAIndex = _UpLinkAIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1, 1),
    _UpLinkAIndex_Type()
)
upLinkAIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkAIndex.setStatus("current")


class _UplinkPortAggregation_Type(Integer32):
    """Custom type uplinkPortAggregation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UplinkPortAggregation_Type.__name__ = "Integer32"
_UplinkPortAggregation_Object = MibTableColumn
uplinkPortAggregation = _UplinkPortAggregation_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1, 2),
    _UplinkPortAggregation_Type()
)
uplinkPortAggregation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortAggregation.setStatus("current")


class _UplinkPortTimeout_Type(Integer32):
    """Custom type uplinkPortTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("long", 0),
          ("short", 1))
    )


_UplinkPortTimeout_Type.__name__ = "Integer32"
_UplinkPortTimeout_Object = MibTableColumn
uplinkPortTimeout = _UplinkPortTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1, 3),
    _UplinkPortTimeout_Type()
)
uplinkPortTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortTimeout.setStatus("current")
_UplinkPortChannelGroupID_Type = Integer32
_UplinkPortChannelGroupID_Object = MibTableColumn
uplinkPortChannelGroupID = _UplinkPortChannelGroupID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1, 4),
    _UplinkPortChannelGroupID_Type()
)
uplinkPortChannelGroupID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortChannelGroupID.setStatus("current")


class _UplinkPortLacpMode_Type(Integer32):
    """Custom type uplinkPortLacpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Passive", 0),
          ("Active", 1))
    )


_UplinkPortLacpMode_Type.__name__ = "Integer32"
_UplinkPortLacpMode_Object = MibTableColumn
uplinkPortLacpMode = _UplinkPortLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1, 5),
    _UplinkPortLacpMode_Type()
)
uplinkPortLacpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortLacpMode.setStatus("current")


class _UplinkPortPriority_Type(Integer32):
    """Custom type uplinkPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_UplinkPortPriority_Type.__name__ = "Integer32"
_UplinkPortPriority_Object = MibTableColumn
uplinkPortPriority = _UplinkPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 6, 1, 6),
    _UplinkPortPriority_Type()
)
uplinkPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortPriority.setStatus("current")
_UplinkPortAggregationCfg_ObjectIdentity = ObjectIdentity
uplinkPortAggregationCfg = _UplinkPortAggregationCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7)
)


class _UpLinkAIndexS_Type(Integer32):
    """Custom type upLinkAIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_UpLinkAIndexS_Type.__name__ = "Integer32"
_UpLinkAIndexS_Object = MibScalar
upLinkAIndexS = _UpLinkAIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 1),
    _UpLinkAIndexS_Type()
)
upLinkAIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkAIndexS.setStatus("current")


class _UplinkPortAggregationS_Type(Integer32):
    """Custom type uplinkPortAggregationS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UplinkPortAggregationS_Type.__name__ = "Integer32"
_UplinkPortAggregationS_Object = MibScalar
uplinkPortAggregationS = _UplinkPortAggregationS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 2),
    _UplinkPortAggregationS_Type()
)
uplinkPortAggregationS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortAggregationS.setStatus("current")


class _UplinkPortTimeoutS_Type(Integer32):
    """Custom type uplinkPortTimeoutS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("long", 0),
          ("short", 1))
    )


_UplinkPortTimeoutS_Type.__name__ = "Integer32"
_UplinkPortTimeoutS_Object = MibScalar
uplinkPortTimeoutS = _UplinkPortTimeoutS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 3),
    _UplinkPortTimeoutS_Type()
)
uplinkPortTimeoutS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortTimeoutS.setStatus("current")
_UplinkPortChannelGroupIDS_Type = Integer32
_UplinkPortChannelGroupIDS_Object = MibScalar
uplinkPortChannelGroupIDS = _UplinkPortChannelGroupIDS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 4),
    _UplinkPortChannelGroupIDS_Type()
)
uplinkPortChannelGroupIDS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortChannelGroupIDS.setStatus("current")


class _UplinkPortLacpModeS_Type(Integer32):
    """Custom type uplinkPortLacpModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Passive", 0),
          ("Active", 1))
    )


_UplinkPortLacpModeS_Type.__name__ = "Integer32"
_UplinkPortLacpModeS_Object = MibScalar
uplinkPortLacpModeS = _UplinkPortLacpModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 5),
    _UplinkPortLacpModeS_Type()
)
uplinkPortLacpModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortLacpModeS.setStatus("current")


class _UplinkPortPriorityS_Type(Integer32):
    """Custom type uplinkPortPriorityS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_UplinkPortPriorityS_Type.__name__ = "Integer32"
_UplinkPortPriorityS_Object = MibScalar
uplinkPortPriorityS = _UplinkPortPriorityS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 6),
    _UplinkPortPriorityS_Type()
)
uplinkPortPriorityS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortPriorityS.setStatus("current")


class _UplinkPortCfgAction_Type(Integer32):
    """Custom type uplinkPortCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_UplinkPortCfgAction_Type.__name__ = "Integer32"
_UplinkPortCfgAction_Object = MibScalar
uplinkPortCfgAction = _UplinkPortCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 1, 7, 7),
    _UplinkPortCfgAction_Type()
)
uplinkPortCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uplinkPortCfgAction.setStatus("current")
_PonPort_ObjectIdentity = ObjectIdentity
ponPort = _PonPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2)
)
_PonPortConfigTable_Object = MibTable
ponPortConfigTable = _PonPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1)
)
if mibBuilder.loadTexts:
    ponPortConfigTable.setStatus("current")
_PonPortConfigEntry_Object = MibTableRow
ponPortConfigEntry = _PonPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1)
)
ponPortConfigEntry.setIndexNames(
    (0, "V1600D", "ponPortIndex"),
)
if mibBuilder.loadTexts:
    ponPortConfigEntry.setStatus("current")


class _PonPortIndex_Type(Integer32):
    """Custom type ponPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonPortIndex_Type.__name__ = "Integer32"
_PonPortIndex_Object = MibTableColumn
ponPortIndex = _PonPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 1),
    _PonPortIndex_Type()
)
ponPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortIndex.setStatus("current")
_PonPortDescr_Type = OctetString
_PonPortDescr_Object = MibTableColumn
ponPortDescr = _PonPortDescr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 2),
    _PonPortDescr_Type()
)
ponPortDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortDescr.setStatus("current")


class _PonPortAdminStatus_Type(Integer32):
    """Custom type ponPortAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonPortAdminStatus_Type.__name__ = "Integer32"
_PonPortAdminStatus_Object = MibTableColumn
ponPortAdminStatus = _PonPortAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 3),
    _PonPortAdminStatus_Type()
)
ponPortAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortAdminStatus.setStatus("current")


class _PonPortFlowControl_Type(Integer32):
    """Custom type ponPortFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonPortFlowControl_Type.__name__ = "Integer32"
_PonPortFlowControl_Object = MibTableColumn
ponPortFlowControl = _PonPortFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 4),
    _PonPortFlowControl_Type()
)
ponPortFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortFlowControl.setStatus("current")


class _PonPortIngressRate_Type(Integer32):
    """Custom type ponPortIngressRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_PonPortIngressRate_Type.__name__ = "Integer32"
_PonPortIngressRate_Object = MibTableColumn
ponPortIngressRate = _PonPortIngressRate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 5),
    _PonPortIngressRate_Type()
)
ponPortIngressRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortIngressRate.setStatus("current")


class _PonPortEgressRate_Type(Integer32):
    """Custom type ponPortEgressRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_PonPortEgressRate_Type.__name__ = "Integer32"
_PonPortEgressRate_Object = MibTableColumn
ponPortEgressRate = _PonPortEgressRate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 6),
    _PonPortEgressRate_Type()
)
ponPortEgressRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortEgressRate.setStatus("current")


class _PonPortBCStormCtrl_Type(Integer32):
    """Custom type ponPortBCStormCtrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_PonPortBCStormCtrl_Type.__name__ = "Integer32"
_PonPortBCStormCtrl_Object = MibTableColumn
ponPortBCStormCtrl = _PonPortBCStormCtrl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 7),
    _PonPortBCStormCtrl_Type()
)
ponPortBCStormCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortBCStormCtrl.setStatus("current")


class _PonPortMCStromCtrl_Type(Integer32):
    """Custom type ponPortMCStromCtrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_PonPortMCStromCtrl_Type.__name__ = "Integer32"
_PonPortMCStromCtrl_Object = MibTableColumn
ponPortMCStromCtrl = _PonPortMCStromCtrl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 8),
    _PonPortMCStromCtrl_Type()
)
ponPortMCStromCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortMCStromCtrl.setStatus("current")


class _PonPortUCStromCtrl_Type(Integer32):
    """Custom type ponPortUCStromCtrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(64, 1000000),
    )


_PonPortUCStromCtrl_Type.__name__ = "Integer32"
_PonPortUCStromCtrl_Object = MibTableColumn
ponPortUCStromCtrl = _PonPortUCStromCtrl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 9),
    _PonPortUCStromCtrl_Type()
)
ponPortUCStromCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortUCStromCtrl.setStatus("current")


class _PonPortPriValue_Type(Integer32):
    """Custom type ponPortPriValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PonPortPriValue_Type.__name__ = "Integer32"
_PonPortPriValue_Object = MibTableColumn
ponPortPriValue = _PonPortPriValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 10),
    _PonPortPriValue_Type()
)
ponPortPriValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortPriValue.setStatus("current")


class _PonPortPvid_Type(Integer32):
    """Custom type ponPortPvid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4096),
    )


_PonPortPvid_Type.__name__ = "Integer32"
_PonPortPvid_Object = MibTableColumn
ponPortPvid = _PonPortPvid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 11),
    _PonPortPvid_Type()
)
ponPortPvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortPvid.setStatus("current")


class _PonPortIsolate_Type(Integer32):
    """Custom type ponPortIsolate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no_isolate", 0),
          ("isolate", 1))
    )


_PonPortIsolate_Type.__name__ = "Integer32"
_PonPortIsolate_Object = MibTableColumn
ponPortIsolate = _PonPortIsolate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 12),
    _PonPortIsolate_Type()
)
ponPortIsolate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortIsolate.setStatus("current")


class _PonPortJumboFrameEn_Type(Integer32):
    """Custom type ponPortJumboFrameEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonPortJumboFrameEn_Type.__name__ = "Integer32"
_PonPortJumboFrameEn_Object = MibTableColumn
ponPortJumboFrameEn = _PonPortJumboFrameEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 13),
    _PonPortJumboFrameEn_Type()
)
ponPortJumboFrameEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortJumboFrameEn.setStatus("current")
_PonPortDescr2_Type = OctetString
_PonPortDescr2_Object = MibTableColumn
ponPortDescr2 = _PonPortDescr2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 14),
    _PonPortDescr2_Type()
)
ponPortDescr2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortDescr2.setStatus("current")


class _PonPortMode_Type(Integer32):
    """Custom type ponPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("access", 1),
          ("trunk", 2),
          ("hybrid", 3))
    )


_PonPortMode_Type.__name__ = "Integer32"
_PonPortMode_Object = MibTableColumn
ponPortMode = _PonPortMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 15),
    _PonPortMode_Type()
)
ponPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortMode.setStatus("current")


class _PonPortMacAddrLearnState_Type(Integer32):
    """Custom type ponPortMacAddrLearnState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonPortMacAddrLearnState_Type.__name__ = "Integer32"
_PonPortMacAddrLearnState_Object = MibTableColumn
ponPortMacAddrLearnState = _PonPortMacAddrLearnState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 1, 1, 16),
    _PonPortMacAddrLearnState_Type()
)
ponPortMacAddrLearnState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPortMacAddrLearnState.setStatus("current")
_PonPortPerformanceDataTable_Object = MibTable
ponPortPerformanceDataTable = _PonPortPerformanceDataTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2)
)
if mibBuilder.loadTexts:
    ponPortPerformanceDataTable.setStatus("current")
_PonPortPerformanceDataEntry_Object = MibTableRow
ponPortPerformanceDataEntry = _PonPortPerformanceDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1)
)
ponPortPerformanceDataEntry.setIndexNames(
    (0, "V1600D", "ponPIndex"),
)
if mibBuilder.loadTexts:
    ponPortPerformanceDataEntry.setStatus("current")


class _PonPIndex_Type(Integer32):
    """Custom type ponPIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonPIndex_Type.__name__ = "Integer32"
_PonPIndex_Object = MibTableColumn
ponPIndex = _PonPIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 1),
    _PonPIndex_Type()
)
ponPIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPIndex.setStatus("current")
_PonPortUpOctets_Type = Counter32
_PonPortUpOctets_Object = MibTableColumn
ponPortUpOctets = _PonPortUpOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 2),
    _PonPortUpOctets_Type()
)
ponPortUpOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpOctets.setStatus("current")
_PonPortUpSpeed_Type = Counter32
_PonPortUpSpeed_Object = MibTableColumn
ponPortUpSpeed = _PonPortUpSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 3),
    _PonPortUpSpeed_Type()
)
ponPortUpSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpSpeed.setStatus("current")
_PonPortUpMaxBand_Type = Counter32
_PonPortUpMaxBand_Object = MibTableColumn
ponPortUpMaxBand = _PonPortUpMaxBand_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 4),
    _PonPortUpMaxBand_Type()
)
ponPortUpMaxBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpMaxBand.setStatus("current")
_PonPortUpProportion_Type = Counter32
_PonPortUpProportion_Object = MibTableColumn
ponPortUpProportion = _PonPortUpProportion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 5),
    _PonPortUpProportion_Type()
)
ponPortUpProportion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpProportion.setStatus("current")
_PonPortUpMPCP_Type = Counter32
_PonPortUpMPCP_Object = MibTableColumn
ponPortUpMPCP = _PonPortUpMPCP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 6),
    _PonPortUpMPCP_Type()
)
ponPortUpMPCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpMPCP.setStatus("current")
_PonPortTotalFrames_Type = Counter32
_PonPortTotalFrames_Object = MibTableColumn
ponPortTotalFrames = _PonPortTotalFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 7),
    _PonPortTotalFrames_Type()
)
ponPortTotalFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortTotalFrames.setStatus("current")
_PonPortUpUnicastFrames_Type = Counter32
_PonPortUpUnicastFrames_Object = MibTableColumn
ponPortUpUnicastFrames = _PonPortUpUnicastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 8),
    _PonPortUpUnicastFrames_Type()
)
ponPortUpUnicastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpUnicastFrames.setStatus("current")
_PonPortUpBroadcastFrames_Type = Counter32
_PonPortUpBroadcastFrames_Object = MibTableColumn
ponPortUpBroadcastFrames = _PonPortUpBroadcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 9),
    _PonPortUpBroadcastFrames_Type()
)
ponPortUpBroadcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpBroadcastFrames.setStatus("current")
_PonPortUpMulticastFrames_Type = Counter32
_PonPortUpMulticastFrames_Object = MibTableColumn
ponPortUpMulticastFrames = _PonPortUpMulticastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 10),
    _PonPortUpMulticastFrames_Type()
)
ponPortUpMulticastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpMulticastFrames.setStatus("current")
_PonPortUpCrc32Errors_Type = Counter32
_PonPortUpCrc32Errors_Object = MibTableColumn
ponPortUpCrc32Errors = _PonPortUpCrc32Errors_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 11),
    _PonPortUpCrc32Errors_Type()
)
ponPortUpCrc32Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpCrc32Errors.setStatus("current")
_PonPortUpUndersizeFrames_Type = Counter32
_PonPortUpUndersizeFrames_Object = MibTableColumn
ponPortUpUndersizeFrames = _PonPortUpUndersizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 12),
    _PonPortUpUndersizeFrames_Type()
)
ponPortUpUndersizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpUndersizeFrames.setStatus("current")
_PonPortUpOversizeFrames_Type = Counter32
_PonPortUpOversizeFrames_Object = MibTableColumn
ponPortUpOversizeFrames = _PonPortUpOversizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 13),
    _PonPortUpOversizeFrames_Type()
)
ponPortUpOversizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpOversizeFrames.setStatus("current")
_PonPortUpCollisions_Type = Counter32
_PonPortUpCollisions_Object = MibTableColumn
ponPortUpCollisions = _PonPortUpCollisions_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 14),
    _PonPortUpCollisions_Type()
)
ponPortUpCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpCollisions.setStatus("current")
_PonPortUpFramesDropped_Type = Counter32
_PonPortUpFramesDropped_Object = MibTableColumn
ponPortUpFramesDropped = _PonPortUpFramesDropped_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 15),
    _PonPortUpFramesDropped_Type()
)
ponPortUpFramesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpFramesDropped.setStatus("current")
_PonPortUp64OctetFrames_Type = Counter32
_PonPortUp64OctetFrames_Object = MibTableColumn
ponPortUp64OctetFrames = _PonPortUp64OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 16),
    _PonPortUp64OctetFrames_Type()
)
ponPortUp64OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUp64OctetFrames.setStatus("current")
_PonPortUp65To127OctetFrames_Type = Counter32
_PonPortUp65To127OctetFrames_Object = MibTableColumn
ponPortUp65To127OctetFrames = _PonPortUp65To127OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 17),
    _PonPortUp65To127OctetFrames_Type()
)
ponPortUp65To127OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUp65To127OctetFrames.setStatus("current")
_PonPortUp128To255OctetFrames_Type = Counter32
_PonPortUp128To255OctetFrames_Object = MibTableColumn
ponPortUp128To255OctetFrames = _PonPortUp128To255OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 18),
    _PonPortUp128To255OctetFrames_Type()
)
ponPortUp128To255OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUp128To255OctetFrames.setStatus("current")
_PonPortUp256To511OctetFrames_Type = Counter32
_PonPortUp256To511OctetFrames_Object = MibTableColumn
ponPortUp256To511OctetFrames = _PonPortUp256To511OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 19),
    _PonPortUp256To511OctetFrames_Type()
)
ponPortUp256To511OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUp256To511OctetFrames.setStatus("current")
_PonPortUp512To1023OctetFrames_Type = Counter32
_PonPortUp512To1023OctetFrames_Object = MibTableColumn
ponPortUp512To1023OctetFrames = _PonPortUp512To1023OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 20),
    _PonPortUp512To1023OctetFrames_Type()
)
ponPortUp512To1023OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUp512To1023OctetFrames.setStatus("current")
_PonPortUp1024To1518OctetFrames_Type = Counter32
_PonPortUp1024To1518OctetFrames_Object = MibTableColumn
ponPortUp1024To1518OctetFrames = _PonPortUp1024To1518OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 21),
    _PonPortUp1024To1518OctetFrames_Type()
)
ponPortUp1024To1518OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUp1024To1518OctetFrames.setStatus("current")
_PonPortUpOver1519OctetFrames_Type = Counter32
_PonPortUpOver1519OctetFrames_Object = MibTableColumn
ponPortUpOver1519OctetFrames = _PonPortUpOver1519OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 22),
    _PonPortUpOver1519OctetFrames_Type()
)
ponPortUpOver1519OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpOver1519OctetFrames.setStatus("current")
_PonPortDownOctets_Type = Counter32
_PonPortDownOctets_Object = MibTableColumn
ponPortDownOctets = _PonPortDownOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 23),
    _PonPortDownOctets_Type()
)
ponPortDownOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownOctets.setStatus("current")
_PonPortDownSpeed_Type = Counter32
_PonPortDownSpeed_Object = MibTableColumn
ponPortDownSpeed = _PonPortDownSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 24),
    _PonPortDownSpeed_Type()
)
ponPortDownSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownSpeed.setStatus("current")
_PonPortDownMaxband_Type = Counter32
_PonPortDownMaxband_Object = MibTableColumn
ponPortDownMaxband = _PonPortDownMaxband_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 25),
    _PonPortDownMaxband_Type()
)
ponPortDownMaxband.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownMaxband.setStatus("current")
_PonPortDownproportion_Type = Counter32
_PonPortDownproportion_Object = MibTableColumn
ponPortDownproportion = _PonPortDownproportion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 26),
    _PonPortDownproportion_Type()
)
ponPortDownproportion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownproportion.setStatus("current")
_PonPortDownMPCP_Type = Counter32
_PonPortDownMPCP_Object = MibTableColumn
ponPortDownMPCP = _PonPortDownMPCP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 27),
    _PonPortDownMPCP_Type()
)
ponPortDownMPCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownMPCP.setStatus("current")
_PonPortDownTotalFrames_Type = Counter32
_PonPortDownTotalFrames_Object = MibTableColumn
ponPortDownTotalFrames = _PonPortDownTotalFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 28),
    _PonPortDownTotalFrames_Type()
)
ponPortDownTotalFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownTotalFrames.setStatus("current")
_PonPortDownUnicastFrames_Type = Counter32
_PonPortDownUnicastFrames_Object = MibTableColumn
ponPortDownUnicastFrames = _PonPortDownUnicastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 29),
    _PonPortDownUnicastFrames_Type()
)
ponPortDownUnicastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownUnicastFrames.setStatus("current")
_PonPortDownBroadcastFrames_Type = Counter32
_PonPortDownBroadcastFrames_Object = MibTableColumn
ponPortDownBroadcastFrames = _PonPortDownBroadcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 30),
    _PonPortDownBroadcastFrames_Type()
)
ponPortDownBroadcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownBroadcastFrames.setStatus("current")
_PonPortDownMulticastFrames_Type = Counter32
_PonPortDownMulticastFrames_Object = MibTableColumn
ponPortDownMulticastFrames = _PonPortDownMulticastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 31),
    _PonPortDownMulticastFrames_Type()
)
ponPortDownMulticastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownMulticastFrames.setStatus("current")
_PonPortDownCrc32Errors_Type = Counter32
_PonPortDownCrc32Errors_Object = MibTableColumn
ponPortDownCrc32Errors = _PonPortDownCrc32Errors_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 32),
    _PonPortDownCrc32Errors_Type()
)
ponPortDownCrc32Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownCrc32Errors.setStatus("current")
_PonPortDownUndersizeFrames_Type = Counter32
_PonPortDownUndersizeFrames_Object = MibTableColumn
ponPortDownUndersizeFrames = _PonPortDownUndersizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 33),
    _PonPortDownUndersizeFrames_Type()
)
ponPortDownUndersizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownUndersizeFrames.setStatus("current")
_PonPortDownOversizeFrames_Type = Counter32
_PonPortDownOversizeFrames_Object = MibTableColumn
ponPortDownOversizeFrames = _PonPortDownOversizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 34),
    _PonPortDownOversizeFrames_Type()
)
ponPortDownOversizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownOversizeFrames.setStatus("current")
_PonPortDownCollisions_Type = Counter32
_PonPortDownCollisions_Object = MibTableColumn
ponPortDownCollisions = _PonPortDownCollisions_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 35),
    _PonPortDownCollisions_Type()
)
ponPortDownCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownCollisions.setStatus("current")
_PonPortDownFramesDropped_Type = Counter32
_PonPortDownFramesDropped_Object = MibTableColumn
ponPortDownFramesDropped = _PonPortDownFramesDropped_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 36),
    _PonPortDownFramesDropped_Type()
)
ponPortDownFramesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownFramesDropped.setStatus("current")
_PonPortDown64OctetFrames_Type = Counter32
_PonPortDown64OctetFrames_Object = MibTableColumn
ponPortDown64OctetFrames = _PonPortDown64OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 37),
    _PonPortDown64OctetFrames_Type()
)
ponPortDown64OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDown64OctetFrames.setStatus("current")
_PonPortDown65To127OctetFrames_Type = Counter32
_PonPortDown65To127OctetFrames_Object = MibTableColumn
ponPortDown65To127OctetFrames = _PonPortDown65To127OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 38),
    _PonPortDown65To127OctetFrames_Type()
)
ponPortDown65To127OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDown65To127OctetFrames.setStatus("current")
_PonPortDown128To255OctetFrames_Type = Counter32
_PonPortDown128To255OctetFrames_Object = MibTableColumn
ponPortDown128To255OctetFrames = _PonPortDown128To255OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 39),
    _PonPortDown128To255OctetFrames_Type()
)
ponPortDown128To255OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDown128To255OctetFrames.setStatus("current")
_PonPortDown256To511OctetFrames_Type = Counter32
_PonPortDown256To511OctetFrames_Object = MibTableColumn
ponPortDown256To511OctetFrames = _PonPortDown256To511OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 40),
    _PonPortDown256To511OctetFrames_Type()
)
ponPortDown256To511OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDown256To511OctetFrames.setStatus("current")
_PonPortDown512To1023OctetFrames_Type = Counter32
_PonPortDown512To1023OctetFrames_Object = MibTableColumn
ponPortDown512To1023OctetFrames = _PonPortDown512To1023OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 41),
    _PonPortDown512To1023OctetFrames_Type()
)
ponPortDown512To1023OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDown512To1023OctetFrames.setStatus("current")
_PonPortDown1024To1518OctetFrames_Type = Counter32
_PonPortDown1024To1518OctetFrames_Object = MibTableColumn
ponPortDown1024To1518OctetFrames = _PonPortDown1024To1518OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 42),
    _PonPortDown1024To1518OctetFrames_Type()
)
ponPortDown1024To1518OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDown1024To1518OctetFrames.setStatus("current")
_PonPortDownOver1519OctetFrames_Type = Counter32
_PonPortDownOver1519OctetFrames_Object = MibTableColumn
ponPortDownOver1519OctetFrames = _PonPortDownOver1519OctetFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 43),
    _PonPortDownOver1519OctetFrames_Type()
)
ponPortDownOver1519OctetFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownOver1519OctetFrames.setStatus("current")
_PonPortDownBytes_Type = Counter64
_PonPortDownBytes_Object = MibTableColumn
ponPortDownBytes = _PonPortDownBytes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 44),
    _PonPortDownBytes_Type()
)
ponPortDownBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortDownBytes.setStatus("current")
_PonPortUpBytes_Type = Counter64
_PonPortUpBytes_Object = MibTableColumn
ponPortUpBytes = _PonPortUpBytes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 2, 1, 45),
    _PonPortUpBytes_Type()
)
ponPortUpBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortUpBytes.setStatus("current")
_PonPortLinkTable_Object = MibTable
ponPortLinkTable = _PonPortLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 3)
)
if mibBuilder.loadTexts:
    ponPortLinkTable.setStatus("current")
_PonPortLinkEntry_Object = MibTableRow
ponPortLinkEntry = _PonPortLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 3, 1)
)
ponPortLinkEntry.setIndexNames(
    (0, "V1600D", "ponPortLinkIndex"),
)
if mibBuilder.loadTexts:
    ponPortLinkEntry.setStatus("current")


class _PonPortLinkIndex_Type(Integer32):
    """Custom type ponPortLinkIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonPortLinkIndex_Type.__name__ = "Integer32"
_PonPortLinkIndex_Object = MibTableColumn
ponPortLinkIndex = _PonPortLinkIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 3, 1, 1),
    _PonPortLinkIndex_Type()
)
ponPortLinkIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortLinkIndex.setStatus("current")


class _PonPortLinkStatus_Type(Integer32):
    """Custom type ponPortLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_PonPortLinkStatus_Type.__name__ = "Integer32"
_PonPortLinkStatus_Object = MibTableColumn
ponPortLinkStatus = _PonPortLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 3, 1, 2),
    _PonPortLinkStatus_Type()
)
ponPortLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortLinkStatus.setStatus("current")
_PonPortLinkSpeed_Type = OctetString
_PonPortLinkSpeed_Object = MibTableColumn
ponPortLinkSpeed = _PonPortLinkSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 3, 1, 3),
    _PonPortLinkSpeed_Type()
)
ponPortLinkSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponPortLinkSpeed.setStatus("current")
_PonConfigTable_Object = MibTable
ponConfigTable = _PonConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4)
)
if mibBuilder.loadTexts:
    ponConfigTable.setStatus("current")
_PonConfigEntry_Object = MibTableRow
ponConfigEntry = _PonConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4, 1)
)
ponConfigEntry.setIndexNames(
    (0, "V1600D", "ponIndex"),
)
if mibBuilder.loadTexts:
    ponConfigEntry.setStatus("current")


class _PonIndex_Type(Integer32):
    """Custom type ponIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonIndex_Type.__name__ = "Integer32"
_PonIndex_Object = MibTableColumn
ponIndex = _PonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4, 1, 1),
    _PonIndex_Type()
)
ponIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponIndex.setStatus("current")


class _PonStauts_Type(Integer32):
    """Custom type ponStauts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonStauts_Type.__name__ = "Integer32"
_PonStauts_Object = MibTableColumn
ponStauts = _PonStauts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4, 1, 2),
    _PonStauts_Type()
)
ponStauts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponStauts.setStatus("current")


class _PonEncrytionTime_Type(Integer32):
    """Custom type ponEncrytionTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(774, 786426),
    )


_PonEncrytionTime_Type.__name__ = "Integer32"
_PonEncrytionTime_Object = MibTableColumn
ponEncrytionTime = _PonEncrytionTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4, 1, 3),
    _PonEncrytionTime_Type()
)
ponEncrytionTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponEncrytionTime.setStatus("current")


class _PonMaxRtt_Type(Integer32):
    """Custom type ponMaxRtt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 32000),
    )


_PonMaxRtt_Type.__name__ = "Integer32"
_PonMaxRtt_Object = MibTableColumn
ponMaxRtt = _PonMaxRtt_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4, 1, 4),
    _PonMaxRtt_Type()
)
ponMaxRtt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponMaxRtt.setStatus("current")


class _PonP2pEnable_Type(Integer32):
    """Custom type ponP2pEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonP2pEnable_Type.__name__ = "Integer32"
_PonP2pEnable_Object = MibTableColumn
ponP2pEnable = _PonP2pEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 2, 4, 1, 5),
    _PonP2pEnable_Type()
)
ponP2pEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponP2pEnable.setStatus("current")
_PortMirror_ObjectIdentity = ObjectIdentity
portMirror = _PortMirror_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 3)
)


class _MirrorSession_Type(Integer32):
    """Custom type mirrorSession based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MirrorSession_Type.__name__ = "Integer32"
_MirrorSession_Object = MibScalar
mirrorSession = _MirrorSession_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 3, 1),
    _MirrorSession_Type()
)
mirrorSession.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mirrorSession.setStatus("current")


class _MirrorDstPort_Type(Integer32):
    """Custom type mirrorDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_MirrorDstPort_Type.__name__ = "Integer32"
_MirrorDstPort_Object = MibScalar
mirrorDstPort = _MirrorDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 3, 2),
    _MirrorDstPort_Type()
)
mirrorDstPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mirrorDstPort.setStatus("current")


class _MirrorSrcPort_Type(Integer32):
    """Custom type mirrorSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_MirrorSrcPort_Type.__name__ = "Integer32"
_MirrorSrcPort_Object = MibScalar
mirrorSrcPort = _MirrorSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 3, 3),
    _MirrorSrcPort_Type()
)
mirrorSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mirrorSrcPort.setStatus("current")


class _MirrorType_Type(Integer32):
    """Custom type mirrorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 1),
          ("rx", 2),
          ("tx", 3))
    )


_MirrorType_Type.__name__ = "Integer32"
_MirrorType_Object = MibScalar
mirrorType = _MirrorType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 3, 4),
    _MirrorType_Type()
)
mirrorType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mirrorType.setStatus("current")


class _MirrorAction_Type(Integer32):
    """Custom type mirrorAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3),
          ("clearAll", 4))
    )


_MirrorAction_Type.__name__ = "Integer32"
_MirrorAction_Object = MibScalar
mirrorAction = _MirrorAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 3, 5),
    _MirrorAction_Type()
)
mirrorAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mirrorAction.setStatus("current")
_PortMirrorTable_Object = MibTable
portMirrorTable = _PortMirrorTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4)
)
if mibBuilder.loadTexts:
    portMirrorTable.setStatus("current")
_PortMirrorEntry_Object = MibTableRow
portMirrorEntry = _PortMirrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4, 1)
)
portMirrorEntry.setIndexNames(
    (0, "V1600D", "portMirrorIndex"),
)
if mibBuilder.loadTexts:
    portMirrorEntry.setStatus("current")


class _PortMirrorIndex_Type(Integer32):
    """Custom type portMirrorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PortMirrorIndex_Type.__name__ = "Integer32"
_PortMirrorIndex_Object = MibTableColumn
portMirrorIndex = _PortMirrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4, 1, 1),
    _PortMirrorIndex_Type()
)
portMirrorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMirrorIndex.setStatus("current")


class _PortMirrorsession_Type(Integer32):
    """Custom type portMirrorsession based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_PortMirrorsession_Type.__name__ = "Integer32"
_PortMirrorsession_Object = MibTableColumn
portMirrorsession = _PortMirrorsession_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4, 1, 2),
    _PortMirrorsession_Type()
)
portMirrorsession.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMirrorsession.setStatus("current")
_PortMirrorDstPort_Type = Integer32
_PortMirrorDstPort_Object = MibTableColumn
portMirrorDstPort = _PortMirrorDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4, 1, 3),
    _PortMirrorDstPort_Type()
)
portMirrorDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMirrorDstPort.setStatus("current")
_PortMirrorSrcPort_Type = Integer32
_PortMirrorSrcPort_Object = MibTableColumn
portMirrorSrcPort = _PortMirrorSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4, 1, 4),
    _PortMirrorSrcPort_Type()
)
portMirrorSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMirrorSrcPort.setStatus("current")


class _PortMirrorType_Type(Integer32):
    """Custom type portMirrorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 1),
          ("rx", 2),
          ("tx", 3))
    )


_PortMirrorType_Type.__name__ = "Integer32"
_PortMirrorType_Object = MibTableColumn
portMirrorType = _PortMirrorType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 4, 1, 5),
    _PortMirrorType_Type()
)
portMirrorType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portMirrorType.setStatus("current")


class _PortCountersClear_Type(Integer32):
    """Custom type portCountersClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )


_PortCountersClear_Type.__name__ = "Integer32"
_PortCountersClear_Object = MibScalar
portCountersClear = _PortCountersClear_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 5),
    _PortCountersClear_Type()
)
portCountersClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portCountersClear.setStatus("current")


class _PortLookbackDetect_Type(Integer32):
    """Custom type portLookbackDetect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortLookbackDetect_Type.__name__ = "Integer32"
_PortLookbackDetect_Object = MibScalar
portLookbackDetect = _PortLookbackDetect_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 6),
    _PortLookbackDetect_Type()
)
portLookbackDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portLookbackDetect.setStatus("current")
_PortChannelGroup_ObjectIdentity = ObjectIdentity
portChannelGroup = _PortChannelGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7)
)
_PortChannelGroupCfg_ObjectIdentity = ObjectIdentity
portChannelGroupCfg = _PortChannelGroupCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1)
)


class _PortChannelGroupIndex_Type(Integer32):
    """Custom type portChannelGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PortChannelGroupIndex_Type.__name__ = "Integer32"
_PortChannelGroupIndex_Object = MibScalar
portChannelGroupIndex = _PortChannelGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 1),
    _PortChannelGroupIndex_Type()
)
portChannelGroupIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelGroupIndex.setStatus("current")


class _PortChannelLoadBalance_Type(Integer32):
    """Custom type portChannelLoadBalance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("smac", 1),
          ("dmac", 2),
          ("sdmac", 3),
          ("sip", 4),
          ("dip", 5),
          ("sdip", 6))
    )


_PortChannelLoadBalance_Type.__name__ = "Integer32"
_PortChannelLoadBalance_Object = MibScalar
portChannelLoadBalance = _PortChannelLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 2),
    _PortChannelLoadBalance_Type()
)
portChannelLoadBalance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelLoadBalance.setStatus("current")


class _PortChannelPortId1_Type(Integer32):
    """Custom type portChannelPortId1 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelPortId1_Type.__name__ = "Integer32"
_PortChannelPortId1_Object = MibScalar
portChannelPortId1 = _PortChannelPortId1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 3),
    _PortChannelPortId1_Type()
)
portChannelPortId1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelPortId1.setStatus("current")


class _PortChannelPortId2_Type(Integer32):
    """Custom type portChannelPortId2 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelPortId2_Type.__name__ = "Integer32"
_PortChannelPortId2_Object = MibScalar
portChannelPortId2 = _PortChannelPortId2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 4),
    _PortChannelPortId2_Type()
)
portChannelPortId2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelPortId2.setStatus("current")


class _PortChannelPortId3_Type(Integer32):
    """Custom type portChannelPortId3 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelPortId3_Type.__name__ = "Integer32"
_PortChannelPortId3_Object = MibScalar
portChannelPortId3 = _PortChannelPortId3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 5),
    _PortChannelPortId3_Type()
)
portChannelPortId3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelPortId3.setStatus("current")


class _PortChannelPortId4_Type(Integer32):
    """Custom type portChannelPortId4 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelPortId4_Type.__name__ = "Integer32"
_PortChannelPortId4_Object = MibScalar
portChannelPortId4 = _PortChannelPortId4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 6),
    _PortChannelPortId4_Type()
)
portChannelPortId4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelPortId4.setStatus("current")


class _PortChannelAction_Type(Integer32):
    """Custom type portChannelAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("create", 1),
          ("delete", 2))
    )


_PortChannelAction_Type.__name__ = "Integer32"
_PortChannelAction_Object = MibScalar
portChannelAction = _PortChannelAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 7),
    _PortChannelAction_Type()
)
portChannelAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelAction.setStatus("current")


class _PortChannelType_Type(Integer32):
    """Custom type portChannelType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("manual", 0),
          ("static", 1),
          ("dynamic", 2))
    )


_PortChannelType_Type.__name__ = "Integer32"
_PortChannelType_Object = MibScalar
portChannelType = _PortChannelType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 1, 8),
    _PortChannelType_Type()
)
portChannelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portChannelType.setStatus("current")
_PortChannelGroupTable_Object = MibTable
portChannelGroupTable = _PortChannelGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2)
)
if mibBuilder.loadTexts:
    portChannelGroupTable.setStatus("current")
_PortChannelGroupEntry_Object = MibTableRow
portChannelGroupEntry = _PortChannelGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1)
)
portChannelGroupEntry.setIndexNames(
    (0, "V1600D", "portChannelGroupId"),
)
if mibBuilder.loadTexts:
    portChannelGroupEntry.setStatus("current")
_PortChannelGroupId_Type = Integer32
_PortChannelGroupId_Object = MibTableColumn
portChannelGroupId = _PortChannelGroupId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 1),
    _PortChannelGroupId_Type()
)
portChannelGroupId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupId.setStatus("current")


class _PortChannelGroupLoadBalance_Type(Integer32):
    """Custom type portChannelGroupLoadBalance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("smac", 1),
          ("dmac", 2),
          ("sdmac", 3),
          ("sip", 4),
          ("dip", 5),
          ("sdip", 6))
    )


_PortChannelGroupLoadBalance_Type.__name__ = "Integer32"
_PortChannelGroupLoadBalance_Object = MibTableColumn
portChannelGroupLoadBalance = _PortChannelGroupLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 2),
    _PortChannelGroupLoadBalance_Type()
)
portChannelGroupLoadBalance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupLoadBalance.setStatus("current")


class _PortChannelGroupPortIdx1_Type(Integer32):
    """Custom type portChannelGroupPortIdx1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelGroupPortIdx1_Type.__name__ = "Integer32"
_PortChannelGroupPortIdx1_Object = MibTableColumn
portChannelGroupPortIdx1 = _PortChannelGroupPortIdx1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 3),
    _PortChannelGroupPortIdx1_Type()
)
portChannelGroupPortIdx1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupPortIdx1.setStatus("current")


class _PortChannelGroupPortIdx2_Type(Integer32):
    """Custom type portChannelGroupPortIdx2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelGroupPortIdx2_Type.__name__ = "Integer32"
_PortChannelGroupPortIdx2_Object = MibTableColumn
portChannelGroupPortIdx2 = _PortChannelGroupPortIdx2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 4),
    _PortChannelGroupPortIdx2_Type()
)
portChannelGroupPortIdx2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupPortIdx2.setStatus("current")


class _PortChannelGroupPortIdx3_Type(Integer32):
    """Custom type portChannelGroupPortIdx3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelGroupPortIdx3_Type.__name__ = "Integer32"
_PortChannelGroupPortIdx3_Object = MibTableColumn
portChannelGroupPortIdx3 = _PortChannelGroupPortIdx3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 5),
    _PortChannelGroupPortIdx3_Type()
)
portChannelGroupPortIdx3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupPortIdx3.setStatus("current")


class _PortChannelGroupPortIdx4_Type(Integer32):
    """Custom type portChannelGroupPortIdx4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_PortChannelGroupPortIdx4_Type.__name__ = "Integer32"
_PortChannelGroupPortIdx4_Object = MibTableColumn
portChannelGroupPortIdx4 = _PortChannelGroupPortIdx4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 6),
    _PortChannelGroupPortIdx4_Type()
)
portChannelGroupPortIdx4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupPortIdx4.setStatus("current")


class _PortChannelGroupType_Type(Integer32):
    """Custom type portChannelGroupType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("manual", 0),
          ("static", 1),
          ("dynamic", 2))
    )


_PortChannelGroupType_Type.__name__ = "Integer32"
_PortChannelGroupType_Object = MibTableColumn
portChannelGroupType = _PortChannelGroupType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 7, 2, 1, 7),
    _PortChannelGroupType_Type()
)
portChannelGroupType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portChannelGroupType.setStatus("current")
_PortCountersClean_ObjectIdentity = ObjectIdentity
portCountersClean = _PortCountersClean_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 8)
)


class _PortCountersCleanIndex_Type(Integer32):
    """Custom type portCountersCleanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_PortCountersCleanIndex_Type.__name__ = "Integer32"
_PortCountersCleanIndex_Object = MibScalar
portCountersCleanIndex = _PortCountersCleanIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 8, 1),
    _PortCountersCleanIndex_Type()
)
portCountersCleanIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portCountersCleanIndex.setStatus("current")


class _PortCountersCleanAction_Type(Integer32):
    """Custom type portCountersCleanAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )


_PortCountersCleanAction_Type.__name__ = "Integer32"
_PortCountersCleanAction_Object = MibScalar
portCountersCleanAction = _PortCountersCleanAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 1, 8, 2),
    _PortCountersCleanAction_Type()
)
portCountersCleanAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portCountersCleanAction.setStatus("current")
_V1600dVLAN_ObjectIdentity = ObjectIdentity
v1600dVLAN = _V1600dVLAN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2)
)
_VlanCfg_ObjectIdentity = ObjectIdentity
vlanCfg = _VlanCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1)
)
_VlanCfgItem_Type = Integer32
_VlanCfgItem_Object = MibScalar
vlanCfgItem = _VlanCfgItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 1),
    _VlanCfgItem_Type()
)
vlanCfgItem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanCfgItem.setStatus("current")
_ServiceName_Type = OctetString
_ServiceName_Object = MibScalar
serviceName = _ServiceName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 2),
    _ServiceName_Type()
)
serviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceName.setStatus("current")


class _StartVid_Type(Integer32):
    """Custom type startVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_StartVid_Type.__name__ = "Integer32"
_StartVid_Object = MibScalar
startVid = _StartVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 3),
    _StartVid_Type()
)
startVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    startVid.setStatus("current")


class _EndVid_Type(Integer32):
    """Custom type endVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_EndVid_Type.__name__ = "Integer32"
_EndVid_Object = MibScalar
endVid = _EndVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 4),
    _EndVid_Type()
)
endVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    endVid.setStatus("current")


class _UpLinkPortNo_Type(Integer32):
    """Custom type upLinkPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_UpLinkPortNo_Type.__name__ = "Integer32"
_UpLinkPortNo_Object = MibScalar
upLinkPortNo = _UpLinkPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 5),
    _UpLinkPortNo_Type()
)
upLinkPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLinkPortNo.setStatus("current")


class _VlanTag_Type(Integer32):
    """Custom type vlanTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("untagged", 0),
          ("tagged", 1))
    )


_VlanTag_Type.__name__ = "Integer32"
_VlanTag_Object = MibScalar
vlanTag = _VlanTag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 6),
    _VlanTag_Type()
)
vlanTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTag.setStatus("current")


class _VlanAction_Type(Integer32):
    """Custom type vlanAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_VlanAction_Type.__name__ = "Integer32"
_VlanAction_Object = MibScalar
vlanAction = _VlanAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 1, 7),
    _VlanAction_Type()
)
vlanAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanAction.setStatus("current")
_VlanCfgTable_Object = MibTable
vlanCfgTable = _VlanCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2)
)
if mibBuilder.loadTexts:
    vlanCfgTable.setStatus("current")
_VlanCfgEntry_Object = MibTableRow
vlanCfgEntry = _VlanCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1)
)
vlanCfgEntry.setIndexNames(
    (0, "V1600D", "vlanConfigIndex"),
)
if mibBuilder.loadTexts:
    vlanCfgEntry.setStatus("current")


class _VlanConfigIndex_Type(Integer32):
    """Custom type vlanConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanConfigIndex_Type.__name__ = "Integer32"
_VlanConfigIndex_Object = MibTableColumn
vlanConfigIndex = _VlanConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1, 1),
    _VlanConfigIndex_Type()
)
vlanConfigIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanConfigIndex.setStatus("current")
_VlanCfgServiceName_Type = OctetString
_VlanCfgServiceName_Object = MibTableColumn
vlanCfgServiceName = _VlanCfgServiceName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1, 2),
    _VlanCfgServiceName_Type()
)
vlanCfgServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanCfgServiceName.setStatus("current")


class _VlanCfgStartVid_Type(Integer32):
    """Custom type vlanCfgStartVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanCfgStartVid_Type.__name__ = "Integer32"
_VlanCfgStartVid_Object = MibTableColumn
vlanCfgStartVid = _VlanCfgStartVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1, 3),
    _VlanCfgStartVid_Type()
)
vlanCfgStartVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanCfgStartVid.setStatus("current")


class _VlanCfgEndVid_Type(Integer32):
    """Custom type vlanCfgEndVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanCfgEndVid_Type.__name__ = "Integer32"
_VlanCfgEndVid_Object = MibTableColumn
vlanCfgEndVid = _VlanCfgEndVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1, 4),
    _VlanCfgEndVid_Type()
)
vlanCfgEndVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanCfgEndVid.setStatus("current")


class _VlanCfgUplinkPortNo_Type(Integer32):
    """Custom type vlanCfgUplinkPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_VlanCfgUplinkPortNo_Type.__name__ = "Integer32"
_VlanCfgUplinkPortNo_Object = MibTableColumn
vlanCfgUplinkPortNo = _VlanCfgUplinkPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1, 5),
    _VlanCfgUplinkPortNo_Type()
)
vlanCfgUplinkPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanCfgUplinkPortNo.setStatus("current")


class _VlanCfgTagMode_Type(Integer32):
    """Custom type vlanCfgTagMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("untagged", 0),
          ("tagged", 1))
    )


_VlanCfgTagMode_Type.__name__ = "Integer32"
_VlanCfgTagMode_Object = MibTableColumn
vlanCfgTagMode = _VlanCfgTagMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 2, 1, 6),
    _VlanCfgTagMode_Type()
)
vlanCfgTagMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanCfgTagMode.setStatus("current")
_VlanIPCfg_ObjectIdentity = ObjectIdentity
vlanIPCfg = _VlanIPCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 3)
)


class _VlanId_Type(Integer32):
    """Custom type vlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanId_Type.__name__ = "Integer32"
_VlanId_Object = MibScalar
vlanId = _VlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 3, 1),
    _VlanId_Type()
)
vlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanId.setStatus("current")
_VlanIP_Type = IpAddress
_VlanIP_Object = MibScalar
vlanIP = _VlanIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 3, 2),
    _VlanIP_Type()
)
vlanIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanIP.setStatus("current")
_VlanIPMask_Type = IpAddress
_VlanIPMask_Object = MibScalar
vlanIPMask = _VlanIPMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 3, 3),
    _VlanIPMask_Type()
)
vlanIPMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanIPMask.setStatus("current")


class _VlanIPAction_Type(Integer32):
    """Custom type vlanIPAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_VlanIPAction_Type.__name__ = "Integer32"
_VlanIPAction_Object = MibScalar
vlanIPAction = _VlanIPAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 3, 4),
    _VlanIPAction_Type()
)
vlanIPAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanIPAction.setStatus("current")
_VlanIPTable_Object = MibTable
vlanIPTable = _VlanIPTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 4)
)
if mibBuilder.loadTexts:
    vlanIPTable.setStatus("current")
_VlanIPEntry_Object = MibTableRow
vlanIPEntry = _VlanIPEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 4, 1)
)
vlanIPEntry.setIndexNames(
    (0, "V1600D", "vlanIdIndex"),
)
if mibBuilder.loadTexts:
    vlanIPEntry.setStatus("current")


class _VlanIdIndex_Type(Integer32):
    """Custom type vlanIdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanIdIndex_Type.__name__ = "Integer32"
_VlanIdIndex_Object = MibTableColumn
vlanIdIndex = _VlanIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 4, 1, 1),
    _VlanIdIndex_Type()
)
vlanIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanIdIndex.setStatus("current")
_VlanIPAddr_Type = IpAddress
_VlanIPAddr_Object = MibTableColumn
vlanIPAddr = _VlanIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 4, 1, 2),
    _VlanIPAddr_Type()
)
vlanIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanIPAddr.setStatus("current")
_VlanIPMaskAddr_Type = IpAddress
_VlanIPMaskAddr_Object = MibTableColumn
vlanIPMaskAddr = _VlanIPMaskAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 4, 1, 3),
    _VlanIPMaskAddr_Type()
)
vlanIPMaskAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanIPMaskAddr.setStatus("current")
_VlanQinq_ObjectIdentity = ObjectIdentity
vlanQinq = _VlanQinq_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5)
)


class _VlanQinqEn_Type(Integer32):
    """Custom type vlanQinqEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VlanQinqEn_Type.__name__ = "Integer32"
_VlanQinqEn_Object = MibScalar
vlanQinqEn = _VlanQinqEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 1),
    _VlanQinqEn_Type()
)
vlanQinqEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanQinqEn.setStatus("current")
_VlanQinqSetting_ObjectIdentity = ObjectIdentity
vlanQinqSetting = _VlanQinqSetting_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2)
)


class _QinqPortId_Type(Integer32):
    """Custom type qinqPortId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_QinqPortId_Type.__name__ = "Integer32"
_QinqPortId_Object = MibScalar
qinqPortId = _QinqPortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2, 1),
    _QinqPortId_Type()
)
qinqPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqPortId.setStatus("current")


class _QinqCVlanId_Type(Integer32):
    """Custom type qinqCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_QinqCVlanId_Type.__name__ = "Integer32"
_QinqCVlanId_Object = MibScalar
qinqCVlanId = _QinqCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2, 2),
    _QinqCVlanId_Type()
)
qinqCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqCVlanId.setStatus("current")


class _QinqSVlanId_Type(Integer32):
    """Custom type qinqSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_QinqSVlanId_Type.__name__ = "Integer32"
_QinqSVlanId_Object = MibScalar
qinqSVlanId = _QinqSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2, 3),
    _QinqSVlanId_Type()
)
qinqSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqSVlanId.setStatus("current")


class _QinqModeSelect_Type(Integer32):
    """Custom type qinqModeSelect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("translation", 1),
          ("qinq", 2),
          ("qinqrange", 3))
    )


_QinqModeSelect_Type.__name__ = "Integer32"
_QinqModeSelect_Object = MibScalar
qinqModeSelect = _QinqModeSelect_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2, 4),
    _QinqModeSelect_Type()
)
qinqModeSelect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqModeSelect.setStatus("current")


class _QinqAction_Type(Integer32):
    """Custom type qinqAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_QinqAction_Type.__name__ = "Integer32"
_QinqAction_Object = MibScalar
qinqAction = _QinqAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2, 5),
    _QinqAction_Type()
)
qinqAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqAction.setStatus("current")
_QinqCVlanIdRange_Type = OctetString
_QinqCVlanIdRange_Object = MibScalar
qinqCVlanIdRange = _QinqCVlanIdRange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 2, 6),
    _QinqCVlanIdRange_Type()
)
qinqCVlanIdRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqCVlanIdRange.setStatus("current")
_VlanQinqTable_Object = MibTable
vlanQinqTable = _VlanQinqTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3)
)
if mibBuilder.loadTexts:
    vlanQinqTable.setStatus("current")
_VlanQinqEntry_Object = MibTableRow
vlanQinqEntry = _VlanQinqEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1)
)
vlanQinqEntry.setIndexNames(
    (0, "V1600D", "qinqIndex"),
)
if mibBuilder.loadTexts:
    vlanQinqEntry.setStatus("current")
_QinqIndex_Type = Integer32
_QinqIndex_Object = MibTableColumn
qinqIndex = _QinqIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1, 1),
    _QinqIndex_Type()
)
qinqIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqIndex.setStatus("current")
_QinqPortIndex_Type = Integer32
_QinqPortIndex_Object = MibTableColumn
qinqPortIndex = _QinqPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1, 2),
    _QinqPortIndex_Type()
)
qinqPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqPortIndex.setStatus("current")
_QinqCVlanIndex_Type = Integer32
_QinqCVlanIndex_Object = MibTableColumn
qinqCVlanIndex = _QinqCVlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1, 3),
    _QinqCVlanIndex_Type()
)
qinqCVlanIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqCVlanIndex.setStatus("current")
_QinqSVlanIndex_Type = Integer32
_QinqSVlanIndex_Object = MibTableColumn
qinqSVlanIndex = _QinqSVlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1, 4),
    _QinqSVlanIndex_Type()
)
qinqSVlanIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqSVlanIndex.setStatus("current")


class _QinqMode_Type(Integer32):
    """Custom type qinqMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("translation", 1),
          ("qinq", 2),
          ("qinqrange", 3))
    )


_QinqMode_Type.__name__ = "Integer32"
_QinqMode_Object = MibTableColumn
qinqMode = _QinqMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1, 5),
    _QinqMode_Type()
)
qinqMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqMode.setStatus("current")
_QinqCVlanRange_Type = OctetString
_QinqCVlanRange_Object = MibTableColumn
qinqCVlanRange = _QinqCVlanRange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 5, 3, 1, 6),
    _QinqCVlanRange_Type()
)
qinqCVlanRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqCVlanRange.setStatus("current")
_VlanTable_Object = MibTable
vlanTable = _VlanTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6)
)
if mibBuilder.loadTexts:
    vlanTable.setStatus("current")
_VlanEntry_Object = MibTableRow
vlanEntry = _VlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1)
)
vlanEntry.setIndexNames(
    (0, "V1600D", "vlanVid"),
)
if mibBuilder.loadTexts:
    vlanEntry.setStatus("current")


class _VlanVid_Type(Gauge32):
    """Custom type vlanVid based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanVid_Type.__name__ = "Gauge32"
_VlanVid_Object = MibTableColumn
vlanVid = _VlanVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1, 1),
    _VlanVid_Type()
)
vlanVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanVid.setStatus("current")
_VlanName_Type = OctetString
_VlanName_Object = MibTableColumn
vlanName = _VlanName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1, 2),
    _VlanName_Type()
)
vlanName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanName.setStatus("current")
_VlanTagPort_Type = OctetString
_VlanTagPort_Object = MibTableColumn
vlanTagPort = _VlanTagPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1, 3),
    _VlanTagPort_Type()
)
vlanTagPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTagPort.setStatus("current")
_VlanUntagPort_Type = OctetString
_VlanUntagPort_Object = MibTableColumn
vlanUntagPort = _VlanUntagPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1, 4),
    _VlanUntagPort_Type()
)
vlanUntagPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanUntagPort.setStatus("current")
_VlanRowStatus_Type = RowStatus
_VlanRowStatus_Object = MibTableColumn
vlanRowStatus = _VlanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1, 5),
    _VlanRowStatus_Type()
)
vlanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanRowStatus.setStatus("current")
_VlanDescr_Type = OctetString
_VlanDescr_Object = MibTableColumn
vlanDescr = _VlanDescr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 6, 1, 6),
    _VlanDescr_Type()
)
vlanDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanDescr.setStatus("current")
_VlanIPv6Cfg_ObjectIdentity = ObjectIdentity
vlanIPv6Cfg = _VlanIPv6Cfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 7)
)


class _Vlanid_Type(Integer32):
    """Custom type vlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Vlanid_Type.__name__ = "Integer32"
_Vlanid_Object = MibScalar
vlanid = _Vlanid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 7, 1),
    _Vlanid_Type()
)
vlanid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanid.setStatus("current")
_Ipv6Addr_Type = OctetString
_Ipv6Addr_Object = MibScalar
ipv6Addr = _Ipv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 7, 2),
    _Ipv6Addr_Type()
)
ipv6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6Addr.setStatus("current")
_Ipv6AddrPlen_Type = Integer32
_Ipv6AddrPlen_Object = MibScalar
ipv6AddrPlen = _Ipv6AddrPlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 7, 3),
    _Ipv6AddrPlen_Type()
)
ipv6AddrPlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrPlen.setStatus("current")


class _Ipv6Addrtype_Type(Integer32):
    """Custom type ipv6Addrtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Global", 0),
          ("Link-local", 1),
          ("EUI-64", 2))
    )


_Ipv6Addrtype_Type.__name__ = "Integer32"
_Ipv6Addrtype_Object = MibScalar
ipv6Addrtype = _Ipv6Addrtype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 7, 4),
    _Ipv6Addrtype_Type()
)
ipv6Addrtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6Addrtype.setStatus("current")


class _Ipv6AddrAction_Type(Integer32):
    """Custom type ipv6AddrAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_Ipv6AddrAction_Type.__name__ = "Integer32"
_Ipv6AddrAction_Object = MibScalar
ipv6AddrAction = _Ipv6AddrAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 7, 5),
    _Ipv6AddrAction_Type()
)
ipv6AddrAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrAction.setStatus("current")
_VlanIPv6Table_Object = MibTable
vlanIPv6Table = _VlanIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8)
)
if mibBuilder.loadTexts:
    vlanIPv6Table.setStatus("current")
_VlanIPv6Entry_Object = MibTableRow
vlanIPv6Entry = _VlanIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8, 1)
)
vlanIPv6Entry.setIndexNames(
    (0, "V1600D", "ipv6Vlanid"),
    (0, "V1600D", "ipv6AddrIndex"),
)
if mibBuilder.loadTexts:
    vlanIPv6Entry.setStatus("current")
_Ipv6Vlanid_Type = Integer32
_Ipv6Vlanid_Object = MibTableColumn
ipv6Vlanid = _Ipv6Vlanid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8, 1, 1),
    _Ipv6Vlanid_Type()
)
ipv6Vlanid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6Vlanid.setStatus("current")
_Ipv6AddrIndex_Type = Integer32
_Ipv6AddrIndex_Object = MibTableColumn
ipv6AddrIndex = _Ipv6AddrIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8, 1, 2),
    _Ipv6AddrIndex_Type()
)
ipv6AddrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrIndex.setStatus("current")
_Ipv6Address_Type = OctetString
_Ipv6Address_Object = MibTableColumn
ipv6Address = _Ipv6Address_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8, 1, 3),
    _Ipv6Address_Type()
)
ipv6Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6Address.setStatus("current")


class _Ipv6AddrPfxLen_Type(Integer32):
    """Custom type ipv6AddrPfxLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Ipv6AddrPfxLen_Type.__name__ = "Integer32"
_Ipv6AddrPfxLen_Object = MibTableColumn
ipv6AddrPfxLen = _Ipv6AddrPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8, 1, 4),
    _Ipv6AddrPfxLen_Type()
)
ipv6AddrPfxLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxLen.setStatus("current")
_Ipv6AddrPrefixDescr_Type = OctetString
_Ipv6AddrPrefixDescr_Object = MibTableColumn
ipv6AddrPrefixDescr = _Ipv6AddrPrefixDescr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 8, 1, 5),
    _Ipv6AddrPrefixDescr_Type()
)
ipv6AddrPrefixDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPrefixDescr.setStatus("current")
_Ipv6SlaacCfg_ObjectIdentity = ObjectIdentity
ipv6SlaacCfg = _Ipv6SlaacCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9)
)
_Ipv6SlaacVlanId_Type = Integer32
_Ipv6SlaacVlanId_Object = MibScalar
ipv6SlaacVlanId = _Ipv6SlaacVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 1),
    _Ipv6SlaacVlanId_Type()
)
ipv6SlaacVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacVlanId.setStatus("current")


class _Ipv6SlaacSuppressRaEnable_Type(Integer32):
    """Custom type ipv6SlaacSuppressRaEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("on", 1),
          ("off", 2))
    )


_Ipv6SlaacSuppressRaEnable_Type.__name__ = "Integer32"
_Ipv6SlaacSuppressRaEnable_Object = MibScalar
ipv6SlaacSuppressRaEnable = _Ipv6SlaacSuppressRaEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 2),
    _Ipv6SlaacSuppressRaEnable_Type()
)
ipv6SlaacSuppressRaEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacSuppressRaEnable.setStatus("current")


class _Ipv6SlaacInterval_Type(Integer32):
    """Custom type ipv6SlaacInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_Ipv6SlaacInterval_Type.__name__ = "Integer32"
_Ipv6SlaacInterval_Object = MibScalar
ipv6SlaacInterval = _Ipv6SlaacInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 3),
    _Ipv6SlaacInterval_Type()
)
ipv6SlaacInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacInterval.setStatus("current")


class _Ipv6SlaacRALifetime_Type(Integer32):
    """Custom type ipv6SlaacRALifetime based on Integer32"""
    defaultValue = 600

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
    )


_Ipv6SlaacRALifetime_Type.__name__ = "Integer32"
_Ipv6SlaacRALifetime_Object = MibScalar
ipv6SlaacRALifetime = _Ipv6SlaacRALifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 4),
    _Ipv6SlaacRALifetime_Type()
)
ipv6SlaacRALifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacRALifetime.setStatus("current")


class _Ipv6SlaacReachabletime_Type(Unsigned32):
    """Custom type ipv6SlaacReachabletime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600000),
    )


_Ipv6SlaacReachabletime_Type.__name__ = "Unsigned32"
_Ipv6SlaacReachabletime_Object = MibScalar
ipv6SlaacReachabletime = _Ipv6SlaacReachabletime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 5),
    _Ipv6SlaacReachabletime_Type()
)
ipv6SlaacReachabletime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacReachabletime.setStatus("current")


class _Ipv6SlaachomeAgentCfgFlag_Type(Integer32):
    """Custom type ipv6SlaachomeAgentCfgFlag based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6SlaachomeAgentCfgFlag_Type.__name__ = "Integer32"
_Ipv6SlaachomeAgentCfgFlag_Object = MibScalar
ipv6SlaachomeAgentCfgFlag = _Ipv6SlaachomeAgentCfgFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 6),
    _Ipv6SlaachomeAgentCfgFlag_Type()
)
ipv6SlaachomeAgentCfgFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaachomeAgentCfgFlag.setStatus("current")


class _Ipv6SlaachomeAgentPreference_Type(Integer32):
    """Custom type ipv6SlaachomeAgentPreference based on Integer32"""
    defaultValue = 0


_Ipv6SlaachomeAgentPreference_Type.__name__ = "Integer32"
_Ipv6SlaachomeAgentPreference_Object = MibScalar
ipv6SlaachomeAgentPreference = _Ipv6SlaachomeAgentPreference_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 7),
    _Ipv6SlaachomeAgentPreference_Type()
)
ipv6SlaachomeAgentPreference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaachomeAgentPreference.setStatus("current")


class _Ipv6SlaachomeAgentLifeTime_Type(Integer32):
    """Custom type ipv6SlaachomeAgentLifeTime based on Integer32"""
    defaultValue = 1800

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65520),
    )


_Ipv6SlaachomeAgentLifeTime_Type.__name__ = "Integer32"
_Ipv6SlaachomeAgentLifeTime_Object = MibScalar
ipv6SlaachomeAgentLifeTime = _Ipv6SlaachomeAgentLifeTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 8),
    _Ipv6SlaachomeAgentLifeTime_Type()
)
ipv6SlaachomeAgentLifeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaachomeAgentLifeTime.setStatus("current")


class _Ipv6SlaacAdvIntervalOption_Type(Integer32):
    """Custom type ipv6SlaacAdvIntervalOption based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_Ipv6SlaacAdvIntervalOption_Type.__name__ = "Integer32"
_Ipv6SlaacAdvIntervalOption_Object = MibScalar
ipv6SlaacAdvIntervalOption = _Ipv6SlaacAdvIntervalOption_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 9),
    _Ipv6SlaacAdvIntervalOption_Type()
)
ipv6SlaacAdvIntervalOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacAdvIntervalOption.setStatus("current")


class _Ipv6SlaacManaCfgFlag_Type(Integer32):
    """Custom type ipv6SlaacManaCfgFlag based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6SlaacManaCfgFlag_Type.__name__ = "Integer32"
_Ipv6SlaacManaCfgFlag_Object = MibScalar
ipv6SlaacManaCfgFlag = _Ipv6SlaacManaCfgFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 10),
    _Ipv6SlaacManaCfgFlag_Type()
)
ipv6SlaacManaCfgFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacManaCfgFlag.setStatus("current")


class _Ipv6SlaacOtherCfgFlag_Type(Integer32):
    """Custom type ipv6SlaacOtherCfgFlag based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6SlaacOtherCfgFlag_Type.__name__ = "Integer32"
_Ipv6SlaacOtherCfgFlag_Object = MibScalar
ipv6SlaacOtherCfgFlag = _Ipv6SlaacOtherCfgFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 11),
    _Ipv6SlaacOtherCfgFlag_Type()
)
ipv6SlaacOtherCfgFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacOtherCfgFlag.setStatus("current")
_Ipv6SlaacAddrPrefix_Type = OctetString
_Ipv6SlaacAddrPrefix_Object = MibScalar
ipv6SlaacAddrPrefix = _Ipv6SlaacAddrPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 12),
    _Ipv6SlaacAddrPrefix_Type()
)
ipv6SlaacAddrPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacAddrPrefix.setStatus("current")
_Ipv6SlaacAddrPrefixLength_Type = Unsigned32
_Ipv6SlaacAddrPrefixLength_Object = MibScalar
ipv6SlaacAddrPrefixLength = _Ipv6SlaacAddrPrefixLength_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 13),
    _Ipv6SlaacAddrPrefixLength_Type()
)
ipv6SlaacAddrPrefixLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacAddrPrefixLength.setStatus("current")


class _Ipv6AddrPrefixValidLifeTime_Type(Unsigned32):
    """Custom type ipv6AddrPrefixValidLifeTime based on Unsigned32"""
    defaultValue = 0


_Ipv6AddrPrefixValidLifeTime_Type.__name__ = "Unsigned32"
_Ipv6AddrPrefixValidLifeTime_Object = MibScalar
ipv6AddrPrefixValidLifeTime = _Ipv6AddrPrefixValidLifeTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 14),
    _Ipv6AddrPrefixValidLifeTime_Type()
)
ipv6AddrPrefixValidLifeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrPrefixValidLifeTime.setStatus("current")


class _Ipv6AddrPrefixPreferrefLifetime_Type(Unsigned32):
    """Custom type ipv6AddrPrefixPreferrefLifetime based on Unsigned32"""
    defaultValue = 0


_Ipv6AddrPrefixPreferrefLifetime_Type.__name__ = "Unsigned32"
_Ipv6AddrPrefixPreferrefLifetime_Object = MibScalar
ipv6AddrPrefixPreferrefLifetime = _Ipv6AddrPrefixPreferrefLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 15),
    _Ipv6AddrPrefixPreferrefLifetime_Type()
)
ipv6AddrPrefixPreferrefLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrPrefixPreferrefLifetime.setStatus("current")


class _Ipv6AddrPrefixOfflink_Type(Integer32):
    """Custom type ipv6AddrPrefixOfflink based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6AddrPrefixOfflink_Type.__name__ = "Integer32"
_Ipv6AddrPrefixOfflink_Object = MibScalar
ipv6AddrPrefixOfflink = _Ipv6AddrPrefixOfflink_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 16),
    _Ipv6AddrPrefixOfflink_Type()
)
ipv6AddrPrefixOfflink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrPrefixOfflink.setStatus("current")


class _Ipv6AddrPrefixPreNoAutoCfg_Type(Integer32):
    """Custom type ipv6AddrPrefixPreNoAutoCfg based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6AddrPrefixPreNoAutoCfg_Type.__name__ = "Integer32"
_Ipv6AddrPrefixPreNoAutoCfg_Object = MibScalar
ipv6AddrPrefixPreNoAutoCfg = _Ipv6AddrPrefixPreNoAutoCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 17),
    _Ipv6AddrPrefixPreNoAutoCfg_Type()
)
ipv6AddrPrefixPreNoAutoCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrPrefixPreNoAutoCfg.setStatus("current")


class _Ipv6AddrPrefixRouterAddr_Type(Integer32):
    """Custom type ipv6AddrPrefixRouterAddr based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6AddrPrefixRouterAddr_Type.__name__ = "Integer32"
_Ipv6AddrPrefixRouterAddr_Object = MibScalar
ipv6AddrPrefixRouterAddr = _Ipv6AddrPrefixRouterAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 18),
    _Ipv6AddrPrefixRouterAddr_Type()
)
ipv6AddrPrefixRouterAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddrPrefixRouterAddr.setStatus("current")


class _Ipv6SlaacRouterPrefer_Type(Integer32):
    """Custom type ipv6SlaacRouterPrefer based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("medium", 2),
          ("low", 3),
          ("invalid", 4),
          ("null", 5))
    )


_Ipv6SlaacRouterPrefer_Type.__name__ = "Integer32"
_Ipv6SlaacRouterPrefer_Object = MibScalar
ipv6SlaacRouterPrefer = _Ipv6SlaacRouterPrefer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 19),
    _Ipv6SlaacRouterPrefer_Type()
)
ipv6SlaacRouterPrefer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacRouterPrefer.setStatus("current")


class _Ipv6SlaacMTU_Type(Integer32):
    """Custom type ipv6SlaacMTU based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Ipv6SlaacMTU_Type.__name__ = "Integer32"
_Ipv6SlaacMTU_Object = MibScalar
ipv6SlaacMTU = _Ipv6SlaacMTU_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 20),
    _Ipv6SlaacMTU_Type()
)
ipv6SlaacMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacMTU.setStatus("current")


class _Ipv6SlaacAction_Type(Integer32):
    """Custom type ipv6SlaacAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del-Interval", 2),
          ("del-Ralifetime", 3),
          ("del-ReachableTime", 4),
          ("del-homeAgentPref", 5),
          ("del-homeAgentLifetime", 6),
          ("del-NDPrefix", 7),
          ("del-MTU", 8),
          ("delAll", 9))
    )


_Ipv6SlaacAction_Type.__name__ = "Integer32"
_Ipv6SlaacAction_Object = MibScalar
ipv6SlaacAction = _Ipv6SlaacAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 9, 21),
    _Ipv6SlaacAction_Type()
)
ipv6SlaacAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaacAction.setStatus("current")
_Ipv6SlaacTable_Object = MibTable
ipv6SlaacTable = _Ipv6SlaacTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10)
)
if mibBuilder.loadTexts:
    ipv6SlaacTable.setStatus("current")
_Ipv6SlaacEntry_Object = MibTableRow
ipv6SlaacEntry = _Ipv6SlaacEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1)
)
ipv6SlaacEntry.setIndexNames(
    (0, "V1600D", "ipv6SlaacIndex"),
    (0, "V1600D", "ipv6SlaacVlanid"),
)
if mibBuilder.loadTexts:
    ipv6SlaacEntry.setStatus("current")


class _Ipv6SlaacVlanid_Type(Integer32):
    """Custom type ipv6SlaacVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Ipv6SlaacVlanid_Type.__name__ = "Integer32"
_Ipv6SlaacVlanid_Object = MibTableColumn
ipv6SlaacVlanid = _Ipv6SlaacVlanid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 1),
    _Ipv6SlaacVlanid_Type()
)
ipv6SlaacVlanid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacVlanid.setStatus("current")
_Ipv6SlaacIndex_Type = Integer32
_Ipv6SlaacIndex_Object = MibTableColumn
ipv6SlaacIndex = _Ipv6SlaacIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 2),
    _Ipv6SlaacIndex_Type()
)
ipv6SlaacIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacIndex.setStatus("current")


class _Ipv6SlaacSuppressRaStatus_Type(Integer32):
    """Custom type ipv6SlaacSuppressRaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("on", 1),
          ("off", 2))
    )


_Ipv6SlaacSuppressRaStatus_Type.__name__ = "Integer32"
_Ipv6SlaacSuppressRaStatus_Object = MibTableColumn
ipv6SlaacSuppressRaStatus = _Ipv6SlaacSuppressRaStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 3),
    _Ipv6SlaacSuppressRaStatus_Type()
)
ipv6SlaacSuppressRaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacSuppressRaStatus.setStatus("current")


class _Ipv6SlaacRaInterval_Type(Integer32):
    """Custom type ipv6SlaacRaInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_Ipv6SlaacRaInterval_Type.__name__ = "Integer32"
_Ipv6SlaacRaInterval_Object = MibTableColumn
ipv6SlaacRaInterval = _Ipv6SlaacRaInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 4),
    _Ipv6SlaacRaInterval_Type()
)
ipv6SlaacRaInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacRaInterval.setStatus("current")


class _Ipv6SlaacRaLifetime_Type(Integer32):
    """Custom type ipv6SlaacRaLifetime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
    )


_Ipv6SlaacRaLifetime_Type.__name__ = "Integer32"
_Ipv6SlaacRaLifetime_Object = MibTableColumn
ipv6SlaacRaLifetime = _Ipv6SlaacRaLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 5),
    _Ipv6SlaacRaLifetime_Type()
)
ipv6SlaacRaLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacRaLifetime.setStatus("current")


class _Ipv6SlaacReachableTime_Type(Unsigned32):
    """Custom type ipv6SlaacReachableTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600000),
    )


_Ipv6SlaacReachableTime_Type.__name__ = "Unsigned32"
_Ipv6SlaacReachableTime_Object = MibTableColumn
ipv6SlaacReachableTime = _Ipv6SlaacReachableTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 6),
    _Ipv6SlaacReachableTime_Type()
)
ipv6SlaacReachableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacReachableTime.setStatus("current")


class _Ipv6SlaachomeAgentCfgFg_Type(Integer32):
    """Custom type ipv6SlaachomeAgentCfgFg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6SlaachomeAgentCfgFg_Type.__name__ = "Integer32"
_Ipv6SlaachomeAgentCfgFg_Object = MibTableColumn
ipv6SlaachomeAgentCfgFg = _Ipv6SlaachomeAgentCfgFg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 7),
    _Ipv6SlaachomeAgentCfgFg_Type()
)
ipv6SlaachomeAgentCfgFg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaachomeAgentCfgFg.setStatus("current")


class _Ipv6SlaachomeAgentPre_Type(Integer32):
    """Custom type ipv6SlaachomeAgentPre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Ipv6SlaachomeAgentPre_Type.__name__ = "Integer32"
_Ipv6SlaachomeAgentPre_Object = MibTableColumn
ipv6SlaachomeAgentPre = _Ipv6SlaachomeAgentPre_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 8),
    _Ipv6SlaachomeAgentPre_Type()
)
ipv6SlaachomeAgentPre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaachomeAgentPre.setStatus("current")


class _Ipv6SlaachomeAgentLifetime_Type(Integer32):
    """Custom type ipv6SlaachomeAgentLifetime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65520),
    )


_Ipv6SlaachomeAgentLifetime_Type.__name__ = "Integer32"
_Ipv6SlaachomeAgentLifetime_Object = MibTableColumn
ipv6SlaachomeAgentLifetime = _Ipv6SlaachomeAgentLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 9),
    _Ipv6SlaachomeAgentLifetime_Type()
)
ipv6SlaachomeAgentLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaachomeAgentLifetime.setStatus("current")


class _Ipv6SlaacAdvIntervalOpt_Type(Integer32):
    """Custom type ipv6SlaacAdvIntervalOpt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_Ipv6SlaacAdvIntervalOpt_Type.__name__ = "Integer32"
_Ipv6SlaacAdvIntervalOpt_Object = MibTableColumn
ipv6SlaacAdvIntervalOpt = _Ipv6SlaacAdvIntervalOpt_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 10),
    _Ipv6SlaacAdvIntervalOpt_Type()
)
ipv6SlaacAdvIntervalOpt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacAdvIntervalOpt.setStatus("current")


class _Ipv6SlaacManaCfgFg_Type(Integer32):
    """Custom type ipv6SlaacManaCfgFg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6SlaacManaCfgFg_Type.__name__ = "Integer32"
_Ipv6SlaacManaCfgFg_Object = MibTableColumn
ipv6SlaacManaCfgFg = _Ipv6SlaacManaCfgFg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 11),
    _Ipv6SlaacManaCfgFg_Type()
)
ipv6SlaacManaCfgFg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacManaCfgFg.setStatus("current")


class _Ipv6SlaacOtherCfgFg_Type(Integer32):
    """Custom type ipv6SlaacOtherCfgFg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6SlaacOtherCfgFg_Type.__name__ = "Integer32"
_Ipv6SlaacOtherCfgFg_Object = MibTableColumn
ipv6SlaacOtherCfgFg = _Ipv6SlaacOtherCfgFg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 12),
    _Ipv6SlaacOtherCfgFg_Type()
)
ipv6SlaacOtherCfgFg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacOtherCfgFg.setStatus("current")
_Ipv6SlaacPrefix_Type = OctetString
_Ipv6SlaacPrefix_Object = MibTableColumn
ipv6SlaacPrefix = _Ipv6SlaacPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 13),
    _Ipv6SlaacPrefix_Type()
)
ipv6SlaacPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6SlaacPrefix.setStatus("current")
_Ipv6AddrPfxAdvValidLifetime_Type = OctetString
_Ipv6AddrPfxAdvValidLifetime_Object = MibTableColumn
ipv6AddrPfxAdvValidLifetime = _Ipv6AddrPfxAdvValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 14),
    _Ipv6AddrPfxAdvValidLifetime_Type()
)
ipv6AddrPfxAdvValidLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxAdvValidLifetime.setStatus("current")
_Ipv6AddrPfxAdvPreferredLifetime_Type = OctetString
_Ipv6AddrPfxAdvPreferredLifetime_Object = MibTableColumn
ipv6AddrPfxAdvPreferredLifetime = _Ipv6AddrPfxAdvPreferredLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 15),
    _Ipv6AddrPfxAdvPreferredLifetime_Type()
)
ipv6AddrPfxAdvPreferredLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxAdvPreferredLifetime.setStatus("current")


class _Ipv6AddrPfxOffLinkFlag_Type(Integer32):
    """Custom type ipv6AddrPfxOffLinkFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_Ipv6AddrPfxOffLinkFlag_Type.__name__ = "Integer32"
_Ipv6AddrPfxOffLinkFlag_Object = MibTableColumn
ipv6AddrPfxOffLinkFlag = _Ipv6AddrPfxOffLinkFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 16),
    _Ipv6AddrPfxOffLinkFlag_Type()
)
ipv6AddrPfxOffLinkFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxOffLinkFlag.setStatus("current")


class _Ipv6AddrPfxAutonomousFlag_Type(Integer32):
    """Custom type ipv6AddrPfxAutonomousFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_Ipv6AddrPfxAutonomousFlag_Type.__name__ = "Integer32"
_Ipv6AddrPfxAutonomousFlag_Object = MibTableColumn
ipv6AddrPfxAutonomousFlag = _Ipv6AddrPfxAutonomousFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 17),
    _Ipv6AddrPfxAutonomousFlag_Type()
)
ipv6AddrPfxAutonomousFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxAutonomousFlag.setStatus("current")


class _Ipv6AddrPfxRouterAddr_Type(Integer32):
    """Custom type ipv6AddrPfxRouterAddr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("not-set", 2))
    )


_Ipv6AddrPfxRouterAddr_Type.__name__ = "Integer32"
_Ipv6AddrPfxRouterAddr_Object = MibTableColumn
ipv6AddrPfxRouterAddr = _Ipv6AddrPfxRouterAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 18),
    _Ipv6AddrPfxRouterAddr_Type()
)
ipv6AddrPfxRouterAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxRouterAddr.setStatus("current")


class _Ipv6AddrPfxRouterPreference_Type(Integer32):
    """Custom type ipv6AddrPfxRouterPreference based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("medium", 2),
          ("low", 3),
          ("invalid", 4),
          ("null", 5))
    )


_Ipv6AddrPfxRouterPreference_Type.__name__ = "Integer32"
_Ipv6AddrPfxRouterPreference_Object = MibTableColumn
ipv6AddrPfxRouterPreference = _Ipv6AddrPfxRouterPreference_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 19),
    _Ipv6AddrPfxRouterPreference_Type()
)
ipv6AddrPfxRouterPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxRouterPreference.setStatus("current")


class _Ipv6AddrPfxMtu_Type(Integer32):
    """Custom type ipv6AddrPfxMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Ipv6AddrPfxMtu_Type.__name__ = "Integer32"
_Ipv6AddrPfxMtu_Object = MibTableColumn
ipv6AddrPfxMtu = _Ipv6AddrPfxMtu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 10, 1, 20),
    _Ipv6AddrPfxMtu_Type()
)
ipv6AddrPfxMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6AddrPfxMtu.setStatus("current")
_RdnssCfg_ObjectIdentity = ObjectIdentity
rdnssCfg = _RdnssCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11)
)


class _RdnssVlan_Type(Integer32):
    """Custom type rdnssVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_RdnssVlan_Type.__name__ = "Integer32"
_RdnssVlan_Object = MibScalar
rdnssVlan = _RdnssVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 1),
    _RdnssVlan_Type()
)
rdnssVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnssVlan.setStatus("current")


class _RdnssSeq_Type(Integer32):
    """Custom type rdnssSeq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_RdnssSeq_Type.__name__ = "Integer32"
_RdnssSeq_Object = MibScalar
rdnssSeq = _RdnssSeq_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 2),
    _RdnssSeq_Type()
)
rdnssSeq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnssSeq.setStatus("current")


class _RdnssLifetime_Type(Unsigned32):
    """Custom type rdnssLifetime based on Unsigned32"""
    defaultValue = 600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 4294967295),
    )


_RdnssLifetime_Type.__name__ = "Unsigned32"
_RdnssLifetime_Object = MibScalar
rdnssLifetime = _RdnssLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 3),
    _RdnssLifetime_Type()
)
rdnssLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnssLifetime.setStatus("current")
_RdnsServer1_Type = OctetString
_RdnsServer1_Object = MibScalar
rdnsServer1 = _RdnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 4),
    _RdnsServer1_Type()
)
rdnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnsServer1.setStatus("current")
_RdnsServer2_Type = OctetString
_RdnsServer2_Object = MibScalar
rdnsServer2 = _RdnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 5),
    _RdnsServer2_Type()
)
rdnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnsServer2.setStatus("current")
_RdnsServer3_Type = OctetString
_RdnsServer3_Object = MibScalar
rdnsServer3 = _RdnsServer3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 6),
    _RdnsServer3_Type()
)
rdnsServer3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnsServer3.setStatus("current")


class _RdnsAction_Type(Integer32):
    """Custom type rdnsAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("add", 0),
          ("del", 1))
    )


_RdnsAction_Type.__name__ = "Integer32"
_RdnsAction_Object = MibScalar
rdnsAction = _RdnsAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 7),
    _RdnsAction_Type()
)
rdnsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnsAction.setStatus("current")


class _RdnssSuppressSt_Type(Integer32):
    """Custom type rdnssSuppressSt based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_RdnssSuppressSt_Type.__name__ = "Integer32"
_RdnssSuppressSt_Object = MibScalar
rdnssSuppressSt = _RdnssSuppressSt_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 11, 8),
    _RdnssSuppressSt_Type()
)
rdnssSuppressSt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdnssSuppressSt.setStatus("current")
_RdnssTable_Object = MibTable
rdnssTable = _RdnssTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12)
)
if mibBuilder.loadTexts:
    rdnssTable.setStatus("current")
_RdnssEntry_Object = MibTableRow
rdnssEntry = _RdnssEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1)
)
rdnssEntry.setIndexNames(
    (0, "V1600D", "rdnssIdx"),
    (0, "V1600D", "rdnssVlanId"),
)
if mibBuilder.loadTexts:
    rdnssEntry.setStatus("current")
_RdnssIdx_Type = Integer32
_RdnssIdx_Object = MibTableColumn
rdnssIdx = _RdnssIdx_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 1),
    _RdnssIdx_Type()
)
rdnssIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssIdx.setStatus("current")


class _RdnssVlanId_Type(Integer32):
    """Custom type rdnssVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_RdnssVlanId_Type.__name__ = "Integer32"
_RdnssVlanId_Object = MibTableColumn
rdnssVlanId = _RdnssVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 2),
    _RdnssVlanId_Type()
)
rdnssVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssVlanId.setStatus("current")


class _RdnssSequence_Type(Integer32):
    """Custom type rdnssSequence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_RdnssSequence_Type.__name__ = "Integer32"
_RdnssSequence_Object = MibTableColumn
rdnssSequence = _RdnssSequence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 3),
    _RdnssSequence_Type()
)
rdnssSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssSequence.setStatus("current")
_RDNSServer1_Type = OctetString
_RDNSServer1_Object = MibTableColumn
rDNSServer1 = _RDNSServer1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 4),
    _RDNSServer1_Type()
)
rDNSServer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rDNSServer1.setStatus("current")
_RdnssServer2_Type = OctetString
_RdnssServer2_Object = MibTableColumn
rdnssServer2 = _RdnssServer2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 5),
    _RdnssServer2_Type()
)
rdnssServer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssServer2.setStatus("current")
_RdnssServer3_Type = OctetString
_RdnssServer3_Object = MibTableColumn
rdnssServer3 = _RdnssServer3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 6),
    _RdnssServer3_Type()
)
rdnssServer3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssServer3.setStatus("current")
_RdnssLifeTime_Type = OctetString
_RdnssLifeTime_Object = MibTableColumn
rdnssLifeTime = _RdnssLifeTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 7),
    _RdnssLifeTime_Type()
)
rdnssLifeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssLifeTime.setStatus("current")


class _RdnssSuppressStatus_Type(Integer32):
    """Custom type rdnssSuppressStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_RdnssSuppressStatus_Type.__name__ = "Integer32"
_RdnssSuppressStatus_Object = MibTableColumn
rdnssSuppressStatus = _RdnssSuppressStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 12, 1, 8),
    _RdnssSuppressStatus_Type()
)
rdnssSuppressStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rdnssSuppressStatus.setStatus("current")
_VlanPortModeRange_ObjectIdentity = ObjectIdentity
vlanPortModeRange = _VlanPortModeRange_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13)
)
_VlanPortModeCfg_ObjectIdentity = ObjectIdentity
vlanPortModeCfg = _VlanPortModeCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1)
)


class _PortIndex_Type(Integer32):
    """Custom type portIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_PortIndex_Type.__name__ = "Integer32"
_PortIndex_Object = MibScalar
portIndex = _PortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1, 1),
    _PortIndex_Type()
)
portIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portIndex.setStatus("current")


class _PortTagMode_Type(Integer32):
    """Custom type portTagMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Access", 0),
          ("Hybrid", 1),
          ("Trunk", 2))
    )


_PortTagMode_Type.__name__ = "Integer32"
_PortTagMode_Object = MibScalar
portTagMode = _PortTagMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1, 2),
    _PortTagMode_Type()
)
portTagMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portTagMode.setStatus("current")


class _PortPvid_Type(Integer32):
    """Custom type portPvid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4096),
    )


_PortPvid_Type.__name__ = "Integer32"
_PortPvid_Object = MibScalar
portPvid = _PortPvid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1, 3),
    _PortPvid_Type()
)
portPvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPvid.setStatus("current")
_PortTagRange_Type = OctetString
_PortTagRange_Object = MibScalar
portTagRange = _PortTagRange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1, 4),
    _PortTagRange_Type()
)
portTagRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portTagRange.setStatus("current")
_PortUntagRange_Type = OctetString
_PortUntagRange_Object = MibScalar
portUntagRange = _PortUntagRange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1, 5),
    _PortUntagRange_Type()
)
portUntagRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portUntagRange.setStatus("current")


class _PortAction_Type(Integer32):
    """Custom type portAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_PortAction_Type.__name__ = "Integer32"
_PortAction_Object = MibScalar
portAction = _PortAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 1, 6),
    _PortAction_Type()
)
portAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAction.setStatus("current")
_VlanPortModeTable_Object = MibTable
vlanPortModeTable = _VlanPortModeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2)
)
if mibBuilder.loadTexts:
    vlanPortModeTable.setStatus("current")
_VlanPortModeEntry_Object = MibTableRow
vlanPortModeEntry = _VlanPortModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1)
)
vlanPortModeEntry.setIndexNames(
    (0, "V1600D", "portIndexS"),
)
if mibBuilder.loadTexts:
    vlanPortModeEntry.setStatus("current")
_PortIndexS_Type = Integer32
_PortIndexS_Object = MibTableColumn
portIndexS = _PortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1, 1),
    _PortIndexS_Type()
)
portIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portIndexS.setStatus("current")
_PortIndexDescS_Type = OctetString
_PortIndexDescS_Object = MibTableColumn
portIndexDescS = _PortIndexDescS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1, 2),
    _PortIndexDescS_Type()
)
portIndexDescS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portIndexDescS.setStatus("current")
_PortTagModeS_Type = OctetString
_PortTagModeS_Object = MibTableColumn
portTagModeS = _PortTagModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1, 3),
    _PortTagModeS_Type()
)
portTagModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portTagModeS.setStatus("current")
_PortPvidS_Type = Integer32
_PortPvidS_Object = MibTableColumn
portPvidS = _PortPvidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1, 4),
    _PortPvidS_Type()
)
portPvidS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portPvidS.setStatus("current")
_PortTagRangeS_Type = OctetString
_PortTagRangeS_Object = MibTableColumn
portTagRangeS = _PortTagRangeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1, 5),
    _PortTagRangeS_Type()
)
portTagRangeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portTagRangeS.setStatus("current")
_PortUntagRangeS_Type = OctetString
_PortUntagRangeS_Object = MibTableColumn
portUntagRangeS = _PortUntagRangeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 13, 2, 1, 6),
    _PortUntagRangeS_Type()
)
portUntagRangeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portUntagRangeS.setStatus("current")
_VlanRangeCfg_ObjectIdentity = ObjectIdentity
vlanRangeCfg = _VlanRangeCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 14)
)
_VlanRange_Type = OctetString
_VlanRange_Object = MibScalar
vlanRange = _VlanRange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 14, 1),
    _VlanRange_Type()
)
vlanRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanRange.setStatus("current")


class _VlanRangeAction_Type(Integer32):
    """Custom type vlanRangeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_VlanRangeAction_Type.__name__ = "Integer32"
_VlanRangeAction_Object = MibScalar
vlanRangeAction = _VlanRangeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 2, 14, 2),
    _VlanRangeAction_Type()
)
vlanRangeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanRangeAction.setStatus("current")
_V1600dMacAddr_ObjectIdentity = ObjectIdentity
v1600dMacAddr = _V1600dMacAddr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3)
)


class _AgingTimer_Type(Integer32):
    """Custom type agingTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(10, 1000000),
    )


_AgingTimer_Type.__name__ = "Integer32"
_AgingTimer_Object = MibScalar
agingTimer = _AgingTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 1),
    _AgingTimer_Type()
)
agingTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    agingTimer.setStatus("current")
_MacAddrTable_Object = MibTable
macAddrTable = _MacAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2)
)
if mibBuilder.loadTexts:
    macAddrTable.setStatus("current")
_MacAddrEntry_Object = MibTableRow
macAddrEntry = _MacAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2, 1)
)
macAddrEntry.setIndexNames(
    (0, "V1600D", "macAddrIndex"),
)
if mibBuilder.loadTexts:
    macAddrEntry.setStatus("current")
_MacAddrIndex_Type = Integer32
_MacAddrIndex_Object = MibTableColumn
macAddrIndex = _MacAddrIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2, 1, 1),
    _MacAddrIndex_Type()
)
macAddrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macAddrIndex.setStatus("current")
_MacVlanId_Type = Integer32
_MacVlanId_Object = MibTableColumn
macVlanId = _MacVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2, 1, 2),
    _MacVlanId_Type()
)
macVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macVlanId.setStatus("current")
_MacAddr_Type = OctetString
_MacAddr_Object = MibTableColumn
macAddr = _MacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2, 1, 3),
    _MacAddr_Type()
)
macAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macAddr.setStatus("current")


class _MacType_Type(Integer32):
    """Custom type macType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("static", 0),
          ("dynamic", 1))
    )


_MacType_Type.__name__ = "Integer32"
_MacType_Object = MibTableColumn
macType = _MacType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2, 1, 4),
    _MacType_Type()
)
macType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macType.setStatus("current")
_MacPortId_Type = OctetString
_MacPortId_Object = MibTableColumn
macPortId = _MacPortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 2, 1, 5),
    _MacPortId_Type()
)
macPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macPortId.setStatus("current")
_PortMacAddrLimitTable_Object = MibTable
portMacAddrLimitTable = _PortMacAddrLimitTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 3)
)
if mibBuilder.loadTexts:
    portMacAddrLimitTable.setStatus("current")
_PortMacAddrLimitEntry_Object = MibTableRow
portMacAddrLimitEntry = _PortMacAddrLimitEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 3, 1)
)
portMacAddrLimitEntry.setIndexNames(
    (0, "V1600D", "portMacLimitIdx"),
)
if mibBuilder.loadTexts:
    portMacAddrLimitEntry.setStatus("current")


class _PortMacLimitIdx_Type(Integer32):
    """Custom type portMacLimitIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_PortMacLimitIdx_Type.__name__ = "Integer32"
_PortMacLimitIdx_Object = MibTableColumn
portMacLimitIdx = _PortMacLimitIdx_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 3, 1, 1),
    _PortMacLimitIdx_Type()
)
portMacLimitIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMacLimitIdx.setStatus("current")


class _PortMacAddrLimit_Type(Integer32):
    """Custom type portMacAddrLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_PortMacAddrLimit_Type.__name__ = "Integer32"
_PortMacAddrLimit_Object = MibTableColumn
portMacAddrLimit = _PortMacAddrLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 3, 1, 2),
    _PortMacAddrLimit_Type()
)
portMacAddrLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portMacAddrLimit.setStatus("current")
_MacFlappingCfg_ObjectIdentity = ObjectIdentity
macFlappingCfg = _MacFlappingCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4)
)


class _MacFlappingStatus_Type(Integer32):
    """Custom type macFlappingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MacFlappingStatus_Type.__name__ = "Integer32"
_MacFlappingStatus_Object = MibScalar
macFlappingStatus = _MacFlappingStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 1),
    _MacFlappingStatus_Type()
)
macFlappingStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingStatus.setStatus("current")


class _MacPortRange_Type(Integer32):
    """Custom type macPortRange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("uplink", 0),
          ("pon", 1),
          ("all", 2))
    )


_MacPortRange_Type.__name__ = "Integer32"
_MacPortRange_Object = MibScalar
macPortRange = _MacPortRange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 2),
    _MacPortRange_Type()
)
macPortRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macPortRange.setStatus("current")


class _MacFlappingMode_Type(Integer32):
    """Custom type macFlappingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("only-alarm", 0),
          ("auto-recovery", 1),
          ("manual-recovery", 2))
    )


_MacFlappingMode_Type.__name__ = "Integer32"
_MacFlappingMode_Object = MibScalar
macFlappingMode = _MacFlappingMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 3),
    _MacFlappingMode_Type()
)
macFlappingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingMode.setStatus("current")


class _MacFlappingInterval_Type(Integer32):
    """Custom type macFlappingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_MacFlappingInterval_Type.__name__ = "Integer32"
_MacFlappingInterval_Object = MibScalar
macFlappingInterval = _MacFlappingInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 4),
    _MacFlappingInterval_Type()
)
macFlappingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingInterval.setStatus("current")


class _MacFlappingSupThr_Type(Integer32):
    """Custom type macFlappingSupThr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_MacFlappingSupThr_Type.__name__ = "Integer32"
_MacFlappingSupThr_Object = MibScalar
macFlappingSupThr = _MacFlappingSupThr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 5),
    _MacFlappingSupThr_Type()
)
macFlappingSupThr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingSupThr.setStatus("current")


class _MacFlappingSupAgeTime_Type(Integer32):
    """Custom type macFlappingSupAgeTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_MacFlappingSupAgeTime_Type.__name__ = "Integer32"
_MacFlappingSupAgeTime_Object = MibScalar
macFlappingSupAgeTime = _MacFlappingSupAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 6),
    _MacFlappingSupAgeTime_Type()
)
macFlappingSupAgeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingSupAgeTime.setStatus("current")


class _MacFlappingInfoClean_Type(Integer32):
    """Custom type macFlappingInfoClean based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clean", 1)
    )


_MacFlappingInfoClean_Type.__name__ = "Integer32"
_MacFlappingInfoClean_Object = MibScalar
macFlappingInfoClean = _MacFlappingInfoClean_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 4, 7),
    _MacFlappingInfoClean_Type()
)
macFlappingInfoClean.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingInfoClean.setStatus("current")
_MacFlappingTable_Object = MibTable
macFlappingTable = _MacFlappingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5)
)
if mibBuilder.loadTexts:
    macFlappingTable.setStatus("current")
_MacFlappingEntry_Object = MibTableRow
macFlappingEntry = _MacFlappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1)
)
macFlappingEntry.setIndexNames(
    (0, "V1600D", "macFlappingindex"),
)
if mibBuilder.loadTexts:
    macFlappingEntry.setStatus("current")
_MacFlappingindex_Type = Integer32
_MacFlappingindex_Object = MibTableColumn
macFlappingindex = _MacFlappingindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 1),
    _MacFlappingindex_Type()
)
macFlappingindex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingindex.setStatus("current")
_MacFlappingMacAddr_Type = OctetString
_MacFlappingMacAddr_Object = MibTableColumn
macFlappingMacAddr = _MacFlappingMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 2),
    _MacFlappingMacAddr_Type()
)
macFlappingMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingMacAddr.setStatus("current")
_MacFlappingVlanId_Type = Integer32
_MacFlappingVlanId_Object = MibTableColumn
macFlappingVlanId = _MacFlappingVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 3),
    _MacFlappingVlanId_Type()
)
macFlappingVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingVlanId.setStatus("current")
_MacFlappingSourcePort_Type = OctetString
_MacFlappingSourcePort_Object = MibTableColumn
macFlappingSourcePort = _MacFlappingSourcePort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 4),
    _MacFlappingSourcePort_Type()
)
macFlappingSourcePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingSourcePort.setStatus("current")
_MacFlappingCurrentPort_Type = OctetString
_MacFlappingCurrentPort_Object = MibTableColumn
macFlappingCurrentPort = _MacFlappingCurrentPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 5),
    _MacFlappingCurrentPort_Type()
)
macFlappingCurrentPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingCurrentPort.setStatus("current")
_MacFlappingBeginTime_Type = OctetString
_MacFlappingBeginTime_Object = MibTableColumn
macFlappingBeginTime = _MacFlappingBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 6),
    _MacFlappingBeginTime_Type()
)
macFlappingBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingBeginTime.setStatus("current")
_MacFlappingLastTime_Type = OctetString
_MacFlappingLastTime_Object = MibTableColumn
macFlappingLastTime = _MacFlappingLastTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 7),
    _MacFlappingLastTime_Type()
)
macFlappingLastTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingLastTime.setStatus("current")
_MacFlappingTimes_Type = OctetString
_MacFlappingTimes_Object = MibTableColumn
macFlappingTimes = _MacFlappingTimes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 5, 1, 8),
    _MacFlappingTimes_Type()
)
macFlappingTimes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingTimes.setStatus("current")
_MacFlappingSuppressionTable_Object = MibTable
macFlappingSuppressionTable = _MacFlappingSuppressionTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6)
)
if mibBuilder.loadTexts:
    macFlappingSuppressionTable.setStatus("current")
_MacFlappingSuppressionEntry_Object = MibTableRow
macFlappingSuppressionEntry = _MacFlappingSuppressionEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6, 1)
)
macFlappingSuppressionEntry.setIndexNames(
    (0, "V1600D", "macFlappingSupIndex"),
)
if mibBuilder.loadTexts:
    macFlappingSuppressionEntry.setStatus("current")
_MacFlappingSupIndex_Type = Integer32
_MacFlappingSupIndex_Object = MibTableColumn
macFlappingSupIndex = _MacFlappingSupIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6, 1, 1),
    _MacFlappingSupIndex_Type()
)
macFlappingSupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingSupIndex.setStatus("current")
_MacFlappingSupInterface_Type = OctetString
_MacFlappingSupInterface_Object = MibTableColumn
macFlappingSupInterface = _MacFlappingSupInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6, 1, 2),
    _MacFlappingSupInterface_Type()
)
macFlappingSupInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingSupInterface.setStatus("current")
_MacFlappingSupMode_Type = OctetString
_MacFlappingSupMode_Object = MibTableColumn
macFlappingSupMode = _MacFlappingSupMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6, 1, 3),
    _MacFlappingSupMode_Type()
)
macFlappingSupMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingSupMode.setStatus("current")
_MacFlappingSupTimes_Type = OctetString
_MacFlappingSupTimes_Object = MibTableColumn
macFlappingSupTimes = _MacFlappingSupTimes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6, 1, 4),
    _MacFlappingSupTimes_Type()
)
macFlappingSupTimes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingSupTimes.setStatus("current")
_MacFlappingSupSrcInterface_Type = OctetString
_MacFlappingSupSrcInterface_Object = MibTableColumn
macFlappingSupSrcInterface = _MacFlappingSupSrcInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 6, 1, 5),
    _MacFlappingSupSrcInterface_Type()
)
macFlappingSupSrcInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingSupSrcInterface.setStatus("current")
_MacFlappingPortTable_Object = MibTable
macFlappingPortTable = _MacFlappingPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 7)
)
if mibBuilder.loadTexts:
    macFlappingPortTable.setStatus("current")
_MacFlappingPortEntry_Object = MibTableRow
macFlappingPortEntry = _MacFlappingPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 7, 1)
)
macFlappingPortEntry.setIndexNames(
    (0, "V1600D", "macFlappingPortId"),
)
if mibBuilder.loadTexts:
    macFlappingPortEntry.setStatus("current")
_MacFlappingPortId_Type = Integer32
_MacFlappingPortId_Object = MibTableColumn
macFlappingPortId = _MacFlappingPortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 7, 1, 1),
    _MacFlappingPortId_Type()
)
macFlappingPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFlappingPortId.setStatus("current")


class _MacFlappingPortStatus_Type(Integer32):
    """Custom type macFlappingPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MacFlappingPortStatus_Type.__name__ = "Integer32"
_MacFlappingPortStatus_Object = MibTableColumn
macFlappingPortStatus = _MacFlappingPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 7, 1, 2),
    _MacFlappingPortStatus_Type()
)
macFlappingPortStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlappingPortStatus.setStatus("current")
_MacAddr1Table_Object = MibTable
macAddr1Table = _MacAddr1Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 8)
)
if mibBuilder.loadTexts:
    macAddr1Table.setStatus("current")
_MacAddr1Entry_Object = MibTableRow
macAddr1Entry = _MacAddr1Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 8, 1)
)
macAddr1Entry.setIndexNames(
    (0, "V1600D", "macAddr1"),
)
if mibBuilder.loadTexts:
    macAddr1Entry.setStatus("current")
_MacAddr1_Type = OctetString
_MacAddr1_Object = MibTableColumn
macAddr1 = _MacAddr1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 8, 1, 1),
    _MacAddr1_Type()
)
macAddr1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macAddr1.setStatus("current")
_MacVlanId1_Type = Integer32
_MacVlanId1_Object = MibTableColumn
macVlanId1 = _MacVlanId1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 8, 1, 2),
    _MacVlanId1_Type()
)
macVlanId1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macVlanId1.setStatus("current")


class _MacType1_Type(Integer32):
    """Custom type macType1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("static", 0),
          ("dynamic", 1))
    )


_MacType1_Type.__name__ = "Integer32"
_MacType1_Object = MibTableColumn
macType1 = _MacType1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 8, 1, 3),
    _MacType1_Type()
)
macType1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macType1.setStatus("current")
_MacPortId1_Type = OctetString
_MacPortId1_Object = MibTableColumn
macPortId1 = _MacPortId1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 8, 1, 4),
    _MacPortId1_Type()
)
macPortId1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macPortId1.setStatus("current")
_MacAddrStrTable_Object = MibTable
macAddrStrTable = _MacAddrStrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 9)
)
if mibBuilder.loadTexts:
    macAddrStrTable.setStatus("current")
_MacAddrStrEntry_Object = MibTableRow
macAddrStrEntry = _MacAddrStrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 9, 1)
)
macAddrStrEntry.setIndexNames(
    (0, "V1600D", "macAddrStrIndex"),
)
if mibBuilder.loadTexts:
    macAddrStrEntry.setStatus("current")
_MacAddrStrIndex_Type = Integer32
_MacAddrStrIndex_Object = MibTableColumn
macAddrStrIndex = _MacAddrStrIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 9, 1, 1),
    _MacAddrStrIndex_Type()
)
macAddrStrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macAddrStrIndex.setStatus("current")
_MacVlanIdAddrTypePortId_Type = OctetString
_MacVlanIdAddrTypePortId_Object = MibTableColumn
macVlanIdAddrTypePortId = _MacVlanIdAddrTypePortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 3, 9, 1, 2),
    _MacVlanIdAddrTypePortId_Type()
)
macVlanIdAddrTypePortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macVlanIdAddrTypePortId.setStatus("current")
_V1600dQos_ObjectIdentity = ObjectIdentity
v1600dQos = _V1600dQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4)
)


class _QosQueueScheduler_Type(Integer32):
    """Custom type qosQueueScheduler based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("strict-priority", 1),
          ("wrr", 2),
          ("sp-wrr", 3))
    )


_QosQueueScheduler_Type.__name__ = "Integer32"
_QosQueueScheduler_Object = MibScalar
qosQueueScheduler = _QosQueueScheduler_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 1),
    _QosQueueScheduler_Type()
)
qosQueueScheduler.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosQueueScheduler.setStatus("current")
_WrrTable_Object = MibTable
wrrTable = _WrrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 2)
)
if mibBuilder.loadTexts:
    wrrTable.setStatus("current")
_WrrEntry_Object = MibTableRow
wrrEntry = _WrrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 2, 1)
)
wrrEntry.setIndexNames(
    (0, "V1600D", "wrrQueue"),
)
if mibBuilder.loadTexts:
    wrrEntry.setStatus("current")


class _WrrQueue_Type(Gauge32):
    """Custom type wrrQueue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WrrQueue_Type.__name__ = "Gauge32"
_WrrQueue_Object = MibTableColumn
wrrQueue = _WrrQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 2, 1, 1),
    _WrrQueue_Type()
)
wrrQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wrrQueue.setStatus("current")


class _WrrWeight_Type(Integer32):
    """Custom type wrrWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_WrrWeight_Type.__name__ = "Integer32"
_WrrWeight_Object = MibTableColumn
wrrWeight = _WrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 2, 1, 2),
    _WrrWeight_Type()
)
wrrWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wrrWeight.setStatus("current")
_SpWrrTable_Object = MibTable
spWrrTable = _SpWrrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 3)
)
if mibBuilder.loadTexts:
    spWrrTable.setStatus("current")
_SpWrrEntry_Object = MibTableRow
spWrrEntry = _SpWrrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 3, 1)
)
spWrrEntry.setIndexNames(
    (0, "V1600D", "spWrrQueue"),
)
if mibBuilder.loadTexts:
    spWrrEntry.setStatus("current")


class _SpWrrQueue_Type(Integer32):
    """Custom type spWrrQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SpWrrQueue_Type.__name__ = "Integer32"
_SpWrrQueue_Object = MibTableColumn
spWrrQueue = _SpWrrQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 3, 1, 1),
    _SpWrrQueue_Type()
)
spWrrQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spWrrQueue.setStatus("current")


class _SpWrrWeight_Type(Integer32):
    """Custom type spWrrWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_SpWrrWeight_Type.__name__ = "Integer32"
_SpWrrWeight_Object = MibTableColumn
spWrrWeight = _SpWrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 4, 3, 1, 2),
    _SpWrrWeight_Type()
)
spWrrWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spWrrWeight.setStatus("current")
_V1600dIgmpsnooping_ObjectIdentity = ObjectIdentity
v1600dIgmpsnooping = _V1600dIgmpsnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5)
)


class _IgmpSnoopingEn_Type(Integer32):
    """Custom type igmpSnoopingEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IgmpSnoopingEn_Type.__name__ = "Integer32"
_IgmpSnoopingEn_Object = MibScalar
igmpSnoopingEn = _IgmpSnoopingEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 1),
    _IgmpSnoopingEn_Type()
)
igmpSnoopingEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingEn.setStatus("current")
_IgmpMrouterPortCfg_ObjectIdentity = ObjectIdentity
igmpMrouterPortCfg = _IgmpMrouterPortCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 2)
)


class _MrouterPort_Type(Integer32):
    """Custom type mrouterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MrouterPort_Type.__name__ = "Integer32"
_MrouterPort_Object = MibScalar
mrouterPort = _MrouterPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 2, 1),
    _MrouterPort_Type()
)
mrouterPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mrouterPort.setStatus("current")


class _MrouterVlan_Type(Integer32):
    """Custom type mrouterVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MrouterVlan_Type.__name__ = "Integer32"
_MrouterVlan_Object = MibScalar
mrouterVlan = _MrouterVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 2, 2),
    _MrouterVlan_Type()
)
mrouterVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mrouterVlan.setStatus("current")


class _MrouterAction_Type(Integer32):
    """Custom type mrouterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_MrouterAction_Type.__name__ = "Integer32"
_MrouterAction_Object = MibScalar
mrouterAction = _MrouterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 2, 3),
    _MrouterAction_Type()
)
mrouterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mrouterAction.setStatus("current")
_IgmpMrouterPortTable_Object = MibTable
igmpMrouterPortTable = _IgmpMrouterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 3)
)
if mibBuilder.loadTexts:
    igmpMrouterPortTable.setStatus("current")
_IgmpMrouterPortEntry_Object = MibTableRow
igmpMrouterPortEntry = _IgmpMrouterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 3, 1)
)
igmpMrouterPortEntry.setIndexNames(
    (0, "V1600D", "igmpMrouterItem"),
)
if mibBuilder.loadTexts:
    igmpMrouterPortEntry.setStatus("current")


class _IgmpMrouterItem_Type(Integer32):
    """Custom type igmpMrouterItem based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_IgmpMrouterItem_Type.__name__ = "Integer32"
_IgmpMrouterItem_Object = MibTableColumn
igmpMrouterItem = _IgmpMrouterItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 3, 1, 1),
    _IgmpMrouterItem_Type()
)
igmpMrouterItem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpMrouterItem.setStatus("current")


class _IgmpMrouterPort_Type(Integer32):
    """Custom type igmpMrouterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_IgmpMrouterPort_Type.__name__ = "Integer32"
_IgmpMrouterPort_Object = MibTableColumn
igmpMrouterPort = _IgmpMrouterPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 3, 1, 2),
    _IgmpMrouterPort_Type()
)
igmpMrouterPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpMrouterPort.setStatus("current")
_IgmpMrouterVlan_Type = Integer32
_IgmpMrouterVlan_Object = MibTableColumn
igmpMrouterVlan = _IgmpMrouterVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 3, 1, 3),
    _IgmpMrouterVlan_Type()
)
igmpMrouterVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpMrouterVlan.setStatus("current")
_IgmpPortTable_Object = MibTable
igmpPortTable = _IgmpPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 4)
)
if mibBuilder.loadTexts:
    igmpPortTable.setStatus("current")
_IgmpPortEntry_Object = MibTableRow
igmpPortEntry = _IgmpPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 4, 1)
)
igmpPortEntry.setIndexNames(
    (0, "V1600D", "igmpPortIndex"),
)
if mibBuilder.loadTexts:
    igmpPortEntry.setStatus("current")


class _IgmpPortIndex_Type(Integer32):
    """Custom type igmpPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_IgmpPortIndex_Type.__name__ = "Integer32"
_IgmpPortIndex_Object = MibTableColumn
igmpPortIndex = _IgmpPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 4, 1, 1),
    _IgmpPortIndex_Type()
)
igmpPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpPortIndex.setStatus("current")


class _GroupCount_Type(Integer32):
    """Custom type groupCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_GroupCount_Type.__name__ = "Integer32"
_GroupCount_Object = MibTableColumn
groupCount = _GroupCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 4, 1, 2),
    _GroupCount_Type()
)
groupCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupCount.setStatus("current")


class _Tagstrip_Type(Integer32):
    """Custom type tagstrip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no_tagstrip", 0),
          ("tagstrip", 1))
    )


_Tagstrip_Type.__name__ = "Integer32"
_Tagstrip_Object = MibTableColumn
tagstrip = _Tagstrip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 4, 1, 3),
    _Tagstrip_Type()
)
tagstrip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstrip.setStatus("current")


class _FastLeave_Type(Integer32):
    """Custom type fastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FastLeave_Type.__name__ = "Integer32"
_FastLeave_Object = MibTableColumn
fastLeave = _FastLeave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 4, 1, 4),
    _FastLeave_Type()
)
fastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fastLeave.setStatus("current")
_UserVlanConfig_ObjectIdentity = ObjectIdentity
userVlanConfig = _UserVlanConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 5)
)


class _UserPort_Type(Integer32):
    """Custom type userPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_UserPort_Type.__name__ = "Integer32"
_UserPort_Object = MibScalar
userPort = _UserPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 5, 1),
    _UserPort_Type()
)
userPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userPort.setStatus("current")


class _UserVlanId_Type(Integer32):
    """Custom type userVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_UserVlanId_Type.__name__ = "Integer32"
_UserVlanId_Object = MibScalar
userVlanId = _UserVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 5, 2),
    _UserVlanId_Type()
)
userVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userVlanId.setStatus("current")


class _GroupVlanId_Type(Integer32):
    """Custom type groupVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_GroupVlanId_Type.__name__ = "Integer32"
_GroupVlanId_Object = MibScalar
groupVlanId = _GroupVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 5, 3),
    _GroupVlanId_Type()
)
groupVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupVlanId.setStatus("current")


class _UserAction_Type(Integer32):
    """Custom type userAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_UserAction_Type.__name__ = "Integer32"
_UserAction_Object = MibScalar
userAction = _UserAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 5, 4),
    _UserAction_Type()
)
userAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userAction.setStatus("current")
_UserVlanTable_Object = MibTable
userVlanTable = _UserVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 6)
)
if mibBuilder.loadTexts:
    userVlanTable.setStatus("current")
_UserVlanEntry_Object = MibTableRow
userVlanEntry = _UserVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 6, 1)
)
userVlanEntry.setIndexNames(
    (0, "V1600D", "userVlanIndex"),
)
if mibBuilder.loadTexts:
    userVlanEntry.setStatus("current")


class _UserVlanIndex_Type(Integer32):
    """Custom type userVlanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_UserVlanIndex_Type.__name__ = "Integer32"
_UserVlanIndex_Object = MibTableColumn
userVlanIndex = _UserVlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 6, 1, 1),
    _UserVlanIndex_Type()
)
userVlanIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userVlanIndex.setStatus("current")
_UserVlanPortIndex_Type = Integer32
_UserVlanPortIndex_Object = MibTableColumn
userVlanPortIndex = _UserVlanPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 6, 1, 2),
    _UserVlanPortIndex_Type()
)
userVlanPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userVlanPortIndex.setStatus("current")
_UserVlanIdIndex_Type = Integer32
_UserVlanIdIndex_Object = MibTableColumn
userVlanIdIndex = _UserVlanIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 6, 1, 3),
    _UserVlanIdIndex_Type()
)
userVlanIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userVlanIdIndex.setStatus("current")
_GroupVlanIdIndex_Type = Integer32
_GroupVlanIdIndex_Object = MibTableColumn
groupVlanIdIndex = _GroupVlanIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 6, 1, 4),
    _GroupVlanIdIndex_Type()
)
groupVlanIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    groupVlanIdIndex.setStatus("current")
_IgmpStaticGroupCfg_ObjectIdentity = ObjectIdentity
igmpStaticGroupCfg = _IgmpStaticGroupCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 7)
)


class _StaticGroupPort_Type(Integer32):
    """Custom type staticGroupPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_StaticGroupPort_Type.__name__ = "Integer32"
_StaticGroupPort_Object = MibScalar
staticGroupPort = _StaticGroupPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 7, 1),
    _StaticGroupPort_Type()
)
staticGroupPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticGroupPort.setStatus("current")
_StaticGroupIp_Type = IpAddress
_StaticGroupIp_Object = MibScalar
staticGroupIp = _StaticGroupIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 7, 2),
    _StaticGroupIp_Type()
)
staticGroupIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticGroupIp.setStatus("current")


class _StaticGroupVlan_Type(Integer32):
    """Custom type staticGroupVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_StaticGroupVlan_Type.__name__ = "Integer32"
_StaticGroupVlan_Object = MibScalar
staticGroupVlan = _StaticGroupVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 7, 3),
    _StaticGroupVlan_Type()
)
staticGroupVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticGroupVlan.setStatus("current")


class _StaticGroupAction_Type(Integer32):
    """Custom type staticGroupAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_StaticGroupAction_Type.__name__ = "Integer32"
_StaticGroupAction_Object = MibScalar
staticGroupAction = _StaticGroupAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 7, 4),
    _StaticGroupAction_Type()
)
staticGroupAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticGroupAction.setStatus("current")
_IgmpStaticGroupTable_Object = MibTable
igmpStaticGroupTable = _IgmpStaticGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 8)
)
if mibBuilder.loadTexts:
    igmpStaticGroupTable.setStatus("current")
_IgmpStaticGroupEntry_Object = MibTableRow
igmpStaticGroupEntry = _IgmpStaticGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 8, 1)
)
igmpStaticGroupEntry.setIndexNames(
    (0, "V1600D", "igmpStaticItem"),
)
if mibBuilder.loadTexts:
    igmpStaticGroupEntry.setStatus("current")
_IgmpStaticItem_Type = Integer32
_IgmpStaticItem_Object = MibTableColumn
igmpStaticItem = _IgmpStaticItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 8, 1, 1),
    _IgmpStaticItem_Type()
)
igmpStaticItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpStaticItem.setStatus("current")
_IgmpStaticPort_Type = Integer32
_IgmpStaticPort_Object = MibTableColumn
igmpStaticPort = _IgmpStaticPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 8, 1, 2),
    _IgmpStaticPort_Type()
)
igmpStaticPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpStaticPort.setStatus("current")
_IgmpStaticGroupIp_Type = IpAddress
_IgmpStaticGroupIp_Object = MibTableColumn
igmpStaticGroupIp = _IgmpStaticGroupIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 8, 1, 3),
    _IgmpStaticGroupIp_Type()
)
igmpStaticGroupIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpStaticGroupIp.setStatus("current")
_IgmpStaticGroupVlan_Type = Integer32
_IgmpStaticGroupVlan_Object = MibTableColumn
igmpStaticGroupVlan = _IgmpStaticGroupVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 8, 1, 4),
    _IgmpStaticGroupVlan_Type()
)
igmpStaticGroupVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpStaticGroupVlan.setStatus("current")
_IgmplastmemberCfg_ObjectIdentity = ObjectIdentity
igmplastmemberCfg = _IgmplastmemberCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 9)
)


class _Querycount_Type(Integer32):
    """Custom type querycount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Querycount_Type.__name__ = "Integer32"
_Querycount_Object = MibScalar
querycount = _Querycount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 9, 1),
    _Querycount_Type()
)
querycount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    querycount.setStatus("current")


class _Queryinterval_Type(Integer32):
    """Custom type queryinterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Queryinterval_Type.__name__ = "Integer32"
_Queryinterval_Object = MibScalar
queryinterval = _Queryinterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 9, 2),
    _Queryinterval_Type()
)
queryinterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryinterval.setStatus("current")


class _Queryresponse_Type(Integer32):
    """Custom type queryresponse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Queryresponse_Type.__name__ = "Integer32"
_Queryresponse_Object = MibScalar
queryresponse = _Queryresponse_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 9, 3),
    _Queryresponse_Type()
)
queryresponse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryresponse.setStatus("current")
_IgmpGeneralCfg_ObjectIdentity = ObjectIdentity
igmpGeneralCfg = _IgmpGeneralCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 10)
)


class _QueryPacket_Type(Integer32):
    """Custom type queryPacket based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_QueryPacket_Type.__name__ = "Integer32"
_QueryPacket_Object = MibScalar
queryPacket = _QueryPacket_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 10, 1),
    _QueryPacket_Type()
)
queryPacket.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryPacket.setStatus("current")


class _QueryTime_Type(Integer32):
    """Custom type queryTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 255),
    )


_QueryTime_Type.__name__ = "Integer32"
_QueryTime_Object = MibScalar
queryTime = _QueryTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 10, 2),
    _QueryTime_Type()
)
queryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryTime.setStatus("current")
_IgmpSourceIpCfg_ObjectIdentity = ObjectIdentity
igmpSourceIpCfg = _IgmpSourceIpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 11)
)
_Sourceip_Type = OctetString
_Sourceip_Object = MibScalar
sourceip = _Sourceip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 11, 1),
    _Sourceip_Type()
)
sourceip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sourceip.setStatus("current")
_IgmpGroupMemberTable_Object = MibTable
igmpGroupMemberTable = _IgmpGroupMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12)
)
if mibBuilder.loadTexts:
    igmpGroupMemberTable.setStatus("current")
_IgmpGroupMemberEntry_Object = MibTableRow
igmpGroupMemberEntry = _IgmpGroupMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1)
)
igmpGroupMemberEntry.setIndexNames(
    (0, "V1600D", "igmpGroupMemberItem"),
)
if mibBuilder.loadTexts:
    igmpGroupMemberEntry.setStatus("current")
_IgmpGroupMemberItem_Type = Integer32
_IgmpGroupMemberItem_Object = MibTableColumn
igmpGroupMemberItem = _IgmpGroupMemberItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1, 1),
    _IgmpGroupMemberItem_Type()
)
igmpGroupMemberItem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupMemberItem.setStatus("current")


class _IgmpGroupMemberGVlan_Type(Integer32):
    """Custom type igmpGroupMemberGVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IgmpGroupMemberGVlan_Type.__name__ = "Integer32"
_IgmpGroupMemberGVlan_Object = MibTableColumn
igmpGroupMemberGVlan = _IgmpGroupMemberGVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1, 2),
    _IgmpGroupMemberGVlan_Type()
)
igmpGroupMemberGVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupMemberGVlan.setStatus("current")
_IgmpGroupMemberIp_Type = IpAddress
_IgmpGroupMemberIp_Object = MibTableColumn
igmpGroupMemberIp = _IgmpGroupMemberIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1, 3),
    _IgmpGroupMemberIp_Type()
)
igmpGroupMemberIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupMemberIp.setStatus("current")
_IgmpGroupMemberPort_Type = OctetString
_IgmpGroupMemberPort_Object = MibTableColumn
igmpGroupMemberPort = _IgmpGroupMemberPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1, 4),
    _IgmpGroupMemberPort_Type()
)
igmpGroupMemberPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupMemberPort.setStatus("current")


class _IgmpGroupMembeType_Type(Integer32):
    """Custom type igmpGroupMembeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("router", 2),
          ("dynamic", 3))
    )


_IgmpGroupMembeType_Type.__name__ = "Integer32"
_IgmpGroupMembeType_Object = MibTableColumn
igmpGroupMembeType = _IgmpGroupMembeType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1, 5),
    _IgmpGroupMembeType_Type()
)
igmpGroupMembeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupMembeType.setStatus("current")


class _IgmpGroupMemberUserVlan_Type(Integer32):
    """Custom type igmpGroupMemberUserVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IgmpGroupMemberUserVlan_Type.__name__ = "Integer32"
_IgmpGroupMemberUserVlan_Object = MibTableColumn
igmpGroupMemberUserVlan = _IgmpGroupMemberUserVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 5, 12, 1, 6),
    _IgmpGroupMemberUserVlan_Type()
)
igmpGroupMemberUserVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupMemberUserVlan.setStatus("current")
_V1600dARPProxy_ObjectIdentity = ObjectIdentity
v1600dARPProxy = _V1600dARPProxy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6)
)
_ArpProxyCfg_ObjectIdentity = ObjectIdentity
arpProxyCfg = _ArpProxyCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 1)
)


class _ArpProxyVlan_Type(Integer32):
    """Custom type arpProxyVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_ArpProxyVlan_Type.__name__ = "Integer32"
_ArpProxyVlan_Object = MibScalar
arpProxyVlan = _ArpProxyVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 1, 1),
    _ArpProxyVlan_Type()
)
arpProxyVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpProxyVlan.setStatus("current")


class _ArpProxyConfig_Type(Integer32):
    """Custom type arpProxyConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_ArpProxyConfig_Type.__name__ = "Integer32"
_ArpProxyConfig_Object = MibScalar
arpProxyConfig = _ArpProxyConfig_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 1, 2),
    _ArpProxyConfig_Type()
)
arpProxyConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpProxyConfig.setStatus("current")
_ArpProxyTable_Object = MibTable
arpProxyTable = _ArpProxyTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 2)
)
if mibBuilder.loadTexts:
    arpProxyTable.setStatus("current")
_ArpProxyEntry_Object = MibTableRow
arpProxyEntry = _ArpProxyEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 2, 1)
)
arpProxyEntry.setIndexNames(
    (0, "V1600D", "arpProxyVlanId"),
)
if mibBuilder.loadTexts:
    arpProxyEntry.setStatus("current")
_ArpProxyVlanId_Type = Integer32
_ArpProxyVlanId_Object = MibTableColumn
arpProxyVlanId = _ArpProxyVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 2, 1, 1),
    _ArpProxyVlanId_Type()
)
arpProxyVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpProxyVlanId.setStatus("current")


class _ArpProxyState_Type(Integer32):
    """Custom type arpProxyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_ArpProxyState_Type.__name__ = "Integer32"
_ArpProxyState_Object = MibTableColumn
arpProxyState = _ArpProxyState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 6, 2, 1, 2),
    _ArpProxyState_Type()
)
arpProxyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpProxyState.setStatus("current")
_V1600dDHCP_ObjectIdentity = ObjectIdentity
v1600dDHCP = _V1600dDHCP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7)
)
_DhcpServer_ObjectIdentity = ObjectIdentity
dhcpServer = _DhcpServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1)
)


class _DhcpCurrentState_Type(Integer32):
    """Custom type dhcpCurrentState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpCurrentState_Type.__name__ = "Integer32"
_DhcpCurrentState_Object = MibScalar
dhcpCurrentState = _DhcpCurrentState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 1),
    _DhcpCurrentState_Type()
)
dhcpCurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpCurrentState.setStatus("current")
_DhcpStartIP_Type = IpAddress
_DhcpStartIP_Object = MibScalar
dhcpStartIP = _DhcpStartIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 2),
    _DhcpStartIP_Type()
)
dhcpStartIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpStartIP.setStatus("current")
_DhcpEndIP_Type = IpAddress
_DhcpEndIP_Object = MibScalar
dhcpEndIP = _DhcpEndIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 3),
    _DhcpEndIP_Type()
)
dhcpEndIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpEndIP.setStatus("current")
_DhcpSubNetMask_Type = IpAddress
_DhcpSubNetMask_Object = MibScalar
dhcpSubNetMask = _DhcpSubNetMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 4),
    _DhcpSubNetMask_Type()
)
dhcpSubNetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSubNetMask.setStatus("current")
_DhcpGateWay_Type = IpAddress
_DhcpGateWay_Object = MibScalar
dhcpGateWay = _DhcpGateWay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 5),
    _DhcpGateWay_Type()
)
dhcpGateWay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpGateWay.setStatus("current")
_DhcpDNS1_Type = IpAddress
_DhcpDNS1_Object = MibScalar
dhcpDNS1 = _DhcpDNS1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 6),
    _DhcpDNS1_Type()
)
dhcpDNS1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpDNS1.setStatus("current")
_DhcpDNS2_Type = IpAddress
_DhcpDNS2_Object = MibScalar
dhcpDNS2 = _DhcpDNS2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 7),
    _DhcpDNS2_Type()
)
dhcpDNS2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpDNS2.setStatus("current")
_DhcpDNS3_Type = IpAddress
_DhcpDNS3_Object = MibScalar
dhcpDNS3 = _DhcpDNS3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 8),
    _DhcpDNS3_Type()
)
dhcpDNS3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpDNS3.setStatus("current")
_DhcpWins_Type = IpAddress
_DhcpWins_Object = MibScalar
dhcpWins = _DhcpWins_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 9),
    _DhcpWins_Type()
)
dhcpWins.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpWins.setStatus("current")


class _DhcpLeaseTime_Type(Integer32):
    """Custom type dhcpLeaseTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 864000),
    )


_DhcpLeaseTime_Type.__name__ = "Integer32"
_DhcpLeaseTime_Object = MibScalar
dhcpLeaseTime = _DhcpLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 10),
    _DhcpLeaseTime_Type()
)
dhcpLeaseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpLeaseTime.setStatus("current")


class _DhcpInterfaceVlan_Type(Integer32):
    """Custom type dhcpInterfaceVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_DhcpInterfaceVlan_Type.__name__ = "Integer32"
_DhcpInterfaceVlan_Object = MibScalar
dhcpInterfaceVlan = _DhcpInterfaceVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 11),
    _DhcpInterfaceVlan_Type()
)
dhcpInterfaceVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpInterfaceVlan.setStatus("current")


class _DhcpControl_Type(Integer32):
    """Custom type dhcpControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpControl_Type.__name__ = "Integer32"
_DhcpControl_Object = MibScalar
dhcpControl = _DhcpControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 12),
    _DhcpControl_Type()
)
dhcpControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpControl.setStatus("current")


class _DhcpCommit_Type(Integer32):
    """Custom type dhcpCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("Commit", 1)
    )


_DhcpCommit_Type.__name__ = "Integer32"
_DhcpCommit_Object = MibScalar
dhcpCommit = _DhcpCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 13),
    _DhcpCommit_Type()
)
dhcpCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpCommit.setStatus("current")
_DhcpLeaseTable_Object = MibTable
dhcpLeaseTable = _DhcpLeaseTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 14)
)
if mibBuilder.loadTexts:
    dhcpLeaseTable.setStatus("current")
_DhcpLeaseEntry_Object = MibTableRow
dhcpLeaseEntry = _DhcpLeaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 14, 1)
)
dhcpLeaseEntry.setIndexNames(
    (0, "V1600D", "dhcpLeaseIndex"),
)
if mibBuilder.loadTexts:
    dhcpLeaseEntry.setStatus("current")
_DhcpLeaseIndex_Type = Integer32
_DhcpLeaseIndex_Object = MibTableColumn
dhcpLeaseIndex = _DhcpLeaseIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 14, 1, 1),
    _DhcpLeaseIndex_Type()
)
dhcpLeaseIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpLeaseIndex.setStatus("current")
_DhcpLeaseIP_Type = IpAddress
_DhcpLeaseIP_Object = MibTableColumn
dhcpLeaseIP = _DhcpLeaseIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 14, 1, 2),
    _DhcpLeaseIP_Type()
)
dhcpLeaseIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpLeaseIP.setStatus("current")
_DhcpLeaseMACAddr_Type = OctetString
_DhcpLeaseMACAddr_Object = MibTableColumn
dhcpLeaseMACAddr = _DhcpLeaseMACAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 14, 1, 3),
    _DhcpLeaseMACAddr_Type()
)
dhcpLeaseMACAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpLeaseMACAddr.setStatus("current")
_DhcpLeaseTimeValue_Type = Integer32
_DhcpLeaseTimeValue_Object = MibTableColumn
dhcpLeaseTimeValue = _DhcpLeaseTimeValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 1, 14, 1, 4),
    _DhcpLeaseTimeValue_Type()
)
dhcpLeaseTimeValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpLeaseTimeValue.setStatus("current")
_DhcpRelay_ObjectIdentity = ObjectIdentity
dhcpRelay = _DhcpRelay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2)
)
_RelayServerConfig_ObjectIdentity = ObjectIdentity
relayServerConfig = _RelayServerConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 1)
)


class _RelayVlan_Type(Integer32):
    """Custom type relayVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_RelayVlan_Type.__name__ = "Integer32"
_RelayVlan_Object = MibScalar
relayVlan = _RelayVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 1, 1),
    _RelayVlan_Type()
)
relayVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    relayVlan.setStatus("current")
_RelayServerIP_Type = IpAddress
_RelayServerIP_Object = MibScalar
relayServerIP = _RelayServerIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 1, 2),
    _RelayServerIP_Type()
)
relayServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    relayServerIP.setStatus("current")


class _RelayServerAction_Type(Integer32):
    """Custom type relayServerAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Add", 1),
          ("Delete", 2))
    )


_RelayServerAction_Type.__name__ = "Integer32"
_RelayServerAction_Object = MibScalar
relayServerAction = _RelayServerAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 1, 3),
    _RelayServerAction_Type()
)
relayServerAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    relayServerAction.setStatus("current")
_RelayServerTable_Object = MibTable
relayServerTable = _RelayServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 2)
)
if mibBuilder.loadTexts:
    relayServerTable.setStatus("current")
_RelayServerEntry_Object = MibTableRow
relayServerEntry = _RelayServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 2, 1)
)
relayServerEntry.setIndexNames(
    (0, "V1600D", "relayServerVlan"),
)
if mibBuilder.loadTexts:
    relayServerEntry.setStatus("current")
_RelayServerVlan_Type = Integer32
_RelayServerVlan_Object = MibTableColumn
relayServerVlan = _RelayServerVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 2, 1, 1),
    _RelayServerVlan_Type()
)
relayServerVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    relayServerVlan.setStatus("current")
_RelayServerIPAddrList_Type = OctetString
_RelayServerIPAddrList_Object = MibTableColumn
relayServerIPAddrList = _RelayServerIPAddrList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 2, 2, 1, 2),
    _RelayServerIPAddrList_Type()
)
relayServerIPAddrList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    relayServerIPAddrList.setStatus("current")
_DhcpSnooping_ObjectIdentity = ObjectIdentity
dhcpSnooping = _DhcpSnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3)
)


class _DhcpSNControl_Type(Integer32):
    """Custom type dhcpSNControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 1),
          ("Disable", 2))
    )


_DhcpSNControl_Type.__name__ = "Integer32"
_DhcpSNControl_Object = MibScalar
dhcpSNControl = _DhcpSNControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 1),
    _DhcpSNControl_Type()
)
dhcpSNControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSNControl.setStatus("current")
_DhcpSNVlan_ObjectIdentity = ObjectIdentity
dhcpSNVlan = _DhcpSNVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 2)
)


class _DhcpSNVlanId_Type(Integer32):
    """Custom type dhcpSNVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_DhcpSNVlanId_Type.__name__ = "Integer32"
_DhcpSNVlanId_Object = MibScalar
dhcpSNVlanId = _DhcpSNVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 2, 1),
    _DhcpSNVlanId_Type()
)
dhcpSNVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSNVlanId.setStatus("current")


class _DhcpSNVlanAction_Type(Integer32):
    """Custom type dhcpSNVlanAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Add", 1),
          ("Delete", 2))
    )


_DhcpSNVlanAction_Type.__name__ = "Integer32"
_DhcpSNVlanAction_Object = MibScalar
dhcpSNVlanAction = _DhcpSNVlanAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 2, 2),
    _DhcpSNVlanAction_Type()
)
dhcpSNVlanAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSNVlanAction.setStatus("current")
_DhcpSNVlanList_Type = OctetString
_DhcpSNVlanList_Object = MibScalar
dhcpSNVlanList = _DhcpSNVlanList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 2, 3),
    _DhcpSNVlanList_Type()
)
dhcpSNVlanList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSNVlanList.setStatus("current")
_DhcpSNOption82_ObjectIdentity = ObjectIdentity
dhcpSNOption82 = _DhcpSNOption82_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 3)
)


class _SnOption82Control_Type(Integer32):
    """Custom type snOption82Control based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 1),
          ("Disable", 2))
    )


_SnOption82Control_Type.__name__ = "Integer32"
_SnOption82Control_Object = MibScalar
snOption82Control = _SnOption82Control_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 3, 1),
    _SnOption82Control_Type()
)
snOption82Control.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snOption82Control.setStatus("current")


class _SnOption82Strategy_Type(Integer32):
    """Custom type snOption82Strategy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Drop", 0),
          ("Keep", 1),
          ("Replace", 2))
    )


_SnOption82Strategy_Type.__name__ = "Integer32"
_SnOption82Strategy_Object = MibScalar
snOption82Strategy = _SnOption82Strategy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 3, 2),
    _SnOption82Strategy_Type()
)
snOption82Strategy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snOption82Strategy.setStatus("current")
_DhcpSNPortCfgTable_Object = MibTable
dhcpSNPortCfgTable = _DhcpSNPortCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4)
)
if mibBuilder.loadTexts:
    dhcpSNPortCfgTable.setStatus("current")
_DhcpSNPortCfgEntry_Object = MibTableRow
dhcpSNPortCfgEntry = _DhcpSNPortCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4, 1)
)
dhcpSNPortCfgEntry.setIndexNames(
    (0, "V1600D", "snPortIndex"),
)
if mibBuilder.loadTexts:
    dhcpSNPortCfgEntry.setStatus("current")
_SnPortIndex_Type = Integer32
_SnPortIndex_Object = MibTableColumn
snPortIndex = _SnPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4, 1, 1),
    _SnPortIndex_Type()
)
snPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snPortIndex.setStatus("current")


class _SnPortType_Type(Integer32):
    """Custom type snPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Trust", 1),
          ("Untrust", 2))
    )


_SnPortType_Type.__name__ = "Integer32"
_SnPortType_Object = MibTableColumn
snPortType = _SnPortType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4, 1, 2),
    _SnPortType_Type()
)
snPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snPortType.setStatus("current")
_SnPortUserCircuitID_Type = OctetString
_SnPortUserCircuitID_Object = MibTableColumn
snPortUserCircuitID = _SnPortUserCircuitID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4, 1, 3),
    _SnPortUserCircuitID_Type()
)
snPortUserCircuitID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snPortUserCircuitID.setStatus("current")
_SnPortUserRemoteID_Type = OctetString
_SnPortUserRemoteID_Object = MibTableColumn
snPortUserRemoteID = _SnPortUserRemoteID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4, 1, 4),
    _SnPortUserRemoteID_Type()
)
snPortUserRemoteID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snPortUserRemoteID.setStatus("current")


class _SnPortRateLimit_Type(Integer32):
    """Custom type snPortRateLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_SnPortRateLimit_Type.__name__ = "Integer32"
_SnPortRateLimit_Object = MibTableColumn
snPortRateLimit = _SnPortRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 4, 1, 5),
    _SnPortRateLimit_Type()
)
snPortRateLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snPortRateLimit.setStatus("current")


class _DhcpSNErrorRecovery_Type(Integer32):
    """Custom type dhcpSNErrorRecovery based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 1),
          ("Disable", 2))
    )


_DhcpSNErrorRecovery_Type.__name__ = "Integer32"
_DhcpSNErrorRecovery_Object = MibScalar
dhcpSNErrorRecovery = _DhcpSNErrorRecovery_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 5),
    _DhcpSNErrorRecovery_Type()
)
dhcpSNErrorRecovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSNErrorRecovery.setStatus("current")


class _DhcpSNErrorRecoveryInterval_Type(Integer32):
    """Custom type dhcpSNErrorRecoveryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 3600),
    )


_DhcpSNErrorRecoveryInterval_Type.__name__ = "Integer32"
_DhcpSNErrorRecoveryInterval_Object = MibScalar
dhcpSNErrorRecoveryInterval = _DhcpSNErrorRecoveryInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 6),
    _DhcpSNErrorRecoveryInterval_Type()
)
dhcpSNErrorRecoveryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSNErrorRecoveryInterval.setStatus("current")
_DhcpSNBinding_ObjectIdentity = ObjectIdentity
dhcpSNBinding = _DhcpSNBinding_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7)
)
_SnBindingConfig_ObjectIdentity = ObjectIdentity
snBindingConfig = _SnBindingConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1)
)
_SnBindMAC_Type = OctetString
_SnBindMAC_Object = MibScalar
snBindMAC = _SnBindMAC_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1, 1),
    _SnBindMAC_Type()
)
snBindMAC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindMAC.setStatus("current")


class _SnBindVlan_Type(Integer32):
    """Custom type snBindVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SnBindVlan_Type.__name__ = "Integer32"
_SnBindVlan_Object = MibScalar
snBindVlan = _SnBindVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1, 2),
    _SnBindVlan_Type()
)
snBindVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindVlan.setStatus("current")
_SnBindIP_Type = IpAddress
_SnBindIP_Object = MibScalar
snBindIP = _SnBindIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1, 3),
    _SnBindIP_Type()
)
snBindIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindIP.setStatus("current")


class _SnBindPortIndex_Type(Integer32):
    """Custom type snBindPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_SnBindPortIndex_Type.__name__ = "Integer32"
_SnBindPortIndex_Object = MibScalar
snBindPortIndex = _SnBindPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1, 4),
    _SnBindPortIndex_Type()
)
snBindPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindPortIndex.setStatus("current")


class _SnBindLease_Type(Integer32):
    """Custom type snBindLease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 1000000),
    )


_SnBindLease_Type.__name__ = "Integer32"
_SnBindLease_Object = MibScalar
snBindLease = _SnBindLease_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1, 5),
    _SnBindLease_Type()
)
snBindLease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindLease.setStatus("current")


class _SnBindAction_Type(Integer32):
    """Custom type snBindAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("AddStatic", 1),
          ("DeleteByMac", 2),
          ("FlushAll", 3),
          ("FlushStatic", 4),
          ("FlushDynamic", 5))
    )


_SnBindAction_Type.__name__ = "Integer32"
_SnBindAction_Object = MibScalar
snBindAction = _SnBindAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 1, 6),
    _SnBindAction_Type()
)
snBindAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindAction.setStatus("current")
_SnBindingTable_Object = MibTable
snBindingTable = _SnBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2)
)
if mibBuilder.loadTexts:
    snBindingTable.setStatus("current")
_SnBindingEntry_Object = MibTableRow
snBindingEntry = _SnBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1)
)
snBindingEntry.setIndexNames(
    (0, "V1600D", "snBindingid"),
)
if mibBuilder.loadTexts:
    snBindingEntry.setStatus("current")
_SnBindingid_Type = Integer32
_SnBindingid_Object = MibTableColumn
snBindingid = _SnBindingid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 1),
    _SnBindingid_Type()
)
snBindingid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingid.setStatus("current")
_SnBindingMAC_Type = OctetString
_SnBindingMAC_Object = MibTableColumn
snBindingMAC = _SnBindingMAC_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 2),
    _SnBindingMAC_Type()
)
snBindingMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingMAC.setStatus("current")
_SnBindingIP_Type = IpAddress
_SnBindingIP_Object = MibTableColumn
snBindingIP = _SnBindingIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 3),
    _SnBindingIP_Type()
)
snBindingIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingIP.setStatus("current")
_SnBindingLease_Type = Integer32
_SnBindingLease_Object = MibTableColumn
snBindingLease = _SnBindingLease_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 4),
    _SnBindingLease_Type()
)
snBindingLease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingLease.setStatus("current")


class _SnBindingType_Type(Integer32):
    """Custom type snBindingType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Static", 1),
          ("Dynamic", 2))
    )


_SnBindingType_Type.__name__ = "Integer32"
_SnBindingType_Object = MibTableColumn
snBindingType = _SnBindingType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 5),
    _SnBindingType_Type()
)
snBindingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingType.setStatus("current")
_SnBindingVlan_Type = Integer32
_SnBindingVlan_Object = MibTableColumn
snBindingVlan = _SnBindingVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 6),
    _SnBindingVlan_Type()
)
snBindingVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingVlan.setStatus("current")
_SnBindingPortIndex_Type = Integer32
_SnBindingPortIndex_Object = MibTableColumn
snBindingPortIndex = _SnBindingPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 2, 1, 7),
    _SnBindingPortIndex_Type()
)
snBindingPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snBindingPortIndex.setStatus("current")


class _SnBindingDeleteTime_Type(Integer32):
    """Custom type snBindingDeleteTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_SnBindingDeleteTime_Type.__name__ = "Integer32"
_SnBindingDeleteTime_Object = MibScalar
snBindingDeleteTime = _SnBindingDeleteTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 7, 3, 7, 3),
    _SnBindingDeleteTime_Type()
)
snBindingDeleteTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snBindingDeleteTime.setStatus("current")
_V1600dStormControlCfg_ObjectIdentity = ObjectIdentity
v1600dStormControlCfg = _V1600dStormControlCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8)
)


class _StormCtrPid_Type(Integer32):
    """Custom type stormCtrPid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_StormCtrPid_Type.__name__ = "Integer32"
_StormCtrPid_Object = MibScalar
stormCtrPid = _StormCtrPid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 1),
    _StormCtrPid_Type()
)
stormCtrPid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stormCtrPid.setStatus("current")


class _BroadcastStormCtrEn_Type(Integer32):
    """Custom type broadcastStormCtrEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_BroadcastStormCtrEn_Type.__name__ = "Integer32"
_BroadcastStormCtrEn_Object = MibScalar
broadcastStormCtrEn = _BroadcastStormCtrEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 2),
    _BroadcastStormCtrEn_Type()
)
broadcastStormCtrEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastStormCtrEn.setStatus("current")


class _MulticastStormCtrEn_Type(Integer32):
    """Custom type multicastStormCtrEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MulticastStormCtrEn_Type.__name__ = "Integer32"
_MulticastStormCtrEn_Object = MibScalar
multicastStormCtrEn = _MulticastStormCtrEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 3),
    _MulticastStormCtrEn_Type()
)
multicastStormCtrEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    multicastStormCtrEn.setStatus("current")


class _UnknownStormCtrEn_Type(Integer32):
    """Custom type unknownStormCtrEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UnknownStormCtrEn_Type.__name__ = "Integer32"
_UnknownStormCtrEn_Object = MibScalar
unknownStormCtrEn = _UnknownStormCtrEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 4),
    _UnknownStormCtrEn_Type()
)
unknownStormCtrEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    unknownStormCtrEn.setStatus("current")
_BroadcastSpeed_Type = Integer32
_BroadcastSpeed_Object = MibScalar
broadcastSpeed = _BroadcastSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 5),
    _BroadcastSpeed_Type()
)
broadcastSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastSpeed.setStatus("current")
_MulticastSpeed_Type = Integer32
_MulticastSpeed_Object = MibScalar
multicastSpeed = _MulticastSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 6),
    _MulticastSpeed_Type()
)
multicastSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    multicastSpeed.setStatus("current")
_UnknownSpeed_Type = Integer32
_UnknownSpeed_Object = MibScalar
unknownSpeed = _UnknownSpeed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 7),
    _UnknownSpeed_Type()
)
unknownSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    unknownSpeed.setStatus("current")


class _StormCtrAction_Type(Integer32):
    """Custom type stormCtrAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_StormCtrAction_Type.__name__ = "Integer32"
_StormCtrAction_Object = MibScalar
stormCtrAction = _StormCtrAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 8, 8),
    _StormCtrAction_Type()
)
stormCtrAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stormCtrAction.setStatus("current")
_V1600dRstp_ObjectIdentity = ObjectIdentity
v1600dRstp = _V1600dRstp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9)
)


class _RstpEn_Type(Integer32):
    """Custom type rstpEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RstpEn_Type.__name__ = "Integer32"
_RstpEn_Object = MibScalar
rstpEn = _RstpEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 1),
    _RstpEn_Type()
)
rstpEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpEn.setStatus("current")
_RstpCfg_ObjectIdentity = ObjectIdentity
rstpCfg = _RstpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 2)
)


class _MaxAge_Type(Integer32):
    """Custom type maxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6, 40),
    )


_MaxAge_Type.__name__ = "Integer32"
_MaxAge_Object = MibScalar
maxAge = _MaxAge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 2, 1),
    _MaxAge_Type()
)
maxAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxAge.setStatus("current")


class _BridgePriority_Type(Integer32):
    """Custom type bridgePriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BridgePriority_Type.__name__ = "Integer32"
_BridgePriority_Object = MibScalar
bridgePriority = _BridgePriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 2, 2),
    _BridgePriority_Type()
)
bridgePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgePriority.setStatus("current")
_BridgeMac_Type = OctetString
_BridgeMac_Object = MibScalar
bridgeMac = _BridgeMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 2, 3),
    _BridgeMac_Type()
)
bridgeMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeMac.setStatus("current")


class _HelloTime_Type(Integer32):
    """Custom type helloTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_HelloTime_Type.__name__ = "Integer32"
_HelloTime_Object = MibScalar
helloTime = _HelloTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 2, 4),
    _HelloTime_Type()
)
helloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    helloTime.setStatus("current")


class _ForwardDelay_Type(Integer32):
    """Custom type forwardDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 30),
    )


_ForwardDelay_Type.__name__ = "Integer32"
_ForwardDelay_Object = MibScalar
forwardDelay = _ForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 2, 5),
    _ForwardDelay_Type()
)
forwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forwardDelay.setStatus("current")
_RstpPortCfgTable_Object = MibTable
rstpPortCfgTable = _RstpPortCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3)
)
if mibBuilder.loadTexts:
    rstpPortCfgTable.setStatus("current")
_RstpPortCfgEntry_Object = MibTableRow
rstpPortCfgEntry = _RstpPortCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1)
)
rstpPortCfgEntry.setIndexNames(
    (0, "V1600D", "rstpPortId"),
)
if mibBuilder.loadTexts:
    rstpPortCfgEntry.setStatus("current")


class _RstpPortId_Type(Integer32):
    """Custom type rstpPortId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_RstpPortId_Type.__name__ = "Integer32"
_RstpPortId_Object = MibTableColumn
rstpPortId = _RstpPortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1, 1),
    _RstpPortId_Type()
)
rstpPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpPortId.setStatus("current")


class _RstpPortAdminStatus_Type(Integer32):
    """Custom type rstpPortAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RstpPortAdminStatus_Type.__name__ = "Integer32"
_RstpPortAdminStatus_Object = MibTableColumn
rstpPortAdminStatus = _RstpPortAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1, 2),
    _RstpPortAdminStatus_Type()
)
rstpPortAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpPortAdminStatus.setStatus("current")


class _RstpPortPrioritySet_Type(Integer32):
    """Custom type rstpPortPrioritySet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_RstpPortPrioritySet_Type.__name__ = "Integer32"
_RstpPortPrioritySet_Object = MibTableColumn
rstpPortPrioritySet = _RstpPortPrioritySet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1, 3),
    _RstpPortPrioritySet_Type()
)
rstpPortPrioritySet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpPortPrioritySet.setStatus("current")


class _RstpPortCostSet_Type(Unsigned32):
    """Custom type rstpPortCostSet based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200000000),
    )


_RstpPortCostSet_Type.__name__ = "Unsigned32"
_RstpPortCostSet_Object = MibTableColumn
rstpPortCostSet = _RstpPortCostSet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1, 4),
    _RstpPortCostSet_Type()
)
rstpPortCostSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpPortCostSet.setStatus("current")


class _RstpPortOperEdgeSet_Type(Integer32):
    """Custom type rstpPortOperEdgeSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RstpPortOperEdgeSet_Type.__name__ = "Integer32"
_RstpPortOperEdgeSet_Object = MibTableColumn
rstpPortOperEdgeSet = _RstpPortOperEdgeSet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1, 5),
    _RstpPortOperEdgeSet_Type()
)
rstpPortOperEdgeSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpPortOperEdgeSet.setStatus("current")


class _RstpPortP2PSet_Type(Integer32):
    """Custom type rstpPortP2PSet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RstpPortP2PSet_Type.__name__ = "Integer32"
_RstpPortP2PSet_Object = MibTableColumn
rstpPortP2PSet = _RstpPortP2PSet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 3, 1, 6),
    _RstpPortP2PSet_Type()
)
rstpPortP2PSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rstpPortP2PSet.setStatus("current")
_RstpInfo_ObjectIdentity = ObjectIdentity
rstpInfo = _RstpInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4)
)
_RstpRootBridgeInfo_ObjectIdentity = ObjectIdentity
rstpRootBridgeInfo = _RstpRootBridgeInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1)
)
_PathCostToRootBridge_Type = Unsigned32
_PathCostToRootBridge_Object = MibScalar
pathCostToRootBridge = _PathCostToRootBridge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 1),
    _PathCostToRootBridge_Type()
)
pathCostToRootBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathCostToRootBridge.setStatus("current")
_RootPort_Type = Integer32
_RootPort_Object = MibScalar
rootPort = _RootPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 2),
    _RootPort_Type()
)
rootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rootPort.setStatus("current")
_RootBridgePriority_Type = Integer32
_RootBridgePriority_Object = MibScalar
rootBridgePriority = _RootBridgePriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 3),
    _RootBridgePriority_Type()
)
rootBridgePriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rootBridgePriority.setStatus("current")
_RootBridgeMac_Type = OctetString
_RootBridgeMac_Object = MibScalar
rootBridgeMac = _RootBridgeMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 4),
    _RootBridgeMac_Type()
)
rootBridgeMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rootBridgeMac.setStatus("current")
_RootBridgeHelloTime_Type = Integer32
_RootBridgeHelloTime_Object = MibScalar
rootBridgeHelloTime = _RootBridgeHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 5),
    _RootBridgeHelloTime_Type()
)
rootBridgeHelloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rootBridgeHelloTime.setStatus("current")
_RootBridgeMaxAge_Type = Integer32
_RootBridgeMaxAge_Object = MibScalar
rootBridgeMaxAge = _RootBridgeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 6),
    _RootBridgeMaxAge_Type()
)
rootBridgeMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rootBridgeMaxAge.setStatus("current")
_RootBridgeForwardDelay_Type = Integer32
_RootBridgeForwardDelay_Object = MibScalar
rootBridgeForwardDelay = _RootBridgeForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 1, 7),
    _RootBridgeForwardDelay_Type()
)
rootBridgeForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rootBridgeForwardDelay.setStatus("current")
_RstpPortStatusTable_Object = MibTable
rstpPortStatusTable = _RstpPortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2)
)
if mibBuilder.loadTexts:
    rstpPortStatusTable.setStatus("current")
_RstpPortStatusEntry_Object = MibTableRow
rstpPortStatusEntry = _RstpPortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1)
)
rstpPortStatusEntry.setIndexNames(
    (0, "V1600D", "rstpPortIndex"),
)
if mibBuilder.loadTexts:
    rstpPortStatusEntry.setStatus("current")


class _RstpPortIndex_Type(Integer32):
    """Custom type rstpPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_RstpPortIndex_Type.__name__ = "Integer32"
_RstpPortIndex_Object = MibTableColumn
rstpPortIndex = _RstpPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1, 1),
    _RstpPortIndex_Type()
)
rstpPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rstpPortIndex.setStatus("current")


class _RstpPortRole_Type(Integer32):
    """Custom type rstpPortRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("root", 1),
          ("backup", 2),
          ("design", 3),
          ("alternat", 4),
          ("disable", 5),
          ("unkown", 6))
    )


_RstpPortRole_Type.__name__ = "Integer32"
_RstpPortRole_Object = MibTableColumn
rstpPortRole = _RstpPortRole_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1, 2),
    _RstpPortRole_Type()
)
rstpPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rstpPortRole.setStatus("current")


class _RstpPortStatus_Type(Integer32):
    """Custom type rstpPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("discarding", 1),
          ("learning", 2),
          ("forwarding", 3),
          ("unkown", 4))
    )


_RstpPortStatus_Type.__name__ = "Integer32"
_RstpPortStatus_Object = MibTableColumn
rstpPortStatus = _RstpPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1, 3),
    _RstpPortStatus_Type()
)
rstpPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rstpPortStatus.setStatus("current")
_RstpPortCost_Type = Integer32
_RstpPortCost_Object = MibTableColumn
rstpPortCost = _RstpPortCost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1, 4),
    _RstpPortCost_Type()
)
rstpPortCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rstpPortCost.setStatus("current")
_RstpPortPriority_Type = Integer32
_RstpPortPriority_Object = MibTableColumn
rstpPortPriority = _RstpPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1, 5),
    _RstpPortPriority_Type()
)
rstpPortPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rstpPortPriority.setStatus("current")


class _RstpPortP2P_Type(Integer32):
    """Custom type rstpPortP2P based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RstpPortP2P_Type.__name__ = "Integer32"
_RstpPortP2P_Object = MibTableColumn
rstpPortP2P = _RstpPortP2P_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 9, 4, 2, 1, 6),
    _RstpPortP2P_Type()
)
rstpPortP2P.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rstpPortP2P.setStatus("current")
_V1600dAcl_ObjectIdentity = ObjectIdentity
v1600dAcl = _V1600dAcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10)
)
_AclCfg_ObjectIdentity = ObjectIdentity
aclCfg = _AclCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1)
)
_StdIPFilterCfg_ObjectIdentity = ObjectIdentity
stdIPFilterCfg = _StdIPFilterCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 1)
)


class _StdIpFilterId_Type(Integer32):
    """Custom type stdIpFilterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_StdIpFilterId_Type.__name__ = "Integer32"
_StdIpFilterId_Object = MibScalar
stdIpFilterId = _StdIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 1, 1),
    _StdIpFilterId_Type()
)
stdIpFilterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpFilterId.setStatus("current")
_StdIpFilterSrcIp_Type = IpAddress
_StdIpFilterSrcIp_Object = MibScalar
stdIpFilterSrcIp = _StdIpFilterSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 1, 2),
    _StdIpFilterSrcIp_Type()
)
stdIpFilterSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpFilterSrcIp.setStatus("current")
_StdIpFilterSrcMask_Type = IpAddress
_StdIpFilterSrcMask_Object = MibScalar
stdIpFilterSrcMask = _StdIpFilterSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 1, 3),
    _StdIpFilterSrcMask_Type()
)
stdIpFilterSrcMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpFilterSrcMask.setStatus("current")


class _StdIpFilterMode_Type(Integer32):
    """Custom type stdIpFilterMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_StdIpFilterMode_Type.__name__ = "Integer32"
_StdIpFilterMode_Object = MibScalar
stdIpFilterMode = _StdIpFilterMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 1, 4),
    _StdIpFilterMode_Type()
)
stdIpFilterMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpFilterMode.setStatus("current")


class _StdIpFilterAction_Type(Integer32):
    """Custom type stdIpFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_StdIpFilterAction_Type.__name__ = "Integer32"
_StdIpFilterAction_Object = MibScalar
stdIpFilterAction = _StdIpFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 1, 5),
    _StdIpFilterAction_Type()
)
stdIpFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpFilterAction.setStatus("current")
_ExtIPFilterCfg_ObjectIdentity = ObjectIdentity
extIPFilterCfg = _ExtIPFilterCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2)
)


class _ExtIpFilterId_Type(Integer32):
    """Custom type extIpFilterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 1999),
    )


_ExtIpFilterId_Type.__name__ = "Integer32"
_ExtIpFilterId_Object = MibScalar
extIpFilterId = _ExtIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 1),
    _ExtIpFilterId_Type()
)
extIpFilterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterId.setStatus("current")


class _ExtIpFilterProtocol_Type(Integer32):
    """Custom type extIpFilterProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_ExtIpFilterProtocol_Type.__name__ = "Integer32"
_ExtIpFilterProtocol_Object = MibScalar
extIpFilterProtocol = _ExtIpFilterProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 2),
    _ExtIpFilterProtocol_Type()
)
extIpFilterProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterProtocol.setStatus("current")
_ExtIpFilterSrcIp_Type = IpAddress
_ExtIpFilterSrcIp_Object = MibScalar
extIpFilterSrcIp = _ExtIpFilterSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 3),
    _ExtIpFilterSrcIp_Type()
)
extIpFilterSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterSrcIp.setStatus("current")
_ExtIpFilterSrcMask_Type = IpAddress
_ExtIpFilterSrcMask_Object = MibScalar
extIpFilterSrcMask = _ExtIpFilterSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 4),
    _ExtIpFilterSrcMask_Type()
)
extIpFilterSrcMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterSrcMask.setStatus("current")


class _ExtIpFilterSrcPort_Type(Integer32):
    """Custom type extIpFilterSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpFilterSrcPort_Type.__name__ = "Integer32"
_ExtIpFilterSrcPort_Object = MibScalar
extIpFilterSrcPort = _ExtIpFilterSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 5),
    _ExtIpFilterSrcPort_Type()
)
extIpFilterSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterSrcPort.setStatus("current")
_ExtIpFilterDstIp_Type = IpAddress
_ExtIpFilterDstIp_Object = MibScalar
extIpFilterDstIp = _ExtIpFilterDstIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 6),
    _ExtIpFilterDstIp_Type()
)
extIpFilterDstIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterDstIp.setStatus("current")
_ExtIpFilterDstMask_Type = IpAddress
_ExtIpFilterDstMask_Object = MibScalar
extIpFilterDstMask = _ExtIpFilterDstMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 7),
    _ExtIpFilterDstMask_Type()
)
extIpFilterDstMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterDstMask.setStatus("current")


class _ExtIpFilterDstPort_Type(Integer32):
    """Custom type extIpFilterDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpFilterDstPort_Type.__name__ = "Integer32"
_ExtIpFilterDstPort_Object = MibScalar
extIpFilterDstPort = _ExtIpFilterDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 8),
    _ExtIpFilterDstPort_Type()
)
extIpFilterDstPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterDstPort.setStatus("current")


class _ExtIpFilterDscp_Type(Integer32):
    """Custom type extIpFilterDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 63),
    )


_ExtIpFilterDscp_Type.__name__ = "Integer32"
_ExtIpFilterDscp_Object = MibScalar
extIpFilterDscp = _ExtIpFilterDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 9),
    _ExtIpFilterDscp_Type()
)
extIpFilterDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterDscp.setStatus("current")


class _ExtIpFilterMode_Type(Integer32):
    """Custom type extIpFilterMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_ExtIpFilterMode_Type.__name__ = "Integer32"
_ExtIpFilterMode_Object = MibScalar
extIpFilterMode = _ExtIpFilterMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 10),
    _ExtIpFilterMode_Type()
)
extIpFilterMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterMode.setStatus("current")


class _ExtIpFilterAction_Type(Integer32):
    """Custom type extIpFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_ExtIpFilterAction_Type.__name__ = "Integer32"
_ExtIpFilterAction_Object = MibScalar
extIpFilterAction = _ExtIpFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 2, 11),
    _ExtIpFilterAction_Type()
)
extIpFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFilterAction.setStatus("current")
_MacFilterCfg_ObjectIdentity = ObjectIdentity
macFilterCfg = _MacFilterCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3)
)


class _MacFilterId_Type(Integer32):
    """Custom type macFilterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 2999),
    )


_MacFilterId_Type.__name__ = "Integer32"
_MacFilterId_Object = MibScalar
macFilterId = _MacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 1),
    _MacFilterId_Type()
)
macFilterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterId.setStatus("current")
_MacFilterSrcMac_Type = OctetString
_MacFilterSrcMac_Object = MibScalar
macFilterSrcMac = _MacFilterSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 2),
    _MacFilterSrcMac_Type()
)
macFilterSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterSrcMac.setStatus("current")
_MacFilterSrcMacMask_Type = OctetString
_MacFilterSrcMacMask_Object = MibScalar
macFilterSrcMacMask = _MacFilterSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 3),
    _MacFilterSrcMacMask_Type()
)
macFilterSrcMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterSrcMacMask.setStatus("current")
_MacFilterDstMac_Type = OctetString
_MacFilterDstMac_Object = MibScalar
macFilterDstMac = _MacFilterDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 4),
    _MacFilterDstMac_Type()
)
macFilterDstMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterDstMac.setStatus("current")
_MacFilterDstMacMask_Type = OctetString
_MacFilterDstMacMask_Object = MibScalar
macFilterDstMacMask = _MacFilterDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 5),
    _MacFilterDstMacMask_Type()
)
macFilterDstMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterDstMacMask.setStatus("current")


class _MacFilterVlanId_Type(Integer32):
    """Custom type macFilterVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MacFilterVlanId_Type.__name__ = "Integer32"
_MacFilterVlanId_Object = MibScalar
macFilterVlanId = _MacFilterVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 6),
    _MacFilterVlanId_Type()
)
macFilterVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterVlanId.setStatus("current")


class _MacFilterCos_Type(Integer32):
    """Custom type macFilterCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_MacFilterCos_Type.__name__ = "Integer32"
_MacFilterCos_Object = MibScalar
macFilterCos = _MacFilterCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 7),
    _MacFilterCos_Type()
)
macFilterCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterCos.setStatus("current")
_MacFilterEthType_Type = OctetString
_MacFilterEthType_Object = MibScalar
macFilterEthType = _MacFilterEthType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 8),
    _MacFilterEthType_Type()
)
macFilterEthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterEthType.setStatus("current")
_MacFilterEthTypeMask_Type = OctetString
_MacFilterEthTypeMask_Object = MibScalar
macFilterEthTypeMask = _MacFilterEthTypeMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 9),
    _MacFilterEthTypeMask_Type()
)
macFilterEthTypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterEthTypeMask.setStatus("current")


class _MacFilterMode_Type(Integer32):
    """Custom type macFilterMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_MacFilterMode_Type.__name__ = "Integer32"
_MacFilterMode_Object = MibScalar
macFilterMode = _MacFilterMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 10),
    _MacFilterMode_Type()
)
macFilterMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterMode.setStatus("current")


class _MacFilterAction_Type(Integer32):
    """Custom type macFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_MacFilterAction_Type.__name__ = "Integer32"
_MacFilterAction_Object = MibScalar
macFilterAction = _MacFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 3, 11),
    _MacFilterAction_Type()
)
macFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFilterAction.setStatus("current")
_PortBaseAclCfg_ObjectIdentity = ObjectIdentity
portBaseAclCfg = _PortBaseAclCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4)
)


class _PortBaseAclId_Type(Integer32):
    """Custom type portBaseAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5000, 5999),
    )


_PortBaseAclId_Type.__name__ = "Integer32"
_PortBaseAclId_Object = MibScalar
portBaseAclId = _PortBaseAclId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 1),
    _PortBaseAclId_Type()
)
portBaseAclId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseAclId.setStatus("current")


class _PortBaseFltMode_Type(Integer32):
    """Custom type portBaseFltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_PortBaseFltMode_Type.__name__ = "Integer32"
_PortBaseFltMode_Object = MibScalar
portBaseFltMode = _PortBaseFltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 2),
    _PortBaseFltMode_Type()
)
portBaseFltMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseFltMode.setStatus("current")
_PortBaseSrcMac_Type = OctetString
_PortBaseSrcMac_Object = MibScalar
portBaseSrcMac = _PortBaseSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 3),
    _PortBaseSrcMac_Type()
)
portBaseSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseSrcMac.setStatus("current")
_PortBaseSrcMacMask_Type = OctetString
_PortBaseSrcMacMask_Object = MibScalar
portBaseSrcMacMask = _PortBaseSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 4),
    _PortBaseSrcMacMask_Type()
)
portBaseSrcMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseSrcMacMask.setStatus("current")
_PortBaseDstMac_Type = OctetString
_PortBaseDstMac_Object = MibScalar
portBaseDstMac = _PortBaseDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 5),
    _PortBaseDstMac_Type()
)
portBaseDstMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseDstMac.setStatus("current")
_PortBaseDstMacMask_Type = OctetString
_PortBaseDstMacMask_Object = MibScalar
portBaseDstMacMask = _PortBaseDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 6),
    _PortBaseDstMacMask_Type()
)
portBaseDstMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseDstMacMask.setStatus("current")


class _PortBaseVlan_Type(Integer32):
    """Custom type portBaseVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_PortBaseVlan_Type.__name__ = "Integer32"
_PortBaseVlan_Object = MibScalar
portBaseVlan = _PortBaseVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 7),
    _PortBaseVlan_Type()
)
portBaseVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseVlan.setStatus("current")


class _PortBaseVlanMask_Type(Integer32):
    """Custom type portBaseVlanMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PortBaseVlanMask_Type.__name__ = "Integer32"
_PortBaseVlanMask_Object = MibScalar
portBaseVlanMask = _PortBaseVlanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 8),
    _PortBaseVlanMask_Type()
)
portBaseVlanMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseVlanMask.setStatus("current")


class _PortBaseCos_Type(Integer32):
    """Custom type portBaseCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_PortBaseCos_Type.__name__ = "Integer32"
_PortBaseCos_Object = MibScalar
portBaseCos = _PortBaseCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 9),
    _PortBaseCos_Type()
)
portBaseCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseCos.setStatus("current")
_PortBaseEthernetType_Type = OctetString
_PortBaseEthernetType_Object = MibScalar
portBaseEthernetType = _PortBaseEthernetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 10),
    _PortBaseEthernetType_Type()
)
portBaseEthernetType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseEthernetType.setStatus("current")
_PortBaseSrcIp_Type = IpAddress
_PortBaseSrcIp_Object = MibScalar
portBaseSrcIp = _PortBaseSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 11),
    _PortBaseSrcIp_Type()
)
portBaseSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseSrcIp.setStatus("current")
_PortBaseSrcIpMask_Type = IpAddress
_PortBaseSrcIpMask_Object = MibScalar
portBaseSrcIpMask = _PortBaseSrcIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 12),
    _PortBaseSrcIpMask_Type()
)
portBaseSrcIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseSrcIpMask.setStatus("current")
_PortBaseDstIp_Type = IpAddress
_PortBaseDstIp_Object = MibScalar
portBaseDstIp = _PortBaseDstIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 13),
    _PortBaseDstIp_Type()
)
portBaseDstIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseDstIp.setStatus("current")
_PortBaseDstIpMask_Type = IpAddress
_PortBaseDstIpMask_Object = MibScalar
portBaseDstIpMask = _PortBaseDstIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 14),
    _PortBaseDstIpMask_Type()
)
portBaseDstIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseDstIpMask.setStatus("current")


class _PortBaseProtocol_Type(Integer32):
    """Custom type portBaseProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBaseProtocol_Type.__name__ = "Integer32"
_PortBaseProtocol_Object = MibScalar
portBaseProtocol = _PortBaseProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 15),
    _PortBaseProtocol_Type()
)
portBaseProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseProtocol.setStatus("current")


class _PortBaseProtocolMask_Type(Integer32):
    """Custom type portBaseProtocolMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBaseProtocolMask_Type.__name__ = "Integer32"
_PortBaseProtocolMask_Object = MibScalar
portBaseProtocolMask = _PortBaseProtocolMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 16),
    _PortBaseProtocolMask_Type()
)
portBaseProtocolMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseProtocolMask.setStatus("current")


class _PortBaseTosDscp_Type(Integer32):
    """Custom type portBaseTosDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBaseTosDscp_Type.__name__ = "Integer32"
_PortBaseTosDscp_Object = MibScalar
portBaseTosDscp = _PortBaseTosDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 17),
    _PortBaseTosDscp_Type()
)
portBaseTosDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseTosDscp.setStatus("current")


class _PortBaseTosDscpMask_Type(Integer32):
    """Custom type portBaseTosDscpMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBaseTosDscpMask_Type.__name__ = "Integer32"
_PortBaseTosDscpMask_Object = MibScalar
portBaseTosDscpMask = _PortBaseTosDscpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 18),
    _PortBaseTosDscpMask_Type()
)
portBaseTosDscpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseTosDscpMask.setStatus("current")


class _PortBaseSrcPort_Type(Integer32):
    """Custom type portBaseSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBaseSrcPort_Type.__name__ = "Integer32"
_PortBaseSrcPort_Object = MibScalar
portBaseSrcPort = _PortBaseSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 19),
    _PortBaseSrcPort_Type()
)
portBaseSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseSrcPort.setStatus("current")
_PortBaseSrcPortMask_Type = OctetString
_PortBaseSrcPortMask_Object = MibScalar
portBaseSrcPortMask = _PortBaseSrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 20),
    _PortBaseSrcPortMask_Type()
)
portBaseSrcPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseSrcPortMask.setStatus("current")


class _PortBaseDstPort_Type(Integer32):
    """Custom type portBaseDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBaseDstPort_Type.__name__ = "Integer32"
_PortBaseDstPort_Object = MibScalar
portBaseDstPort = _PortBaseDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 21),
    _PortBaseDstPort_Type()
)
portBaseDstPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseDstPort.setStatus("current")
_PortBaseDstPortMask_Type = OctetString
_PortBaseDstPortMask_Object = MibScalar
portBaseDstPortMask = _PortBaseDstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 22),
    _PortBaseDstPortMask_Type()
)
portBaseDstPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseDstPortMask.setStatus("current")


class _PortBaseAction_Type(Integer32):
    """Custom type portBaseAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_PortBaseAction_Type.__name__ = "Integer32"
_PortBaseAction_Object = MibScalar
portBaseAction = _PortBaseAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 4, 23),
    _PortBaseAction_Type()
)
portBaseAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBaseAction.setStatus("current")
_QosBaseAclCfg_ObjectIdentity = ObjectIdentity
qosBaseAclCfg = _QosBaseAclCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5)
)


class _QosBaseAclId_Type(Integer32):
    """Custom type qosBaseAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6000, 6999),
    )


_QosBaseAclId_Type.__name__ = "Integer32"
_QosBaseAclId_Object = MibScalar
qosBaseAclId = _QosBaseAclId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 1),
    _QosBaseAclId_Type()
)
qosBaseAclId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseAclId.setStatus("current")


class _QosBaseOutPacketPri_Type(Integer32):
    """Custom type qosBaseOutPacketPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_QosBaseOutPacketPri_Type.__name__ = "Integer32"
_QosBaseOutPacketPri_Object = MibScalar
qosBaseOutPacketPri = _QosBaseOutPacketPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 2),
    _QosBaseOutPacketPri_Type()
)
qosBaseOutPacketPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseOutPacketPri.setStatus("current")


class _QosBaseHwTransQueue_Type(Integer32):
    """Custom type qosBaseHwTransQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_QosBaseHwTransQueue_Type.__name__ = "Integer32"
_QosBaseHwTransQueue_Object = MibScalar
qosBaseHwTransQueue = _QosBaseHwTransQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 3),
    _QosBaseHwTransQueue_Type()
)
qosBaseHwTransQueue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseHwTransQueue.setStatus("current")


class _QosBaseRulePri_Type(Integer32):
    """Custom type qosBaseRulePri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_QosBaseRulePri_Type.__name__ = "Integer32"
_QosBaseRulePri_Object = MibScalar
qosBaseRulePri = _QosBaseRulePri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 4),
    _QosBaseRulePri_Type()
)
qosBaseRulePri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseRulePri.setStatus("current")
_QosBaseSrcMac_Type = OctetString
_QosBaseSrcMac_Object = MibScalar
qosBaseSrcMac = _QosBaseSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 5),
    _QosBaseSrcMac_Type()
)
qosBaseSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseSrcMac.setStatus("current")
_QosBaseSrcMacMask_Type = OctetString
_QosBaseSrcMacMask_Object = MibScalar
qosBaseSrcMacMask = _QosBaseSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 6),
    _QosBaseSrcMacMask_Type()
)
qosBaseSrcMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseSrcMacMask.setStatus("current")
_QosBaseDstMac_Type = OctetString
_QosBaseDstMac_Object = MibScalar
qosBaseDstMac = _QosBaseDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 7),
    _QosBaseDstMac_Type()
)
qosBaseDstMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseDstMac.setStatus("current")
_QosBaseDstMacMask_Type = OctetString
_QosBaseDstMacMask_Object = MibScalar
qosBaseDstMacMask = _QosBaseDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 8),
    _QosBaseDstMacMask_Type()
)
qosBaseDstMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseDstMacMask.setStatus("current")


class _QosBaseVlan_Type(Integer32):
    """Custom type qosBaseVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_QosBaseVlan_Type.__name__ = "Integer32"
_QosBaseVlan_Object = MibScalar
qosBaseVlan = _QosBaseVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 9),
    _QosBaseVlan_Type()
)
qosBaseVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseVlan.setStatus("current")


class _QosBaseVlanMask_Type(Integer32):
    """Custom type qosBaseVlanMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_QosBaseVlanMask_Type.__name__ = "Integer32"
_QosBaseVlanMask_Object = MibScalar
qosBaseVlanMask = _QosBaseVlanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 10),
    _QosBaseVlanMask_Type()
)
qosBaseVlanMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseVlanMask.setStatus("current")


class _QosBaseCos_Type(Integer32):
    """Custom type qosBaseCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_QosBaseCos_Type.__name__ = "Integer32"
_QosBaseCos_Object = MibScalar
qosBaseCos = _QosBaseCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 11),
    _QosBaseCos_Type()
)
qosBaseCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseCos.setStatus("current")
_QosEthernetType_Type = OctetString
_QosEthernetType_Object = MibScalar
qosEthernetType = _QosEthernetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 12),
    _QosEthernetType_Type()
)
qosEthernetType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosEthernetType.setStatus("current")
_QosBaseSrcIp_Type = IpAddress
_QosBaseSrcIp_Object = MibScalar
qosBaseSrcIp = _QosBaseSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 13),
    _QosBaseSrcIp_Type()
)
qosBaseSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseSrcIp.setStatus("current")
_QosBaseSrcIpMask_Type = IpAddress
_QosBaseSrcIpMask_Object = MibScalar
qosBaseSrcIpMask = _QosBaseSrcIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 14),
    _QosBaseSrcIpMask_Type()
)
qosBaseSrcIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseSrcIpMask.setStatus("current")
_QosBaseDstIp_Type = IpAddress
_QosBaseDstIp_Object = MibScalar
qosBaseDstIp = _QosBaseDstIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 15),
    _QosBaseDstIp_Type()
)
qosBaseDstIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseDstIp.setStatus("current")
_QosBaseDstIpMask_Type = IpAddress
_QosBaseDstIpMask_Object = MibScalar
qosBaseDstIpMask = _QosBaseDstIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 16),
    _QosBaseDstIpMask_Type()
)
qosBaseDstIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseDstIpMask.setStatus("current")


class _QosBaseProtocol_Type(Integer32):
    """Custom type qosBaseProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_QosBaseProtocol_Type.__name__ = "Integer32"
_QosBaseProtocol_Object = MibScalar
qosBaseProtocol = _QosBaseProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 17),
    _QosBaseProtocol_Type()
)
qosBaseProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseProtocol.setStatus("current")


class _QosBaseProtocolMask_Type(Integer32):
    """Custom type qosBaseProtocolMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_QosBaseProtocolMask_Type.__name__ = "Integer32"
_QosBaseProtocolMask_Object = MibScalar
qosBaseProtocolMask = _QosBaseProtocolMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 18),
    _QosBaseProtocolMask_Type()
)
qosBaseProtocolMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseProtocolMask.setStatus("current")


class _QosBaseTosDscp_Type(Integer32):
    """Custom type qosBaseTosDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_QosBaseTosDscp_Type.__name__ = "Integer32"
_QosBaseTosDscp_Object = MibScalar
qosBaseTosDscp = _QosBaseTosDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 19),
    _QosBaseTosDscp_Type()
)
qosBaseTosDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseTosDscp.setStatus("current")


class _QosBaseTosDscpMask_Type(Integer32):
    """Custom type qosBaseTosDscpMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_QosBaseTosDscpMask_Type.__name__ = "Integer32"
_QosBaseTosDscpMask_Object = MibScalar
qosBaseTosDscpMask = _QosBaseTosDscpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 20),
    _QosBaseTosDscpMask_Type()
)
qosBaseTosDscpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseTosDscpMask.setStatus("current")


class _QosBaseSrcPort_Type(Integer32):
    """Custom type qosBaseSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_QosBaseSrcPort_Type.__name__ = "Integer32"
_QosBaseSrcPort_Object = MibScalar
qosBaseSrcPort = _QosBaseSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 21),
    _QosBaseSrcPort_Type()
)
qosBaseSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseSrcPort.setStatus("current")
_QosBaseSrcPortMask_Type = OctetString
_QosBaseSrcPortMask_Object = MibScalar
qosBaseSrcPortMask = _QosBaseSrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 22),
    _QosBaseSrcPortMask_Type()
)
qosBaseSrcPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseSrcPortMask.setStatus("current")


class _QosBaseDstPort_Type(Integer32):
    """Custom type qosBaseDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_QosBaseDstPort_Type.__name__ = "Integer32"
_QosBaseDstPort_Object = MibScalar
qosBaseDstPort = _QosBaseDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 23),
    _QosBaseDstPort_Type()
)
qosBaseDstPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseDstPort.setStatus("current")
_QosBaseDstPortMask_Type = OctetString
_QosBaseDstPortMask_Object = MibScalar
qosBaseDstPortMask = _QosBaseDstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 24),
    _QosBaseDstPortMask_Type()
)
qosBaseDstPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseDstPortMask.setStatus("current")


class _QosBaseAction_Type(Integer32):
    """Custom type qosBaseAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_QosBaseAction_Type.__name__ = "Integer32"
_QosBaseAction_Object = MibScalar
qosBaseAction = _QosBaseAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 1, 5, 25),
    _QosBaseAction_Type()
)
qosBaseAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosBaseAction.setStatus("current")
_AclTable_ObjectIdentity = ObjectIdentity
aclTable = _AclTable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2)
)
_StdIpFilterTable_Object = MibTable
stdIpFilterTable = _StdIpFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 1)
)
if mibBuilder.loadTexts:
    stdIpFilterTable.setStatus("current")
_StdIpFilterEntry_Object = MibTableRow
stdIpFilterEntry = _StdIpFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 1, 1)
)
stdIpFilterEntry.setIndexNames(
    (0, "V1600D", "stdIpFltId"),
)
if mibBuilder.loadTexts:
    stdIpFilterEntry.setStatus("current")


class _StdIpFltId_Type(Integer32):
    """Custom type stdIpFltId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_StdIpFltId_Type.__name__ = "Integer32"
_StdIpFltId_Object = MibTableColumn
stdIpFltId = _StdIpFltId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 1, 1, 1),
    _StdIpFltId_Type()
)
stdIpFltId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpFltId.setStatus("current")
_StdIpFltSrcIp_Type = IpAddress
_StdIpFltSrcIp_Object = MibTableColumn
stdIpFltSrcIp = _StdIpFltSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 1, 1, 2),
    _StdIpFltSrcIp_Type()
)
stdIpFltSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpFltSrcIp.setStatus("current")
_StdIpFltSrcMask_Type = IpAddress
_StdIpFltSrcMask_Object = MibTableColumn
stdIpFltSrcMask = _StdIpFltSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 1, 1, 3),
    _StdIpFltSrcMask_Type()
)
stdIpFltSrcMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpFltSrcMask.setStatus("current")


class _StdIpFltMode_Type(Integer32):
    """Custom type stdIpFltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_StdIpFltMode_Type.__name__ = "Integer32"
_StdIpFltMode_Object = MibTableColumn
stdIpFltMode = _StdIpFltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 1, 1, 4),
    _StdIpFltMode_Type()
)
stdIpFltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpFltMode.setStatus("current")
_ExtIpFilterTable_Object = MibTable
extIpFilterTable = _ExtIpFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2)
)
if mibBuilder.loadTexts:
    extIpFilterTable.setStatus("current")
_ExtIpFilterEntry_Object = MibTableRow
extIpFilterEntry = _ExtIpFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1)
)
extIpFilterEntry.setIndexNames(
    (0, "V1600D", "extIpFltId"),
)
if mibBuilder.loadTexts:
    extIpFilterEntry.setStatus("current")


class _ExtIpFltId_Type(Integer32):
    """Custom type extIpFltId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 1999),
    )


_ExtIpFltId_Type.__name__ = "Integer32"
_ExtIpFltId_Object = MibTableColumn
extIpFltId = _ExtIpFltId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 1),
    _ExtIpFltId_Type()
)
extIpFltId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltId.setStatus("current")


class _ExtIpFltProtocol_Type(Integer32):
    """Custom type extIpFltProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_ExtIpFltProtocol_Type.__name__ = "Integer32"
_ExtIpFltProtocol_Object = MibTableColumn
extIpFltProtocol = _ExtIpFltProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 2),
    _ExtIpFltProtocol_Type()
)
extIpFltProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltProtocol.setStatus("current")
_ExtIpFltSrcIp_Type = IpAddress
_ExtIpFltSrcIp_Object = MibTableColumn
extIpFltSrcIp = _ExtIpFltSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 3),
    _ExtIpFltSrcIp_Type()
)
extIpFltSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltSrcIp.setStatus("current")
_ExtIpFltSrcMask_Type = IpAddress
_ExtIpFltSrcMask_Object = MibTableColumn
extIpFltSrcMask = _ExtIpFltSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 4),
    _ExtIpFltSrcMask_Type()
)
extIpFltSrcMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltSrcMask.setStatus("current")


class _ExtIpFltSrcPort_Type(Integer32):
    """Custom type extIpFltSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpFltSrcPort_Type.__name__ = "Integer32"
_ExtIpFltSrcPort_Object = MibTableColumn
extIpFltSrcPort = _ExtIpFltSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 5),
    _ExtIpFltSrcPort_Type()
)
extIpFltSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpFltSrcPort.setStatus("current")
_ExtIpFltDstIp_Type = IpAddress
_ExtIpFltDstIp_Object = MibTableColumn
extIpFltDstIp = _ExtIpFltDstIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 6),
    _ExtIpFltDstIp_Type()
)
extIpFltDstIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltDstIp.setStatus("current")
_ExtIpFltDstMask_Type = IpAddress
_ExtIpFltDstMask_Object = MibTableColumn
extIpFltDstMask = _ExtIpFltDstMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 7),
    _ExtIpFltDstMask_Type()
)
extIpFltDstMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltDstMask.setStatus("current")


class _ExtIpFltDstPort_Type(Integer32):
    """Custom type extIpFltDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpFltDstPort_Type.__name__ = "Integer32"
_ExtIpFltDstPort_Object = MibTableColumn
extIpFltDstPort = _ExtIpFltDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 8),
    _ExtIpFltDstPort_Type()
)
extIpFltDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltDstPort.setStatus("current")


class _ExtIpFltDscp_Type(Integer32):
    """Custom type extIpFltDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 63),
    )


_ExtIpFltDscp_Type.__name__ = "Integer32"
_ExtIpFltDscp_Object = MibTableColumn
extIpFltDscp = _ExtIpFltDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 9),
    _ExtIpFltDscp_Type()
)
extIpFltDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltDscp.setStatus("current")


class _ExtIpFltMode_Type(Integer32):
    """Custom type extIpFltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_ExtIpFltMode_Type.__name__ = "Integer32"
_ExtIpFltMode_Object = MibTableColumn
extIpFltMode = _ExtIpFltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 2, 1, 10),
    _ExtIpFltMode_Type()
)
extIpFltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpFltMode.setStatus("current")
_MacFilterTable_Object = MibTable
macFilterTable = _MacFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3)
)
if mibBuilder.loadTexts:
    macFilterTable.setStatus("current")
_MacFilterEntry_Object = MibTableRow
macFilterEntry = _MacFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1)
)
macFilterEntry.setIndexNames(
    (0, "V1600D", "macFltId"),
)
if mibBuilder.loadTexts:
    macFilterEntry.setStatus("current")


class _MacFltId_Type(Integer32):
    """Custom type macFltId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 2999),
    )


_MacFltId_Type.__name__ = "Integer32"
_MacFltId_Object = MibTableColumn
macFltId = _MacFltId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 1),
    _MacFltId_Type()
)
macFltId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltId.setStatus("current")
_MacFltSrcMac_Type = OctetString
_MacFltSrcMac_Object = MibTableColumn
macFltSrcMac = _MacFltSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 2),
    _MacFltSrcMac_Type()
)
macFltSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltSrcMac.setStatus("current")
_MacFltSrcMacMask_Type = OctetString
_MacFltSrcMacMask_Object = MibTableColumn
macFltSrcMacMask = _MacFltSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 3),
    _MacFltSrcMacMask_Type()
)
macFltSrcMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltSrcMacMask.setStatus("current")
_MacFltDstMac_Type = OctetString
_MacFltDstMac_Object = MibTableColumn
macFltDstMac = _MacFltDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 4),
    _MacFltDstMac_Type()
)
macFltDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltDstMac.setStatus("current")
_MacFltDstMacMask_Type = OctetString
_MacFltDstMacMask_Object = MibTableColumn
macFltDstMacMask = _MacFltDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 5),
    _MacFltDstMacMask_Type()
)
macFltDstMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltDstMacMask.setStatus("current")


class _MacFltVlanId_Type(Integer32):
    """Custom type macFltVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MacFltVlanId_Type.__name__ = "Integer32"
_MacFltVlanId_Object = MibTableColumn
macFltVlanId = _MacFltVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 6),
    _MacFltVlanId_Type()
)
macFltVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltVlanId.setStatus("current")


class _MacFltCos_Type(Integer32):
    """Custom type macFltCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_MacFltCos_Type.__name__ = "Integer32"
_MacFltCos_Object = MibTableColumn
macFltCos = _MacFltCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 7),
    _MacFltCos_Type()
)
macFltCos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltCos.setStatus("current")
_MacFltEthType_Type = OctetString
_MacFltEthType_Object = MibTableColumn
macFltEthType = _MacFltEthType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 8),
    _MacFltEthType_Type()
)
macFltEthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFltEthType.setStatus("current")
_MacFltEthTypeMask_Type = OctetString
_MacFltEthTypeMask_Object = MibTableColumn
macFltEthTypeMask = _MacFltEthTypeMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 9),
    _MacFltEthTypeMask_Type()
)
macFltEthTypeMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFltEthTypeMask.setStatus("current")


class _MacFltMode_Type(Integer32):
    """Custom type macFltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_MacFltMode_Type.__name__ = "Integer32"
_MacFltMode_Object = MibTableColumn
macFltMode = _MacFltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 3, 1, 10),
    _MacFltMode_Type()
)
macFltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macFltMode.setStatus("current")
_PortBaseAclTable_Object = MibTable
portBaseAclTable = _PortBaseAclTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4)
)
if mibBuilder.loadTexts:
    portBaseAclTable.setStatus("current")
_PortBaseAclEntry_Object = MibTableRow
portBaseAclEntry = _PortBaseAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1)
)
portBaseAclEntry.setIndexNames(
    (0, "V1600D", "portBaseAclIndex"),
)
if mibBuilder.loadTexts:
    portBaseAclEntry.setStatus("current")


class _PortBaseAclIndex_Type(Integer32):
    """Custom type portBaseAclIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5000, 5999),
    )


_PortBaseAclIndex_Type.__name__ = "Integer32"
_PortBaseAclIndex_Object = MibTableColumn
portBaseAclIndex = _PortBaseAclIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 1),
    _PortBaseAclIndex_Type()
)
portBaseAclIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclIndex.setStatus("current")


class _PortBaseAclFltMode_Type(Integer32):
    """Custom type portBaseAclFltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_PortBaseAclFltMode_Type.__name__ = "Integer32"
_PortBaseAclFltMode_Object = MibTableColumn
portBaseAclFltMode = _PortBaseAclFltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 2),
    _PortBaseAclFltMode_Type()
)
portBaseAclFltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclFltMode.setStatus("current")
_PortBaseAclSrcMac_Type = OctetString
_PortBaseAclSrcMac_Object = MibTableColumn
portBaseAclSrcMac = _PortBaseAclSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 3),
    _PortBaseAclSrcMac_Type()
)
portBaseAclSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclSrcMac.setStatus("current")
_PortBaseAclSrcMacMask_Type = OctetString
_PortBaseAclSrcMacMask_Object = MibTableColumn
portBaseAclSrcMacMask = _PortBaseAclSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 4),
    _PortBaseAclSrcMacMask_Type()
)
portBaseAclSrcMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclSrcMacMask.setStatus("current")
_PortBaseAclDstMac_Type = OctetString
_PortBaseAclDstMac_Object = MibTableColumn
portBaseAclDstMac = _PortBaseAclDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 5),
    _PortBaseAclDstMac_Type()
)
portBaseAclDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclDstMac.setStatus("current")
_PortBaseAclDstMacMask_Type = OctetString
_PortBaseAclDstMacMask_Object = MibTableColumn
portBaseAclDstMacMask = _PortBaseAclDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 6),
    _PortBaseAclDstMacMask_Type()
)
portBaseAclDstMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclDstMacMask.setStatus("current")


class _PortBaseAclVlan_Type(Integer32):
    """Custom type portBaseAclVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_PortBaseAclVlan_Type.__name__ = "Integer32"
_PortBaseAclVlan_Object = MibTableColumn
portBaseAclVlan = _PortBaseAclVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 7),
    _PortBaseAclVlan_Type()
)
portBaseAclVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclVlan.setStatus("current")


class _PortBaseAclVlanMask_Type(Integer32):
    """Custom type portBaseAclVlanMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PortBaseAclVlanMask_Type.__name__ = "Integer32"
_PortBaseAclVlanMask_Object = MibTableColumn
portBaseAclVlanMask = _PortBaseAclVlanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 8),
    _PortBaseAclVlanMask_Type()
)
portBaseAclVlanMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclVlanMask.setStatus("current")


class _PortBaseAclCos_Type(Integer32):
    """Custom type portBaseAclCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_PortBaseAclCos_Type.__name__ = "Integer32"
_PortBaseAclCos_Object = MibTableColumn
portBaseAclCos = _PortBaseAclCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 9),
    _PortBaseAclCos_Type()
)
portBaseAclCos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclCos.setStatus("current")
_PortBaseAclEthernetType_Type = OctetString
_PortBaseAclEthernetType_Object = MibTableColumn
portBaseAclEthernetType = _PortBaseAclEthernetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 10),
    _PortBaseAclEthernetType_Type()
)
portBaseAclEthernetType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclEthernetType.setStatus("current")
_PortBaseAclSrcIp_Type = IpAddress
_PortBaseAclSrcIp_Object = MibTableColumn
portBaseAclSrcIp = _PortBaseAclSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 11),
    _PortBaseAclSrcIp_Type()
)
portBaseAclSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclSrcIp.setStatus("current")
_PortBaseAclSrcIpMask_Type = IpAddress
_PortBaseAclSrcIpMask_Object = MibTableColumn
portBaseAclSrcIpMask = _PortBaseAclSrcIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 12),
    _PortBaseAclSrcIpMask_Type()
)
portBaseAclSrcIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclSrcIpMask.setStatus("current")
_PortBaseAclDstIp_Type = IpAddress
_PortBaseAclDstIp_Object = MibTableColumn
portBaseAclDstIp = _PortBaseAclDstIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 13),
    _PortBaseAclDstIp_Type()
)
portBaseAclDstIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclDstIp.setStatus("current")
_PortBaseAclDstIpMask_Type = IpAddress
_PortBaseAclDstIpMask_Object = MibTableColumn
portBaseAclDstIpMask = _PortBaseAclDstIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 14),
    _PortBaseAclDstIpMask_Type()
)
portBaseAclDstIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclDstIpMask.setStatus("current")


class _PortBaseAclProtocol_Type(Integer32):
    """Custom type portBaseAclProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBaseAclProtocol_Type.__name__ = "Integer32"
_PortBaseAclProtocol_Object = MibTableColumn
portBaseAclProtocol = _PortBaseAclProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 15),
    _PortBaseAclProtocol_Type()
)
portBaseAclProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclProtocol.setStatus("current")


class _PortBaseAclProtocolMask_Type(Integer32):
    """Custom type portBaseAclProtocolMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBaseAclProtocolMask_Type.__name__ = "Integer32"
_PortBaseAclProtocolMask_Object = MibTableColumn
portBaseAclProtocolMask = _PortBaseAclProtocolMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 16),
    _PortBaseAclProtocolMask_Type()
)
portBaseAclProtocolMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclProtocolMask.setStatus("current")


class _PortBaseAclTosDscp_Type(Integer32):
    """Custom type portBaseAclTosDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBaseAclTosDscp_Type.__name__ = "Integer32"
_PortBaseAclTosDscp_Object = MibTableColumn
portBaseAclTosDscp = _PortBaseAclTosDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 17),
    _PortBaseAclTosDscp_Type()
)
portBaseAclTosDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclTosDscp.setStatus("current")


class _PortBaseAclTosDscpMask_Type(Integer32):
    """Custom type portBaseAclTosDscpMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBaseAclTosDscpMask_Type.__name__ = "Integer32"
_PortBaseAclTosDscpMask_Object = MibTableColumn
portBaseAclTosDscpMask = _PortBaseAclTosDscpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 18),
    _PortBaseAclTosDscpMask_Type()
)
portBaseAclTosDscpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclTosDscpMask.setStatus("current")


class _PortBaseAclSrcPort_Type(Integer32):
    """Custom type portBaseAclSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBaseAclSrcPort_Type.__name__ = "Integer32"
_PortBaseAclSrcPort_Object = MibTableColumn
portBaseAclSrcPort = _PortBaseAclSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 19),
    _PortBaseAclSrcPort_Type()
)
portBaseAclSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclSrcPort.setStatus("current")
_PortBaseAclSrcPortMask_Type = OctetString
_PortBaseAclSrcPortMask_Object = MibTableColumn
portBaseAclSrcPortMask = _PortBaseAclSrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 20),
    _PortBaseAclSrcPortMask_Type()
)
portBaseAclSrcPortMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclSrcPortMask.setStatus("current")


class _PortBaseAclDstPort_Type(Integer32):
    """Custom type portBaseAclDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBaseAclDstPort_Type.__name__ = "Integer32"
_PortBaseAclDstPort_Object = MibTableColumn
portBaseAclDstPort = _PortBaseAclDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 21),
    _PortBaseAclDstPort_Type()
)
portBaseAclDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclDstPort.setStatus("current")
_PortBaseAclDstPortMask_Type = OctetString
_PortBaseAclDstPortMask_Object = MibTableColumn
portBaseAclDstPortMask = _PortBaseAclDstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 4, 1, 22),
    _PortBaseAclDstPortMask_Type()
)
portBaseAclDstPortMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBaseAclDstPortMask.setStatus("current")
_QosBaseAclTable_Object = MibTable
qosBaseAclTable = _QosBaseAclTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5)
)
if mibBuilder.loadTexts:
    qosBaseAclTable.setStatus("current")
_QosBaseAclEntry_Object = MibTableRow
qosBaseAclEntry = _QosBaseAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1)
)
qosBaseAclEntry.setIndexNames(
    (0, "V1600D", "qosBaseAclIndex"),
)
if mibBuilder.loadTexts:
    qosBaseAclEntry.setStatus("current")


class _QosBaseAclIndex_Type(Integer32):
    """Custom type qosBaseAclIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6000, 6999),
    )


_QosBaseAclIndex_Type.__name__ = "Integer32"
_QosBaseAclIndex_Object = MibTableColumn
qosBaseAclIndex = _QosBaseAclIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 1),
    _QosBaseAclIndex_Type()
)
qosBaseAclIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclIndex.setStatus("current")


class _QosBaseAclOutPacketPri_Type(Integer32):
    """Custom type qosBaseAclOutPacketPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_QosBaseAclOutPacketPri_Type.__name__ = "Integer32"
_QosBaseAclOutPacketPri_Object = MibTableColumn
qosBaseAclOutPacketPri = _QosBaseAclOutPacketPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 2),
    _QosBaseAclOutPacketPri_Type()
)
qosBaseAclOutPacketPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclOutPacketPri.setStatus("current")


class _QosBaseAclHwTransQueue_Type(Integer32):
    """Custom type qosBaseAclHwTransQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_QosBaseAclHwTransQueue_Type.__name__ = "Integer32"
_QosBaseAclHwTransQueue_Object = MibTableColumn
qosBaseAclHwTransQueue = _QosBaseAclHwTransQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 3),
    _QosBaseAclHwTransQueue_Type()
)
qosBaseAclHwTransQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclHwTransQueue.setStatus("current")


class _QosBaseAclRulePri_Type(Integer32):
    """Custom type qosBaseAclRulePri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_QosBaseAclRulePri_Type.__name__ = "Integer32"
_QosBaseAclRulePri_Object = MibTableColumn
qosBaseAclRulePri = _QosBaseAclRulePri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 4),
    _QosBaseAclRulePri_Type()
)
qosBaseAclRulePri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclRulePri.setStatus("current")
_QosBaseAclSrcMac_Type = OctetString
_QosBaseAclSrcMac_Object = MibTableColumn
qosBaseAclSrcMac = _QosBaseAclSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 5),
    _QosBaseAclSrcMac_Type()
)
qosBaseAclSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclSrcMac.setStatus("current")
_QosBaseAclSrcMacMask_Type = OctetString
_QosBaseAclSrcMacMask_Object = MibTableColumn
qosBaseAclSrcMacMask = _QosBaseAclSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 6),
    _QosBaseAclSrcMacMask_Type()
)
qosBaseAclSrcMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclSrcMacMask.setStatus("current")
_QosBaseAclDstMac_Type = OctetString
_QosBaseAclDstMac_Object = MibTableColumn
qosBaseAclDstMac = _QosBaseAclDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 7),
    _QosBaseAclDstMac_Type()
)
qosBaseAclDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclDstMac.setStatus("current")
_QosBaseAclDstMacMask_Type = OctetString
_QosBaseAclDstMacMask_Object = MibTableColumn
qosBaseAclDstMacMask = _QosBaseAclDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 8),
    _QosBaseAclDstMacMask_Type()
)
qosBaseAclDstMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclDstMacMask.setStatus("current")


class _QosBaseAclVlan_Type(Integer32):
    """Custom type qosBaseAclVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_QosBaseAclVlan_Type.__name__ = "Integer32"
_QosBaseAclVlan_Object = MibTableColumn
qosBaseAclVlan = _QosBaseAclVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 9),
    _QosBaseAclVlan_Type()
)
qosBaseAclVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclVlan.setStatus("current")


class _QosBaseAclVlanMask_Type(Integer32):
    """Custom type qosBaseAclVlanMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_QosBaseAclVlanMask_Type.__name__ = "Integer32"
_QosBaseAclVlanMask_Object = MibTableColumn
qosBaseAclVlanMask = _QosBaseAclVlanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 10),
    _QosBaseAclVlanMask_Type()
)
qosBaseAclVlanMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclVlanMask.setStatus("current")


class _QosBaseAclCos_Type(Integer32):
    """Custom type qosBaseAclCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_QosBaseAclCos_Type.__name__ = "Integer32"
_QosBaseAclCos_Object = MibTableColumn
qosBaseAclCos = _QosBaseAclCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 11),
    _QosBaseAclCos_Type()
)
qosBaseAclCos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclCos.setStatus("current")
_QosBaseAclEthernetType_Type = OctetString
_QosBaseAclEthernetType_Object = MibTableColumn
qosBaseAclEthernetType = _QosBaseAclEthernetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 12),
    _QosBaseAclEthernetType_Type()
)
qosBaseAclEthernetType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclEthernetType.setStatus("current")
_QosBaseAclSrcIp_Type = IpAddress
_QosBaseAclSrcIp_Object = MibTableColumn
qosBaseAclSrcIp = _QosBaseAclSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 13),
    _QosBaseAclSrcIp_Type()
)
qosBaseAclSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclSrcIp.setStatus("current")
_QosBaseAclSrcIpMask_Type = IpAddress
_QosBaseAclSrcIpMask_Object = MibTableColumn
qosBaseAclSrcIpMask = _QosBaseAclSrcIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 14),
    _QosBaseAclSrcIpMask_Type()
)
qosBaseAclSrcIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclSrcIpMask.setStatus("current")
_QosBaseAclDstIp_Type = IpAddress
_QosBaseAclDstIp_Object = MibTableColumn
qosBaseAclDstIp = _QosBaseAclDstIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 15),
    _QosBaseAclDstIp_Type()
)
qosBaseAclDstIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclDstIp.setStatus("current")
_QosBaseAclDstIpMask_Type = IpAddress
_QosBaseAclDstIpMask_Object = MibTableColumn
qosBaseAclDstIpMask = _QosBaseAclDstIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 16),
    _QosBaseAclDstIpMask_Type()
)
qosBaseAclDstIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclDstIpMask.setStatus("current")


class _QosBaseAclProtocol_Type(Integer32):
    """Custom type qosBaseAclProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_QosBaseAclProtocol_Type.__name__ = "Integer32"
_QosBaseAclProtocol_Object = MibTableColumn
qosBaseAclProtocol = _QosBaseAclProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 17),
    _QosBaseAclProtocol_Type()
)
qosBaseAclProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclProtocol.setStatus("current")


class _QosBaseAclProtocolMask_Type(Integer32):
    """Custom type qosBaseAclProtocolMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_QosBaseAclProtocolMask_Type.__name__ = "Integer32"
_QosBaseAclProtocolMask_Object = MibTableColumn
qosBaseAclProtocolMask = _QosBaseAclProtocolMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 18),
    _QosBaseAclProtocolMask_Type()
)
qosBaseAclProtocolMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclProtocolMask.setStatus("current")


class _QosBaseAclTosDscp_Type(Integer32):
    """Custom type qosBaseAclTosDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_QosBaseAclTosDscp_Type.__name__ = "Integer32"
_QosBaseAclTosDscp_Object = MibTableColumn
qosBaseAclTosDscp = _QosBaseAclTosDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 19),
    _QosBaseAclTosDscp_Type()
)
qosBaseAclTosDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclTosDscp.setStatus("current")


class _QosBaseAclTosDscpMask_Type(Integer32):
    """Custom type qosBaseAclTosDscpMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_QosBaseAclTosDscpMask_Type.__name__ = "Integer32"
_QosBaseAclTosDscpMask_Object = MibTableColumn
qosBaseAclTosDscpMask = _QosBaseAclTosDscpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 20),
    _QosBaseAclTosDscpMask_Type()
)
qosBaseAclTosDscpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclTosDscpMask.setStatus("current")


class _QosBaseAclSrcPort_Type(Integer32):
    """Custom type qosBaseAclSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_QosBaseAclSrcPort_Type.__name__ = "Integer32"
_QosBaseAclSrcPort_Object = MibTableColumn
qosBaseAclSrcPort = _QosBaseAclSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 21),
    _QosBaseAclSrcPort_Type()
)
qosBaseAclSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclSrcPort.setStatus("current")
_QosBaseAclSrcPortMask_Type = OctetString
_QosBaseAclSrcPortMask_Object = MibTableColumn
qosBaseAclSrcPortMask = _QosBaseAclSrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 22),
    _QosBaseAclSrcPortMask_Type()
)
qosBaseAclSrcPortMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclSrcPortMask.setStatus("current")


class _QosBaseAclDstPort_Type(Integer32):
    """Custom type qosBaseAclDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_QosBaseAclDstPort_Type.__name__ = "Integer32"
_QosBaseAclDstPort_Object = MibTableColumn
qosBaseAclDstPort = _QosBaseAclDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 23),
    _QosBaseAclDstPort_Type()
)
qosBaseAclDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclDstPort.setStatus("current")
_QosBaseAclDstPortMask_Type = OctetString
_QosBaseAclDstPortMask_Object = MibTableColumn
qosBaseAclDstPortMask = _QosBaseAclDstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 2, 5, 1, 24),
    _QosBaseAclDstPortMask_Type()
)
qosBaseAclDstPortMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosBaseAclDstPortMask.setStatus("current")
_AclEffectTable_Object = MibTable
aclEffectTable = _AclEffectTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 3)
)
if mibBuilder.loadTexts:
    aclEffectTable.setStatus("current")
_AclEffectEntry_Object = MibTableRow
aclEffectEntry = _AclEffectEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 3, 1)
)
aclEffectEntry.setIndexNames(
    (0, "V1600D", "aclIndex"),
)
if mibBuilder.loadTexts:
    aclEffectEntry.setStatus("current")
_AclIndex_Type = Integer32
_AclIndex_Object = MibTableColumn
aclIndex = _AclIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 3, 1, 1),
    _AclIndex_Type()
)
aclIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aclIndex.setStatus("current")
_AclPortList_Type = OctetString
_AclPortList_Object = MibTableColumn
aclPortList = _AclPortList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 3, 1, 2),
    _AclPortList_Type()
)
aclPortList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclPortList.setStatus("current")
_AclPortListEgress_Type = OctetString
_AclPortListEgress_Object = MibTableColumn
aclPortListEgress = _AclPortListEgress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 3, 1, 3),
    _AclPortListEgress_Type()
)
aclPortListEgress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclPortListEgress.setStatus("current")
_Ipv6aclCfg_ObjectIdentity = ObjectIdentity
ipv6aclCfg = _Ipv6aclCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4)
)
_StdIPv6FilterCfg_ObjectIdentity = ObjectIdentity
stdIPv6FilterCfg = _StdIPv6FilterCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 1)
)


class _StdIpv6FilterId_Type(Integer32):
    """Custom type stdIpv6FilterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_StdIpv6FilterId_Type.__name__ = "Integer32"
_StdIpv6FilterId_Object = MibScalar
stdIpv6FilterId = _StdIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 1, 1),
    _StdIpv6FilterId_Type()
)
stdIpv6FilterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpv6FilterId.setStatus("current")
_StdIpv6FilterSrcIpv6_Type = OctetString
_StdIpv6FilterSrcIpv6_Object = MibScalar
stdIpv6FilterSrcIpv6 = _StdIpv6FilterSrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 1, 2),
    _StdIpv6FilterSrcIpv6_Type()
)
stdIpv6FilterSrcIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpv6FilterSrcIpv6.setStatus("current")


class _StdIpv6FilterSrcPrefixlen_Type(Integer32):
    """Custom type stdIpv6FilterSrcPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_StdIpv6FilterSrcPrefixlen_Type.__name__ = "Integer32"
_StdIpv6FilterSrcPrefixlen_Object = MibScalar
stdIpv6FilterSrcPrefixlen = _StdIpv6FilterSrcPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 1, 3),
    _StdIpv6FilterSrcPrefixlen_Type()
)
stdIpv6FilterSrcPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpv6FilterSrcPrefixlen.setStatus("current")


class _StdIpv6FilterMode_Type(Integer32):
    """Custom type stdIpv6FilterMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_StdIpv6FilterMode_Type.__name__ = "Integer32"
_StdIpv6FilterMode_Object = MibScalar
stdIpv6FilterMode = _StdIpv6FilterMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 1, 4),
    _StdIpv6FilterMode_Type()
)
stdIpv6FilterMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpv6FilterMode.setStatus("current")


class _StdIpv6FilterAction_Type(Integer32):
    """Custom type stdIpv6FilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_StdIpv6FilterAction_Type.__name__ = "Integer32"
_StdIpv6FilterAction_Object = MibScalar
stdIpv6FilterAction = _StdIpv6FilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 1, 5),
    _StdIpv6FilterAction_Type()
)
stdIpv6FilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stdIpv6FilterAction.setStatus("current")
_ExtIPv6FilterCfg_ObjectIdentity = ObjectIdentity
extIPv6FilterCfg = _ExtIPv6FilterCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2)
)


class _ExtIpv6FilterId_Type(Integer32):
    """Custom type extIpv6FilterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 1999),
    )


_ExtIpv6FilterId_Type.__name__ = "Integer32"
_ExtIpv6FilterId_Object = MibScalar
extIpv6FilterId = _ExtIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 1),
    _ExtIpv6FilterId_Type()
)
extIpv6FilterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterId.setStatus("current")


class _ExtIpv6FilterProtocol_Type(Integer32):
    """Custom type extIpv6FilterProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_ExtIpv6FilterProtocol_Type.__name__ = "Integer32"
_ExtIpv6FilterProtocol_Object = MibScalar
extIpv6FilterProtocol = _ExtIpv6FilterProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 2),
    _ExtIpv6FilterProtocol_Type()
)
extIpv6FilterProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterProtocol.setStatus("current")
_ExtIpv6FilterSrcIpv6_Type = OctetString
_ExtIpv6FilterSrcIpv6_Object = MibScalar
extIpv6FilterSrcIpv6 = _ExtIpv6FilterSrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 3),
    _ExtIpv6FilterSrcIpv6_Type()
)
extIpv6FilterSrcIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterSrcIpv6.setStatus("current")


class _ExtIpv6FilterSrcPrefixlen_Type(Integer32):
    """Custom type extIpv6FilterSrcPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_ExtIpv6FilterSrcPrefixlen_Type.__name__ = "Integer32"
_ExtIpv6FilterSrcPrefixlen_Object = MibScalar
extIpv6FilterSrcPrefixlen = _ExtIpv6FilterSrcPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 4),
    _ExtIpv6FilterSrcPrefixlen_Type()
)
extIpv6FilterSrcPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterSrcPrefixlen.setStatus("current")


class _ExtIpv6FilterSrcPort_Type(Integer32):
    """Custom type extIpv6FilterSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpv6FilterSrcPort_Type.__name__ = "Integer32"
_ExtIpv6FilterSrcPort_Object = MibScalar
extIpv6FilterSrcPort = _ExtIpv6FilterSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 5),
    _ExtIpv6FilterSrcPort_Type()
)
extIpv6FilterSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterSrcPort.setStatus("current")
_ExtIpv6FilterDstIpv6_Type = OctetString
_ExtIpv6FilterDstIpv6_Object = MibScalar
extIpv6FilterDstIpv6 = _ExtIpv6FilterDstIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 6),
    _ExtIpv6FilterDstIpv6_Type()
)
extIpv6FilterDstIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterDstIpv6.setStatus("current")


class _ExtIpv6FilterDstPrefixlen_Type(Integer32):
    """Custom type extIpv6FilterDstPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_ExtIpv6FilterDstPrefixlen_Type.__name__ = "Integer32"
_ExtIpv6FilterDstPrefixlen_Object = MibScalar
extIpv6FilterDstPrefixlen = _ExtIpv6FilterDstPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 7),
    _ExtIpv6FilterDstPrefixlen_Type()
)
extIpv6FilterDstPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterDstPrefixlen.setStatus("current")


class _ExtIpv6FilterDstPort_Type(Integer32):
    """Custom type extIpv6FilterDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpv6FilterDstPort_Type.__name__ = "Integer32"
_ExtIpv6FilterDstPort_Object = MibScalar
extIpv6FilterDstPort = _ExtIpv6FilterDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 8),
    _ExtIpv6FilterDstPort_Type()
)
extIpv6FilterDstPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterDstPort.setStatus("current")


class _ExtIpv6FilterDscp_Type(Integer32):
    """Custom type extIpv6FilterDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 63),
    )


_ExtIpv6FilterDscp_Type.__name__ = "Integer32"
_ExtIpv6FilterDscp_Object = MibScalar
extIpv6FilterDscp = _ExtIpv6FilterDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 9),
    _ExtIpv6FilterDscp_Type()
)
extIpv6FilterDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterDscp.setStatus("current")


class _ExtIpv6FilterMode_Type(Integer32):
    """Custom type extIpv6FilterMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_ExtIpv6FilterMode_Type.__name__ = "Integer32"
_ExtIpv6FilterMode_Object = MibScalar
extIpv6FilterMode = _ExtIpv6FilterMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 10),
    _ExtIpv6FilterMode_Type()
)
extIpv6FilterMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterMode.setStatus("current")


class _ExtIpv6FilterAction_Type(Integer32):
    """Custom type extIpv6FilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_ExtIpv6FilterAction_Type.__name__ = "Integer32"
_ExtIpv6FilterAction_Object = MibScalar
extIpv6FilterAction = _ExtIpv6FilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 2, 11),
    _ExtIpv6FilterAction_Type()
)
extIpv6FilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FilterAction.setStatus("current")
_PortBasev6AclCfg_ObjectIdentity = ObjectIdentity
portBasev6AclCfg = _PortBasev6AclCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3)
)


class _PortBasev6AclId_Type(Integer32):
    """Custom type portBasev6AclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5000, 5999),
    )


_PortBasev6AclId_Type.__name__ = "Integer32"
_PortBasev6AclId_Object = MibScalar
portBasev6AclId = _PortBasev6AclId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 1),
    _PortBasev6AclId_Type()
)
portBasev6AclId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6AclId.setStatus("current")


class _PortBasev6FltMode_Type(Integer32):
    """Custom type portBasev6FltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_PortBasev6FltMode_Type.__name__ = "Integer32"
_PortBasev6FltMode_Object = MibScalar
portBasev6FltMode = _PortBasev6FltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 2),
    _PortBasev6FltMode_Type()
)
portBasev6FltMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6FltMode.setStatus("current")
_PortBasev6SrcMac_Type = OctetString
_PortBasev6SrcMac_Object = MibScalar
portBasev6SrcMac = _PortBasev6SrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 3),
    _PortBasev6SrcMac_Type()
)
portBasev6SrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6SrcMac.setStatus("current")
_PortBasev6SrcMacMask_Type = OctetString
_PortBasev6SrcMacMask_Object = MibScalar
portBasev6SrcMacMask = _PortBasev6SrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 4),
    _PortBasev6SrcMacMask_Type()
)
portBasev6SrcMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6SrcMacMask.setStatus("current")
_PortBasev6DstMac_Type = OctetString
_PortBasev6DstMac_Object = MibScalar
portBasev6DstMac = _PortBasev6DstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 5),
    _PortBasev6DstMac_Type()
)
portBasev6DstMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6DstMac.setStatus("current")
_PortBasev6DstMacMask_Type = OctetString
_PortBasev6DstMacMask_Object = MibScalar
portBasev6DstMacMask = _PortBasev6DstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 6),
    _PortBasev6DstMacMask_Type()
)
portBasev6DstMacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6DstMacMask.setStatus("current")


class _PortBasev6Vlan_Type(Integer32):
    """Custom type portBasev6Vlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_PortBasev6Vlan_Type.__name__ = "Integer32"
_PortBasev6Vlan_Object = MibScalar
portBasev6Vlan = _PortBasev6Vlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 7),
    _PortBasev6Vlan_Type()
)
portBasev6Vlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6Vlan.setStatus("current")


class _PortBasev6VlanMask_Type(Integer32):
    """Custom type portBasev6VlanMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PortBasev6VlanMask_Type.__name__ = "Integer32"
_PortBasev6VlanMask_Object = MibScalar
portBasev6VlanMask = _PortBasev6VlanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 8),
    _PortBasev6VlanMask_Type()
)
portBasev6VlanMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6VlanMask.setStatus("current")


class _PortBasev6Cos_Type(Integer32):
    """Custom type portBasev6Cos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_PortBasev6Cos_Type.__name__ = "Integer32"
_PortBasev6Cos_Object = MibScalar
portBasev6Cos = _PortBasev6Cos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 9),
    _PortBasev6Cos_Type()
)
portBasev6Cos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6Cos.setStatus("current")
_PortBasev6EthernetType_Type = OctetString
_PortBasev6EthernetType_Object = MibScalar
portBasev6EthernetType = _PortBasev6EthernetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 10),
    _PortBasev6EthernetType_Type()
)
portBasev6EthernetType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6EthernetType.setStatus("current")
_PortBasev6SrcIpv6_Type = OctetString
_PortBasev6SrcIpv6_Object = MibScalar
portBasev6SrcIpv6 = _PortBasev6SrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 11),
    _PortBasev6SrcIpv6_Type()
)
portBasev6SrcIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6SrcIpv6.setStatus("current")


class _PortBasev6SrcPrefixlen_Type(Integer32):
    """Custom type portBasev6SrcPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_PortBasev6SrcPrefixlen_Type.__name__ = "Integer32"
_PortBasev6SrcPrefixlen_Object = MibScalar
portBasev6SrcPrefixlen = _PortBasev6SrcPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 12),
    _PortBasev6SrcPrefixlen_Type()
)
portBasev6SrcPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6SrcPrefixlen.setStatus("current")
_PortBasev6DstIpv6_Type = OctetString
_PortBasev6DstIpv6_Object = MibScalar
portBasev6DstIpv6 = _PortBasev6DstIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 13),
    _PortBasev6DstIpv6_Type()
)
portBasev6DstIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6DstIpv6.setStatus("current")


class _PortBasev6DstPrefixlen_Type(Integer32):
    """Custom type portBasev6DstPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_PortBasev6DstPrefixlen_Type.__name__ = "Integer32"
_PortBasev6DstPrefixlen_Object = MibScalar
portBasev6DstPrefixlen = _PortBasev6DstPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 14),
    _PortBasev6DstPrefixlen_Type()
)
portBasev6DstPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6DstPrefixlen.setStatus("current")


class _PortBasev6Protocol_Type(Integer32):
    """Custom type portBasev6Protocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBasev6Protocol_Type.__name__ = "Integer32"
_PortBasev6Protocol_Object = MibScalar
portBasev6Protocol = _PortBasev6Protocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 15),
    _PortBasev6Protocol_Type()
)
portBasev6Protocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6Protocol.setStatus("current")


class _PortBasev6ProtocolMask_Type(Integer32):
    """Custom type portBasev6ProtocolMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBasev6ProtocolMask_Type.__name__ = "Integer32"
_PortBasev6ProtocolMask_Object = MibScalar
portBasev6ProtocolMask = _PortBasev6ProtocolMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 16),
    _PortBasev6ProtocolMask_Type()
)
portBasev6ProtocolMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6ProtocolMask.setStatus("current")


class _PortBasev6TosDscp_Type(Integer32):
    """Custom type portBasev6TosDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBasev6TosDscp_Type.__name__ = "Integer32"
_PortBasev6TosDscp_Object = MibScalar
portBasev6TosDscp = _PortBasev6TosDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 17),
    _PortBasev6TosDscp_Type()
)
portBasev6TosDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6TosDscp.setStatus("current")


class _PortBasev6TosDscpMask_Type(Integer32):
    """Custom type portBasev6TosDscpMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBasev6TosDscpMask_Type.__name__ = "Integer32"
_PortBasev6TosDscpMask_Object = MibScalar
portBasev6TosDscpMask = _PortBasev6TosDscpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 18),
    _PortBasev6TosDscpMask_Type()
)
portBasev6TosDscpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6TosDscpMask.setStatus("current")


class _PortBasev6SrcPort_Type(Integer32):
    """Custom type portBasev6SrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBasev6SrcPort_Type.__name__ = "Integer32"
_PortBasev6SrcPort_Object = MibScalar
portBasev6SrcPort = _PortBasev6SrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 19),
    _PortBasev6SrcPort_Type()
)
portBasev6SrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6SrcPort.setStatus("current")
_PortBasev6SrcPortMask_Type = OctetString
_PortBasev6SrcPortMask_Object = MibScalar
portBasev6SrcPortMask = _PortBasev6SrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 20),
    _PortBasev6SrcPortMask_Type()
)
portBasev6SrcPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6SrcPortMask.setStatus("current")


class _PortBasev6DstPort_Type(Integer32):
    """Custom type portBasev6DstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBasev6DstPort_Type.__name__ = "Integer32"
_PortBasev6DstPort_Object = MibScalar
portBasev6DstPort = _PortBasev6DstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 21),
    _PortBasev6DstPort_Type()
)
portBasev6DstPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6DstPort.setStatus("current")
_PortBasev6DstPortMask_Type = OctetString
_PortBasev6DstPortMask_Object = MibScalar
portBasev6DstPortMask = _PortBasev6DstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 22),
    _PortBasev6DstPortMask_Type()
)
portBasev6DstPortMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6DstPortMask.setStatus("current")


class _PortBasev6Action_Type(Integer32):
    """Custom type portBasev6Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_PortBasev6Action_Type.__name__ = "Integer32"
_PortBasev6Action_Object = MibScalar
portBasev6Action = _PortBasev6Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 4, 3, 23),
    _PortBasev6Action_Type()
)
portBasev6Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portBasev6Action.setStatus("current")
_Ipv6aclTable_ObjectIdentity = ObjectIdentity
ipv6aclTable = _Ipv6aclTable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5)
)
_StdIpv6FilterTable_Object = MibTable
stdIpv6FilterTable = _StdIpv6FilterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 1)
)
if mibBuilder.loadTexts:
    stdIpv6FilterTable.setStatus("current")
_StdIpv6FilterEntry_Object = MibTableRow
stdIpv6FilterEntry = _StdIpv6FilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 1, 1)
)
stdIpv6FilterEntry.setIndexNames(
    (0, "V1600D", "stdIpv6FltId"),
)
if mibBuilder.loadTexts:
    stdIpv6FilterEntry.setStatus("current")


class _StdIpv6FltId_Type(Integer32):
    """Custom type stdIpv6FltId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_StdIpv6FltId_Type.__name__ = "Integer32"
_StdIpv6FltId_Object = MibTableColumn
stdIpv6FltId = _StdIpv6FltId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 1, 1, 1),
    _StdIpv6FltId_Type()
)
stdIpv6FltId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpv6FltId.setStatus("current")
_StdIpv6FltSrcIpv6_Type = OctetString
_StdIpv6FltSrcIpv6_Object = MibTableColumn
stdIpv6FltSrcIpv6 = _StdIpv6FltSrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 1, 1, 2),
    _StdIpv6FltSrcIpv6_Type()
)
stdIpv6FltSrcIpv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpv6FltSrcIpv6.setStatus("current")


class _StdIpv6FltSrcPrefixlen_Type(Integer32):
    """Custom type stdIpv6FltSrcPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_StdIpv6FltSrcPrefixlen_Type.__name__ = "Integer32"
_StdIpv6FltSrcPrefixlen_Object = MibTableColumn
stdIpv6FltSrcPrefixlen = _StdIpv6FltSrcPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 1, 1, 3),
    _StdIpv6FltSrcPrefixlen_Type()
)
stdIpv6FltSrcPrefixlen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpv6FltSrcPrefixlen.setStatus("current")


class _StdIpv6FltMode_Type(Integer32):
    """Custom type stdIpv6FltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_StdIpv6FltMode_Type.__name__ = "Integer32"
_StdIpv6FltMode_Object = MibTableColumn
stdIpv6FltMode = _StdIpv6FltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 1, 1, 4),
    _StdIpv6FltMode_Type()
)
stdIpv6FltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stdIpv6FltMode.setStatus("current")
_ExtIpv6FilterTable_Object = MibTable
extIpv6FilterTable = _ExtIpv6FilterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2)
)
if mibBuilder.loadTexts:
    extIpv6FilterTable.setStatus("current")
_ExtIpv6FilterEntry_Object = MibTableRow
extIpv6FilterEntry = _ExtIpv6FilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1)
)
extIpv6FilterEntry.setIndexNames(
    (0, "V1600D", "extIpv6FltId"),
)
if mibBuilder.loadTexts:
    extIpv6FilterEntry.setStatus("current")


class _ExtIpv6FltId_Type(Integer32):
    """Custom type extIpv6FltId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 1999),
    )


_ExtIpv6FltId_Type.__name__ = "Integer32"
_ExtIpv6FltId_Object = MibTableColumn
extIpv6FltId = _ExtIpv6FltId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 1),
    _ExtIpv6FltId_Type()
)
extIpv6FltId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltId.setStatus("current")


class _ExtIpv6FltProtocol_Type(Integer32):
    """Custom type extIpv6FltProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_ExtIpv6FltProtocol_Type.__name__ = "Integer32"
_ExtIpv6FltProtocol_Object = MibTableColumn
extIpv6FltProtocol = _ExtIpv6FltProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 2),
    _ExtIpv6FltProtocol_Type()
)
extIpv6FltProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltProtocol.setStatus("current")
_ExtIpv6FltSrcIpv6_Type = OctetString
_ExtIpv6FltSrcIpv6_Object = MibTableColumn
extIpv6FltSrcIpv6 = _ExtIpv6FltSrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 3),
    _ExtIpv6FltSrcIpv6_Type()
)
extIpv6FltSrcIpv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltSrcIpv6.setStatus("current")


class _ExtIpv6FltSrcPrefixlen_Type(Integer32):
    """Custom type extIpv6FltSrcPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_ExtIpv6FltSrcPrefixlen_Type.__name__ = "Integer32"
_ExtIpv6FltSrcPrefixlen_Object = MibTableColumn
extIpv6FltSrcPrefixlen = _ExtIpv6FltSrcPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 4),
    _ExtIpv6FltSrcPrefixlen_Type()
)
extIpv6FltSrcPrefixlen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltSrcPrefixlen.setStatus("current")


class _ExtIpv6FltSrcPort_Type(Integer32):
    """Custom type extIpv6FltSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpv6FltSrcPort_Type.__name__ = "Integer32"
_ExtIpv6FltSrcPort_Object = MibTableColumn
extIpv6FltSrcPort = _ExtIpv6FltSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 5),
    _ExtIpv6FltSrcPort_Type()
)
extIpv6FltSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    extIpv6FltSrcPort.setStatus("current")
_ExtIpv6FltDstIpv6_Type = OctetString
_ExtIpv6FltDstIpv6_Object = MibTableColumn
extIpv6FltDstIpv6 = _ExtIpv6FltDstIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 6),
    _ExtIpv6FltDstIpv6_Type()
)
extIpv6FltDstIpv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltDstIpv6.setStatus("current")


class _ExtIpv6FltDstPrefixlen_Type(Integer32):
    """Custom type extIpv6FltDstPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_ExtIpv6FltDstPrefixlen_Type.__name__ = "Integer32"
_ExtIpv6FltDstPrefixlen_Object = MibTableColumn
extIpv6FltDstPrefixlen = _ExtIpv6FltDstPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 7),
    _ExtIpv6FltDstPrefixlen_Type()
)
extIpv6FltDstPrefixlen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltDstPrefixlen.setStatus("current")


class _ExtIpv6FltDstPort_Type(Integer32):
    """Custom type extIpv6FltDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_ExtIpv6FltDstPort_Type.__name__ = "Integer32"
_ExtIpv6FltDstPort_Object = MibTableColumn
extIpv6FltDstPort = _ExtIpv6FltDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 8),
    _ExtIpv6FltDstPort_Type()
)
extIpv6FltDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltDstPort.setStatus("current")


class _ExtIpv6FltDscp_Type(Integer32):
    """Custom type extIpv6FltDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 63),
    )


_ExtIpv6FltDscp_Type.__name__ = "Integer32"
_ExtIpv6FltDscp_Object = MibTableColumn
extIpv6FltDscp = _ExtIpv6FltDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 9),
    _ExtIpv6FltDscp_Type()
)
extIpv6FltDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltDscp.setStatus("current")


class _ExtIpv6FltMode_Type(Integer32):
    """Custom type extIpv6FltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_ExtIpv6FltMode_Type.__name__ = "Integer32"
_ExtIpv6FltMode_Object = MibTableColumn
extIpv6FltMode = _ExtIpv6FltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 2, 1, 10),
    _ExtIpv6FltMode_Type()
)
extIpv6FltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extIpv6FltMode.setStatus("current")
_PortBasev6AclTable_Object = MibTable
portBasev6AclTable = _PortBasev6AclTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3)
)
if mibBuilder.loadTexts:
    portBasev6AclTable.setStatus("current")
_PortBasev6AclEntry_Object = MibTableRow
portBasev6AclEntry = _PortBasev6AclEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1)
)
portBasev6AclEntry.setIndexNames(
    (0, "V1600D", "portBasev6AclIndex"),
)
if mibBuilder.loadTexts:
    portBasev6AclEntry.setStatus("current")


class _PortBasev6AclIndex_Type(Integer32):
    """Custom type portBasev6AclIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5000, 5999),
    )


_PortBasev6AclIndex_Type.__name__ = "Integer32"
_PortBasev6AclIndex_Object = MibTableColumn
portBasev6AclIndex = _PortBasev6AclIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 1),
    _PortBasev6AclIndex_Type()
)
portBasev6AclIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclIndex.setStatus("current")


class _PortBasev6AclFltMode_Type(Integer32):
    """Custom type portBasev6AclFltMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_PortBasev6AclFltMode_Type.__name__ = "Integer32"
_PortBasev6AclFltMode_Object = MibTableColumn
portBasev6AclFltMode = _PortBasev6AclFltMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 2),
    _PortBasev6AclFltMode_Type()
)
portBasev6AclFltMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclFltMode.setStatus("current")
_PortBasev6AclSrcMac_Type = OctetString
_PortBasev6AclSrcMac_Object = MibTableColumn
portBasev6AclSrcMac = _PortBasev6AclSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 3),
    _PortBasev6AclSrcMac_Type()
)
portBasev6AclSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclSrcMac.setStatus("current")
_PortBasev6AclSrcMacMask_Type = OctetString
_PortBasev6AclSrcMacMask_Object = MibTableColumn
portBasev6AclSrcMacMask = _PortBasev6AclSrcMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 4),
    _PortBasev6AclSrcMacMask_Type()
)
portBasev6AclSrcMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclSrcMacMask.setStatus("current")
_PortBasev6AclDstMac_Type = OctetString
_PortBasev6AclDstMac_Object = MibTableColumn
portBasev6AclDstMac = _PortBasev6AclDstMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 5),
    _PortBasev6AclDstMac_Type()
)
portBasev6AclDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclDstMac.setStatus("current")
_PortBasev6AclDstMacMask_Type = OctetString
_PortBasev6AclDstMacMask_Object = MibTableColumn
portBasev6AclDstMacMask = _PortBasev6AclDstMacMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 6),
    _PortBasev6AclDstMacMask_Type()
)
portBasev6AclDstMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclDstMacMask.setStatus("current")


class _PortBasev6AclVlan_Type(Integer32):
    """Custom type portBasev6AclVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_PortBasev6AclVlan_Type.__name__ = "Integer32"
_PortBasev6AclVlan_Object = MibTableColumn
portBasev6AclVlan = _PortBasev6AclVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 7),
    _PortBasev6AclVlan_Type()
)
portBasev6AclVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclVlan.setStatus("current")


class _PortBasev6AclVlanMask_Type(Integer32):
    """Custom type portBasev6AclVlanMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PortBasev6AclVlanMask_Type.__name__ = "Integer32"
_PortBasev6AclVlanMask_Object = MibTableColumn
portBasev6AclVlanMask = _PortBasev6AclVlanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 8),
    _PortBasev6AclVlanMask_Type()
)
portBasev6AclVlanMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclVlanMask.setStatus("current")


class _PortBasev6AclCos_Type(Integer32):
    """Custom type portBasev6AclCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_PortBasev6AclCos_Type.__name__ = "Integer32"
_PortBasev6AclCos_Object = MibTableColumn
portBasev6AclCos = _PortBasev6AclCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 9),
    _PortBasev6AclCos_Type()
)
portBasev6AclCos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclCos.setStatus("current")
_PortBasev6AclEthernetType_Type = OctetString
_PortBasev6AclEthernetType_Object = MibTableColumn
portBasev6AclEthernetType = _PortBasev6AclEthernetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 10),
    _PortBasev6AclEthernetType_Type()
)
portBasev6AclEthernetType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclEthernetType.setStatus("current")
_PortBasev6AclSrcIpv6_Type = OctetString
_PortBasev6AclSrcIpv6_Object = MibTableColumn
portBasev6AclSrcIpv6 = _PortBasev6AclSrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 11),
    _PortBasev6AclSrcIpv6_Type()
)
portBasev6AclSrcIpv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclSrcIpv6.setStatus("current")


class _PortBasev6AclSrcPrefixlen_Type(Integer32):
    """Custom type portBasev6AclSrcPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_PortBasev6AclSrcPrefixlen_Type.__name__ = "Integer32"
_PortBasev6AclSrcPrefixlen_Object = MibTableColumn
portBasev6AclSrcPrefixlen = _PortBasev6AclSrcPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 12),
    _PortBasev6AclSrcPrefixlen_Type()
)
portBasev6AclSrcPrefixlen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclSrcPrefixlen.setStatus("current")
_PortBasev6AclDstIpv6_Type = OctetString
_PortBasev6AclDstIpv6_Object = MibTableColumn
portBasev6AclDstIpv6 = _PortBasev6AclDstIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 13),
    _PortBasev6AclDstIpv6_Type()
)
portBasev6AclDstIpv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclDstIpv6.setStatus("current")


class _PortBasev6AclDstPrefixlen_Type(Integer32):
    """Custom type portBasev6AclDstPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_PortBasev6AclDstPrefixlen_Type.__name__ = "Integer32"
_PortBasev6AclDstPrefixlen_Object = MibTableColumn
portBasev6AclDstPrefixlen = _PortBasev6AclDstPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 14),
    _PortBasev6AclDstPrefixlen_Type()
)
portBasev6AclDstPrefixlen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclDstPrefixlen.setStatus("current")


class _PortBasev6AclProtocol_Type(Integer32):
    """Custom type portBasev6AclProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBasev6AclProtocol_Type.__name__ = "Integer32"
_PortBasev6AclProtocol_Object = MibTableColumn
portBasev6AclProtocol = _PortBasev6AclProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 15),
    _PortBasev6AclProtocol_Type()
)
portBasev6AclProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclProtocol.setStatus("current")


class _PortBasev6AclProtocolMask_Type(Integer32):
    """Custom type portBasev6AclProtocolMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBasev6AclProtocolMask_Type.__name__ = "Integer32"
_PortBasev6AclProtocolMask_Object = MibTableColumn
portBasev6AclProtocolMask = _PortBasev6AclProtocolMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 16),
    _PortBasev6AclProtocolMask_Type()
)
portBasev6AclProtocolMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclProtocolMask.setStatus("current")


class _PortBasev6AclTosDscp_Type(Integer32):
    """Custom type portBasev6AclTosDscp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_PortBasev6AclTosDscp_Type.__name__ = "Integer32"
_PortBasev6AclTosDscp_Object = MibTableColumn
portBasev6AclTosDscp = _PortBasev6AclTosDscp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 17),
    _PortBasev6AclTosDscp_Type()
)
portBasev6AclTosDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclTosDscp.setStatus("current")


class _PortBasev6AclTosDscpMask_Type(Integer32):
    """Custom type portBasev6AclTosDscpMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PortBasev6AclTosDscpMask_Type.__name__ = "Integer32"
_PortBasev6AclTosDscpMask_Object = MibTableColumn
portBasev6AclTosDscpMask = _PortBasev6AclTosDscpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 18),
    _PortBasev6AclTosDscpMask_Type()
)
portBasev6AclTosDscpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclTosDscpMask.setStatus("current")


class _PortBasev6AclSrcPort_Type(Integer32):
    """Custom type portBasev6AclSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBasev6AclSrcPort_Type.__name__ = "Integer32"
_PortBasev6AclSrcPort_Object = MibTableColumn
portBasev6AclSrcPort = _PortBasev6AclSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 19),
    _PortBasev6AclSrcPort_Type()
)
portBasev6AclSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclSrcPort.setStatus("current")
_PortBasev6AclSrcPortMask_Type = OctetString
_PortBasev6AclSrcPortMask_Object = MibTableColumn
portBasev6AclSrcPortMask = _PortBasev6AclSrcPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 20),
    _PortBasev6AclSrcPortMask_Type()
)
portBasev6AclSrcPortMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclSrcPortMask.setStatus("current")


class _PortBasev6AclDstPort_Type(Integer32):
    """Custom type portBasev6AclDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_PortBasev6AclDstPort_Type.__name__ = "Integer32"
_PortBasev6AclDstPort_Object = MibTableColumn
portBasev6AclDstPort = _PortBasev6AclDstPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 21),
    _PortBasev6AclDstPort_Type()
)
portBasev6AclDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclDstPort.setStatus("current")
_PortBasev6AclDstPortMask_Type = OctetString
_PortBasev6AclDstPortMask_Object = MibTableColumn
portBasev6AclDstPortMask = _PortBasev6AclDstPortMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 5, 3, 1, 22),
    _PortBasev6AclDstPortMask_Type()
)
portBasev6AclDstPortMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBasev6AclDstPortMask.setStatus("current")
_Ipv6aclEffectTable_Object = MibTable
ipv6aclEffectTable = _Ipv6aclEffectTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 6)
)
if mibBuilder.loadTexts:
    ipv6aclEffectTable.setStatus("current")
_Ipv6aclEffectEntry_Object = MibTableRow
ipv6aclEffectEntry = _Ipv6aclEffectEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 6, 1)
)
ipv6aclEffectEntry.setIndexNames(
    (0, "V1600D", "ipv6aclIndex"),
)
if mibBuilder.loadTexts:
    ipv6aclEffectEntry.setStatus("current")
_Ipv6aclIndex_Type = Integer32
_Ipv6aclIndex_Object = MibTableColumn
ipv6aclIndex = _Ipv6aclIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 6, 1, 1),
    _Ipv6aclIndex_Type()
)
ipv6aclIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6aclIndex.setStatus("current")
_Ipv6aclPortList_Type = OctetString
_Ipv6aclPortList_Object = MibTableColumn
ipv6aclPortList = _Ipv6aclPortList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 6, 1, 2),
    _Ipv6aclPortList_Type()
)
ipv6aclPortList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6aclPortList.setStatus("current")
_Ipv6aclPortListEgress_Type = OctetString
_Ipv6aclPortListEgress_Object = MibTableColumn
ipv6aclPortListEgress = _Ipv6aclPortListEgress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 6, 1, 3),
    _Ipv6aclPortListEgress_Type()
)
ipv6aclPortListEgress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6aclPortListEgress.setStatus("current")
_IpSourceGuard_ObjectIdentity = ObjectIdentity
ipSourceGuard = _IpSourceGuard_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 7)
)
_SourceGuardPortindex_Type = Integer32
_SourceGuardPortindex_Object = MibScalar
sourceGuardPortindex = _SourceGuardPortindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 7, 1),
    _SourceGuardPortindex_Type()
)
sourceGuardPortindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sourceGuardPortindex.setStatus("current")


class _IpSourceGuardAction_Type(Integer32):
    """Custom type ipSourceGuardAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ip-addr", 1),
          ("ip-mac-addr", 2),
          ("mac-addr", 3),
          ("disable", 4))
    )


_IpSourceGuardAction_Type.__name__ = "Integer32"
_IpSourceGuardAction_Object = MibScalar
ipSourceGuardAction = _IpSourceGuardAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 7, 2),
    _IpSourceGuardAction_Type()
)
ipSourceGuardAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipSourceGuardAction.setStatus("current")


class _IpSourceGuardVlan_Type(Integer32):
    """Custom type ipSourceGuardVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IpSourceGuardVlan_Type.__name__ = "Integer32"
_IpSourceGuardVlan_Object = MibScalar
ipSourceGuardVlan = _IpSourceGuardVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 7, 3),
    _IpSourceGuardVlan_Type()
)
ipSourceGuardVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipSourceGuardVlan.setStatus("deprecated")
_IpSourceGuardTable_Object = MibTable
ipSourceGuardTable = _IpSourceGuardTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8)
)
if mibBuilder.loadTexts:
    ipSourceGuardTable.setStatus("current")
_IpSourceGuardEntry_Object = MibTableRow
ipSourceGuardEntry = _IpSourceGuardEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1)
)
ipSourceGuardEntry.setIndexNames(
    (0, "V1600D", "ipSourceGuardindex"),
)
if mibBuilder.loadTexts:
    ipSourceGuardEntry.setStatus("current")
_IpSourceGuardindex_Type = Integer32
_IpSourceGuardindex_Object = MibTableColumn
ipSourceGuardindex = _IpSourceGuardindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 1),
    _IpSourceGuardindex_Type()
)
ipSourceGuardindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipSourceGuardindex.setStatus("current")
_IpSourceGuardInterface_Type = OctetString
_IpSourceGuardInterface_Object = MibTableColumn
ipSourceGuardInterface = _IpSourceGuardInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 2),
    _IpSourceGuardInterface_Type()
)
ipSourceGuardInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardInterface.setStatus("current")


class _IpSourceGuardFilterType_Type(Integer32):
    """Custom type ipSourceGuardFilterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("ip-mac", 2),
          ("mac", 3))
    )


_IpSourceGuardFilterType_Type.__name__ = "Integer32"
_IpSourceGuardFilterType_Object = MibTableColumn
ipSourceGuardFilterType = _IpSourceGuardFilterType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 3),
    _IpSourceGuardFilterType_Type()
)
ipSourceGuardFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardFilterType.setStatus("current")


class _IpSourceGuardFilterMode_Type(Integer32):
    """Custom type ipSourceGuardFilterMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("active", 1)
    )


_IpSourceGuardFilterMode_Type.__name__ = "Integer32"
_IpSourceGuardFilterMode_Object = MibTableColumn
ipSourceGuardFilterMode = _IpSourceGuardFilterMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 4),
    _IpSourceGuardFilterMode_Type()
)
ipSourceGuardFilterMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardFilterMode.setStatus("current")
_IpSourceGuardIPAddr_Type = OctetString
_IpSourceGuardIPAddr_Object = MibTableColumn
ipSourceGuardIPAddr = _IpSourceGuardIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 5),
    _IpSourceGuardIPAddr_Type()
)
ipSourceGuardIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardIPAddr.setStatus("current")
_IpSourceGuardMacAddr_Type = OctetString
_IpSourceGuardMacAddr_Object = MibTableColumn
ipSourceGuardMacAddr = _IpSourceGuardMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 6),
    _IpSourceGuardMacAddr_Type()
)
ipSourceGuardMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardMacAddr.setStatus("current")
_IpSourceGuardVlanId_Type = OctetString
_IpSourceGuardVlanId_Object = MibTableColumn
ipSourceGuardVlanId = _IpSourceGuardVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 8, 1, 7),
    _IpSourceGuardVlanId_Type()
)
ipSourceGuardVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardVlanId.setStatus("current")
_IpSourceBind_ObjectIdentity = ObjectIdentity
ipSourceBind = _IpSourceBind_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9)
)
_BindIPAddr_Type = OctetString
_BindIPAddr_Object = MibScalar
bindIPAddr = _BindIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9, 1),
    _BindIPAddr_Type()
)
bindIPAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bindIPAddr.setStatus("current")
_BindIPMask_Type = OctetString
_BindIPMask_Object = MibScalar
bindIPMask = _BindIPMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9, 2),
    _BindIPMask_Type()
)
bindIPMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bindIPMask.setStatus("current")


class _BindMacAddr_Type(OctetString):
    """Custom type bindMacAddr based on OctetString"""
    defaultValue = OctetString("")


_BindMacAddr_Type.__name__ = "OctetString"
_BindMacAddr_Object = MibScalar
bindMacAddr = _BindMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9, 3),
    _BindMacAddr_Type()
)
bindMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bindMacAddr.setStatus("current")


class _BindVlanid_Type(Integer32):
    """Custom type bindVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_BindVlanid_Type.__name__ = "Integer32"
_BindVlanid_Object = MibScalar
bindVlanid = _BindVlanid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9, 4),
    _BindVlanid_Type()
)
bindVlanid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bindVlanid.setStatus("current")
_BindInterfacePortindex_Type = Integer32
_BindInterfacePortindex_Object = MibScalar
bindInterfacePortindex = _BindInterfacePortindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9, 5),
    _BindInterfacePortindex_Type()
)
bindInterfacePortindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bindInterfacePortindex.setStatus("current")


class _BindAction_Type(Integer32):
    """Custom type bindAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_BindAction_Type.__name__ = "Integer32"
_BindAction_Object = MibScalar
bindAction = _BindAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 9, 6),
    _BindAction_Type()
)
bindAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bindAction.setStatus("current")
_IpSourceBindTable_Object = MibTable
ipSourceBindTable = _IpSourceBindTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10)
)
if mibBuilder.loadTexts:
    ipSourceBindTable.setStatus("current")
_IpSourceBindEntry_Object = MibTableRow
ipSourceBindEntry = _IpSourceBindEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1)
)
ipSourceBindEntry.setIndexNames(
    (0, "V1600D", "ipSourceBindindex"),
)
if mibBuilder.loadTexts:
    ipSourceBindEntry.setStatus("current")
_IpSourceBindindex_Type = Integer32
_IpSourceBindindex_Object = MibTableColumn
ipSourceBindindex = _IpSourceBindindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1, 1),
    _IpSourceBindindex_Type()
)
ipSourceBindindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipSourceBindindex.setStatus("current")
_IpSourceBindMacAddress_Type = OctetString
_IpSourceBindMacAddress_Object = MibTableColumn
ipSourceBindMacAddress = _IpSourceBindMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1, 2),
    _IpSourceBindMacAddress_Type()
)
ipSourceBindMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceBindMacAddress.setStatus("current")
_IpSourceBindIPAddress_Type = OctetString
_IpSourceBindIPAddress_Object = MibTableColumn
ipSourceBindIPAddress = _IpSourceBindIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1, 3),
    _IpSourceBindIPAddress_Type()
)
ipSourceBindIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceBindIPAddress.setStatus("current")


class _IpSourceBindtype_Type(Integer32):
    """Custom type ipSourceBindtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_IpSourceBindtype_Type.__name__ = "Integer32"
_IpSourceBindtype_Object = MibTableColumn
ipSourceBindtype = _IpSourceBindtype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1, 4),
    _IpSourceBindtype_Type()
)
ipSourceBindtype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceBindtype.setStatus("current")
_IpSourceBindVlanId_Type = OctetString
_IpSourceBindVlanId_Object = MibTableColumn
ipSourceBindVlanId = _IpSourceBindVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1, 5),
    _IpSourceBindVlanId_Type()
)
ipSourceBindVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceBindVlanId.setStatus("current")
_IpSourceBindInterface_Type = OctetString
_IpSourceBindInterface_Object = MibTableColumn
ipSourceBindInterface = _IpSourceBindInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 10, 10, 1, 6),
    _IpSourceBindInterface_Type()
)
ipSourceBindInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceBindInterface.setStatus("current")
_V1600dStaticRoute_ObjectIdentity = ObjectIdentity
v1600dStaticRoute = _V1600dStaticRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11)
)
_StaticRouteCfg_ObjectIdentity = ObjectIdentity
staticRouteCfg = _StaticRouteCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 1)
)
_StaticRouteIp_Type = IpAddress
_StaticRouteIp_Object = MibScalar
staticRouteIp = _StaticRouteIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 1, 1),
    _StaticRouteIp_Type()
)
staticRouteIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteIp.setStatus("current")
_StaticRouteIpMask_Type = IpAddress
_StaticRouteIpMask_Object = MibScalar
staticRouteIpMask = _StaticRouteIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 1, 2),
    _StaticRouteIpMask_Type()
)
staticRouteIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteIpMask.setStatus("current")
_StaticRouteIpGw_Type = IpAddress
_StaticRouteIpGw_Object = MibScalar
staticRouteIpGw = _StaticRouteIpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 1, 3),
    _StaticRouteIpGw_Type()
)
staticRouteIpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteIpGw.setStatus("current")


class _StaticRouteAction_Type(Integer32):
    """Custom type staticRouteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_StaticRouteAction_Type.__name__ = "Integer32"
_StaticRouteAction_Object = MibScalar
staticRouteAction = _StaticRouteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 1, 4),
    _StaticRouteAction_Type()
)
staticRouteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteAction.setStatus("current")
_StaticRouteTable_Object = MibTable
staticRouteTable = _StaticRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 2)
)
if mibBuilder.loadTexts:
    staticRouteTable.setStatus("current")
_StaticRouteEntry_Object = MibTableRow
staticRouteEntry = _StaticRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 2, 1)
)
staticRouteEntry.setIndexNames(
    (0, "V1600D", "staticRouteItem"),
)
if mibBuilder.loadTexts:
    staticRouteEntry.setStatus("current")


class _StaticRouteItem_Type(Integer32):
    """Custom type staticRouteItem based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_StaticRouteItem_Type.__name__ = "Integer32"
_StaticRouteItem_Object = MibTableColumn
staticRouteItem = _StaticRouteItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 2, 1, 1),
    _StaticRouteItem_Type()
)
staticRouteItem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteItem.setStatus("current")
_StaticRouteIpAddr_Type = IpAddress
_StaticRouteIpAddr_Object = MibTableColumn
staticRouteIpAddr = _StaticRouteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 2, 1, 2),
    _StaticRouteIpAddr_Type()
)
staticRouteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteIpAddr.setStatus("current")
_StaticRouteMask_Type = IpAddress
_StaticRouteMask_Object = MibTableColumn
staticRouteMask = _StaticRouteMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 2, 1, 3),
    _StaticRouteMask_Type()
)
staticRouteMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteMask.setStatus("current")
_StaticRouteGw_Type = IpAddress
_StaticRouteGw_Object = MibTableColumn
staticRouteGw = _StaticRouteGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 2, 1, 4),
    _StaticRouteGw_Type()
)
staticRouteGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticRouteGw.setStatus("current")
_StaticIPv6RouteCfg_ObjectIdentity = ObjectIdentity
staticIPv6RouteCfg = _StaticIPv6RouteCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 3)
)
_Ipv6RouteDestAddr_Type = OctetString
_Ipv6RouteDestAddr_Object = MibScalar
ipv6RouteDestAddr = _Ipv6RouteDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 3, 1),
    _Ipv6RouteDestAddr_Type()
)
ipv6RouteDestAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6RouteDestAddr.setStatus("current")
_Ipv6RouteDestAddrPLen_Type = Integer32
_Ipv6RouteDestAddrPLen_Object = MibScalar
ipv6RouteDestAddrPLen = _Ipv6RouteDestAddrPLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 3, 2),
    _Ipv6RouteDestAddrPLen_Type()
)
ipv6RouteDestAddrPLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6RouteDestAddrPLen.setStatus("current")
_Ipv6RouteGwAddr_Type = OctetString
_Ipv6RouteGwAddr_Object = MibScalar
ipv6RouteGwAddr = _Ipv6RouteGwAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 3, 3),
    _Ipv6RouteGwAddr_Type()
)
ipv6RouteGwAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6RouteGwAddr.setStatus("current")


class _Ipv6RouteAction_Type(Integer32):
    """Custom type ipv6RouteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_Ipv6RouteAction_Type.__name__ = "Integer32"
_Ipv6RouteAction_Object = MibScalar
ipv6RouteAction = _Ipv6RouteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 3, 4),
    _Ipv6RouteAction_Type()
)
ipv6RouteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6RouteAction.setStatus("current")
_StaticIPv6RouteTable_Object = MibTable
staticIPv6RouteTable = _StaticIPv6RouteTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 4)
)
if mibBuilder.loadTexts:
    staticIPv6RouteTable.setStatus("current")
_StaticIPv6RouteEntry_Object = MibTableRow
staticIPv6RouteEntry = _StaticIPv6RouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 4, 1)
)
staticIPv6RouteEntry.setIndexNames(
    (0, "V1600D", "ipv6RouteItem"),
)
if mibBuilder.loadTexts:
    staticIPv6RouteEntry.setStatus("current")
_Ipv6RouteItem_Type = Integer32
_Ipv6RouteItem_Object = MibTableColumn
ipv6RouteItem = _Ipv6RouteItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 4, 1, 1),
    _Ipv6RouteItem_Type()
)
ipv6RouteItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6RouteItem.setStatus("current")
_Ipv6RouteDestin_Type = OctetString
_Ipv6RouteDestin_Object = MibTableColumn
ipv6RouteDestin = _Ipv6RouteDestin_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 4, 1, 2),
    _Ipv6RouteDestin_Type()
)
ipv6RouteDestin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6RouteDestin.setStatus("current")
_Ipv6RouteGw_Type = OctetString
_Ipv6RouteGw_Object = MibTableColumn
ipv6RouteGw = _Ipv6RouteGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 11, 4, 1, 3),
    _Ipv6RouteGw_Type()
)
ipv6RouteGw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6RouteGw.setStatus("current")
_V1600dSysCfg_ObjectIdentity = ObjectIdentity
v1600dSysCfg = _V1600dSysCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12)
)


class _RestartSystem_Type(Integer32):
    """Custom type restartSystem based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_RestartSystem_Type.__name__ = "Integer32"
_RestartSystem_Object = MibScalar
restartSystem = _RestartSystem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 1),
    _RestartSystem_Type()
)
restartSystem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    restartSystem.setStatus("current")
_PingIP_Type = IpAddress
_PingIP_Object = MibScalar
pingIP = _PingIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 2),
    _PingIP_Type()
)
pingIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pingIP.setStatus("current")
_CpuLoad_Type = Integer32
_CpuLoad_Object = MibScalar
cpuLoad = _CpuLoad_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 3),
    _CpuLoad_Type()
)
cpuLoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuLoad.setStatus("current")
_MemoryLoad_Type = Integer32
_MemoryLoad_Object = MibScalar
memoryLoad = _MemoryLoad_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 4),
    _MemoryLoad_Type()
)
memoryLoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryLoad.setStatus("current")
_SystemInfo_ObjectIdentity = ObjectIdentity
systemInfo = _SystemInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5)
)
_SysHostName_Type = OctetString
_SysHostName_Object = MibScalar
sysHostName = _SysHostName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 1),
    _SysHostName_Type()
)
sysHostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysHostName.setStatus("current")
_SysContact_Type = OctetString
_SysContact_Object = MibScalar
sysContact = _SysContact_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 2),
    _SysContact_Type()
)
sysContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysContact.setStatus("current")
_SysLocation_Type = OctetString
_SysLocation_Object = MibScalar
sysLocation = _SysLocation_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 3),
    _SysLocation_Type()
)
sysLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysLocation.setStatus("current")
_SysFirmVersion_Type = OctetString
_SysFirmVersion_Object = MibScalar
sysFirmVersion = _SysFirmVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 4),
    _SysFirmVersion_Type()
)
sysFirmVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysFirmVersion.setStatus("current")
_SysHardVersion_Type = OctetString
_SysHardVersion_Object = MibScalar
sysHardVersion = _SysHardVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 5),
    _SysHardVersion_Type()
)
sysHardVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysHardVersion.setStatus("current")
_MibSup_Type = OctetString
_MibSup_Object = MibScalar
mibSup = _MibSup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 6),
    _MibSup_Type()
)
mibSup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mibSup.setStatus("current")
_SysMac_Type = OctetString
_SysMac_Object = MibScalar
sysMac = _SysMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 7),
    _SysMac_Type()
)
sysMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysMac.setStatus("current")
_SysRunningTime_Type = OctetString
_SysRunningTime_Object = MibScalar
sysRunningTime = _SysRunningTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 8),
    _SysRunningTime_Type()
)
sysRunningTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysRunningTime.setStatus("current")
_SysTemperature_Type = Integer32
_SysTemperature_Object = MibScalar
sysTemperature = _SysTemperature_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 9),
    _SysTemperature_Type()
)
sysTemperature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTemperature.setStatus("current")
_SysTime_Type = OctetString
_SysTime_Object = MibScalar
sysTime = _SysTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 10),
    _SysTime_Type()
)
sysTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTime.setStatus("current")
_SysSerialNumber_Type = OctetString
_SysSerialNumber_Object = MibScalar
sysSerialNumber = _SysSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 11),
    _SysSerialNumber_Type()
)
sysSerialNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysSerialNumber.setStatus("current")
_SysLicenselimit_Type = OctetString
_SysLicenselimit_Object = MibScalar
sysLicenselimit = _SysLicenselimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 12),
    _SysLicenselimit_Type()
)
sysLicenselimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLicenselimit.setStatus("current")
_SysLicenseTime_Type = OctetString
_SysLicenseTime_Object = MibScalar
sysLicenseTime = _SysLicenseTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 13),
    _SysLicenseTime_Type()
)
sysLicenseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLicenseTime.setStatus("current")
_SysSoftwareCreatedTime_Type = OctetString
_SysSoftwareCreatedTime_Object = MibScalar
sysSoftwareCreatedTime = _SysSoftwareCreatedTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 14),
    _SysSoftwareCreatedTime_Type()
)
sysSoftwareCreatedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysSoftwareCreatedTime.setStatus("current")
_SysDeviceModel_Type = OctetString
_SysDeviceModel_Object = MibScalar
sysDeviceModel = _SysDeviceModel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 5, 15),
    _SysDeviceModel_Type()
)
sysDeviceModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysDeviceModel.setStatus("current")
_ArpTable_Object = MibTable
arpTable = _ArpTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 6)
)
if mibBuilder.loadTexts:
    arpTable.setStatus("current")
_ArpEntry_Object = MibTableRow
arpEntry = _ArpEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 6, 1)
)
arpEntry.setIndexNames(
    (0, "V1600D", "arpIndex"),
)
if mibBuilder.loadTexts:
    arpEntry.setStatus("current")
_ArpIndex_Type = Integer32
_ArpIndex_Object = MibTableColumn
arpIndex = _ArpIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 6, 1, 1),
    _ArpIndex_Type()
)
arpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpIndex.setStatus("current")
_ArpmacAddr_Type = OctetString
_ArpmacAddr_Object = MibTableColumn
arpmacAddr = _ArpmacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 6, 1, 2),
    _ArpmacAddr_Type()
)
arpmacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpmacAddr.setStatus("current")
_ArpIPAddr_Type = IpAddress
_ArpIPAddr_Object = MibTableColumn
arpIPAddr = _ArpIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 6, 1, 3),
    _ArpIPAddr_Type()
)
arpIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpIPAddr.setStatus("current")


class _ArpType_Type(Integer32):
    """Custom type arpType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("static", 0),
          ("dynamic", 1))
    )


_ArpType_Type.__name__ = "Integer32"
_ArpType_Object = MibTableColumn
arpType = _ArpType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 6, 1, 4),
    _ArpType_Type()
)
arpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpType.setStatus("current")
_SnmpCfg_ObjectIdentity = ObjectIdentity
snmpCfg = _SnmpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7)
)
_Snmpv1v2Config_ObjectIdentity = ObjectIdentity
snmpv1v2Config = _Snmpv1v2Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 1)
)
_CommunityNameSetting_Type = OctetString
_CommunityNameSetting_Object = MibScalar
communityNameSetting = _CommunityNameSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 1, 1),
    _CommunityNameSetting_Type()
)
communityNameSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communityNameSetting.setStatus("current")


class _AccessRightSetting_Type(Integer32):
    """Custom type accessRightSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("read-only", 1),
          ("read-write", 2))
    )


_AccessRightSetting_Type.__name__ = "Integer32"
_AccessRightSetting_Object = MibScalar
accessRightSetting = _AccessRightSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 1, 2),
    _AccessRightSetting_Type()
)
accessRightSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessRightSetting.setStatus("current")


class _Communitycommit_Type(Integer32):
    """Custom type communitycommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_Communitycommit_Type.__name__ = "Integer32"
_Communitycommit_Object = MibScalar
communitycommit = _Communitycommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 1, 3),
    _Communitycommit_Type()
)
communitycommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communitycommit.setStatus("current")
_CommunityTable_Object = MibTable
communityTable = _CommunityTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 2)
)
if mibBuilder.loadTexts:
    communityTable.setStatus("current")
_CommunityEntry_Object = MibTableRow
communityEntry = _CommunityEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 2, 1)
)
communityEntry.setIndexNames(
    (0, "V1600D", "communityIndex"),
)
if mibBuilder.loadTexts:
    communityEntry.setStatus("current")
_CommunityIndex_Type = Integer32
_CommunityIndex_Object = MibTableColumn
communityIndex = _CommunityIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 2, 1, 1),
    _CommunityIndex_Type()
)
communityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    communityIndex.setStatus("current")
_CommunityName_Type = OctetString
_CommunityName_Object = MibTableColumn
communityName = _CommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 2, 1, 2),
    _CommunityName_Type()
)
communityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    communityName.setStatus("current")


class _AccessRight_Type(Integer32):
    """Custom type accessRight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("read-only", 1),
          ("read-write", 2))
    )


_AccessRight_Type.__name__ = "Integer32"
_AccessRight_Object = MibTableColumn
accessRight = _AccessRight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 2, 1, 3),
    _AccessRight_Type()
)
accessRight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    accessRight.setStatus("current")
_Snmpv1v2TrapConfig_ObjectIdentity = ObjectIdentity
snmpv1v2TrapConfig = _Snmpv1v2TrapConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 3)
)
_TrapHostIpSetting_Type = IpAddress
_TrapHostIpSetting_Object = MibScalar
trapHostIpSetting = _TrapHostIpSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 3, 1),
    _TrapHostIpSetting_Type()
)
trapHostIpSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapHostIpSetting.setStatus("current")


class _TrapUdpPortSetting_Type(Integer32):
    """Custom type trapUdpPortSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TrapUdpPortSetting_Type.__name__ = "Integer32"
_TrapUdpPortSetting_Object = MibScalar
trapUdpPortSetting = _TrapUdpPortSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 3, 2),
    _TrapUdpPortSetting_Type()
)
trapUdpPortSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapUdpPortSetting.setStatus("current")
_TrapCommunityNameSetting_Type = OctetString
_TrapCommunityNameSetting_Object = MibScalar
trapCommunityNameSetting = _TrapCommunityNameSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 3, 3),
    _TrapCommunityNameSetting_Type()
)
trapCommunityNameSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapCommunityNameSetting.setStatus("current")


class _TrapVersionSetting_Type(Integer32):
    """Custom type trapVersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snmp-v1", 1),
          ("snmp-v2c", 2))
    )


_TrapVersionSetting_Type.__name__ = "Integer32"
_TrapVersionSetting_Object = MibScalar
trapVersionSetting = _TrapVersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 3, 4),
    _TrapVersionSetting_Type()
)
trapVersionSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapVersionSetting.setStatus("current")


class _TrapAction_Type(Integer32):
    """Custom type trapAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_TrapAction_Type.__name__ = "Integer32"
_TrapAction_Object = MibScalar
trapAction = _TrapAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 3, 5),
    _TrapAction_Type()
)
trapAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapAction.setStatus("current")
_Snmpv1v2TrapTable_Object = MibTable
snmpv1v2TrapTable = _Snmpv1v2TrapTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4)
)
if mibBuilder.loadTexts:
    snmpv1v2TrapTable.setStatus("current")
_Snmpv1v2TrapEntry_Object = MibTableRow
snmpv1v2TrapEntry = _Snmpv1v2TrapEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4, 1)
)
snmpv1v2TrapEntry.setIndexNames(
    (0, "V1600D", "trapIndex"),
)
if mibBuilder.loadTexts:
    snmpv1v2TrapEntry.setStatus("current")
_TrapIndex_Type = Integer32
_TrapIndex_Object = MibTableColumn
trapIndex = _TrapIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4, 1, 1),
    _TrapIndex_Type()
)
trapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapIndex.setStatus("current")
_TrapHostIp_Type = IpAddress
_TrapHostIp_Object = MibTableColumn
trapHostIp = _TrapHostIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4, 1, 2),
    _TrapHostIp_Type()
)
trapHostIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapHostIp.setStatus("current")


class _TrapUdpPort_Type(Integer32):
    """Custom type trapUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TrapUdpPort_Type.__name__ = "Integer32"
_TrapUdpPort_Object = MibTableColumn
trapUdpPort = _TrapUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4, 1, 3),
    _TrapUdpPort_Type()
)
trapUdpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapUdpPort.setStatus("current")
_TrapCommunityName_Type = OctetString
_TrapCommunityName_Object = MibTableColumn
trapCommunityName = _TrapCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4, 1, 4),
    _TrapCommunityName_Type()
)
trapCommunityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapCommunityName.setStatus("current")


class _TrapVersion_Type(Integer32):
    """Custom type trapVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snmp-v1", 1),
          ("snmp-v2c", 2))
    )


_TrapVersion_Type.__name__ = "Integer32"
_TrapVersion_Object = MibTableColumn
trapVersion = _TrapVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 4, 1, 5),
    _TrapVersion_Type()
)
trapVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapVersion.setStatus("current")
_Snmpv3ViewConfig_ObjectIdentity = ObjectIdentity
snmpv3ViewConfig = _Snmpv3ViewConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 5)
)
_Snmpv3Viewname_Type = OctetString
_Snmpv3Viewname_Object = MibScalar
snmpv3Viewname = _Snmpv3Viewname_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 5, 1),
    _Snmpv3Viewname_Type()
)
snmpv3Viewname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3Viewname.setStatus("current")
_Snmpv3Viewsubtree_Type = OctetString
_Snmpv3Viewsubtree_Object = MibScalar
snmpv3Viewsubtree = _Snmpv3Viewsubtree_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 5, 2),
    _Snmpv3Viewsubtree_Type()
)
snmpv3Viewsubtree.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3Viewsubtree.setStatus("current")


class _Snmpv3Viewtype_Type(Integer32):
    """Custom type snmpv3Viewtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("include", 1),
          ("exclude", 2))
    )


_Snmpv3Viewtype_Type.__name__ = "Integer32"
_Snmpv3Viewtype_Object = MibScalar
snmpv3Viewtype = _Snmpv3Viewtype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 5, 3),
    _Snmpv3Viewtype_Type()
)
snmpv3Viewtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3Viewtype.setStatus("current")


class _Snmpv3ViewAction_Type(Integer32):
    """Custom type snmpv3ViewAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_Snmpv3ViewAction_Type.__name__ = "Integer32"
_Snmpv3ViewAction_Object = MibScalar
snmpv3ViewAction = _Snmpv3ViewAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 5, 4),
    _Snmpv3ViewAction_Type()
)
snmpv3ViewAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3ViewAction.setStatus("current")
_Snmpv3ViewTable_Object = MibTable
snmpv3ViewTable = _Snmpv3ViewTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 6)
)
if mibBuilder.loadTexts:
    snmpv3ViewTable.setStatus("current")
_Snmpv3ViewEntry_Object = MibTableRow
snmpv3ViewEntry = _Snmpv3ViewEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 6, 1)
)
snmpv3ViewEntry.setIndexNames(
    (0, "V1600D", "snmpv3ViewIndex"),
)
if mibBuilder.loadTexts:
    snmpv3ViewEntry.setStatus("current")
_Snmpv3ViewIndex_Type = Integer32
_Snmpv3ViewIndex_Object = MibTableColumn
snmpv3ViewIndex = _Snmpv3ViewIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 6, 1, 1),
    _Snmpv3ViewIndex_Type()
)
snmpv3ViewIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3ViewIndex.setStatus("current")
_Snmpv3ViewName_Type = OctetString
_Snmpv3ViewName_Object = MibTableColumn
snmpv3ViewName = _Snmpv3ViewName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 6, 1, 2),
    _Snmpv3ViewName_Type()
)
snmpv3ViewName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3ViewName.setStatus("current")
_Snmpv3ViewSubtree_Type = OctetString
_Snmpv3ViewSubtree_Object = MibTableColumn
snmpv3ViewSubtree = _Snmpv3ViewSubtree_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 6, 1, 3),
    _Snmpv3ViewSubtree_Type()
)
snmpv3ViewSubtree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3ViewSubtree.setStatus("current")


class _Snmpv3ViewType_Type(Integer32):
    """Custom type snmpv3ViewType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("include", 1),
          ("exclude", 2))
    )


_Snmpv3ViewType_Type.__name__ = "Integer32"
_Snmpv3ViewType_Object = MibTableColumn
snmpv3ViewType = _Snmpv3ViewType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 6, 1, 4),
    _Snmpv3ViewType_Type()
)
snmpv3ViewType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3ViewType.setStatus("current")
_Snmpv3GroupConfig_ObjectIdentity = ObjectIdentity
snmpv3GroupConfig = _Snmpv3GroupConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7)
)
_GroupNameSetting_Type = OctetString
_GroupNameSetting_Object = MibScalar
groupNameSetting = _GroupNameSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7, 1),
    _GroupNameSetting_Type()
)
groupNameSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupNameSetting.setStatus("current")


class _AccessLevelSetting_Type(Integer32):
    """Custom type accessLevelSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("NoAuth", 1),
          ("AuthNoPri", 2),
          ("AuthPri", 3))
    )


_AccessLevelSetting_Type.__name__ = "Integer32"
_AccessLevelSetting_Object = MibScalar
accessLevelSetting = _AccessLevelSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7, 2),
    _AccessLevelSetting_Type()
)
accessLevelSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessLevelSetting.setStatus("current")
_ReadViewSetting_Type = OctetString
_ReadViewSetting_Object = MibScalar
readViewSetting = _ReadViewSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7, 3),
    _ReadViewSetting_Type()
)
readViewSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    readViewSetting.setStatus("current")
_WriteViewSetting_Type = OctetString
_WriteViewSetting_Object = MibScalar
writeViewSetting = _WriteViewSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7, 4),
    _WriteViewSetting_Type()
)
writeViewSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    writeViewSetting.setStatus("current")
_NotifyViewSetting_Type = OctetString
_NotifyViewSetting_Object = MibScalar
notifyViewSetting = _NotifyViewSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7, 5),
    _NotifyViewSetting_Type()
)
notifyViewSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    notifyViewSetting.setStatus("current")


class _GroupCommit_Type(Integer32):
    """Custom type groupCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_GroupCommit_Type.__name__ = "Integer32"
_GroupCommit_Object = MibScalar
groupCommit = _GroupCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 7, 6),
    _GroupCommit_Type()
)
groupCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupCommit.setStatus("current")
_Snmpv3GroupTable_Object = MibTable
snmpv3GroupTable = _Snmpv3GroupTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8)
)
if mibBuilder.loadTexts:
    snmpv3GroupTable.setStatus("current")
_Snmpv3GroupEntry_Object = MibTableRow
snmpv3GroupEntry = _Snmpv3GroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1)
)
snmpv3GroupEntry.setIndexNames(
    (0, "V1600D", "snmpv3GroupIndex"),
)
if mibBuilder.loadTexts:
    snmpv3GroupEntry.setStatus("current")
_Snmpv3GroupIndex_Type = Integer32
_Snmpv3GroupIndex_Object = MibTableColumn
snmpv3GroupIndex = _Snmpv3GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1, 1),
    _Snmpv3GroupIndex_Type()
)
snmpv3GroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3GroupIndex.setStatus("current")
_Snmpv3GroupName_Type = OctetString
_Snmpv3GroupName_Object = MibTableColumn
snmpv3GroupName = _Snmpv3GroupName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1, 2),
    _Snmpv3GroupName_Type()
)
snmpv3GroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3GroupName.setStatus("current")


class _Snmpv3GroupAccessLevel_Type(Integer32):
    """Custom type snmpv3GroupAccessLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("NoAuth", 1),
          ("AuthNoPri", 2),
          ("AuthPri", 3))
    )


_Snmpv3GroupAccessLevel_Type.__name__ = "Integer32"
_Snmpv3GroupAccessLevel_Object = MibTableColumn
snmpv3GroupAccessLevel = _Snmpv3GroupAccessLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1, 3),
    _Snmpv3GroupAccessLevel_Type()
)
snmpv3GroupAccessLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3GroupAccessLevel.setStatus("current")
_Snmpv3GroupReadView_Type = OctetString
_Snmpv3GroupReadView_Object = MibTableColumn
snmpv3GroupReadView = _Snmpv3GroupReadView_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1, 4),
    _Snmpv3GroupReadView_Type()
)
snmpv3GroupReadView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3GroupReadView.setStatus("current")
_Snmpv3GroupWriteView_Type = OctetString
_Snmpv3GroupWriteView_Object = MibTableColumn
snmpv3GroupWriteView = _Snmpv3GroupWriteView_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1, 5),
    _Snmpv3GroupWriteView_Type()
)
snmpv3GroupWriteView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3GroupWriteView.setStatus("current")
_Snmpv3GroupNotifyView_Type = OctetString
_Snmpv3GroupNotifyView_Object = MibTableColumn
snmpv3GroupNotifyView = _Snmpv3GroupNotifyView_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 8, 1, 6),
    _Snmpv3GroupNotifyView_Type()
)
snmpv3GroupNotifyView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3GroupNotifyView.setStatus("current")
_Snmpv3UserConfig_ObjectIdentity = ObjectIdentity
snmpv3UserConfig = _Snmpv3UserConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9)
)
_UserName_Type = OctetString
_UserName_Object = MibScalar
userName = _UserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 1),
    _UserName_Type()
)
userName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userName.setStatus("current")
_GroupName_Type = OctetString
_GroupName_Object = MibScalar
groupName = _GroupName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 2),
    _GroupName_Type()
)
groupName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    groupName.setStatus("current")


class _AuthProtocol_Type(Integer32):
    """Custom type authProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("md5", 2),
          ("sha", 3))
    )


_AuthProtocol_Type.__name__ = "Integer32"
_AuthProtocol_Object = MibScalar
authProtocol = _AuthProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 3),
    _AuthProtocol_Type()
)
authProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authProtocol.setStatus("current")
_AuthPassword_Type = OctetString
_AuthPassword_Object = MibScalar
authPassword = _AuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 4),
    _AuthPassword_Type()
)
authPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authPassword.setStatus("current")


class _PrivateType_Type(Integer32):
    """Custom type privateType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("cbc-des", 2))
    )


_PrivateType_Type.__name__ = "Integer32"
_PrivateType_Object = MibScalar
privateType = _PrivateType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 5),
    _PrivateType_Type()
)
privateType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    privateType.setStatus("current")
_PrivatePassword_Type = OctetString
_PrivatePassword_Object = MibScalar
privatePassword = _PrivatePassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 6),
    _PrivatePassword_Type()
)
privatePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    privatePassword.setStatus("current")


class _Snmpv3UserAction_Type(Integer32):
    """Custom type snmpv3UserAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_Snmpv3UserAction_Type.__name__ = "Integer32"
_Snmpv3UserAction_Object = MibScalar
snmpv3UserAction = _Snmpv3UserAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 9, 7),
    _Snmpv3UserAction_Type()
)
snmpv3UserAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3UserAction.setStatus("current")
_Snmpv3UserTable_Object = MibTable
snmpv3UserTable = _Snmpv3UserTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10)
)
if mibBuilder.loadTexts:
    snmpv3UserTable.setStatus("current")
_Snmpv3UserEntry_Object = MibTableRow
snmpv3UserEntry = _Snmpv3UserEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10, 1)
)
snmpv3UserEntry.setIndexNames(
    (0, "V1600D", "snmpv3UserIndex"),
)
if mibBuilder.loadTexts:
    snmpv3UserEntry.setStatus("current")
_Snmpv3UserIndex_Type = Integer32
_Snmpv3UserIndex_Object = MibTableColumn
snmpv3UserIndex = _Snmpv3UserIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10, 1, 1),
    _Snmpv3UserIndex_Type()
)
snmpv3UserIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3UserIndex.setStatus("current")
_Snmpv3UserName_Type = OctetString
_Snmpv3UserName_Object = MibTableColumn
snmpv3UserName = _Snmpv3UserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10, 1, 2),
    _Snmpv3UserName_Type()
)
snmpv3UserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3UserName.setStatus("current")
_Snmpv3UserGroupName_Type = OctetString
_Snmpv3UserGroupName_Object = MibTableColumn
snmpv3UserGroupName = _Snmpv3UserGroupName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10, 1, 3),
    _Snmpv3UserGroupName_Type()
)
snmpv3UserGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3UserGroupName.setStatus("current")


class _Snmpv3UserAuthType_Type(Integer32):
    """Custom type snmpv3UserAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("md5", 2),
          ("sha", 3))
    )


_Snmpv3UserAuthType_Type.__name__ = "Integer32"
_Snmpv3UserAuthType_Object = MibTableColumn
snmpv3UserAuthType = _Snmpv3UserAuthType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10, 1, 4),
    _Snmpv3UserAuthType_Type()
)
snmpv3UserAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3UserAuthType.setStatus("current")


class _Snmpv3UserPrivateType_Type(Integer32):
    """Custom type snmpv3UserPrivateType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("cbc-des", 2))
    )


_Snmpv3UserPrivateType_Type.__name__ = "Integer32"
_Snmpv3UserPrivateType_Object = MibTableColumn
snmpv3UserPrivateType = _Snmpv3UserPrivateType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 10, 1, 5),
    _Snmpv3UserPrivateType_Type()
)
snmpv3UserPrivateType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3UserPrivateType.setStatus("current")
_Snmpv3TrapConfig_ObjectIdentity = ObjectIdentity
snmpv3TrapConfig = _Snmpv3TrapConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11)
)
_Snmpv3trapHostIPSetting_Type = OctetString
_Snmpv3trapHostIPSetting_Object = MibScalar
snmpv3trapHostIPSetting = _Snmpv3trapHostIPSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 1),
    _Snmpv3trapHostIPSetting_Type()
)
snmpv3trapHostIPSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3trapHostIPSetting.setStatus("current")


class _Snmpv3UDPPortSetting_Type(Integer32):
    """Custom type snmpv3UDPPortSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Snmpv3UDPPortSetting_Type.__name__ = "Integer32"
_Snmpv3UDPPortSetting_Object = MibScalar
snmpv3UDPPortSetting = _Snmpv3UDPPortSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 2),
    _Snmpv3UDPPortSetting_Type()
)
snmpv3UDPPortSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3UDPPortSetting.setStatus("current")
_Snmpv3trapUserName_Type = OctetString
_Snmpv3trapUserName_Object = MibScalar
snmpv3trapUserName = _Snmpv3trapUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 3),
    _Snmpv3trapUserName_Type()
)
snmpv3trapUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3trapUserName.setStatus("current")


class _Snmpv3trapUserLevel_Type(Integer32):
    """Custom type snmpv3trapUserLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("NoAuth", 1),
          ("AuthNoPrivate", 2),
          ("AuthPrivate", 3))
    )


_Snmpv3trapUserLevel_Type.__name__ = "Integer32"
_Snmpv3trapUserLevel_Object = MibScalar
snmpv3trapUserLevel = _Snmpv3trapUserLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 4),
    _Snmpv3trapUserLevel_Type()
)
snmpv3trapUserLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3trapUserLevel.setStatus("current")


class _Snmpv3tagList_Type(Integer32):
    """Custom type snmpv3tagList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trap", 1),
          ("inform", 2))
    )


_Snmpv3tagList_Type.__name__ = "Integer32"
_Snmpv3tagList_Object = MibScalar
snmpv3tagList = _Snmpv3tagList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 5),
    _Snmpv3tagList_Type()
)
snmpv3tagList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3tagList.setStatus("current")
_Snmpv3Timeout_Type = Unsigned32
_Snmpv3Timeout_Object = MibScalar
snmpv3Timeout = _Snmpv3Timeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 6),
    _Snmpv3Timeout_Type()
)
snmpv3Timeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3Timeout.setStatus("current")
_Snmpv3RetryCount_Type = Integer32
_Snmpv3RetryCount_Object = MibScalar
snmpv3RetryCount = _Snmpv3RetryCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 7),
    _Snmpv3RetryCount_Type()
)
snmpv3RetryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3RetryCount.setStatus("current")


class _Snmpv3trapAction_Type(Integer32):
    """Custom type snmpv3trapAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_Snmpv3trapAction_Type.__name__ = "Integer32"
_Snmpv3trapAction_Object = MibScalar
snmpv3trapAction = _Snmpv3trapAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 11, 8),
    _Snmpv3trapAction_Type()
)
snmpv3trapAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpv3trapAction.setStatus("current")
_Snmpv3TrapTable_Object = MibTable
snmpv3TrapTable = _Snmpv3TrapTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12)
)
if mibBuilder.loadTexts:
    snmpv3TrapTable.setStatus("current")
_Snmpv3TrapEntry_Object = MibTableRow
snmpv3TrapEntry = _Snmpv3TrapEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1)
)
snmpv3TrapEntry.setIndexNames(
    (0, "V1600D", "snmpv3TrapIndex"),
)
if mibBuilder.loadTexts:
    snmpv3TrapEntry.setStatus("current")
_Snmpv3TrapIndex_Type = Integer32
_Snmpv3TrapIndex_Object = MibTableColumn
snmpv3TrapIndex = _Snmpv3TrapIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 1),
    _Snmpv3TrapIndex_Type()
)
snmpv3TrapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapIndex.setStatus("current")
_Snmpv3TrapHostIP_Type = OctetString
_Snmpv3TrapHostIP_Object = MibTableColumn
snmpv3TrapHostIP = _Snmpv3TrapHostIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 2),
    _Snmpv3TrapHostIP_Type()
)
snmpv3TrapHostIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapHostIP.setStatus("deprecated")


class _Snmpv3TrapUDPPort_Type(Integer32):
    """Custom type snmpv3TrapUDPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Snmpv3TrapUDPPort_Type.__name__ = "Integer32"
_Snmpv3TrapUDPPort_Object = MibTableColumn
snmpv3TrapUDPPort = _Snmpv3TrapUDPPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 3),
    _Snmpv3TrapUDPPort_Type()
)
snmpv3TrapUDPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapUDPPort.setStatus("current")


class _Snmpv3TrapVersion_Type(Integer32):
    """Custom type snmpv3TrapVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("v1", 1),
          ("v2c", 2),
          ("v3", 3))
    )


_Snmpv3TrapVersion_Type.__name__ = "Integer32"
_Snmpv3TrapVersion_Object = MibTableColumn
snmpv3TrapVersion = _Snmpv3TrapVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 4),
    _Snmpv3TrapVersion_Type()
)
snmpv3TrapVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapVersion.setStatus("current")
_Snmpv3TrapUserName_Type = OctetString
_Snmpv3TrapUserName_Object = MibTableColumn
snmpv3TrapUserName = _Snmpv3TrapUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 5),
    _Snmpv3TrapUserName_Type()
)
snmpv3TrapUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapUserName.setStatus("current")


class _Snmpv3TrapTrapUserLevel_Type(Integer32):
    """Custom type snmpv3TrapTrapUserLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("NoAuth", 1),
          ("AuthNoPrivate", 2),
          ("AuthpPrivate", 3))
    )


_Snmpv3TrapTrapUserLevel_Type.__name__ = "Integer32"
_Snmpv3TrapTrapUserLevel_Object = MibTableColumn
snmpv3TrapTrapUserLevel = _Snmpv3TrapTrapUserLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 6),
    _Snmpv3TrapTrapUserLevel_Type()
)
snmpv3TrapTrapUserLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapTrapUserLevel.setStatus("current")


class _Snmpv3TrapTagList_Type(Integer32):
    """Custom type snmpv3TrapTagList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trap", 1),
          ("inform", 2))
    )


_Snmpv3TrapTagList_Type.__name__ = "Integer32"
_Snmpv3TrapTagList_Object = MibTableColumn
snmpv3TrapTagList = _Snmpv3TrapTagList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 7),
    _Snmpv3TrapTagList_Type()
)
snmpv3TrapTagList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapTagList.setStatus("current")
_Snmpv3TrapTimeout_Type = Unsigned32
_Snmpv3TrapTimeout_Object = MibTableColumn
snmpv3TrapTimeout = _Snmpv3TrapTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 8),
    _Snmpv3TrapTimeout_Type()
)
snmpv3TrapTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapTimeout.setStatus("current")
_Snmpv3TrapRetryCount_Type = Integer32
_Snmpv3TrapRetryCount_Object = MibTableColumn
snmpv3TrapRetryCount = _Snmpv3TrapRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 12, 1, 9),
    _Snmpv3TrapRetryCount_Type()
)
snmpv3TrapRetryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpv3TrapRetryCount.setStatus("current")
_Snmpv1v2TrapIPv6Config_ObjectIdentity = ObjectIdentity
snmpv1v2TrapIPv6Config = _Snmpv1v2TrapIPv6Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 13)
)
_TrapHostIpv6Setting_Type = OctetString
_TrapHostIpv6Setting_Object = MibScalar
trapHostIpv6Setting = _TrapHostIpv6Setting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 13, 1),
    _TrapHostIpv6Setting_Type()
)
trapHostIpv6Setting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapHostIpv6Setting.setStatus("current")


class _TrapIpv6UdpPortSetting_Type(Integer32):
    """Custom type trapIpv6UdpPortSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TrapIpv6UdpPortSetting_Type.__name__ = "Integer32"
_TrapIpv6UdpPortSetting_Object = MibScalar
trapIpv6UdpPortSetting = _TrapIpv6UdpPortSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 13, 2),
    _TrapIpv6UdpPortSetting_Type()
)
trapIpv6UdpPortSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapIpv6UdpPortSetting.setStatus("current")
_TrapIpv6CommunityNameSetting_Type = OctetString
_TrapIpv6CommunityNameSetting_Object = MibScalar
trapIpv6CommunityNameSetting = _TrapIpv6CommunityNameSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 13, 3),
    _TrapIpv6CommunityNameSetting_Type()
)
trapIpv6CommunityNameSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapIpv6CommunityNameSetting.setStatus("current")


class _TrapIpv6VersionSetting_Type(Integer32):
    """Custom type trapIpv6VersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snmp-v1", 1),
          ("snmp-v2c", 2))
    )


_TrapIpv6VersionSetting_Type.__name__ = "Integer32"
_TrapIpv6VersionSetting_Object = MibScalar
trapIpv6VersionSetting = _TrapIpv6VersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 13, 4),
    _TrapIpv6VersionSetting_Type()
)
trapIpv6VersionSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapIpv6VersionSetting.setStatus("current")


class _TrapIpv6Action_Type(Integer32):
    """Custom type trapIpv6Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_TrapIpv6Action_Type.__name__ = "Integer32"
_TrapIpv6Action_Object = MibScalar
trapIpv6Action = _TrapIpv6Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 13, 5),
    _TrapIpv6Action_Type()
)
trapIpv6Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapIpv6Action.setStatus("current")
_Snmpv1v2TrapIPv6Table_Object = MibTable
snmpv1v2TrapIPv6Table = _Snmpv1v2TrapIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14)
)
if mibBuilder.loadTexts:
    snmpv1v2TrapIPv6Table.setStatus("current")
_Snmpv1v2TrapIPv6Entry_Object = MibTableRow
snmpv1v2TrapIPv6Entry = _Snmpv1v2TrapIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14, 1)
)
snmpv1v2TrapIPv6Entry.setIndexNames(
    (0, "V1600D", "trapIPv6Index"),
)
if mibBuilder.loadTexts:
    snmpv1v2TrapIPv6Entry.setStatus("current")
_TrapIPv6Index_Type = Integer32
_TrapIPv6Index_Object = MibTableColumn
trapIPv6Index = _TrapIPv6Index_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14, 1, 1),
    _TrapIPv6Index_Type()
)
trapIPv6Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapIPv6Index.setStatus("current")
_TrapHostIPv6_Type = OctetString
_TrapHostIPv6_Object = MibTableColumn
trapHostIPv6 = _TrapHostIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14, 1, 2),
    _TrapHostIPv6_Type()
)
trapHostIPv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapHostIPv6.setStatus("current")
_TrapIPv6UdpPort_Type = Integer32
_TrapIPv6UdpPort_Object = MibTableColumn
trapIPv6UdpPort = _TrapIPv6UdpPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14, 1, 3),
    _TrapIPv6UdpPort_Type()
)
trapIPv6UdpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapIPv6UdpPort.setStatus("current")
_TrapIPv6CommunityName_Type = OctetString
_TrapIPv6CommunityName_Object = MibTableColumn
trapIPv6CommunityName = _TrapIPv6CommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14, 1, 4),
    _TrapIPv6CommunityName_Type()
)
trapIPv6CommunityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapIPv6CommunityName.setStatus("current")


class _TrapIPv6Version_Type(Integer32):
    """Custom type trapIPv6Version based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snmp-v1", 1),
          ("snmp-v2c", 2))
    )


_TrapIPv6Version_Type.__name__ = "Integer32"
_TrapIPv6Version_Object = MibTableColumn
trapIPv6Version = _TrapIPv6Version_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 7, 14, 1, 5),
    _TrapIPv6Version_Type()
)
trapIPv6Version.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapIPv6Version.setStatus("current")
_ConfigFile_ObjectIdentity = ObjectIdentity
configFile = _ConfigFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8)
)


class _RestoreConfiguration_Type(Integer32):
    """Custom type restoreConfiguration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_RestoreConfiguration_Type.__name__ = "Integer32"
_RestoreConfiguration_Object = MibScalar
restoreConfiguration = _RestoreConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 1),
    _RestoreConfiguration_Type()
)
restoreConfiguration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    restoreConfiguration.setStatus("current")


class _SaveConfiguration_Type(Integer32):
    """Custom type saveConfiguration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_SaveConfiguration_Type.__name__ = "Integer32"
_SaveConfiguration_Object = MibScalar
saveConfiguration = _SaveConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 2),
    _SaveConfiguration_Type()
)
saveConfiguration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    saveConfiguration.setStatus("current")
_UploadDownloadCfgFile_ObjectIdentity = ObjectIdentity
uploadDownloadCfgFile = _UploadDownloadCfgFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 3)
)
_CfgFileName_Type = OctetString
_CfgFileName_Object = MibScalar
cfgFileName = _CfgFileName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 3, 1),
    _CfgFileName_Type()
)
cfgFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfgFileName.setStatus("current")
_TftpServerIPAddr_Type = IpAddress
_TftpServerIPAddr_Object = MibScalar
tftpServerIPAddr = _TftpServerIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 3, 2),
    _TftpServerIPAddr_Type()
)
tftpServerIPAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpServerIPAddr.setStatus("current")


class _CfgFileAction_Type(Integer32):
    """Custom type cfgFileAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("upload", 1),
          ("download", 2))
    )


_CfgFileAction_Type.__name__ = "Integer32"
_CfgFileAction_Object = MibScalar
cfgFileAction = _CfgFileAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 3, 3),
    _CfgFileAction_Type()
)
cfgFileAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfgFileAction.setStatus("current")
_Ipv6UploadDownloadCfgFile_ObjectIdentity = ObjectIdentity
ipv6UploadDownloadCfgFile = _Ipv6UploadDownloadCfgFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 4)
)
_Ipv6CfgFileName_Type = OctetString
_Ipv6CfgFileName_Object = MibScalar
ipv6CfgFileName = _Ipv6CfgFileName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 4, 1),
    _Ipv6CfgFileName_Type()
)
ipv6CfgFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6CfgFileName.setStatus("current")
_TftpServerIPv6Addr_Type = OctetString
_TftpServerIPv6Addr_Object = MibScalar
tftpServerIPv6Addr = _TftpServerIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 4, 2),
    _TftpServerIPv6Addr_Type()
)
tftpServerIPv6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpServerIPv6Addr.setStatus("current")


class _Ipv6CfgFileAction_Type(Integer32):
    """Custom type ipv6CfgFileAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("upload", 1),
          ("download", 2))
    )


_Ipv6CfgFileAction_Type.__name__ = "Integer32"
_Ipv6CfgFileAction_Object = MibScalar
ipv6CfgFileAction = _Ipv6CfgFileAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 4, 3),
    _Ipv6CfgFileAction_Type()
)
ipv6CfgFileAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6CfgFileAction.setStatus("current")
_AutoSaveConfiguration_ObjectIdentity = ObjectIdentity
autoSaveConfiguration = _AutoSaveConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5)
)


class _AutoSaveType_Type(Integer32):
    """Custom type autoSaveType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("timeout", 0),
          ("fix_time", 1),
          ("week_day", 2))
    )


_AutoSaveType_Type.__name__ = "Integer32"
_AutoSaveType_Object = MibScalar
autoSaveType = _AutoSaveType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 1),
    _AutoSaveType_Type()
)
autoSaveType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveType.setStatus("current")


class _AutoSaveTimeoutValue_Type(Unsigned32):
    """Custom type autoSaveTimeoutValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 2678400),
    )


_AutoSaveTimeoutValue_Type.__name__ = "Unsigned32"
_AutoSaveTimeoutValue_Object = MibScalar
autoSaveTimeoutValue = _AutoSaveTimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 2),
    _AutoSaveTimeoutValue_Type()
)
autoSaveTimeoutValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveTimeoutValue.setStatus("current")


class _AutoSaveFixTimeDay_Type(Integer32):
    """Custom type autoSaveFixTimeDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_AutoSaveFixTimeDay_Type.__name__ = "Integer32"
_AutoSaveFixTimeDay_Object = MibScalar
autoSaveFixTimeDay = _AutoSaveFixTimeDay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 3),
    _AutoSaveFixTimeDay_Type()
)
autoSaveFixTimeDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveFixTimeDay.setStatus("current")


class _AutoSaveFixTimeHour_Type(Integer32):
    """Custom type autoSaveFixTimeHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoSaveFixTimeHour_Type.__name__ = "Integer32"
_AutoSaveFixTimeHour_Object = MibScalar
autoSaveFixTimeHour = _AutoSaveFixTimeHour_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 4),
    _AutoSaveFixTimeHour_Type()
)
autoSaveFixTimeHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveFixTimeHour.setStatus("current")


class _AutoSaveFixTimeMinute_Type(Integer32):
    """Custom type autoSaveFixTimeMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoSaveFixTimeMinute_Type.__name__ = "Integer32"
_AutoSaveFixTimeMinute_Object = MibScalar
autoSaveFixTimeMinute = _AutoSaveFixTimeMinute_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 5),
    _AutoSaveFixTimeMinute_Type()
)
autoSaveFixTimeMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveFixTimeMinute.setStatus("current")


class _AutoSaveWeekMon_Type(Integer32):
    """Custom type autoSaveWeekMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekMon_Type.__name__ = "Integer32"
_AutoSaveWeekMon_Object = MibScalar
autoSaveWeekMon = _AutoSaveWeekMon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 6),
    _AutoSaveWeekMon_Type()
)
autoSaveWeekMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekMon.setStatus("current")


class _AutoSaveWeekTues_Type(Integer32):
    """Custom type autoSaveWeekTues based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekTues_Type.__name__ = "Integer32"
_AutoSaveWeekTues_Object = MibScalar
autoSaveWeekTues = _AutoSaveWeekTues_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 7),
    _AutoSaveWeekTues_Type()
)
autoSaveWeekTues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekTues.setStatus("current")


class _AutoSaveWeekWed_Type(Integer32):
    """Custom type autoSaveWeekWed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekWed_Type.__name__ = "Integer32"
_AutoSaveWeekWed_Object = MibScalar
autoSaveWeekWed = _AutoSaveWeekWed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 8),
    _AutoSaveWeekWed_Type()
)
autoSaveWeekWed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekWed.setStatus("current")


class _AutoSaveWeekThur_Type(Integer32):
    """Custom type autoSaveWeekThur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekThur_Type.__name__ = "Integer32"
_AutoSaveWeekThur_Object = MibScalar
autoSaveWeekThur = _AutoSaveWeekThur_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 9),
    _AutoSaveWeekThur_Type()
)
autoSaveWeekThur.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekThur.setStatus("current")


class _AutoSaveWeekFri_Type(Integer32):
    """Custom type autoSaveWeekFri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekFri_Type.__name__ = "Integer32"
_AutoSaveWeekFri_Object = MibScalar
autoSaveWeekFri = _AutoSaveWeekFri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 10),
    _AutoSaveWeekFri_Type()
)
autoSaveWeekFri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekFri.setStatus("current")


class _AutoSaveWeekSat_Type(Integer32):
    """Custom type autoSaveWeekSat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekSat_Type.__name__ = "Integer32"
_AutoSaveWeekSat_Object = MibScalar
autoSaveWeekSat = _AutoSaveWeekSat_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 11),
    _AutoSaveWeekSat_Type()
)
autoSaveWeekSat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekSat.setStatus("current")


class _AutoSaveWeekSun_Type(Integer32):
    """Custom type autoSaveWeekSun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekSun_Type.__name__ = "Integer32"
_AutoSaveWeekSun_Object = MibScalar
autoSaveWeekSun = _AutoSaveWeekSun_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 12),
    _AutoSaveWeekSun_Type()
)
autoSaveWeekSun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekSun.setStatus("current")


class _AutoSaveWeekHour_Type(Integer32):
    """Custom type autoSaveWeekHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoSaveWeekHour_Type.__name__ = "Integer32"
_AutoSaveWeekHour_Object = MibScalar
autoSaveWeekHour = _AutoSaveWeekHour_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 13),
    _AutoSaveWeekHour_Type()
)
autoSaveWeekHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekHour.setStatus("current")


class _AutoSaveWeekMinute_Type(Integer32):
    """Custom type autoSaveWeekMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoSaveWeekMinute_Type.__name__ = "Integer32"
_AutoSaveWeekMinute_Object = MibScalar
autoSaveWeekMinute = _AutoSaveWeekMinute_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 14),
    _AutoSaveWeekMinute_Type()
)
autoSaveWeekMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekMinute.setStatus("current")


class _AutoSaveAction_Type(Integer32):
    """Custom type autoSaveAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveAction_Type.__name__ = "Integer32"
_AutoSaveAction_Object = MibScalar
autoSaveAction = _AutoSaveAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 5, 15),
    _AutoSaveAction_Type()
)
autoSaveAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveAction.setStatus("current")
_AutoSaveConfigTable_Object = MibTable
autoSaveConfigTable = _AutoSaveConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6)
)
if mibBuilder.loadTexts:
    autoSaveConfigTable.setStatus("current")
_AutoSaveConfigEntry_Object = MibTableRow
autoSaveConfigEntry = _AutoSaveConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1)
)
autoSaveConfigEntry.setIndexNames(
    (0, "V1600D", "autoSaveEnable"),
)
if mibBuilder.loadTexts:
    autoSaveConfigEntry.setStatus("current")


class _AutoSaveEnable_Type(Integer32):
    """Custom type autoSaveEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveEnable_Type.__name__ = "Integer32"
_AutoSaveEnable_Object = MibTableColumn
autoSaveEnable = _AutoSaveEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 1),
    _AutoSaveEnable_Type()
)
autoSaveEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveEnable.setStatus("current")


class _AutoSaveTypeS_Type(Integer32):
    """Custom type autoSaveTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("timeout", 0),
          ("fix_time", 1),
          ("week_day", 2))
    )


_AutoSaveTypeS_Type.__name__ = "Integer32"
_AutoSaveTypeS_Object = MibTableColumn
autoSaveTypeS = _AutoSaveTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 2),
    _AutoSaveTypeS_Type()
)
autoSaveTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveTypeS.setStatus("current")


class _AutoSaveTimeoutValueS_Type(Unsigned32):
    """Custom type autoSaveTimeoutValueS based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 2678400),
    )


_AutoSaveTimeoutValueS_Type.__name__ = "Unsigned32"
_AutoSaveTimeoutValueS_Object = MibTableColumn
autoSaveTimeoutValueS = _AutoSaveTimeoutValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 3),
    _AutoSaveTimeoutValueS_Type()
)
autoSaveTimeoutValueS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveTimeoutValueS.setStatus("current")


class _AutoSaveFixTimeDayS_Type(Integer32):
    """Custom type autoSaveFixTimeDayS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_AutoSaveFixTimeDayS_Type.__name__ = "Integer32"
_AutoSaveFixTimeDayS_Object = MibTableColumn
autoSaveFixTimeDayS = _AutoSaveFixTimeDayS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 4),
    _AutoSaveFixTimeDayS_Type()
)
autoSaveFixTimeDayS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveFixTimeDayS.setStatus("current")


class _AutoSaveFixTimeHourS_Type(Integer32):
    """Custom type autoSaveFixTimeHourS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoSaveFixTimeHourS_Type.__name__ = "Integer32"
_AutoSaveFixTimeHourS_Object = MibTableColumn
autoSaveFixTimeHourS = _AutoSaveFixTimeHourS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 5),
    _AutoSaveFixTimeHourS_Type()
)
autoSaveFixTimeHourS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveFixTimeHourS.setStatus("current")


class _AutoSaveFixTimeMinuteS_Type(Integer32):
    """Custom type autoSaveFixTimeMinuteS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoSaveFixTimeMinuteS_Type.__name__ = "Integer32"
_AutoSaveFixTimeMinuteS_Object = MibTableColumn
autoSaveFixTimeMinuteS = _AutoSaveFixTimeMinuteS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 6),
    _AutoSaveFixTimeMinuteS_Type()
)
autoSaveFixTimeMinuteS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveFixTimeMinuteS.setStatus("current")


class _AutoSaveWeekMonS_Type(Integer32):
    """Custom type autoSaveWeekMonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekMonS_Type.__name__ = "Integer32"
_AutoSaveWeekMonS_Object = MibTableColumn
autoSaveWeekMonS = _AutoSaveWeekMonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 7),
    _AutoSaveWeekMonS_Type()
)
autoSaveWeekMonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekMonS.setStatus("current")


class _AutoSaveWeekTuesS_Type(Integer32):
    """Custom type autoSaveWeekTuesS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekTuesS_Type.__name__ = "Integer32"
_AutoSaveWeekTuesS_Object = MibTableColumn
autoSaveWeekTuesS = _AutoSaveWeekTuesS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 8),
    _AutoSaveWeekTuesS_Type()
)
autoSaveWeekTuesS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekTuesS.setStatus("current")


class _AutoSaveWeekWedS_Type(Integer32):
    """Custom type autoSaveWeekWedS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekWedS_Type.__name__ = "Integer32"
_AutoSaveWeekWedS_Object = MibTableColumn
autoSaveWeekWedS = _AutoSaveWeekWedS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 9),
    _AutoSaveWeekWedS_Type()
)
autoSaveWeekWedS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekWedS.setStatus("current")


class _AutoSaveWeekThurS_Type(Integer32):
    """Custom type autoSaveWeekThurS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekThurS_Type.__name__ = "Integer32"
_AutoSaveWeekThurS_Object = MibTableColumn
autoSaveWeekThurS = _AutoSaveWeekThurS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 10),
    _AutoSaveWeekThurS_Type()
)
autoSaveWeekThurS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekThurS.setStatus("current")


class _AutoSaveWeekFriS_Type(Integer32):
    """Custom type autoSaveWeekFriS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekFriS_Type.__name__ = "Integer32"
_AutoSaveWeekFriS_Object = MibTableColumn
autoSaveWeekFriS = _AutoSaveWeekFriS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 11),
    _AutoSaveWeekFriS_Type()
)
autoSaveWeekFriS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekFriS.setStatus("current")


class _AutoSaveWeekSatS_Type(Integer32):
    """Custom type autoSaveWeekSatS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekSatS_Type.__name__ = "Integer32"
_AutoSaveWeekSatS_Object = MibTableColumn
autoSaveWeekSatS = _AutoSaveWeekSatS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 12),
    _AutoSaveWeekSatS_Type()
)
autoSaveWeekSatS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekSatS.setStatus("current")


class _AutoSaveWeekSunS_Type(Integer32):
    """Custom type autoSaveWeekSunS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoSaveWeekSunS_Type.__name__ = "Integer32"
_AutoSaveWeekSunS_Object = MibTableColumn
autoSaveWeekSunS = _AutoSaveWeekSunS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 13),
    _AutoSaveWeekSunS_Type()
)
autoSaveWeekSunS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekSunS.setStatus("current")


class _AutoSaveWeekHourS_Type(Integer32):
    """Custom type autoSaveWeekHourS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoSaveWeekHourS_Type.__name__ = "Integer32"
_AutoSaveWeekHourS_Object = MibTableColumn
autoSaveWeekHourS = _AutoSaveWeekHourS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 14),
    _AutoSaveWeekHourS_Type()
)
autoSaveWeekHourS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekHourS.setStatus("current")


class _AutoSaveWeekMinuteS_Type(Integer32):
    """Custom type autoSaveWeekMinuteS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoSaveWeekMinuteS_Type.__name__ = "Integer32"
_AutoSaveWeekMinuteS_Object = MibTableColumn
autoSaveWeekMinuteS = _AutoSaveWeekMinuteS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 6, 1, 15),
    _AutoSaveWeekMinuteS_Type()
)
autoSaveWeekMinuteS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSaveWeekMinuteS.setStatus("current")
_AutoBackupConfiguration_ObjectIdentity = ObjectIdentity
autoBackupConfiguration = _AutoBackupConfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7)
)


class _AutoBackupType_Type(Integer32):
    """Custom type autoBackupType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("timeout", 0),
          ("fix_time", 1),
          ("week_day", 2))
    )


_AutoBackupType_Type.__name__ = "Integer32"
_AutoBackupType_Object = MibScalar
autoBackupType = _AutoBackupType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 1),
    _AutoBackupType_Type()
)
autoBackupType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupType.setStatus("current")


class _AutoBackupTimeoutValue_Type(Unsigned32):
    """Custom type autoBackupTimeoutValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 2678400),
    )


_AutoBackupTimeoutValue_Type.__name__ = "Unsigned32"
_AutoBackupTimeoutValue_Object = MibScalar
autoBackupTimeoutValue = _AutoBackupTimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 2),
    _AutoBackupTimeoutValue_Type()
)
autoBackupTimeoutValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupTimeoutValue.setStatus("current")


class _AutoBackupFixTimeDay_Type(Integer32):
    """Custom type autoBackupFixTimeDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_AutoBackupFixTimeDay_Type.__name__ = "Integer32"
_AutoBackupFixTimeDay_Object = MibScalar
autoBackupFixTimeDay = _AutoBackupFixTimeDay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 3),
    _AutoBackupFixTimeDay_Type()
)
autoBackupFixTimeDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupFixTimeDay.setStatus("current")


class _AutoBackupFixTimeHour_Type(Integer32):
    """Custom type autoBackupFixTimeHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoBackupFixTimeHour_Type.__name__ = "Integer32"
_AutoBackupFixTimeHour_Object = MibScalar
autoBackupFixTimeHour = _AutoBackupFixTimeHour_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 4),
    _AutoBackupFixTimeHour_Type()
)
autoBackupFixTimeHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupFixTimeHour.setStatus("current")


class _AutoBackupFixTimeMinute_Type(Integer32):
    """Custom type autoBackupFixTimeMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoBackupFixTimeMinute_Type.__name__ = "Integer32"
_AutoBackupFixTimeMinute_Object = MibScalar
autoBackupFixTimeMinute = _AutoBackupFixTimeMinute_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 5),
    _AutoBackupFixTimeMinute_Type()
)
autoBackupFixTimeMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupFixTimeMinute.setStatus("current")


class _AutoBackupWeekMon_Type(Integer32):
    """Custom type autoBackupWeekMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekMon_Type.__name__ = "Integer32"
_AutoBackupWeekMon_Object = MibScalar
autoBackupWeekMon = _AutoBackupWeekMon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 6),
    _AutoBackupWeekMon_Type()
)
autoBackupWeekMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekMon.setStatus("current")


class _AutoBackupWeekTues_Type(Integer32):
    """Custom type autoBackupWeekTues based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekTues_Type.__name__ = "Integer32"
_AutoBackupWeekTues_Object = MibScalar
autoBackupWeekTues = _AutoBackupWeekTues_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 7),
    _AutoBackupWeekTues_Type()
)
autoBackupWeekTues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekTues.setStatus("current")


class _AutoBackupWeekWed_Type(Integer32):
    """Custom type autoBackupWeekWed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekWed_Type.__name__ = "Integer32"
_AutoBackupWeekWed_Object = MibScalar
autoBackupWeekWed = _AutoBackupWeekWed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 8),
    _AutoBackupWeekWed_Type()
)
autoBackupWeekWed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekWed.setStatus("current")


class _AutoBackupWeekThur_Type(Integer32):
    """Custom type autoBackupWeekThur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekThur_Type.__name__ = "Integer32"
_AutoBackupWeekThur_Object = MibScalar
autoBackupWeekThur = _AutoBackupWeekThur_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 9),
    _AutoBackupWeekThur_Type()
)
autoBackupWeekThur.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekThur.setStatus("current")


class _AutoBackupWeekFri_Type(Integer32):
    """Custom type autoBackupWeekFri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekFri_Type.__name__ = "Integer32"
_AutoBackupWeekFri_Object = MibScalar
autoBackupWeekFri = _AutoBackupWeekFri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 10),
    _AutoBackupWeekFri_Type()
)
autoBackupWeekFri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekFri.setStatus("current")


class _AutoBackupWeekSat_Type(Integer32):
    """Custom type autoBackupWeekSat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekSat_Type.__name__ = "Integer32"
_AutoBackupWeekSat_Object = MibScalar
autoBackupWeekSat = _AutoBackupWeekSat_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 11),
    _AutoBackupWeekSat_Type()
)
autoBackupWeekSat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekSat.setStatus("current")


class _AutoBackupWeekSun_Type(Integer32):
    """Custom type autoBackupWeekSun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekSun_Type.__name__ = "Integer32"
_AutoBackupWeekSun_Object = MibScalar
autoBackupWeekSun = _AutoBackupWeekSun_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 12),
    _AutoBackupWeekSun_Type()
)
autoBackupWeekSun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekSun.setStatus("current")


class _AutoBackupWeekHour_Type(Integer32):
    """Custom type autoBackupWeekHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoBackupWeekHour_Type.__name__ = "Integer32"
_AutoBackupWeekHour_Object = MibScalar
autoBackupWeekHour = _AutoBackupWeekHour_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 13),
    _AutoBackupWeekHour_Type()
)
autoBackupWeekHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekHour.setStatus("current")


class _AutoBackupWeekMinute_Type(Integer32):
    """Custom type autoBackupWeekMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoBackupWeekMinute_Type.__name__ = "Integer32"
_AutoBackupWeekMinute_Object = MibScalar
autoBackupWeekMinute = _AutoBackupWeekMinute_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 14),
    _AutoBackupWeekMinute_Type()
)
autoBackupWeekMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekMinute.setStatus("current")
_AutoBackupTftpServerIP_Type = OctetString
_AutoBackupTftpServerIP_Object = MibScalar
autoBackupTftpServerIP = _AutoBackupTftpServerIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 15),
    _AutoBackupTftpServerIP_Type()
)
autoBackupTftpServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupTftpServerIP.setStatus("current")


class _AutoBackupAction_Type(Integer32):
    """Custom type autoBackupAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupAction_Type.__name__ = "Integer32"
_AutoBackupAction_Object = MibScalar
autoBackupAction = _AutoBackupAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 7, 16),
    _AutoBackupAction_Type()
)
autoBackupAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupAction.setStatus("current")
_AutoBackupConfigTable_Object = MibTable
autoBackupConfigTable = _AutoBackupConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8)
)
if mibBuilder.loadTexts:
    autoBackupConfigTable.setStatus("current")
_AutoBackupConfigEntry_Object = MibTableRow
autoBackupConfigEntry = _AutoBackupConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1)
)
autoBackupConfigEntry.setIndexNames(
    (0, "V1600D", "autoBackupEnable"),
)
if mibBuilder.loadTexts:
    autoBackupConfigEntry.setStatus("current")


class _AutoBackupEnable_Type(Integer32):
    """Custom type autoBackupEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupEnable_Type.__name__ = "Integer32"
_AutoBackupEnable_Object = MibTableColumn
autoBackupEnable = _AutoBackupEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 1),
    _AutoBackupEnable_Type()
)
autoBackupEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupEnable.setStatus("current")


class _AutoBackupTypeS_Type(Integer32):
    """Custom type autoBackupTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("timeout", 0),
          ("fix_time", 1),
          ("week_day", 2))
    )


_AutoBackupTypeS_Type.__name__ = "Integer32"
_AutoBackupTypeS_Object = MibTableColumn
autoBackupTypeS = _AutoBackupTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 2),
    _AutoBackupTypeS_Type()
)
autoBackupTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupTypeS.setStatus("current")


class _AutoBackupTimeoutValueS_Type(Unsigned32):
    """Custom type autoBackupTimeoutValueS based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 2678400),
    )


_AutoBackupTimeoutValueS_Type.__name__ = "Unsigned32"
_AutoBackupTimeoutValueS_Object = MibTableColumn
autoBackupTimeoutValueS = _AutoBackupTimeoutValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 3),
    _AutoBackupTimeoutValueS_Type()
)
autoBackupTimeoutValueS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupTimeoutValueS.setStatus("current")


class _AutoBackupFixTimeDayS_Type(Integer32):
    """Custom type autoBackupFixTimeDayS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_AutoBackupFixTimeDayS_Type.__name__ = "Integer32"
_AutoBackupFixTimeDayS_Object = MibTableColumn
autoBackupFixTimeDayS = _AutoBackupFixTimeDayS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 4),
    _AutoBackupFixTimeDayS_Type()
)
autoBackupFixTimeDayS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupFixTimeDayS.setStatus("current")


class _AutoBackupFixTimeHourS_Type(Integer32):
    """Custom type autoBackupFixTimeHourS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoBackupFixTimeHourS_Type.__name__ = "Integer32"
_AutoBackupFixTimeHourS_Object = MibTableColumn
autoBackupFixTimeHourS = _AutoBackupFixTimeHourS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 5),
    _AutoBackupFixTimeHourS_Type()
)
autoBackupFixTimeHourS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupFixTimeHourS.setStatus("current")


class _AutoBackupFixTimeMinuteS_Type(Integer32):
    """Custom type autoBackupFixTimeMinuteS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoBackupFixTimeMinuteS_Type.__name__ = "Integer32"
_AutoBackupFixTimeMinuteS_Object = MibTableColumn
autoBackupFixTimeMinuteS = _AutoBackupFixTimeMinuteS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 6),
    _AutoBackupFixTimeMinuteS_Type()
)
autoBackupFixTimeMinuteS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupFixTimeMinuteS.setStatus("current")


class _AutoBackupWeekMonS_Type(Integer32):
    """Custom type autoBackupWeekMonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekMonS_Type.__name__ = "Integer32"
_AutoBackupWeekMonS_Object = MibTableColumn
autoBackupWeekMonS = _AutoBackupWeekMonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 7),
    _AutoBackupWeekMonS_Type()
)
autoBackupWeekMonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekMonS.setStatus("current")


class _AutoBackupWeekTuesS_Type(Integer32):
    """Custom type autoBackupWeekTuesS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekTuesS_Type.__name__ = "Integer32"
_AutoBackupWeekTuesS_Object = MibTableColumn
autoBackupWeekTuesS = _AutoBackupWeekTuesS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 8),
    _AutoBackupWeekTuesS_Type()
)
autoBackupWeekTuesS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekTuesS.setStatus("current")


class _AutoBackupWeekWedS_Type(Integer32):
    """Custom type autoBackupWeekWedS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekWedS_Type.__name__ = "Integer32"
_AutoBackupWeekWedS_Object = MibTableColumn
autoBackupWeekWedS = _AutoBackupWeekWedS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 9),
    _AutoBackupWeekWedS_Type()
)
autoBackupWeekWedS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekWedS.setStatus("current")


class _AutoBackupWeekThurS_Type(Integer32):
    """Custom type autoBackupWeekThurS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekThurS_Type.__name__ = "Integer32"
_AutoBackupWeekThurS_Object = MibTableColumn
autoBackupWeekThurS = _AutoBackupWeekThurS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 10),
    _AutoBackupWeekThurS_Type()
)
autoBackupWeekThurS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekThurS.setStatus("current")


class _AutoBackupWeekFriS_Type(Integer32):
    """Custom type autoBackupWeekFriS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekFriS_Type.__name__ = "Integer32"
_AutoBackupWeekFriS_Object = MibTableColumn
autoBackupWeekFriS = _AutoBackupWeekFriS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 11),
    _AutoBackupWeekFriS_Type()
)
autoBackupWeekFriS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekFriS.setStatus("current")


class _AutoBackupWeekSatS_Type(Integer32):
    """Custom type autoBackupWeekSatS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekSatS_Type.__name__ = "Integer32"
_AutoBackupWeekSatS_Object = MibTableColumn
autoBackupWeekSatS = _AutoBackupWeekSatS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 12),
    _AutoBackupWeekSatS_Type()
)
autoBackupWeekSatS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekSatS.setStatus("current")


class _AutoBackupWeekSunS_Type(Integer32):
    """Custom type autoBackupWeekSunS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoBackupWeekSunS_Type.__name__ = "Integer32"
_AutoBackupWeekSunS_Object = MibTableColumn
autoBackupWeekSunS = _AutoBackupWeekSunS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 13),
    _AutoBackupWeekSunS_Type()
)
autoBackupWeekSunS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekSunS.setStatus("current")


class _AutoBackupWeekHourS_Type(Integer32):
    """Custom type autoBackupWeekHourS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_AutoBackupWeekHourS_Type.__name__ = "Integer32"
_AutoBackupWeekHourS_Object = MibTableColumn
autoBackupWeekHourS = _AutoBackupWeekHourS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 14),
    _AutoBackupWeekHourS_Type()
)
autoBackupWeekHourS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekHourS.setStatus("current")


class _AutoBackupWeekMinuteS_Type(Integer32):
    """Custom type autoBackupWeekMinuteS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_AutoBackupWeekMinuteS_Type.__name__ = "Integer32"
_AutoBackupWeekMinuteS_Object = MibTableColumn
autoBackupWeekMinuteS = _AutoBackupWeekMinuteS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 15),
    _AutoBackupWeekMinuteS_Type()
)
autoBackupWeekMinuteS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupWeekMinuteS.setStatus("current")
_AutoBackupTftpServerIPS_Type = OctetString
_AutoBackupTftpServerIPS_Object = MibTableColumn
autoBackupTftpServerIPS = _AutoBackupTftpServerIPS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 8, 8, 1, 16),
    _AutoBackupTftpServerIPS_Type()
)
autoBackupTftpServerIPS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoBackupTftpServerIPS.setStatus("current")
_SystemUpgrade_ObjectIdentity = ObjectIdentity
systemUpgrade = _SystemUpgrade_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 9)
)
_TftpServerIP_Type = IpAddress
_TftpServerIP_Object = MibScalar
tftpServerIP = _TftpServerIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 9, 1),
    _TftpServerIP_Type()
)
tftpServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpServerIP.setStatus("current")


class _FileType_Type(Integer32):
    """Custom type fileType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bld", 1),
          ("kernel", 2),
          ("rootfs", 3))
    )


_FileType_Type.__name__ = "Integer32"
_FileType_Object = MibScalar
fileType = _FileType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 9, 2),
    _FileType_Type()
)
fileType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileType.setStatus("current")
_FileName_Type = OctetString
_FileName_Object = MibScalar
fileName = _FileName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 9, 3),
    _FileName_Type()
)
fileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileName.setStatus("current")


class _UpgradeCommit_Type(Integer32):
    """Custom type upgradeCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_UpgradeCommit_Type.__name__ = "Integer32"
_UpgradeCommit_Object = MibScalar
upgradeCommit = _UpgradeCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 9, 4),
    _UpgradeCommit_Type()
)
upgradeCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeCommit.setStatus("current")


class _UpgradeStatus_Type(OctetString):
    """Custom type upgradeStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 48),
    )


_UpgradeStatus_Type.__name__ = "OctetString"
_UpgradeStatus_Object = MibScalar
upgradeStatus = _UpgradeStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 9, 5),
    _UpgradeStatus_Type()
)
upgradeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upgradeStatus.setStatus("current")
_AuxPortCfg_ObjectIdentity = ObjectIdentity
auxPortCfg = _AuxPortCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10)
)
_AuxIP_Type = IpAddress
_AuxIP_Object = MibScalar
auxIP = _AuxIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 1),
    _AuxIP_Type()
)
auxIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIP.setStatus("current")
_AuxIPMask_Type = IpAddress
_AuxIPMask_Object = MibScalar
auxIPMask = _AuxIPMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 2),
    _AuxIPMask_Type()
)
auxIPMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPMask.setStatus("current")


class _AuxIPAction_Type(Integer32):
    """Custom type auxIPAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("edit", 1),
          ("delete", 2))
    )


_AuxIPAction_Type.__name__ = "Integer32"
_AuxIPAction_Object = MibScalar
auxIPAction = _AuxIPAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 3),
    _AuxIPAction_Type()
)
auxIPAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPAction.setStatus("current")
_AuxIPGateway_Type = IpAddress
_AuxIPGateway_Object = MibScalar
auxIPGateway = _AuxIPGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 4),
    _AuxIPGateway_Type()
)
auxIPGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPGateway.setStatus("current")
_AuxIPMasterDNS_Type = IpAddress
_AuxIPMasterDNS_Object = MibScalar
auxIPMasterDNS = _AuxIPMasterDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 5),
    _AuxIPMasterDNS_Type()
)
auxIPMasterDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPMasterDNS.setStatus("current")
_AuxIPSlaveDNS_Type = IpAddress
_AuxIPSlaveDNS_Object = MibScalar
auxIPSlaveDNS = _AuxIPSlaveDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 6),
    _AuxIPSlaveDNS_Type()
)
auxIPSlaveDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPSlaveDNS.setStatus("current")
_AuxIPv6_ObjectIdentity = ObjectIdentity
auxIPv6 = _AuxIPv6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7)
)
_AuxIPv6Addr_Type = OctetString
_AuxIPv6Addr_Object = MibScalar
auxIPv6Addr = _AuxIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 1),
    _AuxIPv6Addr_Type()
)
auxIPv6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPv6Addr.setStatus("current")
_AuxIPv6AddrLength_Type = Integer32
_AuxIPv6AddrLength_Object = MibScalar
auxIPv6AddrLength = _AuxIPv6AddrLength_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 2),
    _AuxIPv6AddrLength_Type()
)
auxIPv6AddrLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPv6AddrLength.setStatus("current")


class _AuxIPv6AddrType_Type(Integer32):
    """Custom type auxIPv6AddrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("NORMAL", 1),
          ("EUI64", 2))
    )


_AuxIPv6AddrType_Type.__name__ = "Integer32"
_AuxIPv6AddrType_Object = MibScalar
auxIPv6AddrType = _AuxIPv6AddrType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 3),
    _AuxIPv6AddrType_Type()
)
auxIPv6AddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPv6AddrType.setStatus("current")
_AuxIPv6Gateway_Type = OctetString
_AuxIPv6Gateway_Object = MibScalar
auxIPv6Gateway = _AuxIPv6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 4),
    _AuxIPv6Gateway_Type()
)
auxIPv6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPv6Gateway.setStatus("current")


class _AuxIPv6AddrAction_Type(Integer32):
    """Custom type auxIPv6AddrAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_AuxIPv6AddrAction_Type.__name__ = "Integer32"
_AuxIPv6AddrAction_Object = MibScalar
auxIPv6AddrAction = _AuxIPv6AddrAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 5),
    _AuxIPv6AddrAction_Type()
)
auxIPv6AddrAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPv6AddrAction.setStatus("current")
_AuxIPv6Table_Object = MibTable
auxIPv6Table = _AuxIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 6)
)
if mibBuilder.loadTexts:
    auxIPv6Table.setStatus("current")
_AuxIPv6Entry_Object = MibTableRow
auxIPv6Entry = _AuxIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 6, 1)
)
auxIPv6Entry.setIndexNames(
    (0, "V1600D", "auxIPv6Address"),
    (0, "V1600D", "auxIPv6AddressLength"),
)
if mibBuilder.loadTexts:
    auxIPv6Entry.setStatus("current")
_AuxIPv6Address_Type = OctetString
_AuxIPv6Address_Object = MibTableColumn
auxIPv6Address = _AuxIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 6, 1, 1),
    _AuxIPv6Address_Type()
)
auxIPv6Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    auxIPv6Address.setStatus("current")
_AuxIPv6AddressLength_Type = Integer32
_AuxIPv6AddressLength_Object = MibTableColumn
auxIPv6AddressLength = _AuxIPv6AddressLength_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 6, 1, 2),
    _AuxIPv6AddressLength_Type()
)
auxIPv6AddressLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    auxIPv6AddressLength.setStatus("current")
_AuxIPv6AddressType_Type = OctetString
_AuxIPv6AddressType_Object = MibTableColumn
auxIPv6AddressType = _AuxIPv6AddressType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 6, 1, 3),
    _AuxIPv6AddressType_Type()
)
auxIPv6AddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auxIPv6AddressType.setStatus("current")
_AuxIPv6GatewayAddr_Type = OctetString
_AuxIPv6GatewayAddr_Object = MibTableColumn
auxIPv6GatewayAddr = _AuxIPv6GatewayAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 10, 7, 6, 1, 4),
    _AuxIPv6GatewayAddr_Type()
)
auxIPv6GatewayAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    auxIPv6GatewayAddr.setStatus("current")
_FanCfg_ObjectIdentity = ObjectIdentity
fanCfg = _FanCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 11)
)


class _FanMode_Type(Integer32):
    """Custom type fanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("open", 1),
          ("close", 2),
          ("auto", 3))
    )


_FanMode_Type.__name__ = "Integer32"
_FanMode_Object = MibScalar
fanMode = _FanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 11, 1),
    _FanMode_Type()
)
fanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fanMode.setStatus("current")


class _FanOpenTemperature_Type(Integer32):
    """Custom type fanOpenTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20, 80),
    )


_FanOpenTemperature_Type.__name__ = "Integer32"
_FanOpenTemperature_Object = MibScalar
fanOpenTemperature = _FanOpenTemperature_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 11, 2),
    _FanOpenTemperature_Type()
)
fanOpenTemperature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fanOpenTemperature.setStatus("current")
_RtcCfg_ObjectIdentity = ObjectIdentity
rtcCfg = _RtcCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12)
)


class _Year_Type(Integer32):
    """Custom type year based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 2099),
    )


_Year_Type.__name__ = "Integer32"
_Year_Object = MibScalar
year = _Year_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 1),
    _Year_Type()
)
year.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    year.setStatus("current")


class _Month_Type(Integer32):
    """Custom type month based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_Month_Type.__name__ = "Integer32"
_Month_Object = MibScalar
month = _Month_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 2),
    _Month_Type()
)
month.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    month.setStatus("current")


class _Day_Type(Integer32):
    """Custom type day based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_Day_Type.__name__ = "Integer32"
_Day_Object = MibScalar
day = _Day_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 3),
    _Day_Type()
)
day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    day.setStatus("current")


class _Hour_Type(Integer32):
    """Custom type hour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_Hour_Type.__name__ = "Integer32"
_Hour_Object = MibScalar
hour = _Hour_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 4),
    _Hour_Type()
)
hour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hour.setStatus("current")


class _Minute_Type(Integer32):
    """Custom type minute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_Minute_Type.__name__ = "Integer32"
_Minute_Object = MibScalar
minute = _Minute_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 5),
    _Minute_Type()
)
minute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    minute.setStatus("current")


class _Second_Type(Integer32):
    """Custom type second based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_Second_Type.__name__ = "Integer32"
_Second_Object = MibScalar
second = _Second_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 6),
    _Second_Type()
)
second.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    second.setStatus("current")


class _RtcAction_Type(Integer32):
    """Custom type rtcAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_RtcAction_Type.__name__ = "Integer32"
_RtcAction_Object = MibScalar
rtcAction = _RtcAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 12, 7),
    _RtcAction_Type()
)
rtcAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtcAction.setStatus("current")
_Syslogcfg_ObjectIdentity = ObjectIdentity
syslogcfg = _Syslogcfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13)
)
_SyslogServerIp_Type = IpAddress
_SyslogServerIp_Object = MibScalar
syslogServerIp = _SyslogServerIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 1),
    _SyslogServerIp_Type()
)
syslogServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerIp.setStatus("current")


class _SyslogServerPort_Type(Integer32):
    """Custom type syslogServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SyslogServerPort_Type.__name__ = "Integer32"
_SyslogServerPort_Object = MibScalar
syslogServerPort = _SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 2),
    _SyslogServerPort_Type()
)
syslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerPort.setStatus("current")


class _SyslogFlashLevel_Type(Integer32):
    """Custom type syslogFlashLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("debug", 0),
          ("info", 1),
          ("notice", 2),
          ("warning", 3),
          ("major", 4),
          ("critical", 5),
          ("alert", 6),
          ("emerg", 7))
    )


_SyslogFlashLevel_Type.__name__ = "Integer32"
_SyslogFlashLevel_Object = MibScalar
syslogFlashLevel = _SyslogFlashLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 3),
    _SyslogFlashLevel_Type()
)
syslogFlashLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogFlashLevel.setStatus("current")


class _RestoreSyslog_Type(Integer32):
    """Custom type restoreSyslog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_RestoreSyslog_Type.__name__ = "Integer32"
_RestoreSyslog_Object = MibScalar
restoreSyslog = _RestoreSyslog_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 4),
    _RestoreSyslog_Type()
)
restoreSyslog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    restoreSyslog.setStatus("current")


class _SaveSyslog_Type(Integer32):
    """Custom type saveSyslog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_SaveSyslog_Type.__name__ = "Integer32"
_SaveSyslog_Object = MibScalar
saveSyslog = _SaveSyslog_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 5),
    _SaveSyslog_Type()
)
saveSyslog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    saveSyslog.setStatus("current")
_UploadSyslog_ObjectIdentity = ObjectIdentity
uploadSyslog = _UploadSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 6)
)
_UploadSyslogName_Type = OctetString
_UploadSyslogName_Object = MibScalar
uploadSyslogName = _UploadSyslogName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 6, 1),
    _UploadSyslogName_Type()
)
uploadSyslogName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uploadSyslogName.setStatus("current")
_TftpSeverSyslog_Type = IpAddress
_TftpSeverSyslog_Object = MibScalar
tftpSeverSyslog = _TftpSeverSyslog_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 6, 2),
    _TftpSeverSyslog_Type()
)
tftpSeverSyslog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpSeverSyslog.setStatus("current")


class _UploadAction_Type(Integer32):
    """Custom type uploadAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_UploadAction_Type.__name__ = "Integer32"
_UploadAction_Object = MibScalar
uploadAction = _UploadAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 6, 3),
    _UploadAction_Type()
)
uploadAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uploadAction.setStatus("current")
_SyslogServerIpv6_ObjectIdentity = ObjectIdentity
syslogServerIpv6 = _SyslogServerIpv6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 7)
)
_SyslogServerIpv6Addr_Type = OctetString
_SyslogServerIpv6Addr_Object = MibScalar
syslogServerIpv6Addr = _SyslogServerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 7, 1),
    _SyslogServerIpv6Addr_Type()
)
syslogServerIpv6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerIpv6Addr.setStatus("current")


class _SyslogServerIpv6Port_Type(Integer32):
    """Custom type syslogServerIpv6Port based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SyslogServerIpv6Port_Type.__name__ = "Integer32"
_SyslogServerIpv6Port_Object = MibScalar
syslogServerIpv6Port = _SyslogServerIpv6Port_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 13, 7, 2),
    _SyslogServerIpv6Port_Type()
)
syslogServerIpv6Port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerIpv6Port.setStatus("current")
_TimeParam_ObjectIdentity = ObjectIdentity
timeParam = _TimeParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 14)
)
_TimeZone_Type = OctetString
_TimeZone_Object = MibScalar
timeZone = _TimeZone_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 14, 1),
    _TimeZone_Type()
)
timeZone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeZone.setStatus("current")
_NtpServer_Type = OctetString
_NtpServer_Object = MibScalar
ntpServer = _NtpServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 14, 2),
    _NtpServer_Type()
)
ntpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpServer.setStatus("current")
_TimeZoneOffset_Type = Integer32
_TimeZoneOffset_Object = MibScalar
timeZoneOffset = _TimeZoneOffset_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 14, 3),
    _TimeZoneOffset_Type()
)
timeZoneOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeZoneOffset.setStatus("current")
_BackupNtpServer_Type = OctetString
_BackupNtpServer_Object = MibScalar
backupNtpServer = _BackupNtpServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 14, 4),
    _BackupNtpServer_Type()
)
backupNtpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    backupNtpServer.setStatus("current")
_DasParam_ObjectIdentity = ObjectIdentity
dasParam = _DasParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 15)
)
_PrimaryDNS_Type = IpAddress
_PrimaryDNS_Object = MibScalar
primaryDNS = _PrimaryDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 15, 1),
    _PrimaryDNS_Type()
)
primaryDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    primaryDNS.setStatus("current")
_SecondDNS_Type = IpAddress
_SecondDNS_Object = MibScalar
secondDNS = _SecondDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 15, 2),
    _SecondDNS_Type()
)
secondDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    secondDNS.setStatus("current")


class _Commit_Type(Integer32):
    """Custom type commit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_Commit_Type.__name__ = "Integer32"
_Commit_Object = MibScalar
commit = _Commit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 15, 3),
    _Commit_Type()
)
commit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    commit.setStatus("current")
_LoginAccessList_ObjectIdentity = ObjectIdentity
loginAccessList = _LoginAccessList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16)
)


class _LoginAccessListEn_Type(Integer32):
    """Custom type loginAccessListEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("clear", 2))
    )


_LoginAccessListEn_Type.__name__ = "Integer32"
_LoginAccessListEn_Object = MibScalar
loginAccessListEn = _LoginAccessListEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 1),
    _LoginAccessListEn_Type()
)
loginAccessListEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loginAccessListEn.setStatus("current")
_LoginAccessListCfg_ObjectIdentity = ObjectIdentity
loginAccessListCfg = _LoginAccessListCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 2)
)


class _FilterAction_Type(Integer32):
    """Custom type filterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1))
    )


_FilterAction_Type.__name__ = "Integer32"
_FilterAction_Object = MibScalar
filterAction = _FilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 2, 1),
    _FilterAction_Type()
)
filterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterAction.setStatus("current")


class _Protocol_Type(Integer32):
    """Custom type protocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 0),
          ("web", 1),
          ("snmp", 2),
          ("ssh", 3),
          ("ping", 4))
    )


_Protocol_Type.__name__ = "Integer32"
_Protocol_Object = MibScalar
protocol = _Protocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 2, 2),
    _Protocol_Type()
)
protocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protocol.setStatus("current")
_SourceIp_Type = IpAddress
_SourceIp_Object = MibScalar
sourceIp = _SourceIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 2, 3),
    _SourceIp_Type()
)
sourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sourceIp.setStatus("current")
_IpMask_Type = IpAddress
_IpMask_Object = MibScalar
ipMask = _IpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 2, 4),
    _IpMask_Type()
)
ipMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipMask.setStatus("current")


class _Action_Type(Integer32):
    """Custom type action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_Action_Type.__name__ = "Integer32"
_Action_Object = MibScalar
action = _Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 2, 5),
    _Action_Type()
)
action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    action.setStatus("current")
_LoginAccessListTable_Object = MibTable
loginAccessListTable = _LoginAccessListTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 3)
)
if mibBuilder.loadTexts:
    loginAccessListTable.setStatus("current")
_LoginAccessListEntry_Object = MibTableRow
loginAccessListEntry = _LoginAccessListEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 3, 1)
)
loginAccessListEntry.setIndexNames(
    (0, "V1600D", "filterActionS"),
    (0, "V1600D", "protocolS"),
    (0, "V1600D", "sourceIpS"),
    (0, "V1600D", "ipMaskS"),
)
if mibBuilder.loadTexts:
    loginAccessListEntry.setStatus("current")


class _FilterActionS_Type(Integer32):
    """Custom type filterActionS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 1),
          ("permit", 2))
    )


_FilterActionS_Type.__name__ = "Integer32"
_FilterActionS_Object = MibTableColumn
filterActionS = _FilterActionS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 3, 1, 1),
    _FilterActionS_Type()
)
filterActionS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    filterActionS.setStatus("current")


class _ProtocolS_Type(Integer32):
    """Custom type protocolS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 1),
          ("web", 2),
          ("snmp", 3),
          ("ssh", 4),
          ("ping", 5))
    )


_ProtocolS_Type.__name__ = "Integer32"
_ProtocolS_Object = MibTableColumn
protocolS = _ProtocolS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 3, 1, 2),
    _ProtocolS_Type()
)
protocolS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protocolS.setStatus("current")
_SourceIpS_Type = IpAddress
_SourceIpS_Object = MibTableColumn
sourceIpS = _SourceIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 3, 1, 3),
    _SourceIpS_Type()
)
sourceIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sourceIpS.setStatus("current")
_IpMaskS_Type = IpAddress
_IpMaskS_Object = MibTableColumn
ipMaskS = _IpMaskS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 3, 1, 4),
    _IpMaskS_Type()
)
ipMaskS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipMaskS.setStatus("current")
_Ipv6loginAccessListCfg_ObjectIdentity = ObjectIdentity
ipv6loginAccessListCfg = _Ipv6loginAccessListCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 4)
)


class _Ipv6filterAction_Type(Integer32):
    """Custom type ipv6filterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1))
    )


_Ipv6filterAction_Type.__name__ = "Integer32"
_Ipv6filterAction_Object = MibScalar
ipv6filterAction = _Ipv6filterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 4, 1),
    _Ipv6filterAction_Type()
)
ipv6filterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6filterAction.setStatus("current")


class _Ipv6protocol_Type(Integer32):
    """Custom type ipv6protocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 0),
          ("web", 1),
          ("snmp", 2),
          ("ssh", 3),
          ("ping", 4))
    )


_Ipv6protocol_Type.__name__ = "Integer32"
_Ipv6protocol_Object = MibScalar
ipv6protocol = _Ipv6protocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 4, 2),
    _Ipv6protocol_Type()
)
ipv6protocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6protocol.setStatus("current")
_SourceIpv6_Type = OctetString
_SourceIpv6_Object = MibScalar
sourceIpv6 = _SourceIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 4, 3),
    _SourceIpv6_Type()
)
sourceIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sourceIpv6.setStatus("current")


class _Prefixlen_Type(Integer32):
    """Custom type prefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_Prefixlen_Type.__name__ = "Integer32"
_Prefixlen_Object = MibScalar
prefixlen = _Prefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 4, 4),
    _Prefixlen_Type()
)
prefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixlen.setStatus("current")


class _Ipv6action_Type(Integer32):
    """Custom type ipv6action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_Ipv6action_Type.__name__ = "Integer32"
_Ipv6action_Object = MibScalar
ipv6action = _Ipv6action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 4, 5),
    _Ipv6action_Type()
)
ipv6action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6action.setStatus("current")
_Ipv6loginAccessListTable_Object = MibTable
ipv6loginAccessListTable = _Ipv6loginAccessListTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 5)
)
if mibBuilder.loadTexts:
    ipv6loginAccessListTable.setStatus("current")
_Ipv6loginAccessListEntry_Object = MibTableRow
ipv6loginAccessListEntry = _Ipv6loginAccessListEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 5, 1)
)
ipv6loginAccessListEntry.setIndexNames(
    (0, "V1600D", "ipv6filterActionS"),
    (0, "V1600D", "ipv6protocolS"),
    (0, "V1600D", "sourceIpv6S"),
    (0, "V1600D", "prefixlenS"),
)
if mibBuilder.loadTexts:
    ipv6loginAccessListEntry.setStatus("current")


class _Ipv6filterActionS_Type(Integer32):
    """Custom type ipv6filterActionS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 1),
          ("permit", 2))
    )


_Ipv6filterActionS_Type.__name__ = "Integer32"
_Ipv6filterActionS_Object = MibTableColumn
ipv6filterActionS = _Ipv6filterActionS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 5, 1, 1),
    _Ipv6filterActionS_Type()
)
ipv6filterActionS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6filterActionS.setStatus("current")


class _Ipv6protocolS_Type(Integer32):
    """Custom type ipv6protocolS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 1),
          ("web", 2),
          ("snmp", 3),
          ("ssh", 4),
          ("ping", 5))
    )


_Ipv6protocolS_Type.__name__ = "Integer32"
_Ipv6protocolS_Object = MibTableColumn
ipv6protocolS = _Ipv6protocolS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 5, 1, 2),
    _Ipv6protocolS_Type()
)
ipv6protocolS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6protocolS.setStatus("current")
_SourceIpv6S_Type = OctetString
_SourceIpv6S_Object = MibTableColumn
sourceIpv6S = _SourceIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 5, 1, 3),
    _SourceIpv6S_Type()
)
sourceIpv6S.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sourceIpv6S.setStatus("current")


class _PrefixlenS_Type(Integer32):
    """Custom type prefixlenS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 128),
    )


_PrefixlenS_Type.__name__ = "Integer32"
_PrefixlenS_Object = MibTableColumn
prefixlenS = _PrefixlenS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 16, 5, 1, 4),
    _PrefixlenS_Type()
)
prefixlenS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixlenS.setStatus("current")
_Ipv6DNS_ObjectIdentity = ObjectIdentity
ipv6DNS = _Ipv6DNS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 17)
)
_Ipv6MasterDNS_Type = OctetString
_Ipv6MasterDNS_Object = MibScalar
ipv6MasterDNS = _Ipv6MasterDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 17, 1),
    _Ipv6MasterDNS_Type()
)
ipv6MasterDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6MasterDNS.setStatus("current")
_Ipv6SlaveDNS_Type = OctetString
_Ipv6SlaveDNS_Object = MibScalar
ipv6SlaveDNS = _Ipv6SlaveDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 17, 2),
    _Ipv6SlaveDNS_Type()
)
ipv6SlaveDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6SlaveDNS.setStatus("current")


class _Ipv6DNSAction_Type(Integer32):
    """Custom type ipv6DNSAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_Ipv6DNSAction_Type.__name__ = "Integer32"
_Ipv6DNSAction_Object = MibScalar
ipv6DNSAction = _Ipv6DNSAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 17, 3),
    _Ipv6DNSAction_Type()
)
ipv6DNSAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6DNSAction.setStatus("current")
_SystemIPv6Upgrade_ObjectIdentity = ObjectIdentity
systemIPv6Upgrade = _SystemIPv6Upgrade_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 18)
)
_TftpServerIPv6_Type = OctetString
_TftpServerIPv6_Object = MibScalar
tftpServerIPv6 = _TftpServerIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 18, 1),
    _TftpServerIPv6_Type()
)
tftpServerIPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpServerIPv6.setStatus("current")


class _Filetype_Type(Integer32):
    """Custom type filetype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bld", 1),
          ("kernel", 2),
          ("rootfs", 3))
    )


_Filetype_Type.__name__ = "Integer32"
_Filetype_Object = MibScalar
filetype = _Filetype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 18, 2),
    _Filetype_Type()
)
filetype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filetype.setStatus("current")
_FileNAME_Type = OctetString
_FileNAME_Object = MibScalar
fileNAME = _FileNAME_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 18, 3),
    _FileNAME_Type()
)
fileNAME.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileNAME.setStatus("current")


class _Ipv6UpgradeCommit_Type(Integer32):
    """Custom type ipv6UpgradeCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_Ipv6UpgradeCommit_Type.__name__ = "Integer32"
_Ipv6UpgradeCommit_Object = MibScalar
ipv6UpgradeCommit = _Ipv6UpgradeCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 18, 4),
    _Ipv6UpgradeCommit_Type()
)
ipv6UpgradeCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6UpgradeCommit.setStatus("current")
_UserManagement_ObjectIdentity = ObjectIdentity
userManagement = _UserManagement_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19)
)
_UserManagementCfg_ObjectIdentity = ObjectIdentity
userManagementCfg = _UserManagementCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 1)
)
_UserNameC_Type = OctetString
_UserNameC_Object = MibScalar
userNameC = _UserNameC_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 1, 1),
    _UserNameC_Type()
)
userNameC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userNameC.setStatus("current")
_UserPassword_Type = OctetString
_UserPassword_Object = MibScalar
userPassword = _UserPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 1, 2),
    _UserPassword_Type()
)
userPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userPassword.setStatus("current")
_ConfirmPassword_Type = OctetString
_ConfirmPassword_Object = MibScalar
confirmPassword = _ConfirmPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 1, 3),
    _ConfirmPassword_Type()
)
confirmPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    confirmPassword.setStatus("current")


class _UserRole_Type(Integer32):
    """Custom type userRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("admin", 1))
    )


_UserRole_Type.__name__ = "Integer32"
_UserRole_Object = MibScalar
userRole = _UserRole_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 1, 4),
    _UserRole_Type()
)
userRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userRole.setStatus("current")


class _UserCfgaction_Type(Integer32):
    """Custom type userCfgaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2),
          ("edit", 3))
    )


_UserCfgaction_Type.__name__ = "Integer32"
_UserCfgaction_Object = MibScalar
userCfgaction = _UserCfgaction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 1, 5),
    _UserCfgaction_Type()
)
userCfgaction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userCfgaction.setStatus("current")
_UserManagementTable_Object = MibTable
userManagementTable = _UserManagementTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 2)
)
if mibBuilder.loadTexts:
    userManagementTable.setStatus("current")
_UserManagementEntry_Object = MibTableRow
userManagementEntry = _UserManagementEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 2, 1)
)
userManagementEntry.setIndexNames(
    (0, "V1600D", "userNameS"),
    (0, "V1600D", "userRoleS"),
)
if mibBuilder.loadTexts:
    userManagementEntry.setStatus("current")
_UserNameS_Type = OctetString
_UserNameS_Object = MibTableColumn
userNameS = _UserNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 2, 1, 1),
    _UserNameS_Type()
)
userNameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userNameS.setStatus("current")


class _UserRoleS_Type(Integer32):
    """Custom type userRoleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("normal", 1),
          ("admin", 2))
    )


_UserRoleS_Type.__name__ = "Integer32"
_UserRoleS_Object = MibTableColumn
userRoleS = _UserRoleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 19, 2, 1, 2),
    _UserRoleS_Type()
)
userRoleS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userRoleS.setStatus("current")
_NetWorkSecurity_ObjectIdentity = ObjectIdentity
netWorkSecurity = _NetWorkSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20)
)


class _PrevenceLevel_Type(Integer32):
    """Custom type prevenceLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("low", 1),
          ("middle", 2),
          ("high", 3),
          ("flexiable", 4))
    )


_PrevenceLevel_Type.__name__ = "Integer32"
_PrevenceLevel_Object = MibScalar
prevenceLevel = _PrevenceLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 1),
    _PrevenceLevel_Type()
)
prevenceLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prevenceLevel.setStatus("current")


class _IpFirstFragCheck_Type(Integer32):
    """Custom type ipFirstFragCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IpFirstFragCheck_Type.__name__ = "Integer32"
_IpFirstFragCheck_Object = MibScalar
ipFirstFragCheck = _IpFirstFragCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 2),
    _IpFirstFragCheck_Type()
)
ipFirstFragCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipFirstFragCheck.setStatus("current")


class _SrcIpDstIpCheck_Type(Integer32):
    """Custom type srcIpDstIpCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SrcIpDstIpCheck_Type.__name__ = "Integer32"
_SrcIpDstIpCheck_Object = MibScalar
srcIpDstIpCheck = _SrcIpDstIpCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 3),
    _SrcIpDstIpCheck_Type()
)
srcIpDstIpCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcIpDstIpCheck.setStatus("current")


class _SrcMacDstMacCheck_Type(Integer32):
    """Custom type srcMacDstMacCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SrcMacDstMacCheck_Type.__name__ = "Integer32"
_SrcMacDstMacCheck_Object = MibScalar
srcMacDstMacCheck = _SrcMacDstMacCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 4),
    _SrcMacDstMacCheck_Type()
)
srcMacDstMacCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcMacDstMacCheck.setStatus("current")


class _TcpFlagsSynFragCheck_Type(Integer32):
    """Custom type tcpFlagsSynFragCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpFlagsSynFragCheck_Type.__name__ = "Integer32"
_TcpFlagsSynFragCheck_Object = MibScalar
tcpFlagsSynFragCheck = _TcpFlagsSynFragCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 5),
    _TcpFlagsSynFragCheck_Type()
)
tcpFlagsSynFragCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpFlagsSynFragCheck.setStatus("current")


class _TcpFlagsCrtl0Seq0Check_Type(Integer32):
    """Custom type tcpFlagsCrtl0Seq0Check based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpFlagsCrtl0Seq0Check_Type.__name__ = "Integer32"
_TcpFlagsCrtl0Seq0Check_Object = MibScalar
tcpFlagsCrtl0Seq0Check = _TcpFlagsCrtl0Seq0Check_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 6),
    _TcpFlagsCrtl0Seq0Check_Type()
)
tcpFlagsCrtl0Seq0Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpFlagsCrtl0Seq0Check.setStatus("current")


class _TcpFlagFinUrgPshSeq0Check_Type(Integer32):
    """Custom type tcpFlagFinUrgPshSeq0Check based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpFlagFinUrgPshSeq0Check_Type.__name__ = "Integer32"
_TcpFlagFinUrgPshSeq0Check_Object = MibScalar
tcpFlagFinUrgPshSeq0Check = _TcpFlagFinUrgPshSeq0Check_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 7),
    _TcpFlagFinUrgPshSeq0Check_Type()
)
tcpFlagFinUrgPshSeq0Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpFlagFinUrgPshSeq0Check.setStatus("current")


class _TcpFlagsSynFinCheck_Type(Integer32):
    """Custom type tcpFlagsSynFinCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpFlagsSynFinCheck_Type.__name__ = "Integer32"
_TcpFlagsSynFinCheck_Object = MibScalar
tcpFlagsSynFinCheck = _TcpFlagsSynFinCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 8),
    _TcpFlagsSynFinCheck_Type()
)
tcpFlagsSynFinCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpFlagsSynFinCheck.setStatus("current")


class _TcpSrcportEqDstportCheck_Type(Integer32):
    """Custom type tcpSrcportEqDstportCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpSrcportEqDstportCheck_Type.__name__ = "Integer32"
_TcpSrcportEqDstportCheck_Object = MibScalar
tcpSrcportEqDstportCheck = _TcpSrcportEqDstportCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 9),
    _TcpSrcportEqDstportCheck_Type()
)
tcpSrcportEqDstportCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpSrcportEqDstportCheck.setStatus("current")


class _UdpSrcportEqDstportCheck_Type(Integer32):
    """Custom type udpSrcportEqDstportCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UdpSrcportEqDstportCheck_Type.__name__ = "Integer32"
_UdpSrcportEqDstportCheck_Object = MibScalar
udpSrcportEqDstportCheck = _UdpSrcportEqDstportCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 10),
    _UdpSrcportEqDstportCheck_Type()
)
udpSrcportEqDstportCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udpSrcportEqDstportCheck.setStatus("current")


class _TcpHdrPartialCheck_Type(Integer32):
    """Custom type tcpHdrPartialCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpHdrPartialCheck_Type.__name__ = "Integer32"
_TcpHdrPartialCheck_Object = MibScalar
tcpHdrPartialCheck = _TcpHdrPartialCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 11),
    _TcpHdrPartialCheck_Type()
)
tcpHdrPartialCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpHdrPartialCheck.setStatus("current")


class _TcpHdrPartialChecksize_Type(Integer32):
    """Custom type tcpHdrPartialChecksize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TcpHdrPartialChecksize_Type.__name__ = "Integer32"
_TcpHdrPartialChecksize_Object = MibScalar
tcpHdrPartialChecksize = _TcpHdrPartialChecksize_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 12),
    _TcpHdrPartialChecksize_Type()
)
tcpHdrPartialChecksize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpHdrPartialChecksize.setStatus("current")


class _TcpHdrOffsetEq1Check_Type(Integer32):
    """Custom type tcpHdrOffsetEq1Check based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_TcpHdrOffsetEq1Check_Type.__name__ = "Integer32"
_TcpHdrOffsetEq1Check_Object = MibScalar
tcpHdrOffsetEq1Check = _TcpHdrOffsetEq1Check_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 13),
    _TcpHdrOffsetEq1Check_Type()
)
tcpHdrOffsetEq1Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpHdrOffsetEq1Check.setStatus("current")


class _ICMPv6PingSizeCheck_Type(Integer32):
    """Custom type iCMPv6PingSizeCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ICMPv6PingSizeCheck_Type.__name__ = "Integer32"
_ICMPv6PingSizeCheck_Object = MibScalar
iCMPv6PingSizeCheck = _ICMPv6PingSizeCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 14),
    _ICMPv6PingSizeCheck_Type()
)
iCMPv6PingSizeCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iCMPv6PingSizeCheck.setStatus("current")


class _ICMPv6PingSizeChecksize_Type(Integer32):
    """Custom type iCMPv6PingSizeChecksize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16000),
    )


_ICMPv6PingSizeChecksize_Type.__name__ = "Integer32"
_ICMPv6PingSizeChecksize_Object = MibScalar
iCMPv6PingSizeChecksize = _ICMPv6PingSizeChecksize_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 15),
    _ICMPv6PingSizeChecksize_Type()
)
iCMPv6PingSizeChecksize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iCMPv6PingSizeChecksize.setStatus("current")


class _ICMPv4PingSizeCheck_Type(Integer32):
    """Custom type iCMPv4PingSizeCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ICMPv4PingSizeCheck_Type.__name__ = "Integer32"
_ICMPv4PingSizeCheck_Object = MibScalar
iCMPv4PingSizeCheck = _ICMPv4PingSizeCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 16),
    _ICMPv4PingSizeCheck_Type()
)
iCMPv4PingSizeCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iCMPv4PingSizeCheck.setStatus("current")


class _ICMPv4PingSizeChecksize_Type(Integer32):
    """Custom type iCMPv4PingSizeChecksize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16000),
    )


_ICMPv4PingSizeChecksize_Type.__name__ = "Integer32"
_ICMPv4PingSizeChecksize_Object = MibScalar
iCMPv4PingSizeChecksize = _ICMPv4PingSizeChecksize_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 17),
    _ICMPv4PingSizeChecksize_Type()
)
iCMPv4PingSizeChecksize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iCMPv4PingSizeChecksize.setStatus("current")


class _ICMPFragPktCheck_Type(Integer32):
    """Custom type iCMPFragPktCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ICMPFragPktCheck_Type.__name__ = "Integer32"
_ICMPFragPktCheck_Object = MibScalar
iCMPFragPktCheck = _ICMPFragPktCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 18),
    _ICMPFragPktCheck_Type()
)
iCMPFragPktCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iCMPFragPktCheck.setStatus("current")


class _IPv6MinFragSizeCheck_Type(Integer32):
    """Custom type iPv6MinFragSizeCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IPv6MinFragSizeCheck_Type.__name__ = "Integer32"
_IPv6MinFragSizeCheck_Object = MibScalar
iPv6MinFragSizeCheck = _IPv6MinFragSizeCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 19),
    _IPv6MinFragSizeCheck_Type()
)
iPv6MinFragSizeCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iPv6MinFragSizeCheck.setStatus("current")


class _PonDebug_Type(Integer32):
    """Custom type ponDebug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonDebug_Type.__name__ = "Integer32"
_PonDebug_Object = MibScalar
ponDebug = _PonDebug_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 20),
    _PonDebug_Type()
)
ponDebug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponDebug.setStatus("current")


class _KernalDebug_Type(Integer32):
    """Custom type kernalDebug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_KernalDebug_Type.__name__ = "Integer32"
_KernalDebug_Object = MibScalar
kernalDebug = _KernalDebug_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 21),
    _KernalDebug_Type()
)
kernalDebug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kernalDebug.setStatus("current")


class _Normal_Type(Integer32):
    """Custom type normal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Normal_Type.__name__ = "Integer32"
_Normal_Object = MibScalar
normal = _Normal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 22),
    _Normal_Type()
)
normal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    normal.setStatus("current")


class _Networkaction_Type(Integer32):
    """Custom type networkaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("submit", 0)
    )


_Networkaction_Type.__name__ = "Integer32"
_Networkaction_Object = MibScalar
networkaction = _Networkaction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 23),
    _Networkaction_Type()
)
networkaction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    networkaction.setStatus("current")
_D4lownetWorkSecurity_ObjectIdentity = ObjectIdentity
d4lownetWorkSecurity = _D4lownetWorkSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24)
)


class _D4lowsrcMacDstMacCheck_Type(Integer32):
    """Custom type d4lowsrcMacDstMacCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowsrcMacDstMacCheck_Type.__name__ = "Integer32"
_D4lowsrcMacDstMacCheck_Object = MibScalar
d4lowsrcMacDstMacCheck = _D4lowsrcMacDstMacCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 1),
    _D4lowsrcMacDstMacCheck_Type()
)
d4lowsrcMacDstMacCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowsrcMacDstMacCheck.setStatus("current")


class _D4lowsrcIpDstIpCheck_Type(Integer32):
    """Custom type d4lowsrcIpDstIpCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowsrcIpDstIpCheck_Type.__name__ = "Integer32"
_D4lowsrcIpDstIpCheck_Object = MibScalar
d4lowsrcIpDstIpCheck = _D4lowsrcIpDstIpCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 2),
    _D4lowsrcIpDstIpCheck_Type()
)
d4lowsrcIpDstIpCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowsrcIpDstIpCheck.setStatus("current")


class _D4lowl4SrcportEqDstportCheck_Type(Integer32):
    """Custom type d4lowl4SrcportEqDstportCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowl4SrcportEqDstportCheck_Type.__name__ = "Integer32"
_D4lowl4SrcportEqDstportCheck_Object = MibScalar
d4lowl4SrcportEqDstportCheck = _D4lowl4SrcportEqDstportCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 3),
    _D4lowl4SrcportEqDstportCheck_Type()
)
d4lowl4SrcportEqDstportCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowl4SrcportEqDstportCheck.setStatus("current")


class _D4lowtcpFlagsSynFinCheck_Type(Integer32):
    """Custom type d4lowtcpFlagsSynFinCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowtcpFlagsSynFinCheck_Type.__name__ = "Integer32"
_D4lowtcpFlagsSynFinCheck_Object = MibScalar
d4lowtcpFlagsSynFinCheck = _D4lowtcpFlagsSynFinCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 4),
    _D4lowtcpFlagsSynFinCheck_Type()
)
d4lowtcpFlagsSynFinCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowtcpFlagsSynFinCheck.setStatus("current")


class _D4lowtcpFlagFinUrgPshSeq0Check_Type(Integer32):
    """Custom type d4lowtcpFlagFinUrgPshSeq0Check based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowtcpFlagFinUrgPshSeq0Check_Type.__name__ = "Integer32"
_D4lowtcpFlagFinUrgPshSeq0Check_Object = MibScalar
d4lowtcpFlagFinUrgPshSeq0Check = _D4lowtcpFlagFinUrgPshSeq0Check_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 5),
    _D4lowtcpFlagFinUrgPshSeq0Check_Type()
)
d4lowtcpFlagFinUrgPshSeq0Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowtcpFlagFinUrgPshSeq0Check.setStatus("current")


class _D4lowtcpFlagsCrtl0Seq0Check_Type(Integer32):
    """Custom type d4lowtcpFlagsCrtl0Seq0Check based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowtcpFlagsCrtl0Seq0Check_Type.__name__ = "Integer32"
_D4lowtcpFlagsCrtl0Seq0Check_Object = MibScalar
d4lowtcpFlagsCrtl0Seq0Check = _D4lowtcpFlagsCrtl0Seq0Check_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 6),
    _D4lowtcpFlagsCrtl0Seq0Check_Type()
)
d4lowtcpFlagsCrtl0Seq0Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowtcpFlagsCrtl0Seq0Check.setStatus("current")


class _D4lowtcpFlagsSynFragCheck_Type(Integer32):
    """Custom type d4lowtcpFlagsSynFragCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowtcpFlagsSynFragCheck_Type.__name__ = "Integer32"
_D4lowtcpFlagsSynFragCheck_Object = MibScalar
d4lowtcpFlagsSynFragCheck = _D4lowtcpFlagsSynFragCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 7),
    _D4lowtcpFlagsSynFragCheck_Type()
)
d4lowtcpFlagsSynFragCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowtcpFlagsSynFragCheck.setStatus("current")


class _D4lowtcpHdrPartialCheck_Type(Integer32):
    """Custom type d4lowtcpHdrPartialCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowtcpHdrPartialCheck_Type.__name__ = "Integer32"
_D4lowtcpHdrPartialCheck_Object = MibScalar
d4lowtcpHdrPartialCheck = _D4lowtcpHdrPartialCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 8),
    _D4lowtcpHdrPartialCheck_Type()
)
d4lowtcpHdrPartialCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowtcpHdrPartialCheck.setStatus("current")


class _D4lowtcpHdrOffsetEq1Check_Type(Integer32):
    """Custom type d4lowtcpHdrOffsetEq1Check based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowtcpHdrOffsetEq1Check_Type.__name__ = "Integer32"
_D4lowtcpHdrOffsetEq1Check_Object = MibScalar
d4lowtcpHdrOffsetEq1Check = _D4lowtcpHdrOffsetEq1Check_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 9),
    _D4lowtcpHdrOffsetEq1Check_Type()
)
d4lowtcpHdrOffsetEq1Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowtcpHdrOffsetEq1Check.setStatus("current")


class _D4lowiCMPFragPktCheck_Type(Integer32):
    """Custom type d4lowiCMPFragPktCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_D4lowiCMPFragPktCheck_Type.__name__ = "Integer32"
_D4lowiCMPFragPktCheck_Object = MibScalar
d4lowiCMPFragPktCheck = _D4lowiCMPFragPktCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 10),
    _D4lowiCMPFragPktCheck_Type()
)
d4lowiCMPFragPktCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lowiCMPFragPktCheck.setStatus("current")


class _D4lownetworkaction_Type(Integer32):
    """Custom type d4lownetworkaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_D4lownetworkaction_Type.__name__ = "Integer32"
_D4lownetworkaction_Object = MibScalar
d4lownetworkaction = _D4lownetworkaction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 20, 24, 11),
    _D4lownetworkaction_Type()
)
d4lownetworkaction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    d4lownetworkaction.setStatus("current")
_PowerBattery_ObjectIdentity = ObjectIdentity
powerBattery = _PowerBattery_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21)
)


class _BatteryChargeMode_Type(Integer32):
    """Custom type batteryChargeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("close", 0),
          ("open", 1))
    )


_BatteryChargeMode_Type.__name__ = "Integer32"
_BatteryChargeMode_Object = MibScalar
batteryChargeMode = _BatteryChargeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 1),
    _BatteryChargeMode_Type()
)
batteryChargeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    batteryChargeMode.setStatus("current")
_BatteryChargeStatus_Type = OctetString
_BatteryChargeStatus_Object = MibScalar
batteryChargeStatus = _BatteryChargeStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 2),
    _BatteryChargeStatus_Type()
)
batteryChargeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    batteryChargeStatus.setStatus("current")
_BatteryRemainingPower_Type = OctetString
_BatteryRemainingPower_Object = MibScalar
batteryRemainingPower = _BatteryRemainingPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 3),
    _BatteryRemainingPower_Type()
)
batteryRemainingPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    batteryRemainingPower.setStatus("current")
_PowerModuleStateTable_Object = MibTable
powerModuleStateTable = _PowerModuleStateTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 4)
)
if mibBuilder.loadTexts:
    powerModuleStateTable.setStatus("current")
_PowerModuleStateEntry_Object = MibTableRow
powerModuleStateEntry = _PowerModuleStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 4, 1)
)
powerModuleStateEntry.setIndexNames(
    (0, "V1600D", "powerID"),
)
if mibBuilder.loadTexts:
    powerModuleStateEntry.setStatus("current")
_PowerID_Type = Integer32
_PowerID_Object = MibTableColumn
powerID = _PowerID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 4, 1, 1),
    _PowerID_Type()
)
powerID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerID.setStatus("current")
_PowerState_Type = OctetString
_PowerState_Object = MibTableColumn
powerState = _PowerState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 12, 21, 4, 1, 2),
    _PowerState_Type()
)
powerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerState.setStatus("current")
_V1600dAlarm_ObjectIdentity = ObjectIdentity
v1600dAlarm = _V1600dAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13)
)
_PonTransceiverTable_Object = MibTable
ponTransceiverTable = _PonTransceiverTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1)
)
if mibBuilder.loadTexts:
    ponTransceiverTable.setStatus("current")
_PonTransceiverEntry_Object = MibTableRow
ponTransceiverEntry = _PonTransceiverEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1, 1)
)
ponTransceiverEntry.setIndexNames(
    (0, "V1600D", "transceiverPonIndex"),
)
if mibBuilder.loadTexts:
    ponTransceiverEntry.setStatus("current")


class _TransceiverPonIndex_Type(Integer32):
    """Custom type transceiverPonIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_TransceiverPonIndex_Type.__name__ = "Integer32"
_TransceiverPonIndex_Object = MibTableColumn
transceiverPonIndex = _TransceiverPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1, 1, 1),
    _TransceiverPonIndex_Type()
)
transceiverPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiverPonIndex.setStatus("current")
_Tempperature_Type = OctetString
_Tempperature_Object = MibTableColumn
tempperature = _Tempperature_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1, 1, 2),
    _Tempperature_Type()
)
tempperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tempperature.setStatus("current")
_Voltage_Type = OctetString
_Voltage_Object = MibTableColumn
voltage = _Voltage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1, 1, 3),
    _Voltage_Type()
)
voltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voltage.setStatus("current")
_BiasCurrent_Type = OctetString
_BiasCurrent_Object = MibTableColumn
biasCurrent = _BiasCurrent_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1, 1, 4),
    _BiasCurrent_Type()
)
biasCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    biasCurrent.setStatus("current")
_TransmitPower_Type = OctetString
_TransmitPower_Object = MibTableColumn
transmitPower = _TransmitPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 1, 1, 5),
    _TransmitPower_Type()
)
transmitPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transmitPower.setStatus("current")
_AlarmMsg_ObjectIdentity = ObjectIdentity
alarmMsg = _AlarmMsg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2)
)
_DataUpLinkPort_Type = OctetString
_DataUpLinkPort_Object = MibScalar
dataUpLinkPort = _DataUpLinkPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 1),
    _DataUpLinkPort_Type()
)
dataUpLinkPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataUpLinkPort.setStatus("current")
_DataPon_Type = OctetString
_DataPon_Object = MibScalar
dataPon = _DataPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 2),
    _DataPon_Type()
)
dataPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataPon.setStatus("current")
_DataOnu_Type = OctetString
_DataOnu_Object = MibScalar
dataOnu = _DataOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 3),
    _DataOnu_Type()
)
dataOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataOnu.setStatus("current")
_DataOnuPort_Type = OctetString
_DataOnuPort_Object = MibScalar
dataOnuPort = _DataOnuPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 4),
    _DataOnuPort_Type()
)
dataOnuPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataOnuPort.setStatus("current")
_DataTrapOID_Type = ObjectIdentifier
_DataTrapOID_Object = MibScalar
dataTrapOID = _DataTrapOID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 5),
    _DataTrapOID_Type()
)
dataTrapOID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataTrapOID.setStatus("current")


class _DataTrapClass_Type(Integer32):
    """Custom type dataTrapClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear_alarm", 0),
          ("raised_alarm", 1),
          ("no_clear_alarm", 2))
    )


_DataTrapClass_Type.__name__ = "Integer32"
_DataTrapClass_Object = MibScalar
dataTrapClass = _DataTrapClass_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 6),
    _DataTrapClass_Type()
)
dataTrapClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataTrapClass.setStatus("current")
_DataMac_Type = OctetString
_DataMac_Object = MibScalar
dataMac = _DataMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 7),
    _DataMac_Type()
)
dataMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dataMac.setStatus("current")
_DataTime_Type = OctetString
_DataTime_Object = MibScalar
dataTime = _DataTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 8),
    _DataTime_Type()
)
dataTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataTime.setStatus("current")


class _DateAlarmLevel_Type(Integer32):
    """Custom type dateAlarmLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("debug", 0),
          ("info", 1),
          ("notice", 2),
          ("warning", 3),
          ("major", 4),
          ("criterr", 5),
          ("alert", 6),
          ("emerg", 7))
    )


_DateAlarmLevel_Type.__name__ = "Integer32"
_DateAlarmLevel_Object = MibScalar
dateAlarmLevel = _DateAlarmLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 9),
    _DateAlarmLevel_Type()
)
dateAlarmLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dateAlarmLevel.setStatus("current")
_DataValue_Type = OctetString
_DataValue_Object = MibScalar
dataValue = _DataValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 10),
    _DataValue_Type()
)
dataValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataValue.setStatus("current")


class _DataAlarmType_Type(Integer32):
    """Custom type dataAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("equipment", 0),
          ("process", 1),
          ("communit", 2))
    )


_DataAlarmType_Type.__name__ = "Integer32"
_DataAlarmType_Object = MibScalar
dataAlarmType = _DataAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 11),
    _DataAlarmType_Type()
)
dataAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataAlarmType.setStatus("current")
_DataSynOID_Type = OctetString
_DataSynOID_Object = MibScalar
dataSynOID = _DataSynOID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 2, 12),
    _DataSynOID_Type()
)
dataSynOID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dataSynOID.setStatus("current")
_PonOpticalAlarmControl_ObjectIdentity = ObjectIdentity
ponOpticalAlarmControl = _PonOpticalAlarmControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3)
)
_PonOpticalAlarmDisCfg_ObjectIdentity = ObjectIdentity
ponOpticalAlarmDisCfg = _PonOpticalAlarmDisCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 1)
)


class _PonAlarmPonNo_Type(Integer32):
    """Custom type ponAlarmPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonAlarmPonNo_Type.__name__ = "Integer32"
_PonAlarmPonNo_Object = MibScalar
ponAlarmPonNo = _PonAlarmPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 1, 1),
    _PonAlarmPonNo_Type()
)
ponAlarmPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponAlarmPonNo.setStatus("current")


class _PonOpticalType_Type(Integer32):
    """Custom type ponOpticalType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("txPowerHighAlarm", 1),
          ("txPowerLowAlarm", 2),
          ("txBiasHighAlarm", 3),
          ("txBiasLowAlarm", 4),
          ("vccHighAlarm", 5),
          ("vccLowAlarm", 6),
          ("tempHighAlarm", 7),
          ("tempLowAlarm", 8))
    )


_PonOpticalType_Type.__name__ = "Integer32"
_PonOpticalType_Object = MibScalar
ponOpticalType = _PonOpticalType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 1, 2),
    _PonOpticalType_Type()
)
ponOpticalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalType.setStatus("current")


class _PonOpticalAlarmDis_Type(Integer32):
    """Custom type ponOpticalAlarmDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("disable", 0)
    )


_PonOpticalAlarmDis_Type.__name__ = "Integer32"
_PonOpticalAlarmDis_Object = MibScalar
ponOpticalAlarmDis = _PonOpticalAlarmDis_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 1, 3),
    _PonOpticalAlarmDis_Type()
)
ponOpticalAlarmDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalAlarmDis.setStatus("current")


class _PonOpticalDisAction_Type(Integer32):
    """Custom type ponOpticalDisAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PonOpticalDisAction_Type.__name__ = "Integer32"
_PonOpticalDisAction_Object = MibScalar
ponOpticalDisAction = _PonOpticalDisAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 1, 4),
    _PonOpticalDisAction_Type()
)
ponOpticalDisAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalDisAction.setStatus("current")
_PonOpticalAlarmEnCfg_ObjectIdentity = ObjectIdentity
ponOpticalAlarmEnCfg = _PonOpticalAlarmEnCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2)
)


class _PonOpticalAlarmPonNo_Type(Integer32):
    """Custom type ponOpticalAlarmPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonOpticalAlarmPonNo_Type.__name__ = "Integer32"
_PonOpticalAlarmPonNo_Object = MibScalar
ponOpticalAlarmPonNo = _PonOpticalAlarmPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2, 1),
    _PonOpticalAlarmPonNo_Type()
)
ponOpticalAlarmPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalAlarmPonNo.setStatus("current")


class _PonOpticalAlarmType_Type(Integer32):
    """Custom type ponOpticalAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("txPowerHighAlarm", 1),
          ("txPowerLowAlarm", 2),
          ("txBiasHighAlarm", 3),
          ("txBiasLowAlarm", 4),
          ("vccHighAlarm", 5),
          ("vccLowAlarm", 6),
          ("tempHighAlarm", 7),
          ("tempLowAlarm", 8))
    )


_PonOpticalAlarmType_Type.__name__ = "Integer32"
_PonOpticalAlarmType_Object = MibScalar
ponOpticalAlarmType = _PonOpticalAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2, 2),
    _PonOpticalAlarmType_Type()
)
ponOpticalAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalAlarmType.setStatus("current")


class _PonOpticalAlarmEn_Type(Integer32):
    """Custom type ponOpticalAlarmEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_PonOpticalAlarmEn_Type.__name__ = "Integer32"
_PonOpticalAlarmEn_Object = MibScalar
ponOpticalAlarmEn = _PonOpticalAlarmEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2, 3),
    _PonOpticalAlarmEn_Type()
)
ponOpticalAlarmEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalAlarmEn.setStatus("current")
_PonOpticalAlarmThld_Type = OctetString
_PonOpticalAlarmThld_Object = MibScalar
ponOpticalAlarmThld = _PonOpticalAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2, 4),
    _PonOpticalAlarmThld_Type()
)
ponOpticalAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalAlarmThld.setStatus("current")
_PonOpticalClearThld_Type = OctetString
_PonOpticalClearThld_Object = MibScalar
ponOpticalClearThld = _PonOpticalClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2, 5),
    _PonOpticalClearThld_Type()
)
ponOpticalClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalClearThld.setStatus("current")


class _PonOpticalAlarmEnAction_Type(Integer32):
    """Custom type ponOpticalAlarmEnAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PonOpticalAlarmEnAction_Type.__name__ = "Integer32"
_PonOpticalAlarmEnAction_Object = MibScalar
ponOpticalAlarmEnAction = _PonOpticalAlarmEnAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 2, 6),
    _PonOpticalAlarmEnAction_Type()
)
ponOpticalAlarmEnAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponOpticalAlarmEnAction.setStatus("current")
_PonOpticalAlarmTable_Object = MibTable
ponOpticalAlarmTable = _PonOpticalAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3)
)
if mibBuilder.loadTexts:
    ponOpticalAlarmTable.setStatus("current")
_PonOpticalAlarmEntry_Object = MibTableRow
ponOpticalAlarmEntry = _PonOpticalAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3, 1)
)
ponOpticalAlarmEntry.setIndexNames(
    (0, "V1600D", "ponAlarmPonIndex"),
    (0, "V1600D", "ponAlarmType"),
)
if mibBuilder.loadTexts:
    ponOpticalAlarmEntry.setStatus("current")


class _PonAlarmPonIndex_Type(Integer32):
    """Custom type ponAlarmPonIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonAlarmPonIndex_Type.__name__ = "Integer32"
_PonAlarmPonIndex_Object = MibTableColumn
ponAlarmPonIndex = _PonAlarmPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3, 1, 1),
    _PonAlarmPonIndex_Type()
)
ponAlarmPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponAlarmPonIndex.setStatus("current")


class _PonAlarmType_Type(Integer32):
    """Custom type ponAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("txPowerHighAlarm", 1),
          ("txPowerLowAlarm", 2),
          ("txBiasHighAlarm", 3),
          ("txBiasLowAlarm", 4),
          ("vccHighAlarm", 5),
          ("vccLowAlarm", 6),
          ("tempHighAlarm", 7),
          ("tempLowAlarm", 8))
    )


_PonAlarmType_Type.__name__ = "Integer32"
_PonAlarmType_Object = MibTableColumn
ponAlarmType = _PonAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3, 1, 2),
    _PonAlarmType_Type()
)
ponAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponAlarmType.setStatus("current")


class _PonOpticalAlarmStatus_Type(Integer32):
    """Custom type ponOpticalAlarmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonOpticalAlarmStatus_Type.__name__ = "Integer32"
_PonOpticalAlarmStatus_Object = MibTableColumn
ponOpticalAlarmStatus = _PonOpticalAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3, 1, 3),
    _PonOpticalAlarmStatus_Type()
)
ponOpticalAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponOpticalAlarmStatus.setStatus("current")
_PonOpticalAlarmThldVal_Type = OctetString
_PonOpticalAlarmThldVal_Object = MibTableColumn
ponOpticalAlarmThldVal = _PonOpticalAlarmThldVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3, 1, 4),
    _PonOpticalAlarmThldVal_Type()
)
ponOpticalAlarmThldVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponOpticalAlarmThldVal.setStatus("current")
_PonOpticalClearThldVal_Type = OctetString
_PonOpticalClearThldVal_Object = MibTableColumn
ponOpticalClearThldVal = _PonOpticalClearThldVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 3, 3, 1, 5),
    _PonOpticalClearThldVal_Type()
)
ponOpticalClearThldVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponOpticalClearThldVal.setStatus("current")
_AlarmCtrl_ObjectIdentity = ObjectIdentity
alarmCtrl = _AlarmCtrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4)
)
_AlarmControlCfg_ObjectIdentity = ObjectIdentity
alarmControlCfg = _AlarmControlCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 1)
)


class _AlarmControlType_Type(Integer32):
    """Custom type alarmControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57)
        )
    )
    namedValues = NamedValues(
        *(("fan", 1),
          ("download-file-failed", 2),
          ("upload-file-failed", 3),
          ("upgrade-file-failed", 4),
          ("port-updown", 5),
          ("port-loopback", 6),
          ("pon-deregister", 7),
          ("pon-register-failed", 8),
          ("pon-disable", 9),
          ("pon-txpower-high", 10),
          ("pon-txpower-low", 11),
          ("pon-txbias-high", 12),
          ("pon-txbias-low", 13),
          ("pon-vcc-high", 14),
          ("pon-vcc-low", 15),
          ("pon-temp-high", 16),
          ("pon-temp-low", 17),
          ("pon-los", 18),
          ("onu-deregister", 19),
          ("onu-link-lost", 20),
          ("onu-illegal-register", 21),
          ("onu-auth-failed", 22),
          ("onu-mac-conflict", 23),
          ("onu-loid-conflict", 24),
          ("onu-critical-event", 25),
          ("onu-dying-gasp", 26),
          ("onu-link-fault", 27),
          ("onu-link-event", 28),
          ("onu-event-notific", 29),
          ("reset", 30),
          ("config-save", 31),
          ("config-erase", 32),
          ("download-file-success", 33),
          ("upload-file-success", 34),
          ("upgrade-file-success", 35),
          ("pon-register", 36),
          ("pon-enable", 37),
          ("pon-los-recovery", 38),
          ("onu-register", 39),
          ("onu-link-discover", 40),
          ("onu-auth-success", 41),
          ("onu-deauth-success", 42),
          ("onu-pon-rxpower-high", 43),
          ("onu-pon-rxpower-low", 44),
          ("onu-pon-txpower-high", 45),
          ("onu-pon-txpower-low", 46),
          ("onu-pon-txbias-high", 47),
          ("onu-pon-txbias-low", 48),
          ("onu-pon-vcc-high", 49),
          ("onu-pon-vcc-low", 50),
          ("onu-pon-temp-high", 51),
          ("onu-pon-temp-low", 52),
          ("onu-port-autoneg-failure", 53),
          ("onu-port-los", 54),
          ("onu-port-failure", 55),
          ("onu-port-loopback", 56),
          ("onu-pots-failure", 57))
    )


_AlarmControlType_Type.__name__ = "Integer32"
_AlarmControlType_Object = MibScalar
alarmControlType = _AlarmControlType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 1, 1),
    _AlarmControlType_Type()
)
alarmControlType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlType.setStatus("current")


class _AlarmOutputType_Type(Integer32):
    """Custom type alarmOutputType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("print", 0),
          ("record", 1),
          ("trap", 2),
          ("remote", 3),
          ("all", 4))
    )


_AlarmOutputType_Type.__name__ = "Integer32"
_AlarmOutputType_Object = MibScalar
alarmOutputType = _AlarmOutputType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 1, 2),
    _AlarmOutputType_Type()
)
alarmOutputType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmOutputType.setStatus("current")


class _AlarmControlEnable_Type(Integer32):
    """Custom type alarmControlEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmControlEnable_Type.__name__ = "Integer32"
_AlarmControlEnable_Object = MibScalar
alarmControlEnable = _AlarmControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 1, 3),
    _AlarmControlEnable_Type()
)
alarmControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlEnable.setStatus("current")


class _AlarmControlAction_Type(Integer32):
    """Custom type alarmControlAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_AlarmControlAction_Type.__name__ = "Integer32"
_AlarmControlAction_Object = MibScalar
alarmControlAction = _AlarmControlAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 1, 4),
    _AlarmControlAction_Type()
)
alarmControlAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlAction.setStatus("current")
_AlarmControlTable_Object = MibTable
alarmControlTable = _AlarmControlTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2)
)
if mibBuilder.loadTexts:
    alarmControlTable.setStatus("current")
_AlarmControlEntry_Object = MibTableRow
alarmControlEntry = _AlarmControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1)
)
alarmControlEntry.setIndexNames(
    (0, "V1600D", "alarmControlId"),
)
if mibBuilder.loadTexts:
    alarmControlEntry.setStatus("current")
_AlarmControlId_Type = Integer32
_AlarmControlId_Object = MibTableColumn
alarmControlId = _AlarmControlId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1, 1),
    _AlarmControlId_Type()
)
alarmControlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmControlId.setStatus("current")
_AlarmControlTypeS_Type = OctetString
_AlarmControlTypeS_Object = MibTableColumn
alarmControlTypeS = _AlarmControlTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1, 2),
    _AlarmControlTypeS_Type()
)
alarmControlTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmControlTypeS.setStatus("current")


class _AlarmPrintStatus_Type(Integer32):
    """Custom type alarmPrintStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPrintStatus_Type.__name__ = "Integer32"
_AlarmPrintStatus_Object = MibTableColumn
alarmPrintStatus = _AlarmPrintStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1, 3),
    _AlarmPrintStatus_Type()
)
alarmPrintStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmPrintStatus.setStatus("current")


class _AlarmRecordStatus_Type(Integer32):
    """Custom type alarmRecordStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmRecordStatus_Type.__name__ = "Integer32"
_AlarmRecordStatus_Object = MibTableColumn
alarmRecordStatus = _AlarmRecordStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1, 4),
    _AlarmRecordStatus_Type()
)
alarmRecordStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmRecordStatus.setStatus("current")


class _AlarmTrapStatus_Type(Integer32):
    """Custom type alarmTrapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmTrapStatus_Type.__name__ = "Integer32"
_AlarmTrapStatus_Object = MibTableColumn
alarmTrapStatus = _AlarmTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1, 5),
    _AlarmTrapStatus_Type()
)
alarmTrapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmTrapStatus.setStatus("current")


class _AlarmRemoteStatus_Type(Integer32):
    """Custom type alarmRemoteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmRemoteStatus_Type.__name__ = "Integer32"
_AlarmRemoteStatus_Object = MibTableColumn
alarmRemoteStatus = _AlarmRemoteStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 2, 1, 6),
    _AlarmRemoteStatus_Type()
)
alarmRemoteStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmRemoteStatus.setStatus("current")
_AlarmControlThldCfg_ObjectIdentity = ObjectIdentity
alarmControlThldCfg = _AlarmControlThldCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3)
)


class _AlarmControlThldType_Type(Integer32):
    """Custom type alarmControlThldType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("temp-high", 1),
          ("temp-low", 2),
          ("cpu-usage-high", 3),
          ("mem-usage-high", 4))
    )


_AlarmControlThldType_Type.__name__ = "Integer32"
_AlarmControlThldType_Object = MibScalar
alarmControlThldType = _AlarmControlThldType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3, 1),
    _AlarmControlThldType_Type()
)
alarmControlThldType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlThldType.setStatus("current")


class _AlarmOutputThldType_Type(Integer32):
    """Custom type alarmOutputThldType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("print", 0),
          ("record", 1),
          ("trap", 2),
          ("remote", 3),
          ("all", 4))
    )


_AlarmOutputThldType_Type.__name__ = "Integer32"
_AlarmOutputThldType_Object = MibScalar
alarmOutputThldType = _AlarmOutputThldType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3, 2),
    _AlarmOutputThldType_Type()
)
alarmOutputThldType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmOutputThldType.setStatus("current")


class _AlarmControlThldEnable_Type(Integer32):
    """Custom type alarmControlThldEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enablel", 1))
    )


_AlarmControlThldEnable_Type.__name__ = "Integer32"
_AlarmControlThldEnable_Object = MibScalar
alarmControlThldEnable = _AlarmControlThldEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3, 3),
    _AlarmControlThldEnable_Type()
)
alarmControlThldEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlThldEnable.setStatus("current")
_AlarmControlThldAlarm_Type = OctetString
_AlarmControlThldAlarm_Object = MibScalar
alarmControlThldAlarm = _AlarmControlThldAlarm_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3, 4),
    _AlarmControlThldAlarm_Type()
)
alarmControlThldAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlThldAlarm.setStatus("current")
_AlarmControlThldClear_Type = OctetString
_AlarmControlThldClear_Object = MibScalar
alarmControlThldClear = _AlarmControlThldClear_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3, 5),
    _AlarmControlThldClear_Type()
)
alarmControlThldClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlThldClear.setStatus("current")


class _AlarmControlThldAction_Type(Integer32):
    """Custom type alarmControlThldAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_AlarmControlThldAction_Type.__name__ = "Integer32"
_AlarmControlThldAction_Object = MibScalar
alarmControlThldAction = _AlarmControlThldAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 3, 6),
    _AlarmControlThldAction_Type()
)
alarmControlThldAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmControlThldAction.setStatus("current")
_AlarmControlThldTable_Object = MibTable
alarmControlThldTable = _AlarmControlThldTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4)
)
if mibBuilder.loadTexts:
    alarmControlThldTable.setStatus("current")
_AlarmControlThldEntry_Object = MibTableRow
alarmControlThldEntry = _AlarmControlThldEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1)
)
alarmControlThldEntry.setIndexNames(
    (0, "V1600D", "alarmCtrlThldId"),
)
if mibBuilder.loadTexts:
    alarmControlThldEntry.setStatus("current")
_AlarmCtrlThldId_Type = Integer32
_AlarmCtrlThldId_Object = MibTableColumn
alarmCtrlThldId = _AlarmCtrlThldId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 1),
    _AlarmCtrlThldId_Type()
)
alarmCtrlThldId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmCtrlThldId.setStatus("current")


class _AlarmCtrlThldType_Type(Integer32):
    """Custom type alarmCtrlThldType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("temp-high", 1),
          ("temp-low", 2),
          ("cpu-usage-high", 3),
          ("mem-usage-high", 4))
    )


_AlarmCtrlThldType_Type.__name__ = "Integer32"
_AlarmCtrlThldType_Object = MibTableColumn
alarmCtrlThldType = _AlarmCtrlThldType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 2),
    _AlarmCtrlThldType_Type()
)
alarmCtrlThldType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmCtrlThldType.setStatus("current")


class _AlarmPrintThldStatus_Type(Integer32):
    """Custom type alarmPrintThldStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPrintThldStatus_Type.__name__ = "Integer32"
_AlarmPrintThldStatus_Object = MibTableColumn
alarmPrintThldStatus = _AlarmPrintThldStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 3),
    _AlarmPrintThldStatus_Type()
)
alarmPrintThldStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmPrintThldStatus.setStatus("current")


class _AlarmRecordThldStatus_Type(Integer32):
    """Custom type alarmRecordThldStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmRecordThldStatus_Type.__name__ = "Integer32"
_AlarmRecordThldStatus_Object = MibTableColumn
alarmRecordThldStatus = _AlarmRecordThldStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 4),
    _AlarmRecordThldStatus_Type()
)
alarmRecordThldStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmRecordThldStatus.setStatus("current")


class _AlarmTrapThldStatus_Type(Integer32):
    """Custom type alarmTrapThldStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmTrapThldStatus_Type.__name__ = "Integer32"
_AlarmTrapThldStatus_Object = MibTableColumn
alarmTrapThldStatus = _AlarmTrapThldStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 5),
    _AlarmTrapThldStatus_Type()
)
alarmTrapThldStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmTrapThldStatus.setStatus("current")


class _AlarmRemoteThldStatus_Type(Integer32):
    """Custom type alarmRemoteThldStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmRemoteThldStatus_Type.__name__ = "Integer32"
_AlarmRemoteThldStatus_Object = MibTableColumn
alarmRemoteThldStatus = _AlarmRemoteThldStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 6),
    _AlarmRemoteThldStatus_Type()
)
alarmRemoteThldStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmRemoteThldStatus.setStatus("current")
_AlarmCtrlThldAlarm_Type = OctetString
_AlarmCtrlThldAlarm_Object = MibTableColumn
alarmCtrlThldAlarm = _AlarmCtrlThldAlarm_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 7),
    _AlarmCtrlThldAlarm_Type()
)
alarmCtrlThldAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmCtrlThldAlarm.setStatus("current")
_AlarmCtrlThldClear_Type = OctetString
_AlarmCtrlThldClear_Object = MibTableColumn
alarmCtrlThldClear = _AlarmCtrlThldClear_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 4, 4, 1, 8),
    _AlarmCtrlThldClear_Type()
)
alarmCtrlThldClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmCtrlThldClear.setStatus("current")
_AlarmOID_ObjectIdentity = ObjectIdentity
alarmOID = _AlarmOID_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5)
)
_TempHigh_Type = Integer32
_TempHigh_Object = MibScalar
tempHigh = _TempHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 1),
    _TempHigh_Type()
)
tempHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tempHigh.setStatus("current")
_TempLow_Type = Integer32
_TempLow_Object = MibScalar
tempLow = _TempLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 2),
    _TempLow_Type()
)
tempLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tempLow.setStatus("current")
_CpuUsageHigh_Type = Integer32
_CpuUsageHigh_Object = MibScalar
cpuUsageHigh = _CpuUsageHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 3),
    _CpuUsageHigh_Type()
)
cpuUsageHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cpuUsageHigh.setStatus("current")
_MemUsageHigh_Type = Integer32
_MemUsageHigh_Object = MibScalar
memUsageHigh = _MemUsageHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 4),
    _MemUsageHigh_Type()
)
memUsageHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    memUsageHigh.setStatus("current")
_Fan_Type = Integer32
_Fan_Object = MibScalar
fan = _Fan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 5),
    _Fan_Type()
)
fan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fan.setStatus("current")
_DownloadFileFailed_Type = Integer32
_DownloadFileFailed_Object = MibScalar
downloadFileFailed = _DownloadFileFailed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 6),
    _DownloadFileFailed_Type()
)
downloadFileFailed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downloadFileFailed.setStatus("current")
_UploadFileFailed_Type = Integer32
_UploadFileFailed_Object = MibScalar
uploadFileFailed = _UploadFileFailed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 7),
    _UploadFileFailed_Type()
)
uploadFileFailed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uploadFileFailed.setStatus("current")
_UpgradeFileFailled_Type = Integer32
_UpgradeFileFailled_Object = MibScalar
upgradeFileFailled = _UpgradeFileFailled_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 8),
    _UpgradeFileFailled_Type()
)
upgradeFileFailled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeFileFailled.setStatus("current")
_PortUpdown_Type = Integer32
_PortUpdown_Object = MibScalar
portUpdown = _PortUpdown_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 9),
    _PortUpdown_Type()
)
portUpdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portUpdown.setStatus("current")
_PortLoopback_Type = Integer32
_PortLoopback_Object = MibScalar
portLoopback = _PortLoopback_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 10),
    _PortLoopback_Type()
)
portLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portLoopback.setStatus("current")
_PonDeregister_Type = Integer32
_PonDeregister_Object = MibScalar
ponDeregister = _PonDeregister_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 11),
    _PonDeregister_Type()
)
ponDeregister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponDeregister.setStatus("current")
_PonRegisterFailed_Type = Integer32
_PonRegisterFailed_Object = MibScalar
ponRegisterFailed = _PonRegisterFailed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 12),
    _PonRegisterFailed_Type()
)
ponRegisterFailed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponRegisterFailed.setStatus("current")
_PonDisable_Type = Integer32
_PonDisable_Object = MibScalar
ponDisable = _PonDisable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 13),
    _PonDisable_Type()
)
ponDisable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponDisable.setStatus("current")
_PonTxPowerHigh_Type = Integer32
_PonTxPowerHigh_Object = MibScalar
ponTxPowerHigh = _PonTxPowerHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 14),
    _PonTxPowerHigh_Type()
)
ponTxPowerHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTxPowerHigh.setStatus("current")
_PonTxPowerLow_Type = Integer32
_PonTxPowerLow_Object = MibScalar
ponTxPowerLow = _PonTxPowerLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 15),
    _PonTxPowerLow_Type()
)
ponTxPowerLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTxPowerLow.setStatus("current")
_PonTxBisaHigh_Type = Integer32
_PonTxBisaHigh_Object = MibScalar
ponTxBisaHigh = _PonTxBisaHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 16),
    _PonTxBisaHigh_Type()
)
ponTxBisaHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTxBisaHigh.setStatus("current")
_PonTxbiasLow_Type = Integer32
_PonTxbiasLow_Object = MibScalar
ponTxbiasLow = _PonTxbiasLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 17),
    _PonTxbiasLow_Type()
)
ponTxbiasLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTxbiasLow.setStatus("current")
_PonVccHigh_Type = Integer32
_PonVccHigh_Object = MibScalar
ponVccHigh = _PonVccHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 18),
    _PonVccHigh_Type()
)
ponVccHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccHigh.setStatus("current")
_PonVccLow_Type = Integer32
_PonVccLow_Object = MibScalar
ponVccLow = _PonVccLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 19),
    _PonVccLow_Type()
)
ponVccLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccLow.setStatus("current")
_PonTempHigh_Type = Integer32
_PonTempHigh_Object = MibScalar
ponTempHigh = _PonTempHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 20),
    _PonTempHigh_Type()
)
ponTempHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempHigh.setStatus("current")
_PonTempLow_Type = Integer32
_PonTempLow_Object = MibScalar
ponTempLow = _PonTempLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 21),
    _PonTempLow_Type()
)
ponTempLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempLow.setStatus("current")
_PonLos_Type = Integer32
_PonLos_Object = MibScalar
ponLos = _PonLos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 22),
    _PonLos_Type()
)
ponLos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponLos.setStatus("current")
_OnuDeregister_Type = Integer32
_OnuDeregister_Object = MibScalar
onuDeregister = _OnuDeregister_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 23),
    _OnuDeregister_Type()
)
onuDeregister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDeregister.setStatus("current")
_OnuLinkLost_Type = Integer32
_OnuLinkLost_Object = MibScalar
onuLinkLost = _OnuLinkLost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 24),
    _OnuLinkLost_Type()
)
onuLinkLost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuLinkLost.setStatus("current")
_OnuIllegalRegister_Type = Integer32
_OnuIllegalRegister_Object = MibScalar
onuIllegalRegister = _OnuIllegalRegister_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 25),
    _OnuIllegalRegister_Type()
)
onuIllegalRegister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuIllegalRegister.setStatus("current")
_OnuAuthFailed_Type = Integer32
_OnuAuthFailed_Object = MibScalar
onuAuthFailed = _OnuAuthFailed_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 26),
    _OnuAuthFailed_Type()
)
onuAuthFailed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthFailed.setStatus("current")
_OnuMacConflict_Type = Integer32
_OnuMacConflict_Object = MibScalar
onuMacConflict = _OnuMacConflict_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 27),
    _OnuMacConflict_Type()
)
onuMacConflict.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacConflict.setStatus("current")
_OnuLoidConflict_Type = Integer32
_OnuLoidConflict_Object = MibScalar
onuLoidConflict = _OnuLoidConflict_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 28),
    _OnuLoidConflict_Type()
)
onuLoidConflict.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuLoidConflict.setStatus("current")
_OnuCriticalEvent_Type = Integer32
_OnuCriticalEvent_Object = MibScalar
onuCriticalEvent = _OnuCriticalEvent_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 29),
    _OnuCriticalEvent_Type()
)
onuCriticalEvent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCriticalEvent.setStatus("current")
_OnuDyingGasp_Type = Integer32
_OnuDyingGasp_Object = MibScalar
onuDyingGasp = _OnuDyingGasp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 30),
    _OnuDyingGasp_Type()
)
onuDyingGasp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDyingGasp.setStatus("current")
_OnuLinkFault_Type = Integer32
_OnuLinkFault_Object = MibScalar
onuLinkFault = _OnuLinkFault_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 31),
    _OnuLinkFault_Type()
)
onuLinkFault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuLinkFault.setStatus("current")
_OnuLinkEvent_Type = Integer32
_OnuLinkEvent_Object = MibScalar
onuLinkEvent = _OnuLinkEvent_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 32),
    _OnuLinkEvent_Type()
)
onuLinkEvent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuLinkEvent.setStatus("current")
_OnuEventNotific_Type = Integer32
_OnuEventNotific_Object = MibScalar
onuEventNotific = _OnuEventNotific_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 33),
    _OnuEventNotific_Type()
)
onuEventNotific.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuEventNotific.setStatus("current")
_OnuOmLaoDetect_Type = Integer32
_OnuOmLaoDetect_Object = MibScalar
onuOmLaoDetect = _OnuOmLaoDetect_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 34),
    _OnuOmLaoDetect_Type()
)
onuOmLaoDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuOmLaoDetect.setStatus("current")
_OnuOmLolDetect_Type = Integer32
_OnuOmLolDetect_Object = MibScalar
onuOmLolDetect = _OnuOmLolDetect_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 35),
    _OnuOmLolDetect_Type()
)
onuOmLolDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuOmLolDetect.setStatus("current")
_AlarmMax_Type = Integer32
_AlarmMax_Object = MibScalar
alarmMax = _AlarmMax_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 36),
    _AlarmMax_Type()
)
alarmMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmMax.setStatus("current")
_Reset_Type = Integer32
_Reset_Object = MibScalar
reset = _Reset_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 37),
    _Reset_Type()
)
reset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    reset.setStatus("current")
_ConfigSave_Type = Integer32
_ConfigSave_Object = MibScalar
configSave = _ConfigSave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 38),
    _ConfigSave_Type()
)
configSave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    configSave.setStatus("current")
_ConfigErase_Type = Integer32
_ConfigErase_Object = MibScalar
configErase = _ConfigErase_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 39),
    _ConfigErase_Type()
)
configErase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    configErase.setStatus("current")
_DnLoadFileSuccess_Type = Integer32
_DnLoadFileSuccess_Object = MibScalar
dnLoadFileSuccess = _DnLoadFileSuccess_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 40),
    _DnLoadFileSuccess_Type()
)
dnLoadFileSuccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnLoadFileSuccess.setStatus("current")
_UploadFileSuccess_Type = Integer32
_UploadFileSuccess_Object = MibScalar
uploadFileSuccess = _UploadFileSuccess_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 41),
    _UploadFileSuccess_Type()
)
uploadFileSuccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    uploadFileSuccess.setStatus("current")
_UpgradeFileSuccess_Type = Integer32
_UpgradeFileSuccess_Object = MibScalar
upgradeFileSuccess = _UpgradeFileSuccess_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 42),
    _UpgradeFileSuccess_Type()
)
upgradeFileSuccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeFileSuccess.setStatus("current")
_PonRegister_Type = Integer32
_PonRegister_Object = MibScalar
ponRegister = _PonRegister_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 43),
    _PonRegister_Type()
)
ponRegister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponRegister.setStatus("current")
_PonEnable_Type = Integer32
_PonEnable_Object = MibScalar
ponEnable = _PonEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 44),
    _PonEnable_Type()
)
ponEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponEnable.setStatus("current")
_PonLosRecovery_Type = Integer32
_PonLosRecovery_Object = MibScalar
ponLosRecovery = _PonLosRecovery_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 45),
    _PonLosRecovery_Type()
)
ponLosRecovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponLosRecovery.setStatus("current")
_OnuRegister_Type = Integer32
_OnuRegister_Object = MibScalar
onuRegister = _OnuRegister_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 46),
    _OnuRegister_Type()
)
onuRegister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuRegister.setStatus("current")
_OnuLinkDiscover_Type = Integer32
_OnuLinkDiscover_Object = MibScalar
onuLinkDiscover = _OnuLinkDiscover_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 47),
    _OnuLinkDiscover_Type()
)
onuLinkDiscover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuLinkDiscover.setStatus("current")
_OnuAuthSuccess_Type = Integer32
_OnuAuthSuccess_Object = MibScalar
onuAuthSuccess = _OnuAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 48),
    _OnuAuthSuccess_Type()
)
onuAuthSuccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthSuccess.setStatus("current")
_OnuDeauthSuccess_Type = Integer32
_OnuDeauthSuccess_Object = MibScalar
onuDeauthSuccess = _OnuDeauthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 49),
    _OnuDeauthSuccess_Type()
)
onuDeauthSuccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDeauthSuccess.setStatus("current")
_OnuUpgradeOver_Type = Integer32
_OnuUpgradeOver_Object = MibScalar
onuUpgradeOver = _OnuUpgradeOver_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 50),
    _OnuUpgradeOver_Type()
)
onuUpgradeOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpgradeOver.setStatus("current")
_OnuFinish_Type = Integer32
_OnuFinish_Object = MibScalar
onuFinish = _OnuFinish_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 51),
    _OnuFinish_Type()
)
onuFinish.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuFinish.setStatus("current")
_OnuPonRxPowerHigh_Type = Integer32
_OnuPonRxPowerHigh_Object = MibScalar
onuPonRxPowerHigh = _OnuPonRxPowerHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 52),
    _OnuPonRxPowerHigh_Type()
)
onuPonRxPowerHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonRxPowerHigh.setStatus("current")
_OnuPonRxPowerLow_Type = Integer32
_OnuPonRxPowerLow_Object = MibScalar
onuPonRxPowerLow = _OnuPonRxPowerLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 53),
    _OnuPonRxPowerLow_Type()
)
onuPonRxPowerLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonRxPowerLow.setStatus("current")
_OnuPonTxPowerHigh_Type = Integer32
_OnuPonTxPowerHigh_Object = MibScalar
onuPonTxPowerHigh = _OnuPonTxPowerHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 54),
    _OnuPonTxPowerHigh_Type()
)
onuPonTxPowerHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonTxPowerHigh.setStatus("current")
_OnuPonTxPowerLow_Type = Integer32
_OnuPonTxPowerLow_Object = MibScalar
onuPonTxPowerLow = _OnuPonTxPowerLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 55),
    _OnuPonTxPowerLow_Type()
)
onuPonTxPowerLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonTxPowerLow.setStatus("current")
_OnuPonTxBiasHigh_Type = Integer32
_OnuPonTxBiasHigh_Object = MibScalar
onuPonTxBiasHigh = _OnuPonTxBiasHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 56),
    _OnuPonTxBiasHigh_Type()
)
onuPonTxBiasHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonTxBiasHigh.setStatus("current")
_OnuPonTxBiasLow_Type = Integer32
_OnuPonTxBiasLow_Object = MibScalar
onuPonTxBiasLow = _OnuPonTxBiasLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 57),
    _OnuPonTxBiasLow_Type()
)
onuPonTxBiasLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonTxBiasLow.setStatus("current")
_OnuPonVccHigh_Type = Integer32
_OnuPonVccHigh_Object = MibScalar
onuPonVccHigh = _OnuPonVccHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 58),
    _OnuPonVccHigh_Type()
)
onuPonVccHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonVccHigh.setStatus("current")
_OnuPonVccLow_Type = Integer32
_OnuPonVccLow_Object = MibScalar
onuPonVccLow = _OnuPonVccLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 59),
    _OnuPonVccLow_Type()
)
onuPonVccLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonVccLow.setStatus("current")
_OnuPonTempHigh_Type = Integer32
_OnuPonTempHigh_Object = MibScalar
onuPonTempHigh = _OnuPonTempHigh_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 60),
    _OnuPonTempHigh_Type()
)
onuPonTempHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonTempHigh.setStatus("current")
_OnuPonTempLow_Type = Integer32
_OnuPonTempLow_Object = MibScalar
onuPonTempLow = _OnuPonTempLow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 61),
    _OnuPonTempLow_Type()
)
onuPonTempLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPonTempLow.setStatus("current")
_OnuPortAutoNegFailure_Type = Integer32
_OnuPortAutoNegFailure_Object = MibScalar
onuPortAutoNegFailure = _OnuPortAutoNegFailure_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 62),
    _OnuPortAutoNegFailure_Type()
)
onuPortAutoNegFailure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortAutoNegFailure.setStatus("current")
_OnuPortLos_Type = Integer32
_OnuPortLos_Object = MibScalar
onuPortLos = _OnuPortLos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 63),
    _OnuPortLos_Type()
)
onuPortLos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortLos.setStatus("current")
_OnuPortFailure_Type = Integer32
_OnuPortFailure_Object = MibScalar
onuPortFailure = _OnuPortFailure_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 64),
    _OnuPortFailure_Type()
)
onuPortFailure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortFailure.setStatus("current")
_OnuPortLoopback_Type = Integer32
_OnuPortLoopback_Object = MibScalar
onuPortLoopback = _OnuPortLoopback_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 65),
    _OnuPortLoopback_Type()
)
onuPortLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortLoopback.setStatus("current")
_OnuPotsFailure_Type = Integer32
_OnuPotsFailure_Object = MibScalar
onuPotsFailure = _OnuPotsFailure_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 66),
    _OnuPotsFailure_Type()
)
onuPotsFailure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPotsFailure.setStatus("current")
_OspfAdjacencyChange_Type = Integer32
_OspfAdjacencyChange_Object = MibScalar
ospfAdjacencyChange = _OspfAdjacencyChange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 67),
    _OspfAdjacencyChange_Type()
)
ospfAdjacencyChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfAdjacencyChange.setStatus("current")
_IllegalDhcpServer_Type = Integer32
_IllegalDhcpServer_Object = MibScalar
illegalDhcpServer = _IllegalDhcpServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 68),
    _IllegalDhcpServer_Type()
)
illegalDhcpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    illegalDhcpServer.setStatus("current")
_OverDhcpRateLimit_Type = Integer32
_OverDhcpRateLimit_Object = MibScalar
overDhcpRateLimit = _OverDhcpRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 69),
    _OverDhcpRateLimit_Type()
)
overDhcpRateLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    overDhcpRateLimit.setStatus("current")
_RipAdjacencyChange_Type = Integer32
_RipAdjacencyChange_Object = MibScalar
ripAdjacencyChange = _RipAdjacencyChange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 70),
    _RipAdjacencyChange_Type()
)
ripAdjacencyChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripAdjacencyChange.setStatus("current")
_OnuVlanPool_Type = Integer32
_OnuVlanPool_Object = MibScalar
onuVlanPool = _OnuVlanPool_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 71),
    _OnuVlanPool_Type()
)
onuVlanPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVlanPool.setStatus("current")
_OnuNumLimit_Type = Integer32
_OnuNumLimit_Object = MibScalar
onuNumLimit = _OnuNumLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 72),
    _OnuNumLimit_Type()
)
onuNumLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuNumLimit.setStatus("current")
_OnuTimeLimit_Type = Integer32
_OnuTimeLimit_Object = MibScalar
onuTimeLimit = _OnuTimeLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 73),
    _OnuTimeLimit_Type()
)
onuTimeLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTimeLimit.setStatus("current")
_TimeChange_Type = Integer32
_TimeChange_Object = MibScalar
timeChange = _TimeChange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 74),
    _TimeChange_Type()
)
timeChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeChange.setStatus("current")
_PonImageDnload_Type = Integer32
_PonImageDnload_Object = MibScalar
ponImageDnload = _PonImageDnload_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 75),
    _PonImageDnload_Type()
)
ponImageDnload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponImageDnload.setStatus("current")
_MacFlapping_Type = Integer32
_MacFlapping_Object = MibScalar
macFlapping = _MacFlapping_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 76),
    _MacFlapping_Type()
)
macFlapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macFlapping.setStatus("current")
_PortLinkFlap_Type = Integer32
_PortLinkFlap_Object = MibScalar
portLinkFlap = _PortLinkFlap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 77),
    _PortLinkFlap_Type()
)
portLinkFlap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portLinkFlap.setStatus("current")
_Ospf6AdjacencyChange_Type = Integer32
_Ospf6AdjacencyChange_Object = MibScalar
ospf6AdjacencyChange = _Ospf6AdjacencyChange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 78),
    _Ospf6AdjacencyChange_Type()
)
ospf6AdjacencyChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospf6AdjacencyChange.setStatus("current")
_RipngAdjacencyChange_Type = Integer32
_RipngAdjacencyChange_Object = MibScalar
ripngAdjacencyChange = _RipngAdjacencyChange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 79),
    _RipngAdjacencyChange_Type()
)
ripngAdjacencyChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngAdjacencyChange.setStatus("current")
_PonPsg_Type = Integer32
_PonPsg_Object = MibScalar
ponPsg = _PonPsg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 80),
    _PonPsg_Type()
)
ponPsg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPsg.setStatus("current")
_UserLogin_Type = Integer32
_UserLogin_Object = MibScalar
userLogin = _UserLogin_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 81),
    _UserLogin_Type()
)
userLogin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userLogin.setStatus("current")
_UserLogout_Type = Integer32
_UserLogout_Object = MibScalar
userLogout = _UserLogout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 5, 82),
    _UserLogout_Type()
)
userLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userLogout.setStatus("current")
_AlarmTrap_ObjectIdentity = ObjectIdentity
alarmTrap = _AlarmTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 6)
)
_V1600dOltType_ObjectIdentity = ObjectIdentity
v1600dOltType = _V1600dOltType_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 14)
)
_OltType_Type = OctetString
_OltType_Object = MibScalar
oltType = _OltType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 14, 1),
    _OltType_Type()
)
oltType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oltType.setStatus("current")


class _RouteEnable_Type(Integer32):
    """Custom type routeEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RouteEnable_Type.__name__ = "Integer32"
_RouteEnable_Object = MibScalar
routeEnable = _RouteEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 14, 2),
    _RouteEnable_Type()
)
routeEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeEnable.setStatus("current")
_ProtocolSupport_Type = Unsigned32
_ProtocolSupport_Object = MibScalar
protocolSupport = _ProtocolSupport_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 14, 3),
    _ProtocolSupport_Type()
)
protocolSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protocolSupport.setStatus("current")


class _Ipv6Enable_Type(Integer32):
    """Custom type ipv6Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Ipv6Enable_Type.__name__ = "Integer32"
_Ipv6Enable_Object = MibScalar
ipv6Enable = _Ipv6Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 14, 4),
    _Ipv6Enable_Type()
)
ipv6Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6Enable.setStatus("current")
_OltTypeVersion_Type = OctetString
_OltTypeVersion_Object = MibScalar
oltTypeVersion = _OltTypeVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 14, 5),
    _OltTypeVersion_Type()
)
oltTypeVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oltTypeVersion.setStatus("current")
_V1600dLoopback_ObjectIdentity = ObjectIdentity
v1600dLoopback = _V1600dLoopback_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15)
)


class _LoopbackEn_Type(Integer32):
    """Custom type loopbackEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LoopbackEn_Type.__name__ = "Integer32"
_LoopbackEn_Object = MibScalar
loopbackEn = _LoopbackEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 1),
    _LoopbackEn_Type()
)
loopbackEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopbackEn.setStatus("current")
_LoopbackCfg_ObjectIdentity = ObjectIdentity
loopbackCfg = _LoopbackCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 2)
)


class _Mode_Type(Integer32):
    """Custom type mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("onlyAlarm", 1),
          ("manualRecovery", 2),
          ("autoRecovery", 3))
    )


_Mode_Type.__name__ = "Integer32"
_Mode_Object = MibScalar
mode = _Mode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 2, 1),
    _Mode_Type()
)
mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mode.setStatus("current")


class _AgingTime_Type(Integer32):
    """Custom type agingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_AgingTime_Type.__name__ = "Integer32"
_AgingTime_Object = MibScalar
agingTime = _AgingTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 2, 2),
    _AgingTime_Type()
)
agingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    agingTime.setStatus("current")


class _Range_Type(Integer32):
    """Custom type range based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("uplink", 0),
          ("pon", 1),
          ("all", 2))
    )


_Range_Type.__name__ = "Integer32"
_Range_Object = MibScalar
range = _Range_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 2, 3),
    _Range_Type()
)
range.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    range.setStatus("current")
_LoopbackTable_Object = MibTable
loopbackTable = _LoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 3)
)
if mibBuilder.loadTexts:
    loopbackTable.setStatus("current")
_LoopbackEntry_Object = MibTableRow
loopbackEntry = _LoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 3, 1)
)
loopbackEntry.setIndexNames(
    (0, "V1600D", "interfaceS"),
)
if mibBuilder.loadTexts:
    loopbackEntry.setStatus("current")
_InterfaceS_Type = OctetString
_InterfaceS_Object = MibTableColumn
interfaceS = _InterfaceS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 3, 1, 1),
    _InterfaceS_Type()
)
interfaceS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceS.setStatus("current")


class _ModeS_Type(Integer32):
    """Custom type modeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noShutdown", 0),
          ("shutdown", 1))
    )


_ModeS_Type.__name__ = "Integer32"
_ModeS_Object = MibTableColumn
modeS = _ModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 3, 1, 2),
    _ModeS_Type()
)
modeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    modeS.setStatus("current")
_TimeS_Type = Integer32
_TimeS_Object = MibTableColumn
timeS = _TimeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 3, 1, 3),
    _TimeS_Type()
)
timeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeS.setStatus("current")
_SrcInterface_Type = OctetString
_SrcInterface_Object = MibTableColumn
srcInterface = _SrcInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 3, 1, 4),
    _SrcInterface_Type()
)
srcInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcInterface.setStatus("current")
_LoopbackPortCfgTable_Object = MibTable
loopbackPortCfgTable = _LoopbackPortCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 4)
)
if mibBuilder.loadTexts:
    loopbackPortCfgTable.setStatus("current")
_LoopbackPortCfgEntry_Object = MibTableRow
loopbackPortCfgEntry = _LoopbackPortCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 4, 1)
)
loopbackPortCfgEntry.setIndexNames(
    (0, "V1600D", "loopbackPort"),
)
if mibBuilder.loadTexts:
    loopbackPortCfgEntry.setStatus("current")
_LoopbackPort_Type = Integer32
_LoopbackPort_Object = MibTableColumn
loopbackPort = _LoopbackPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 4, 1, 1),
    _LoopbackPort_Type()
)
loopbackPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loopbackPort.setStatus("current")


class _LoopbackStatus_Type(Integer32):
    """Custom type loopbackStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_LoopbackStatus_Type.__name__ = "Integer32"
_LoopbackStatus_Object = MibTableColumn
loopbackStatus = _LoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 15, 4, 1, 2),
    _LoopbackStatus_Type()
)
loopbackStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopbackStatus.setStatus("current")
_V1600dRip_ObjectIdentity = ObjectIdentity
v1600dRip = _V1600dRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16)
)
_RipGlobalCfg_ObjectIdentity = ObjectIdentity
ripGlobalCfg = _RipGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1)
)


class _RipRouteEn_Type(Integer32):
    """Custom type ripRouteEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RipRouteEn_Type.__name__ = "Integer32"
_RipRouteEn_Object = MibScalar
ripRouteEn = _RipRouteEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 1),
    _RipRouteEn_Type()
)
ripRouteEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripRouteEn.setStatus("current")


class _UpdateTimer_Type(Integer32):
    """Custom type updateTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 2147483647),
    )


_UpdateTimer_Type.__name__ = "Integer32"
_UpdateTimer_Object = MibScalar
updateTimer = _UpdateTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 2),
    _UpdateTimer_Type()
)
updateTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    updateTimer.setStatus("current")


class _TimeoutTimer_Type(Integer32):
    """Custom type timeoutTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 2147483647),
    )


_TimeoutTimer_Type.__name__ = "Integer32"
_TimeoutTimer_Object = MibScalar
timeoutTimer = _TimeoutTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 3),
    _TimeoutTimer_Type()
)
timeoutTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeoutTimer.setStatus("current")


class _GarbageTimer_Type(Integer32):
    """Custom type garbageTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 2147483647),
    )


_GarbageTimer_Type.__name__ = "Integer32"
_GarbageTimer_Object = MibScalar
garbageTimer = _GarbageTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 4),
    _GarbageTimer_Type()
)
garbageTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    garbageTimer.setStatus("current")


class _DefMetric_Type(Integer32):
    """Custom type defMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DefMetric_Type.__name__ = "Integer32"
_DefMetric_Object = MibScalar
defMetric = _DefMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 5),
    _DefMetric_Type()
)
defMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    defMetric.setStatus("current")


class _Distance_Type(Integer32):
    """Custom type distance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Distance_Type.__name__ = "Integer32"
_Distance_Object = MibScalar
distance = _Distance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 6),
    _Distance_Type()
)
distance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    distance.setStatus("current")


class _Version_Type(Integer32):
    """Custom type version based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_Version_Type.__name__ = "Integer32"
_Version_Object = MibScalar
version = _Version_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 7),
    _Version_Type()
)
version.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    version.setStatus("current")
_KeyChainCfg_ObjectIdentity = ObjectIdentity
keyChainCfg = _KeyChainCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 8)
)
_KeyName_Type = OctetString
_KeyName_Object = MibScalar
keyName = _KeyName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 8, 1),
    _KeyName_Type()
)
keyName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    keyName.setStatus("current")


class _KeyId_Type(Integer32):
    """Custom type keyId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_KeyId_Type.__name__ = "Integer32"
_KeyId_Object = MibScalar
keyId = _KeyId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 8, 2),
    _KeyId_Type()
)
keyId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    keyId.setStatus("current")
_KeyChainString_Type = OctetString
_KeyChainString_Object = MibScalar
keyChainString = _KeyChainString_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 8, 3),
    _KeyChainString_Type()
)
keyChainString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    keyChainString.setStatus("current")


class _KeyAction_Type(Integer32):
    """Custom type keyAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_KeyAction_Type.__name__ = "Integer32"
_KeyAction_Object = MibScalar
keyAction = _KeyAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 8, 4),
    _KeyAction_Type()
)
keyAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    keyAction.setStatus("current")
_KeyChainTable_Object = MibTable
keyChainTable = _KeyChainTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 9)
)
if mibBuilder.loadTexts:
    keyChainTable.setStatus("current")
_KeyChainEntry_Object = MibTableRow
keyChainEntry = _KeyChainEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 9, 1)
)
keyChainEntry.setIndexNames(
    (0, "V1600D", "keyChainName"),
    (0, "V1600D", "keyChainId"),
)
if mibBuilder.loadTexts:
    keyChainEntry.setStatus("current")
_KeyChainName_Type = OctetString
_KeyChainName_Object = MibTableColumn
keyChainName = _KeyChainName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 9, 1, 1),
    _KeyChainName_Type()
)
keyChainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    keyChainName.setStatus("current")
_KeyChainId_Type = Integer32
_KeyChainId_Object = MibTableColumn
keyChainId = _KeyChainId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 9, 1, 2),
    _KeyChainId_Type()
)
keyChainId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    keyChainId.setStatus("current")
_KeyChainStr_Type = OctetString
_KeyChainStr_Object = MibTableColumn
keyChainStr = _KeyChainStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 9, 1, 3),
    _KeyChainStr_Type()
)
keyChainStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    keyChainStr.setStatus("current")
_OffsetListCfg_ObjectIdentity = ObjectIdentity
offsetListCfg = _OffsetListCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 10)
)


class _OffsetListId_Type(Integer32):
    """Custom type offsetListId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
        ValueRangeConstraint(100, 199),
        ValueRangeConstraint(1300, 1999),
        ValueRangeConstraint(2000, 2699),
    )


_OffsetListId_Type.__name__ = "Integer32"
_OffsetListId_Object = MibScalar
offsetListId = _OffsetListId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 10, 1),
    _OffsetListId_Type()
)
offsetListId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    offsetListId.setStatus("current")


class _OffsetType_Type(Integer32):
    """Custom type offsetType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2))
    )


_OffsetType_Type.__name__ = "Integer32"
_OffsetType_Object = MibScalar
offsetType = _OffsetType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 10, 2),
    _OffsetType_Type()
)
offsetType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    offsetType.setStatus("current")


class _MetricVal_Type(Integer32):
    """Custom type metricVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_MetricVal_Type.__name__ = "Integer32"
_MetricVal_Object = MibScalar
metricVal = _MetricVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 10, 3),
    _MetricVal_Type()
)
metricVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    metricVal.setStatus("current")
_VlanIfNum_Type = OctetString
_VlanIfNum_Object = MibScalar
vlanIfNum = _VlanIfNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 10, 4),
    _VlanIfNum_Type()
)
vlanIfNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanIfNum.setStatus("current")


class _OffsetListAction_Type(Integer32):
    """Custom type offsetListAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_OffsetListAction_Type.__name__ = "Integer32"
_OffsetListAction_Object = MibScalar
offsetListAction = _OffsetListAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 10, 5),
    _OffsetListAction_Type()
)
offsetListAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    offsetListAction.setStatus("current")
_OffsetTable_Object = MibTable
offsetTable = _OffsetTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 11)
)
if mibBuilder.loadTexts:
    offsetTable.setStatus("current")
_OffsetEntry_Object = MibTableRow
offsetEntry = _OffsetEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 11, 1)
)
offsetEntry.setIndexNames(
    (0, "V1600D", "id"),
    (0, "V1600D", "type"),
    (0, "V1600D", "metric"),
    (0, "V1600D", "vlan"),
)
if mibBuilder.loadTexts:
    offsetEntry.setStatus("current")
_Id_Type = Integer32
_Id_Object = MibTableColumn
id = _Id_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 11, 1, 1),
    _Id_Type()
)
id.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    id.setStatus("current")


class _Type_Type(Integer32):
    """Custom type type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2))
    )


_Type_Type.__name__ = "Integer32"
_Type_Object = MibTableColumn
type = _Type_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 11, 1, 2),
    _Type_Type()
)
type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    type.setStatus("current")
_Metric_Type = Integer32
_Metric_Object = MibTableColumn
metric = _Metric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 11, 1, 3),
    _Metric_Type()
)
metric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    metric.setStatus("current")
_Vlan_Type = OctetString
_Vlan_Object = MibTableColumn
vlan = _Vlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 11, 1, 4),
    _Vlan_Type()
)
vlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlan.setStatus("current")
_RipRedistribute_ObjectIdentity = ObjectIdentity
ripRedistribute = _RipRedistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 12)
)


class _RipRedis_Type(Integer32):
    """Custom type ripRedis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 1),
          ("connected", 2),
          ("static", 3),
          ("ospf", 4))
    )


_RipRedis_Type.__name__ = "Integer32"
_RipRedis_Object = MibScalar
ripRedis = _RipRedis_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 12, 1),
    _RipRedis_Type()
)
ripRedis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripRedis.setStatus("current")


class _RipRedisMetric_Type(Integer32):
    """Custom type ripRedisMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 16),
    )


_RipRedisMetric_Type.__name__ = "Integer32"
_RipRedisMetric_Object = MibScalar
ripRedisMetric = _RipRedisMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 12, 2),
    _RipRedisMetric_Type()
)
ripRedisMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripRedisMetric.setStatus("current")


class _RipRedisAction_Type(Integer32):
    """Custom type ripRedisAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_RipRedisAction_Type.__name__ = "Integer32"
_RipRedisAction_Object = MibScalar
ripRedisAction = _RipRedisAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 12, 3),
    _RipRedisAction_Type()
)
ripRedisAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripRedisAction.setStatus("current")
_RipRedistributeTable_Object = MibTable
ripRedistributeTable = _RipRedistributeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 13)
)
if mibBuilder.loadTexts:
    ripRedistributeTable.setStatus("current")
_RipRedistributeEntry_Object = MibTableRow
ripRedistributeEntry = _RipRedistributeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 13, 1)
)
ripRedistributeEntry.setIndexNames(
    (0, "V1600D", "ripRedistributeType"),
)
if mibBuilder.loadTexts:
    ripRedistributeEntry.setStatus("current")


class _RipRedistributeType_Type(Integer32):
    """Custom type ripRedistributeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 1),
          ("connected", 2),
          ("static", 3),
          ("ospf", 4))
    )


_RipRedistributeType_Type.__name__ = "Integer32"
_RipRedistributeType_Object = MibTableColumn
ripRedistributeType = _RipRedistributeType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 13, 1, 1),
    _RipRedistributeType_Type()
)
ripRedistributeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripRedistributeType.setStatus("current")
_RipRedistributeMetric_Type = Integer32
_RipRedistributeMetric_Object = MibTableColumn
ripRedistributeMetric = _RipRedistributeMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 13, 1, 2),
    _RipRedistributeMetric_Type()
)
ripRedistributeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripRedistributeMetric.setStatus("current")
_RipDefaultRedistribute_ObjectIdentity = ObjectIdentity
ripDefaultRedistribute = _RipDefaultRedistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 14)
)


class _RipDefRedis_Type(Integer32):
    """Custom type ripDefRedis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RipDefRedis_Type.__name__ = "Integer32"
_RipDefRedis_Object = MibScalar
ripDefRedis = _RipDefRedis_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 1, 14, 1),
    _RipDefRedis_Type()
)
ripDefRedis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripDefRedis.setStatus("current")
_RipVlanTable_Object = MibTable
ripVlanTable = _RipVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2)
)
if mibBuilder.loadTexts:
    ripVlanTable.setStatus("current")
_RipVlanEntry_Object = MibTableRow
ripVlanEntry = _RipVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1)
)
ripVlanEntry.setIndexNames(
    (0, "V1600D", "ripVlanAddress"),
)
if mibBuilder.loadTexts:
    ripVlanEntry.setStatus("current")
_RipVlanAddress_Type = IpAddress
_RipVlanAddress_Object = MibTableColumn
ripVlanAddress = _RipVlanAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 1),
    _RipVlanAddress_Type()
)
ripVlanAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripVlanAddress.setStatus("current")


class _RipAuthType_Type(Integer32):
    """Custom type ripAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noAuthentication", 1),
          ("simplePassword", 2),
          ("md5", 3))
    )


_RipAuthType_Type.__name__ = "Integer32"
_RipAuthType_Object = MibTableColumn
ripAuthType = _RipAuthType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 2),
    _RipAuthType_Type()
)
ripAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripAuthType.setStatus("current")
_RipAuthStr_Type = OctetString
_RipAuthStr_Object = MibTableColumn
ripAuthStr = _RipAuthStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 3),
    _RipAuthStr_Type()
)
ripAuthStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripAuthStr.setStatus("current")
_AuthKeyChain_Type = OctetString
_AuthKeyChain_Object = MibTableColumn
authKeyChain = _AuthKeyChain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 4),
    _AuthKeyChain_Type()
)
authKeyChain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authKeyChain.setStatus("current")


class _SendVer_Type(Integer32):
    """Custom type sendVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("version1", 1),
          ("version2", 2),
          ("version1and2", 3))
    )


_SendVer_Type.__name__ = "Integer32"
_SendVer_Object = MibTableColumn
sendVer = _SendVer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 5),
    _SendVer_Type()
)
sendVer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sendVer.setStatus("current")


class _RecvVer_Type(Integer32):
    """Custom type recvVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("version1", 1),
          ("version2", 2),
          ("version1and2", 3))
    )


_RecvVer_Type.__name__ = "Integer32"
_RecvVer_Object = MibTableColumn
recvVer = _RecvVer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 6),
    _RecvVer_Type()
)
recvVer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    recvVer.setStatus("current")
_RipVlanstatus_Type = RowStatus
_RipVlanstatus_Object = MibTableColumn
ripVlanstatus = _RipVlanstatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 2, 1, 7),
    _RipVlanstatus_Type()
)
ripVlanstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ripVlanstatus.setStatus("current")
_RipTable_Object = MibTable
ripTable = _RipTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3)
)
if mibBuilder.loadTexts:
    ripTable.setStatus("current")
_RipEntry_Object = MibTableRow
ripEntry = _RipEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1)
)
ripEntry.setIndexNames(
    (0, "V1600D", "ripNetwork"),
)
if mibBuilder.loadTexts:
    ripEntry.setStatus("current")
_RipNetworkType_Type = OctetString
_RipNetworkType_Object = MibTableColumn
ripNetworkType = _RipNetworkType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 1),
    _RipNetworkType_Type()
)
ripNetworkType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripNetworkType.setStatus("current")
_RipNetwork_Type = OctetString
_RipNetwork_Object = MibTableColumn
ripNetwork = _RipNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 2),
    _RipNetwork_Type()
)
ripNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripNetwork.setStatus("current")
_RipNextHop_Type = IpAddress
_RipNextHop_Object = MibTableColumn
ripNextHop = _RipNextHop_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 3),
    _RipNextHop_Type()
)
ripNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripNextHop.setStatus("current")
_RipMetric_Type = Integer32
_RipMetric_Object = MibTableColumn
ripMetric = _RipMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 4),
    _RipMetric_Type()
)
ripMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripMetric.setStatus("current")
_RipFrom_Type = OctetString
_RipFrom_Object = MibTableColumn
ripFrom = _RipFrom_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 5),
    _RipFrom_Type()
)
ripFrom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripFrom.setStatus("current")
_RipTag_Type = Integer32
_RipTag_Object = MibTableColumn
ripTag = _RipTag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 6),
    _RipTag_Type()
)
ripTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripTag.setStatus("current")
_RipTime_Type = OctetString
_RipTime_Object = MibTableColumn
ripTime = _RipTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 3, 1, 7),
    _RipTime_Type()
)
ripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripTime.setStatus("current")
_RipPeerTable_Object = MibTable
ripPeerTable = _RipPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4)
)
if mibBuilder.loadTexts:
    ripPeerTable.setStatus("current")
_RipPeerEntry_Object = MibTableRow
ripPeerEntry = _RipPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1)
)
ripPeerEntry.setIndexNames(
    (0, "V1600D", "ripPeerAddress"),
)
if mibBuilder.loadTexts:
    ripPeerEntry.setStatus("current")
_RipPeerAddress_Type = IpAddress
_RipPeerAddress_Object = MibTableColumn
ripPeerAddress = _RipPeerAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1, 1),
    _RipPeerAddress_Type()
)
ripPeerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripPeerAddress.setStatus("current")
_RipPeerVersion_Type = Integer32
_RipPeerVersion_Object = MibTableColumn
ripPeerVersion = _RipPeerVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1, 2),
    _RipPeerVersion_Type()
)
ripPeerVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripPeerVersion.setStatus("current")
_RipPeerDistance_Type = Integer32
_RipPeerDistance_Object = MibTableColumn
ripPeerDistance = _RipPeerDistance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1, 3),
    _RipPeerDistance_Type()
)
ripPeerDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripPeerDistance.setStatus("current")
_RipPeerRcvBadPackets_Type = Counter32
_RipPeerRcvBadPackets_Object = MibTableColumn
ripPeerRcvBadPackets = _RipPeerRcvBadPackets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1, 4),
    _RipPeerRcvBadPackets_Type()
)
ripPeerRcvBadPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripPeerRcvBadPackets.setStatus("current")
_RipPeerRcvBadRoutes_Type = Counter32
_RipPeerRcvBadRoutes_Object = MibTableColumn
ripPeerRcvBadRoutes = _RipPeerRcvBadRoutes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1, 5),
    _RipPeerRcvBadRoutes_Type()
)
ripPeerRcvBadRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripPeerRcvBadRoutes.setStatus("current")
_RipPeerLastUpdate_Type = TimeTicks
_RipPeerLastUpdate_Object = MibTableColumn
ripPeerLastUpdate = _RipPeerLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 16, 4, 1, 6),
    _RipPeerLastUpdate_Type()
)
ripPeerLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripPeerLastUpdate.setStatus("current")
_V1600dOspf_ObjectIdentity = ObjectIdentity
v1600dOspf = _V1600dOspf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17)
)
_OspfGlobal_ObjectIdentity = ObjectIdentity
ospfGlobal = _OspfGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1)
)


class _OspfRouteEn_Type(Integer32):
    """Custom type ospfRouteEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_OspfRouteEn_Type.__name__ = "Integer32"
_OspfRouteEn_Object = MibScalar
ospfRouteEn = _OspfRouteEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 1),
    _OspfRouteEn_Type()
)
ospfRouteEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfRouteEn.setStatus("current")
_OspfGlobalRouterId_Type = IpAddress
_OspfGlobalRouterId_Object = MibScalar
ospfGlobalRouterId = _OspfGlobalRouterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 2),
    _OspfGlobalRouterId_Type()
)
ospfGlobalRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfGlobalRouterId.setStatus("current")
_OspfRedistribute_ObjectIdentity = ObjectIdentity
ospfRedistribute = _OspfRedistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 3)
)


class _Redistribute_Type(Integer32):
    """Custom type redistribute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 1),
          ("connected", 2),
          ("static", 3),
          ("rip", 4))
    )


_Redistribute_Type.__name__ = "Integer32"
_Redistribute_Object = MibScalar
redistribute = _Redistribute_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 3, 1),
    _Redistribute_Type()
)
redistribute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistribute.setStatus("current")


class _RedisMetric_Type(Integer32):
    """Custom type redisMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 16777214),
    )


_RedisMetric_Type.__name__ = "Integer32"
_RedisMetric_Object = MibScalar
redisMetric = _RedisMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 3, 2),
    _RedisMetric_Type()
)
redisMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redisMetric.setStatus("current")


class _RedisMetricType_Type(Integer32):
    """Custom type redisMetricType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 2),
    )


_RedisMetricType_Type.__name__ = "Integer32"
_RedisMetricType_Object = MibScalar
redisMetricType = _RedisMetricType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 3, 3),
    _RedisMetricType_Type()
)
redisMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redisMetricType.setStatus("current")
_RedisRouteMap_Type = OctetString
_RedisRouteMap_Object = MibScalar
redisRouteMap = _RedisRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 3, 4),
    _RedisRouteMap_Type()
)
redisRouteMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redisRouteMap.setStatus("current")


class _RedisAction_Type(Integer32):
    """Custom type redisAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_RedisAction_Type.__name__ = "Integer32"
_RedisAction_Object = MibScalar
redisAction = _RedisAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 3, 5),
    _RedisAction_Type()
)
redisAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redisAction.setStatus("current")
_OspfRedistributeTable_Object = MibTable
ospfRedistributeTable = _OspfRedistributeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 4)
)
if mibBuilder.loadTexts:
    ospfRedistributeTable.setStatus("current")
_OspfRedistributeEntry_Object = MibTableRow
ospfRedistributeEntry = _OspfRedistributeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 4, 1)
)
ospfRedistributeEntry.setIndexNames(
    (0, "V1600D", "redistributeType"),
)
if mibBuilder.loadTexts:
    ospfRedistributeEntry.setStatus("current")


class _RedistributeType_Type(Integer32):
    """Custom type redistributeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 1),
          ("connected", 2),
          ("static", 3),
          ("rip", 4))
    )


_RedistributeType_Type.__name__ = "Integer32"
_RedistributeType_Object = MibTableColumn
redistributeType = _RedistributeType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 4, 1, 1),
    _RedistributeType_Type()
)
redistributeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redistributeType.setStatus("current")
_RedistributeMetric_Type = Integer32
_RedistributeMetric_Object = MibTableColumn
redistributeMetric = _RedistributeMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 4, 1, 2),
    _RedistributeMetric_Type()
)
redistributeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redistributeMetric.setStatus("current")
_MetricType_Type = Integer32
_MetricType_Object = MibTableColumn
metricType = _MetricType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 4, 1, 3),
    _MetricType_Type()
)
metricType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    metricType.setStatus("current")
_RedistributeRouteMap_Type = OctetString
_RedistributeRouteMap_Object = MibTableColumn
redistributeRouteMap = _RedistributeRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 4, 1, 4),
    _RedistributeRouteMap_Type()
)
redistributeRouteMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redistributeRouteMap.setStatus("current")
_OspfDefaultRedistribute_ObjectIdentity = ObjectIdentity
ospfDefaultRedistribute = _OspfDefaultRedistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 5)
)


class _OspfDefRedis_Type(Integer32):
    """Custom type ospfDefRedis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OspfDefRedis_Type.__name__ = "Integer32"
_OspfDefRedis_Object = MibScalar
ospfDefRedis = _OspfDefRedis_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 5, 1),
    _OspfDefRedis_Type()
)
ospfDefRedis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfDefRedis.setStatus("current")


class _Always_Type(Integer32):
    """Custom type always based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Always_Type.__name__ = "Integer32"
_Always_Object = MibScalar
always = _Always_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 5, 2),
    _Always_Type()
)
always.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    always.setStatus("current")


class _DefRedisMetric_Type(Integer32):
    """Custom type defRedisMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 16777214),
    )


_DefRedisMetric_Type.__name__ = "Integer32"
_DefRedisMetric_Object = MibScalar
defRedisMetric = _DefRedisMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 5, 3),
    _DefRedisMetric_Type()
)
defRedisMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    defRedisMetric.setStatus("current")


class _DefRedisMetricType_Type(Integer32):
    """Custom type defRedisMetricType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 2),
    )


_DefRedisMetricType_Type.__name__ = "Integer32"
_DefRedisMetricType_Object = MibScalar
defRedisMetricType = _DefRedisMetricType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 5, 4),
    _DefRedisMetricType_Type()
)
defRedisMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    defRedisMetricType.setStatus("current")


class _DefRedisAction_Type(Integer32):
    """Custom type defRedisAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_DefRedisAction_Type.__name__ = "Integer32"
_DefRedisAction_Object = MibScalar
defRedisAction = _DefRedisAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 1, 5, 5),
    _DefRedisAction_Type()
)
defRedisAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    defRedisAction.setStatus("current")
_OspfArea_ObjectIdentity = ObjectIdentity
ospfArea = _OspfArea_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2)
)
_OspfRouteNetworking_ObjectIdentity = ObjectIdentity
ospfRouteNetworking = _OspfRouteNetworking_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 1)
)
_Network_Type = OctetString
_Network_Object = MibScalar
network = _Network_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 1, 1),
    _Network_Type()
)
network.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    network.setStatus("current")
_Area_Type = OctetString
_Area_Object = MibScalar
area = _Area_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 1, 2),
    _Area_Type()
)
area.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    area.setStatus("current")


class _OspfNetworkAction_Type(Integer32):
    """Custom type ospfNetworkAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_OspfNetworkAction_Type.__name__ = "Integer32"
_OspfNetworkAction_Object = MibScalar
ospfNetworkAction = _OspfNetworkAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 1, 3),
    _OspfNetworkAction_Type()
)
ospfNetworkAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfNetworkAction.setStatus("current")
_OspfRouteNetworkingTable_Object = MibTable
ospfRouteNetworkingTable = _OspfRouteNetworkingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 2)
)
if mibBuilder.loadTexts:
    ospfRouteNetworkingTable.setStatus("current")
_OspfRouteNetworkingEntry_Object = MibTableRow
ospfRouteNetworkingEntry = _OspfRouteNetworkingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 2, 1)
)
ospfRouteNetworkingEntry.setIndexNames(
    (0, "V1600D", "ospfNetwork"),
)
if mibBuilder.loadTexts:
    ospfRouteNetworkingEntry.setStatus("current")
_RouterId_Type = IpAddress
_RouterId_Object = MibTableColumn
routerId = _RouterId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 2, 1, 1),
    _RouterId_Type()
)
routerId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routerId.setStatus("current")
_OspfNetwork_Type = OctetString
_OspfNetwork_Object = MibTableColumn
ospfNetwork = _OspfNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 2, 1, 2),
    _OspfNetwork_Type()
)
ospfNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfNetwork.setStatus("current")
_AreaId_Type = IpAddress
_AreaId_Object = MibTableColumn
areaId = _AreaId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 2, 1, 3),
    _AreaId_Type()
)
areaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    areaId.setStatus("current")
_OspfAreaTypeCfg_ObjectIdentity = ObjectIdentity
ospfAreaTypeCfg = _OspfAreaTypeCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 3)
)
_OspfAreaCfg_Type = IpAddress
_OspfAreaCfg_Object = MibScalar
ospfAreaCfg = _OspfAreaCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 3, 1),
    _OspfAreaCfg_Type()
)
ospfAreaCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfAreaCfg.setStatus("current")


class _AreaTypeCfg_Type(Integer32):
    """Custom type areaTypeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("stub", 1),
          ("nssa", 2))
    )


_AreaTypeCfg_Type.__name__ = "Integer32"
_AreaTypeCfg_Object = MibScalar
areaTypeCfg = _AreaTypeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 3, 2),
    _AreaTypeCfg_Type()
)
areaTypeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    areaTypeCfg.setStatus("current")


class _NoSummaryCfg_Type(Integer32):
    """Custom type noSummaryCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NoSummaryCfg_Type.__name__ = "Integer32"
_NoSummaryCfg_Object = MibScalar
noSummaryCfg = _NoSummaryCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 3, 3),
    _NoSummaryCfg_Type()
)
noSummaryCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    noSummaryCfg.setStatus("current")


class _AreaActionCfg_Type(Integer32):
    """Custom type areaActionCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_AreaActionCfg_Type.__name__ = "Integer32"
_AreaActionCfg_Object = MibScalar
areaActionCfg = _AreaActionCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 3, 4),
    _AreaActionCfg_Type()
)
areaActionCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    areaActionCfg.setStatus("current")
_OspfAreaTypeTable_Object = MibTable
ospfAreaTypeTable = _OspfAreaTypeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 4)
)
if mibBuilder.loadTexts:
    ospfAreaTypeTable.setStatus("current")
_OspfAreaTypeEntry_Object = MibTableRow
ospfAreaTypeEntry = _OspfAreaTypeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 4, 1)
)
ospfAreaTypeEntry.setIndexNames(
    (0, "V1600D", "getArea"),
)
if mibBuilder.loadTexts:
    ospfAreaTypeEntry.setStatus("current")
_GetArea_Type = IpAddress
_GetArea_Object = MibTableColumn
getArea = _GetArea_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 4, 1, 1),
    _GetArea_Type()
)
getArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    getArea.setStatus("current")


class _AreaType_Type(Integer32):
    """Custom type areaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("stub", 1),
          ("nssa", 2))
    )


_AreaType_Type.__name__ = "Integer32"
_AreaType_Object = MibTableColumn
areaType = _AreaType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 4, 1, 2),
    _AreaType_Type()
)
areaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    areaType.setStatus("current")


class _NoSummary_Type(Integer32):
    """Custom type noSummary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NoSummary_Type.__name__ = "Integer32"
_NoSummary_Object = MibTableColumn
noSummary = _NoSummary_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 4, 1, 3),
    _NoSummary_Type()
)
noSummary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    noSummary.setStatus("current")
_OspfAreaSummaryCfg_ObjectIdentity = ObjectIdentity
ospfAreaSummaryCfg = _OspfAreaSummaryCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 5)
)
_OspfSummaryArea_Type = IpAddress
_OspfSummaryArea_Object = MibScalar
ospfSummaryArea = _OspfSummaryArea_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 5, 1),
    _OspfSummaryArea_Type()
)
ospfSummaryArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfSummaryArea.setStatus("current")
_IpAddress_Type = IpAddress
_IpAddress_Object = MibScalar
ipAddress = _IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 5, 2),
    _IpAddress_Type()
)
ipAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAddress.setStatus("current")
_SubnetMask_Type = IpAddress
_SubnetMask_Object = MibScalar
subnetMask = _SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 5, 3),
    _SubnetMask_Type()
)
subnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    subnetMask.setStatus("current")


class _AreaSummaryAction_Type(Integer32):
    """Custom type areaSummaryAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_AreaSummaryAction_Type.__name__ = "Integer32"
_AreaSummaryAction_Object = MibScalar
areaSummaryAction = _AreaSummaryAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 5, 4),
    _AreaSummaryAction_Type()
)
areaSummaryAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    areaSummaryAction.setStatus("current")
_OspfSummaryTable_Object = MibTable
ospfSummaryTable = _OspfSummaryTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 6)
)
if mibBuilder.loadTexts:
    ospfSummaryTable.setStatus("current")
_OspfSummaryEntry_Object = MibTableRow
ospfSummaryEntry = _OspfSummaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 6, 1)
)
ospfSummaryEntry.setIndexNames(
    (0, "V1600D", "summaryArea"),
    (0, "V1600D", "summaryNetwork"),
)
if mibBuilder.loadTexts:
    ospfSummaryEntry.setStatus("current")
_SummaryArea_Type = IpAddress
_SummaryArea_Object = MibTableColumn
summaryArea = _SummaryArea_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 6, 1, 1),
    _SummaryArea_Type()
)
summaryArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    summaryArea.setStatus("current")
_SummaryNetwork_Type = OctetString
_SummaryNetwork_Object = MibTableColumn
summaryNetwork = _SummaryNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 2, 6, 1, 2),
    _SummaryNetwork_Type()
)
summaryNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    summaryNetwork.setStatus("current")
_OspfInterface_ObjectIdentity = ObjectIdentity
ospfInterface = _OspfInterface_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3)
)
_OspfInterfaceTable_Object = MibTable
ospfInterfaceTable = _OspfInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1)
)
if mibBuilder.loadTexts:
    ospfInterfaceTable.setStatus("current")
_OspfInterfaceEntry_Object = MibTableRow
ospfInterfaceEntry = _OspfInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1)
)
ospfInterfaceEntry.setIndexNames(
    (0, "V1600D", "ospfIfAddress"),
)
if mibBuilder.loadTexts:
    ospfInterfaceEntry.setStatus("current")
_OspfIfAddress_Type = IpAddress
_OspfIfAddress_Object = MibTableColumn
ospfIfAddress = _OspfIfAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 1),
    _OspfIfAddress_Type()
)
ospfIfAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfIfAddress.setStatus("current")


class _Cost_Type(Integer32):
    """Custom type cost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Cost_Type.__name__ = "Integer32"
_Cost_Object = MibTableColumn
cost = _Cost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 2),
    _Cost_Type()
)
cost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cost.setStatus("current")


class _InterPri_Type(Integer32):
    """Custom type interPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_InterPri_Type.__name__ = "Integer32"
_InterPri_Object = MibTableColumn
interPri = _InterPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 3),
    _InterPri_Type()
)
interPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interPri.setStatus("current")


class _RetransVal_Type(Integer32):
    """Custom type retransVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 65535),
    )


_RetransVal_Type.__name__ = "Integer32"
_RetransVal_Object = MibTableColumn
retransVal = _RetransVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 4),
    _RetransVal_Type()
)
retransVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    retransVal.setStatus("current")


class _TransDelay_Type(Integer32):
    """Custom type transDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_TransDelay_Type.__name__ = "Integer32"
_TransDelay_Object = MibTableColumn
transDelay = _TransDelay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 5),
    _TransDelay_Type()
)
transDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    transDelay.setStatus("current")


class _HelloVal_Type(Integer32):
    """Custom type helloVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HelloVal_Type.__name__ = "Integer32"
_HelloVal_Object = MibTableColumn
helloVal = _HelloVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 6),
    _HelloVal_Type()
)
helloVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    helloVal.setStatus("current")


class _DeadVal_Type(Integer32):
    """Custom type deadVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DeadVal_Type.__name__ = "Integer32"
_DeadVal_Object = MibTableColumn
deadVal = _DeadVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 7),
    _DeadVal_Type()
)
deadVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deadVal.setStatus("current")


class _Auth_Type(Integer32):
    """Custom type auth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("text", 1),
          ("md5", 2))
    )


_Auth_Type.__name__ = "Integer32"
_Auth_Object = MibTableColumn
auth = _Auth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 8),
    _Auth_Type()
)
auth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    auth.setStatus("current")


class _Key_Type(Integer32):
    """Custom type key based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Key_Type.__name__ = "Integer32"
_Key_Object = MibTableColumn
key = _Key_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 10),
    _Key_Type()
)
key.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    key.setStatus("current")
_AuthString_Type = OctetString
_AuthString_Object = MibTableColumn
authString = _AuthString_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 3, 1, 1, 11),
    _AuthString_Type()
)
authString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authString.setStatus("current")
_OspfInformation_ObjectIdentity = ObjectIdentity
ospfInformation = _OspfInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4)
)
_OspfNeighborTable_Object = MibTable
ospfNeighborTable = _OspfNeighborTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1)
)
if mibBuilder.loadTexts:
    ospfNeighborTable.setStatus("current")
_OspfNeighborEntry_Object = MibTableRow
ospfNeighborEntry = _OspfNeighborEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1)
)
ospfNeighborEntry.setIndexNames(
    (0, "V1600D", "neighborId"),
    (0, "V1600D", "address"),
)
if mibBuilder.loadTexts:
    ospfNeighborEntry.setStatus("current")
_NeighborId_Type = IpAddress
_NeighborId_Object = MibTableColumn
neighborId = _NeighborId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 1),
    _NeighborId_Type()
)
neighborId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborId.setStatus("current")
_Priority_Type = Integer32
_Priority_Object = MibTableColumn
priority = _Priority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 2),
    _Priority_Type()
)
priority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priority.setStatus("current")
_State_Type = OctetString
_State_Object = MibTableColumn
state = _State_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 3),
    _State_Type()
)
state.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    state.setStatus("current")
_DeadTime_Type = OctetString
_DeadTime_Object = MibTableColumn
deadTime = _DeadTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 4),
    _DeadTime_Type()
)
deadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deadTime.setStatus("current")
_Address_Type = IpAddress
_Address_Object = MibTableColumn
address = _Address_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 5),
    _Address_Type()
)
address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    address.setStatus("current")
_Interface_Type = OctetString
_Interface_Object = MibTableColumn
interface = _Interface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 6),
    _Interface_Type()
)
interface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interface.setStatus("current")
_Rxmtl_Type = Integer32
_Rxmtl_Object = MibTableColumn
rxmtl = _Rxmtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 7),
    _Rxmtl_Type()
)
rxmtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rxmtl.setStatus("current")
_Rqstl_Type = Integer32
_Rqstl_Object = MibTableColumn
rqstl = _Rqstl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 8),
    _Rqstl_Type()
)
rqstl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rqstl.setStatus("current")
_Dbsml_Type = Integer32
_Dbsml_Object = MibTableColumn
dbsml = _Dbsml_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 1, 1, 9),
    _Dbsml_Type()
)
dbsml.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dbsml.setStatus("current")
_OspfRoutingTable_ObjectIdentity = ObjectIdentity
ospfRoutingTable = _OspfRoutingTable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2)
)
_OspfNetworkRoutingTable_Object = MibTable
ospfNetworkRoutingTable = _OspfNetworkRoutingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1)
)
if mibBuilder.loadTexts:
    ospfNetworkRoutingTable.setStatus("current")
_OspfNetworkRoutingEntry_Object = MibTableRow
ospfNetworkRoutingEntry = _OspfNetworkRoutingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1, 1)
)
ospfNetworkRoutingEntry.setIndexNames(
    (0, "V1600D", "destinationType"),
    (0, "V1600D", "routingNetwork"),
)
if mibBuilder.loadTexts:
    ospfNetworkRoutingEntry.setStatus("current")
_DestinationType_Type = OctetString
_DestinationType_Object = MibTableColumn
destinationType = _DestinationType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1, 1, 1),
    _DestinationType_Type()
)
destinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    destinationType.setStatus("current")
_RoutingNetwork_Type = OctetString
_RoutingNetwork_Object = MibTableColumn
routingNetwork = _RoutingNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1, 1, 2),
    _RoutingNetwork_Type()
)
routingNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routingNetwork.setStatus("current")
_RoutingCost_Type = Integer32
_RoutingCost_Object = MibTableColumn
routingCost = _RoutingCost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1, 1, 3),
    _RoutingCost_Type()
)
routingCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routingCost.setStatus("current")
_RoutingArea_Type = OctetString
_RoutingArea_Object = MibTableColumn
routingArea = _RoutingArea_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1, 1, 4),
    _RoutingArea_Type()
)
routingArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routingArea.setStatus("current")
_RoutingInterface_Type = OctetString
_RoutingInterface_Object = MibTableColumn
routingInterface = _RoutingInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 1, 1, 5),
    _RoutingInterface_Type()
)
routingInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routingInterface.setStatus("current")
_OspfRouterRoutingTable_Object = MibTable
ospfRouterRoutingTable = _OspfRouterRoutingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2)
)
if mibBuilder.loadTexts:
    ospfRouterRoutingTable.setStatus("current")
_OspfRouterRoutingEntry_Object = MibTableRow
ospfRouterRoutingEntry = _OspfRouterRoutingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2, 1)
)
ospfRouterRoutingEntry.setIndexNames(
    (0, "V1600D", "routerDesType"),
    (0, "V1600D", "routerNetwork"),
)
if mibBuilder.loadTexts:
    ospfRouterRoutingEntry.setStatus("current")
_RouterDesType_Type = OctetString
_RouterDesType_Object = MibTableColumn
routerDesType = _RouterDesType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2, 1, 1),
    _RouterDesType_Type()
)
routerDesType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routerDesType.setStatus("current")
_RouterNetwork_Type = OctetString
_RouterNetwork_Object = MibTableColumn
routerNetwork = _RouterNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2, 1, 2),
    _RouterNetwork_Type()
)
routerNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routerNetwork.setStatus("current")
_RouterCost_Type = Integer32
_RouterCost_Object = MibTableColumn
routerCost = _RouterCost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2, 1, 3),
    _RouterCost_Type()
)
routerCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routerCost.setStatus("current")
_AreaOrtype_Type = OctetString
_AreaOrtype_Object = MibTableColumn
areaOrtype = _AreaOrtype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2, 1, 4),
    _AreaOrtype_Type()
)
areaOrtype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    areaOrtype.setStatus("current")
_RouterInterface_Type = OctetString
_RouterInterface_Object = MibTableColumn
routerInterface = _RouterInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 2, 1, 5),
    _RouterInterface_Type()
)
routerInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routerInterface.setStatus("current")
_OspfExternalRoutingTable_Object = MibTable
ospfExternalRoutingTable = _OspfExternalRoutingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3)
)
if mibBuilder.loadTexts:
    ospfExternalRoutingTable.setStatus("current")
_OspfExternalRoutingEntry_Object = MibTableRow
ospfExternalRoutingEntry = _OspfExternalRoutingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3, 1)
)
ospfExternalRoutingEntry.setIndexNames(
    (0, "V1600D", "externalDesType"),
    (0, "V1600D", "externalNetwork"),
)
if mibBuilder.loadTexts:
    ospfExternalRoutingEntry.setStatus("current")
_ExternalDesType_Type = OctetString
_ExternalDesType_Object = MibTableColumn
externalDesType = _ExternalDesType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3, 1, 1),
    _ExternalDesType_Type()
)
externalDesType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalDesType.setStatus("current")
_ExternalNetwork_Type = OctetString
_ExternalNetwork_Object = MibTableColumn
externalNetwork = _ExternalNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3, 1, 2),
    _ExternalNetwork_Type()
)
externalNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalNetwork.setStatus("current")
_CostOrTypeTwoCost_Type = OctetString
_CostOrTypeTwoCost_Object = MibTableColumn
costOrTypeTwoCost = _CostOrTypeTwoCost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3, 1, 3),
    _CostOrTypeTwoCost_Type()
)
costOrTypeTwoCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    costOrTypeTwoCost.setStatus("current")
_ExternalTag_Type = Integer32
_ExternalTag_Object = MibTableColumn
externalTag = _ExternalTag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3, 1, 4),
    _ExternalTag_Type()
)
externalTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalTag.setStatus("current")
_ExternalInterface_Type = OctetString
_ExternalInterface_Object = MibTableColumn
externalInterface = _ExternalInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 2, 3, 1, 5),
    _ExternalInterface_Type()
)
externalInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    externalInterface.setStatus("current")
_OspfDatabaseTable_Object = MibTable
ospfDatabaseTable = _OspfDatabaseTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3)
)
if mibBuilder.loadTexts:
    ospfDatabaseTable.setStatus("current")
_OspfDatabaseEntry_Object = MibTableRow
ospfDatabaseEntry = _OspfDatabaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1)
)
ospfDatabaseEntry.setIndexNames(
    (0, "V1600D", "lsaArea"),
    (0, "V1600D", "lsaType"),
    (0, "V1600D", "linkId"),
)
if mibBuilder.loadTexts:
    ospfDatabaseEntry.setStatus("current")
_LsaArea_Type = OctetString
_LsaArea_Object = MibTableColumn
lsaArea = _LsaArea_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 1),
    _LsaArea_Type()
)
lsaArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lsaArea.setStatus("current")
_LsaType_Type = OctetString
_LsaType_Object = MibTableColumn
lsaType = _LsaType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 2),
    _LsaType_Type()
)
lsaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lsaType.setStatus("current")
_LinkId_Type = IpAddress
_LinkId_Object = MibTableColumn
linkId = _LinkId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 3),
    _LinkId_Type()
)
linkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkId.setStatus("current")
_AdvRouter_Type = IpAddress
_AdvRouter_Object = MibTableColumn
advRouter = _AdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 4),
    _AdvRouter_Type()
)
advRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    advRouter.setStatus("current")
_Age_Type = Integer32
_Age_Object = MibTableColumn
age = _Age_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 5),
    _Age_Type()
)
age.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    age.setStatus("current")
_Sequence_Type = OctetString
_Sequence_Object = MibTableColumn
sequence = _Sequence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 6),
    _Sequence_Type()
)
sequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sequence.setStatus("current")
_CkSum_Type = OctetString
_CkSum_Object = MibTableColumn
ckSum = _CkSum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 7),
    _CkSum_Type()
)
ckSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ckSum.setStatus("current")
_LinkCount_Type = Integer32
_LinkCount_Object = MibTableColumn
linkCount = _LinkCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 8),
    _LinkCount_Type()
)
linkCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkCount.setStatus("current")
_Route_Type = OctetString
_Route_Object = MibTableColumn
route = _Route_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 17, 4, 3, 1, 9),
    _Route_Type()
)
route.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    route.setStatus("current")
_V1600dRouteList_ObjectIdentity = ObjectIdentity
v1600dRouteList = _V1600dRouteList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18)
)
_AccessListCfg_ObjectIdentity = ObjectIdentity
accessListCfg = _AccessListCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1)
)


class _AccessListMode_Type(Integer32):
    """Custom type accessListMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("standard", 0),
          ("extended", 1))
    )


_AccessListMode_Type.__name__ = "Integer32"
_AccessListMode_Object = MibScalar
accessListMode = _AccessListMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 1),
    _AccessListMode_Type()
)
accessListMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessListMode.setStatus("current")


class _AccessListId_Type(Integer32):
    """Custom type accessListId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
        ValueRangeConstraint(100, 199),
        ValueRangeConstraint(1300, 1999),
        ValueRangeConstraint(2000, 2699),
    )


_AccessListId_Type.__name__ = "Integer32"
_AccessListId_Object = MibScalar
accessListId = _AccessListId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 2),
    _AccessListId_Type()
)
accessListId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessListId.setStatus("current")


class _AccessListFilterAction_Type(Integer32):
    """Custom type accessListFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )


_AccessListFilterAction_Type.__name__ = "Integer32"
_AccessListFilterAction_Object = MibScalar
accessListFilterAction = _AccessListFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 3),
    _AccessListFilterAction_Type()
)
accessListFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessListFilterAction.setStatus("current")


class _AccessListSrcType_Type(Integer32):
    """Custom type accessListSrcType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("matchAddress", 1),
          ("any", 2),
          ("host", 3))
    )


_AccessListSrcType_Type.__name__ = "Integer32"
_AccessListSrcType_Object = MibScalar
accessListSrcType = _AccessListSrcType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 4),
    _AccessListSrcType_Type()
)
accessListSrcType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessListSrcType.setStatus("current")
_SrcIpAddress_Type = IpAddress
_SrcIpAddress_Object = MibScalar
srcIpAddress = _SrcIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 5),
    _SrcIpAddress_Type()
)
srcIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcIpAddress.setStatus("current")
_SrcSubnetMask_Type = IpAddress
_SrcSubnetMask_Object = MibScalar
srcSubnetMask = _SrcSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 6),
    _SrcSubnetMask_Type()
)
srcSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcSubnetMask.setStatus("current")


class _AccessListDestType_Type(Integer32):
    """Custom type accessListDestType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("matchAddress", 1),
          ("any", 2),
          ("host", 3))
    )


_AccessListDestType_Type.__name__ = "Integer32"
_AccessListDestType_Object = MibScalar
accessListDestType = _AccessListDestType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 7),
    _AccessListDestType_Type()
)
accessListDestType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessListDestType.setStatus("current")
_DestIpAddress_Type = IpAddress
_DestIpAddress_Object = MibScalar
destIpAddress = _DestIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 8),
    _DestIpAddress_Type()
)
destIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    destIpAddress.setStatus("current")
_DestSubnetMask_Type = IpAddress
_DestSubnetMask_Object = MibScalar
destSubnetMask = _DestSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 9),
    _DestSubnetMask_Type()
)
destSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    destSubnetMask.setStatus("current")


class _AccessListAction_Type(Integer32):
    """Custom type accessListAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_AccessListAction_Type.__name__ = "Integer32"
_AccessListAction_Object = MibScalar
accessListAction = _AccessListAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 1, 10),
    _AccessListAction_Type()
)
accessListAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessListAction.setStatus("current")
_AccessListTable_Object = MibTable
accessListTable = _AccessListTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2)
)
if mibBuilder.loadTexts:
    accessListTable.setStatus("current")
_AccessListEntry_Object = MibTableRow
accessListEntry = _AccessListEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1)
)
accessListEntry.setIndexNames(
    (0, "V1600D", "listId"),
    (0, "V1600D", "listFilterAction"),
    (0, "V1600D", "listSrcType"),
    (0, "V1600D", "listSrcIpAddress"),
    (0, "V1600D", "listSrcSubnetMask"),
    (0, "V1600D", "listDestType"),
    (0, "V1600D", "listDestIpAddress"),
    (0, "V1600D", "listDestSubnetMask"),
)
if mibBuilder.loadTexts:
    accessListEntry.setStatus("current")
_ListId_Type = Integer32
_ListId_Object = MibTableColumn
listId = _ListId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 1),
    _ListId_Type()
)
listId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listId.setStatus("current")


class _ListFilterAction_Type(Integer32):
    """Custom type listFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1))
    )


_ListFilterAction_Type.__name__ = "Integer32"
_ListFilterAction_Object = MibTableColumn
listFilterAction = _ListFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 2),
    _ListFilterAction_Type()
)
listFilterAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listFilterAction.setStatus("current")


class _ListSrcType_Type(Integer32):
    """Custom type listSrcType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("matchAddress", 1),
          ("any", 2),
          ("host", 3))
    )


_ListSrcType_Type.__name__ = "Integer32"
_ListSrcType_Object = MibTableColumn
listSrcType = _ListSrcType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 3),
    _ListSrcType_Type()
)
listSrcType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listSrcType.setStatus("current")
_ListSrcIpAddress_Type = IpAddress
_ListSrcIpAddress_Object = MibTableColumn
listSrcIpAddress = _ListSrcIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 4),
    _ListSrcIpAddress_Type()
)
listSrcIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listSrcIpAddress.setStatus("current")
_ListSrcSubnetMask_Type = IpAddress
_ListSrcSubnetMask_Object = MibTableColumn
listSrcSubnetMask = _ListSrcSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 5),
    _ListSrcSubnetMask_Type()
)
listSrcSubnetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listSrcSubnetMask.setStatus("current")


class _ListDestType_Type(Integer32):
    """Custom type listDestType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("matchAddress", 1),
          ("any", 2),
          ("host", 3))
    )


_ListDestType_Type.__name__ = "Integer32"
_ListDestType_Object = MibTableColumn
listDestType = _ListDestType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 6),
    _ListDestType_Type()
)
listDestType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listDestType.setStatus("current")
_ListDestIpAddress_Type = IpAddress
_ListDestIpAddress_Object = MibTableColumn
listDestIpAddress = _ListDestIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 7),
    _ListDestIpAddress_Type()
)
listDestIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listDestIpAddress.setStatus("current")
_ListDestSubnetMask_Type = IpAddress
_ListDestSubnetMask_Object = MibTableColumn
listDestSubnetMask = _ListDestSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 2, 1, 8),
    _ListDestSubnetMask_Type()
)
listDestSubnetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listDestSubnetMask.setStatus("current")
_PrefixListCfg_ObjectIdentity = ObjectIdentity
prefixListCfg = _PrefixListCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3)
)
_PrefixList_Type = OctetString
_PrefixList_Object = MibScalar
prefixList = _PrefixList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 1),
    _PrefixList_Type()
)
prefixList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixList.setStatus("current")


class _PrefixListseq_Type(Unsigned32):
    """Custom type prefixListseq based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PrefixListseq_Type.__name__ = "Unsigned32"
_PrefixListseq_Object = MibScalar
prefixListseq = _PrefixListseq_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 2),
    _PrefixListseq_Type()
)
prefixListseq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListseq.setStatus("current")


class _PrefixListFilterAction_Type(Integer32):
    """Custom type prefixListFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1))
    )


_PrefixListFilterAction_Type.__name__ = "Integer32"
_PrefixListFilterAction_Object = MibScalar
prefixListFilterAction = _PrefixListFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 3),
    _PrefixListFilterAction_Type()
)
prefixListFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListFilterAction.setStatus("current")


class _PrefixListType_Type(Integer32):
    """Custom type prefixListType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("address", 1),
          ("any", 2))
    )


_PrefixListType_Type.__name__ = "Integer32"
_PrefixListType_Object = MibScalar
prefixListType = _PrefixListType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 4),
    _PrefixListType_Type()
)
prefixListType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListType.setStatus("current")
_PrefixListIp_Type = IpAddress
_PrefixListIp_Object = MibScalar
prefixListIp = _PrefixListIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 5),
    _PrefixListIp_Type()
)
prefixListIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListIp.setStatus("current")
_PrefixListMask_Type = IpAddress
_PrefixListMask_Object = MibScalar
prefixListMask = _PrefixListMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 6),
    _PrefixListMask_Type()
)
prefixListMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListMask.setStatus("current")


class _PrefixListGe_Type(Integer32):
    """Custom type prefixListGe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixListGe_Type.__name__ = "Integer32"
_PrefixListGe_Object = MibScalar
prefixListGe = _PrefixListGe_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 7),
    _PrefixListGe_Type()
)
prefixListGe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListGe.setStatus("current")


class _PrefixListLe_Type(Integer32):
    """Custom type prefixListLe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixListLe_Type.__name__ = "Integer32"
_PrefixListLe_Object = MibScalar
prefixListLe = _PrefixListLe_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 8),
    _PrefixListLe_Type()
)
prefixListLe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListLe.setStatus("current")


class _PrefixListAction_Type(Integer32):
    """Custom type prefixListAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_PrefixListAction_Type.__name__ = "Integer32"
_PrefixListAction_Object = MibScalar
prefixListAction = _PrefixListAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 3, 9),
    _PrefixListAction_Type()
)
prefixListAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    prefixListAction.setStatus("current")
_PrefixListTable_Object = MibTable
prefixListTable = _PrefixListTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4)
)
if mibBuilder.loadTexts:
    prefixListTable.setStatus("current")
_PrefixListEntry_Object = MibTableRow
prefixListEntry = _PrefixListEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1)
)
prefixListEntry.setIndexNames(
    (0, "V1600D", "listName"),
    (0, "V1600D", "listSequence"),
)
if mibBuilder.loadTexts:
    prefixListEntry.setStatus("current")
_ListName_Type = OctetString
_ListName_Object = MibTableColumn
listName = _ListName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 1),
    _ListName_Type()
)
listName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listName.setStatus("current")
_ListSequence_Type = Unsigned32
_ListSequence_Object = MibTableColumn
listSequence = _ListSequence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 2),
    _ListSequence_Type()
)
listSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listSequence.setStatus("current")


class _PreListFilterAction_Type(Integer32):
    """Custom type preListFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deny", 0),
          ("permit", 1))
    )


_PreListFilterAction_Type.__name__ = "Integer32"
_PreListFilterAction_Object = MibTableColumn
preListFilterAction = _PreListFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 3),
    _PreListFilterAction_Type()
)
preListFilterAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    preListFilterAction.setStatus("current")


class _PreListType_Type(Integer32):
    """Custom type preListType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("address", 1),
          ("any", 2))
    )


_PreListType_Type.__name__ = "Integer32"
_PreListType_Object = MibTableColumn
preListType = _PreListType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 4),
    _PreListType_Type()
)
preListType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    preListType.setStatus("current")
_ListNetwork_Type = OctetString
_ListNetwork_Object = MibTableColumn
listNetwork = _ListNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 5),
    _ListNetwork_Type()
)
listNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listNetwork.setStatus("current")
_ListGe_Type = Integer32
_ListGe_Object = MibTableColumn
listGe = _ListGe_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 6),
    _ListGe_Type()
)
listGe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listGe.setStatus("current")
_ListLe_Type = Integer32
_ListLe_Object = MibTableColumn
listLe = _ListLe_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 4, 1, 7),
    _ListLe_Type()
)
listLe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    listLe.setStatus("current")
_RouteMapCfg_ObjectIdentity = ObjectIdentity
routeMapCfg = _RouteMapCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5)
)
_RouteMap_Type = OctetString
_RouteMap_Object = MibScalar
routeMap = _RouteMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 1),
    _RouteMap_Type()
)
routeMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMap.setStatus("current")


class _FilterType_Type(Integer32):
    """Custom type filterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("permit", 0),
          ("deny", 1))
    )


_FilterType_Type.__name__ = "Integer32"
_FilterType_Object = MibScalar
filterType = _FilterType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 2),
    _FilterType_Type()
)
filterType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filterType.setStatus("current")


class _RouteMapSequence_Type(Integer32):
    """Custom type routeMapSequence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RouteMapSequence_Type.__name__ = "Integer32"
_RouteMapSequence_Object = MibScalar
routeMapSequence = _RouteMapSequence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 3),
    _RouteMapSequence_Type()
)
routeMapSequence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMapSequence.setStatus("current")


class _RouteMapType_Type(Integer32):
    """Custom type routeMapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("match", 1),
          ("set", 2))
    )


_RouteMapType_Type.__name__ = "Integer32"
_RouteMapType_Object = MibScalar
routeMapType = _RouteMapType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 4),
    _RouteMapType_Type()
)
routeMapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMapType.setStatus("current")


class _AddressAccessList_Type(Integer32):
    """Custom type addressAccessList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 99),
        ValueRangeConstraint(100, 199),
        ValueRangeConstraint(1300, 1999),
        ValueRangeConstraint(2000, 2699),
    )


_AddressAccessList_Type.__name__ = "Integer32"
_AddressAccessList_Object = MibScalar
addressAccessList = _AddressAccessList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 5),
    _AddressAccessList_Type()
)
addressAccessList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    addressAccessList.setStatus("current")
_AddressPrefixList_Type = OctetString
_AddressPrefixList_Object = MibScalar
addressPrefixList = _AddressPrefixList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 6),
    _AddressPrefixList_Type()
)
addressPrefixList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    addressPrefixList.setStatus("current")


class _NexthopAccessList_Type(Integer32):
    """Custom type nexthopAccessList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 99),
        ValueRangeConstraint(100, 199),
        ValueRangeConstraint(1300, 1999),
        ValueRangeConstraint(2000, 2699),
    )


_NexthopAccessList_Type.__name__ = "Integer32"
_NexthopAccessList_Object = MibScalar
nexthopAccessList = _NexthopAccessList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 7),
    _NexthopAccessList_Type()
)
nexthopAccessList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nexthopAccessList.setStatus("current")
_NexthopPrefixList_Type = OctetString
_NexthopPrefixList_Object = MibScalar
nexthopPrefixList = _NexthopPrefixList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 8),
    _NexthopPrefixList_Type()
)
nexthopPrefixList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nexthopPrefixList.setStatus("current")
_RouteMapInterface_Type = OctetString
_RouteMapInterface_Object = MibScalar
routeMapInterface = _RouteMapInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 9),
    _RouteMapInterface_Type()
)
routeMapInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMapInterface.setStatus("current")


class _MatchTag_Type(Unsigned32):
    """Custom type matchTag based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MatchTag_Type.__name__ = "Unsigned32"
_MatchTag_Object = MibScalar
matchTag = _MatchTag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 10),
    _MatchTag_Type()
)
matchTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    matchTag.setStatus("current")
_RouteMapMetric_Type = OctetString
_RouteMapMetric_Object = MibScalar
routeMapMetric = _RouteMapMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 11),
    _RouteMapMetric_Type()
)
routeMapMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMapMetric.setStatus("current")


class _RouteMapMetricType_Type(Integer32):
    """Custom type routeMapMetricType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("null", 0),
          ("type1", 1),
          ("type2", 2))
    )


_RouteMapMetricType_Type.__name__ = "Integer32"
_RouteMapMetricType_Object = MibScalar
routeMapMetricType = _RouteMapMetricType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 12),
    _RouteMapMetricType_Type()
)
routeMapMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMapMetricType.setStatus("current")


class _SetTag_Type(Unsigned32):
    """Custom type setTag based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_SetTag_Type.__name__ = "Unsigned32"
_SetTag_Object = MibScalar
setTag = _SetTag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 13),
    _SetTag_Type()
)
setTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTag.setStatus("current")


class _RouteMapAction_Type(Integer32):
    """Custom type routeMapAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_RouteMapAction_Type.__name__ = "Integer32"
_RouteMapAction_Object = MibScalar
routeMapAction = _RouteMapAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 5, 14),
    _RouteMapAction_Type()
)
routeMapAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeMapAction.setStatus("current")
_RouteMapTable_Object = MibTable
routeMapTable = _RouteMapTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 6)
)
if mibBuilder.loadTexts:
    routeMapTable.setStatus("current")
_RouteMapEntry_Object = MibTableRow
routeMapEntry = _RouteMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 6, 1)
)
routeMapEntry.setIndexNames(
    (0, "V1600D", "routeMapName"),
    (0, "V1600D", "mapFilterType"),
    (0, "V1600D", "mapSequence"),
)
if mibBuilder.loadTexts:
    routeMapEntry.setStatus("current")
_RouteMapName_Type = OctetString
_RouteMapName_Object = MibTableColumn
routeMapName = _RouteMapName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 6, 1, 1),
    _RouteMapName_Type()
)
routeMapName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeMapName.setStatus("current")


class _MapFilterType_Type(Integer32):
    """Custom type mapFilterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("permit", 0),
          ("deny", 1))
    )


_MapFilterType_Type.__name__ = "Integer32"
_MapFilterType_Object = MibTableColumn
mapFilterType = _MapFilterType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 6, 1, 2),
    _MapFilterType_Type()
)
mapFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mapFilterType.setStatus("current")
_MapSequence_Type = Integer32
_MapSequence_Object = MibTableColumn
mapSequence = _MapSequence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 6, 1, 3),
    _MapSequence_Type()
)
mapSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mapSequence.setStatus("current")
_Clauses_Type = OctetString
_Clauses_Object = MibTableColumn
clauses = _Clauses_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 6, 1, 4),
    _Clauses_Type()
)
clauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clauses.setStatus("current")
_RouteTable_Object = MibTable
routeTable = _RouteTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7)
)
if mibBuilder.loadTexts:
    routeTable.setStatus("current")
_RouteEntry_Object = MibTableRow
routeEntry = _RouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1)
)
routeEntry.setIndexNames(
    (0, "V1600D", "routeType"),
    (0, "V1600D", "routeNetwork"),
)
if mibBuilder.loadTexts:
    routeEntry.setStatus("current")
_RouteType_Type = OctetString
_RouteType_Object = MibTableColumn
routeType = _RouteType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1, 1),
    _RouteType_Type()
)
routeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeType.setStatus("current")
_RouteNetwork_Type = OctetString
_RouteNetwork_Object = MibTableColumn
routeNetwork = _RouteNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1, 2),
    _RouteNetwork_Type()
)
routeNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeNetwork.setStatus("current")
_RouteDistance_Type = OctetString
_RouteDistance_Object = MibTableColumn
routeDistance = _RouteDistance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1, 3),
    _RouteDistance_Type()
)
routeDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeDistance.setStatus("current")
_RouteMetric_Type = OctetString
_RouteMetric_Object = MibTableColumn
routeMetric = _RouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1, 4),
    _RouteMetric_Type()
)
routeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeMetric.setStatus("current")
_RouteInterface_Type = OctetString
_RouteInterface_Object = MibTableColumn
routeInterface = _RouteInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1, 5),
    _RouteInterface_Type()
)
routeInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeInterface.setStatus("current")
_RouteTime_Type = OctetString
_RouteTime_Object = MibTableColumn
routeTime = _RouteTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 7, 1, 6),
    _RouteTime_Type()
)
routeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeTime.setStatus("current")
_RouteIPv6Table_Object = MibTable
routeIPv6Table = _RouteIPv6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8)
)
if mibBuilder.loadTexts:
    routeIPv6Table.setStatus("current")
_RouteIPv6Entry_Object = MibTableRow
routeIPv6Entry = _RouteIPv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1)
)
routeIPv6Entry.setIndexNames(
    (0, "V1600D", "routeIPv6Type"),
    (0, "V1600D", "routeIPv6Network"),
)
if mibBuilder.loadTexts:
    routeIPv6Entry.setStatus("current")
_RouteIPv6Type_Type = OctetString
_RouteIPv6Type_Object = MibTableColumn
routeIPv6Type = _RouteIPv6Type_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1, 1),
    _RouteIPv6Type_Type()
)
routeIPv6Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeIPv6Type.setStatus("current")
_RouteIPv6Network_Type = OctetString
_RouteIPv6Network_Object = MibTableColumn
routeIPv6Network = _RouteIPv6Network_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1, 2),
    _RouteIPv6Network_Type()
)
routeIPv6Network.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeIPv6Network.setStatus("current")
_RouteIPv6Distance_Type = OctetString
_RouteIPv6Distance_Object = MibTableColumn
routeIPv6Distance = _RouteIPv6Distance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1, 3),
    _RouteIPv6Distance_Type()
)
routeIPv6Distance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeIPv6Distance.setStatus("current")
_RouteIPv6Metric_Type = OctetString
_RouteIPv6Metric_Object = MibTableColumn
routeIPv6Metric = _RouteIPv6Metric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1, 4),
    _RouteIPv6Metric_Type()
)
routeIPv6Metric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeIPv6Metric.setStatus("current")
_RouteIPv6Interface_Type = OctetString
_RouteIPv6Interface_Object = MibTableColumn
routeIPv6Interface = _RouteIPv6Interface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1, 5),
    _RouteIPv6Interface_Type()
)
routeIPv6Interface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeIPv6Interface.setStatus("current")
_RouteIPv6Time_Type = OctetString
_RouteIPv6Time_Object = MibTableColumn
routeIPv6Time = _RouteIPv6Time_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 18, 8, 1, 6),
    _RouteIPv6Time_Type()
)
routeIPv6Time.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routeIPv6Time.setStatus("current")
_V1600dDHCPv6_ObjectIdentity = ObjectIdentity
v1600dDHCPv6 = _V1600dDHCPv6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19)
)
_Dhcpv6Server_ObjectIdentity = ObjectIdentity
dhcpv6Server = _Dhcpv6Server_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1)
)
_Dhcpv6ServerPoolCfg_ObjectIdentity = ObjectIdentity
dhcpv6ServerPoolCfg = _Dhcpv6ServerPoolCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1)
)
_Dhcpv6ServerPoolname_Type = OctetString
_Dhcpv6ServerPoolname_Object = MibScalar
dhcpv6ServerPoolname = _Dhcpv6ServerPoolname_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 1),
    _Dhcpv6ServerPoolname_Type()
)
dhcpv6ServerPoolname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolname.setStatus("current")
_Dhcpv6ServerPoolStartIpv6_Type = OctetString
_Dhcpv6ServerPoolStartIpv6_Object = MibScalar
dhcpv6ServerPoolStartIpv6 = _Dhcpv6ServerPoolStartIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 2),
    _Dhcpv6ServerPoolStartIpv6_Type()
)
dhcpv6ServerPoolStartIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolStartIpv6.setStatus("current")
_Dhcpv6ServerPoolEndIPv6_Type = OctetString
_Dhcpv6ServerPoolEndIPv6_Object = MibScalar
dhcpv6ServerPoolEndIPv6 = _Dhcpv6ServerPoolEndIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 3),
    _Dhcpv6ServerPoolEndIPv6_Type()
)
dhcpv6ServerPoolEndIPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolEndIPv6.setStatus("current")


class _Dhcpv6ServerPoolPfxValidTime_Type(OctetString):
    """Custom type dhcpv6ServerPoolPfxValidTime based on OctetString"""
    defaultValue = OctetString("172800")


_Dhcpv6ServerPoolPfxValidTime_Type.__name__ = "OctetString"
_Dhcpv6ServerPoolPfxValidTime_Object = MibScalar
dhcpv6ServerPoolPfxValidTime = _Dhcpv6ServerPoolPfxValidTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 4),
    _Dhcpv6ServerPoolPfxValidTime_Type()
)
dhcpv6ServerPoolPfxValidTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolPfxValidTime.setStatus("current")


class _Dhcpv6ServerPoolPfxPreferredTime_Type(OctetString):
    """Custom type dhcpv6ServerPoolPfxPreferredTime based on OctetString"""
    defaultValue = OctetString("86400")


_Dhcpv6ServerPoolPfxPreferredTime_Type.__name__ = "OctetString"
_Dhcpv6ServerPoolPfxPreferredTime_Object = MibScalar
dhcpv6ServerPoolPfxPreferredTime = _Dhcpv6ServerPoolPfxPreferredTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 5),
    _Dhcpv6ServerPoolPfxPreferredTime_Type()
)
dhcpv6ServerPoolPfxPreferredTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolPfxPreferredTime.setStatus("current")
_Dhcpv6ServerPoolDNS_Type = OctetString
_Dhcpv6ServerPoolDNS_Object = MibScalar
dhcpv6ServerPoolDNS = _Dhcpv6ServerPoolDNS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 6),
    _Dhcpv6ServerPoolDNS_Type()
)
dhcpv6ServerPoolDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolDNS.setStatus("current")
_Dhcpv6ServerPoolDomain_Type = OctetString
_Dhcpv6ServerPoolDomain_Object = MibScalar
dhcpv6ServerPoolDomain = _Dhcpv6ServerPoolDomain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 7),
    _Dhcpv6ServerPoolDomain_Type()
)
dhcpv6ServerPoolDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolDomain.setStatus("current")


class _Dhcpv6ServerPoolAction_Type(Integer32):
    """Custom type dhcpv6ServerPoolAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_Dhcpv6ServerPoolAction_Type.__name__ = "Integer32"
_Dhcpv6ServerPoolAction_Object = MibScalar
dhcpv6ServerPoolAction = _Dhcpv6ServerPoolAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 8),
    _Dhcpv6ServerPoolAction_Type()
)
dhcpv6ServerPoolAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolAction.setStatus("current")
_Dhcpv6ServerPoolInfRefreshTime_Type = OctetString
_Dhcpv6ServerPoolInfRefreshTime_Object = MibScalar
dhcpv6ServerPoolInfRefreshTime = _Dhcpv6ServerPoolInfRefreshTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 1, 9),
    _Dhcpv6ServerPoolInfRefreshTime_Type()
)
dhcpv6ServerPoolInfRefreshTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolInfRefreshTime.setStatus("current")
_Dhcpv6ServerPoolTable_Object = MibTable
dhcpv6ServerPoolTable = _Dhcpv6ServerPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2)
)
if mibBuilder.loadTexts:
    dhcpv6ServerPoolTable.setStatus("current")
_Dhcpv6ServerPoolEntry_Object = MibTableRow
dhcpv6ServerPoolEntry = _Dhcpv6ServerPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1)
)
dhcpv6ServerPoolEntry.setIndexNames(
    (0, "V1600D", "dhcpv6ServerPoolIndex"),
)
if mibBuilder.loadTexts:
    dhcpv6ServerPoolEntry.setStatus("current")
_Dhcpv6ServerPoolIndex_Type = Integer32
_Dhcpv6ServerPoolIndex_Object = MibTableColumn
dhcpv6ServerPoolIndex = _Dhcpv6ServerPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 1),
    _Dhcpv6ServerPoolIndex_Type()
)
dhcpv6ServerPoolIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolIndex.setStatus("current")
_Dhcpv6ServerPoolName_Type = OctetString
_Dhcpv6ServerPoolName_Object = MibTableColumn
dhcpv6ServerPoolName = _Dhcpv6ServerPoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 2),
    _Dhcpv6ServerPoolName_Type()
)
dhcpv6ServerPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolName.setStatus("current")
_Dhcpv6ServerPoolStartIPv6Addr_Type = OctetString
_Dhcpv6ServerPoolStartIPv6Addr_Object = MibTableColumn
dhcpv6ServerPoolStartIPv6Addr = _Dhcpv6ServerPoolStartIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 3),
    _Dhcpv6ServerPoolStartIPv6Addr_Type()
)
dhcpv6ServerPoolStartIPv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolStartIPv6Addr.setStatus("current")
_Dhcpv6ServerPoolEndIPv6Addr_Type = OctetString
_Dhcpv6ServerPoolEndIPv6Addr_Object = MibTableColumn
dhcpv6ServerPoolEndIPv6Addr = _Dhcpv6ServerPoolEndIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 4),
    _Dhcpv6ServerPoolEndIPv6Addr_Type()
)
dhcpv6ServerPoolEndIPv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolEndIPv6Addr.setStatus("current")


class _Dhcpv6ServerPoolAddrValidLifetime_Type(OctetString):
    """Custom type dhcpv6ServerPoolAddrValidLifetime based on OctetString"""
    defaultValue = OctetString("172800")


_Dhcpv6ServerPoolAddrValidLifetime_Type.__name__ = "OctetString"
_Dhcpv6ServerPoolAddrValidLifetime_Object = MibTableColumn
dhcpv6ServerPoolAddrValidLifetime = _Dhcpv6ServerPoolAddrValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 5),
    _Dhcpv6ServerPoolAddrValidLifetime_Type()
)
dhcpv6ServerPoolAddrValidLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolAddrValidLifetime.setStatus("current")


class _Dhcpv6ServerPoolAddrPreferredLifetime_Type(OctetString):
    """Custom type dhcpv6ServerPoolAddrPreferredLifetime based on OctetString"""
    defaultValue = OctetString("86400")


_Dhcpv6ServerPoolAddrPreferredLifetime_Type.__name__ = "OctetString"
_Dhcpv6ServerPoolAddrPreferredLifetime_Object = MibTableColumn
dhcpv6ServerPoolAddrPreferredLifetime = _Dhcpv6ServerPoolAddrPreferredLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 6),
    _Dhcpv6ServerPoolAddrPreferredLifetime_Type()
)
dhcpv6ServerPoolAddrPreferredLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolAddrPreferredLifetime.setStatus("current")
_Dhcpv6ServerPoolDNSServer_Type = OctetString
_Dhcpv6ServerPoolDNSServer_Object = MibTableColumn
dhcpv6ServerPoolDNSServer = _Dhcpv6ServerPoolDNSServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 7),
    _Dhcpv6ServerPoolDNSServer_Type()
)
dhcpv6ServerPoolDNSServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolDNSServer.setStatus("current")
_Dhcpv6ServerPoolDomainName_Type = OctetString
_Dhcpv6ServerPoolDomainName_Object = MibTableColumn
dhcpv6ServerPoolDomainName = _Dhcpv6ServerPoolDomainName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 8),
    _Dhcpv6ServerPoolDomainName_Type()
)
dhcpv6ServerPoolDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolDomainName.setStatus("current")


class _Dhcpv6ServerPoolInfoRefrehTime_Type(OctetString):
    """Custom type dhcpv6ServerPoolInfoRefrehTime based on OctetString"""
    defaultValue = OctetString("0")


_Dhcpv6ServerPoolInfoRefrehTime_Type.__name__ = "OctetString"
_Dhcpv6ServerPoolInfoRefrehTime_Object = MibTableColumn
dhcpv6ServerPoolInfoRefrehTime = _Dhcpv6ServerPoolInfoRefrehTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 2, 1, 9),
    _Dhcpv6ServerPoolInfoRefrehTime_Type()
)
dhcpv6ServerPoolInfoRefrehTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerPoolInfoRefrehTime.setStatus("current")
_Dhcpv6ServerInterface_ObjectIdentity = ObjectIdentity
dhcpv6ServerInterface = _Dhcpv6ServerInterface_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3)
)
_Dhcpv6ServerBindingsClientInterfaceVlanid_Type = Integer32
_Dhcpv6ServerBindingsClientInterfaceVlanid_Object = MibScalar
dhcpv6ServerBindingsClientInterfaceVlanid = _Dhcpv6ServerBindingsClientInterfaceVlanid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3, 1),
    _Dhcpv6ServerBindingsClientInterfaceVlanid_Type()
)
dhcpv6ServerBindingsClientInterfaceVlanid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientInterfaceVlanid.setStatus("current")
_Dhcpv6ServerBindingsClientInterfacePool_Type = OctetString
_Dhcpv6ServerBindingsClientInterfacePool_Object = MibScalar
dhcpv6ServerBindingsClientInterfacePool = _Dhcpv6ServerBindingsClientInterfacePool_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3, 2),
    _Dhcpv6ServerBindingsClientInterfacePool_Type()
)
dhcpv6ServerBindingsClientInterfacePool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientInterfacePool.setStatus("current")
_Dhcpv6ServerPreferenceValue_Type = OctetString
_Dhcpv6ServerPreferenceValue_Object = MibScalar
dhcpv6ServerPreferenceValue = _Dhcpv6ServerPreferenceValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3, 3),
    _Dhcpv6ServerPreferenceValue_Type()
)
dhcpv6ServerPreferenceValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerPreferenceValue.setStatus("current")


class _Dhcpv6ServerAllowClientshint_Type(Integer32):
    """Custom type dhcpv6ServerAllowClientshint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ignored", 1),
          ("allow", 2))
    )


_Dhcpv6ServerAllowClientshint_Type.__name__ = "Integer32"
_Dhcpv6ServerAllowClientshint_Object = MibScalar
dhcpv6ServerAllowClientshint = _Dhcpv6ServerAllowClientshint_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3, 4),
    _Dhcpv6ServerAllowClientshint_Type()
)
dhcpv6ServerAllowClientshint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerAllowClientshint.setStatus("current")


class _Dhcpv6ServerRapidcommit_Type(Integer32):
    """Custom type dhcpv6ServerRapidcommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Dhcpv6ServerRapidcommit_Type.__name__ = "Integer32"
_Dhcpv6ServerRapidcommit_Object = MibScalar
dhcpv6ServerRapidcommit = _Dhcpv6ServerRapidcommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3, 5),
    _Dhcpv6ServerRapidcommit_Type()
)
dhcpv6ServerRapidcommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerRapidcommit.setStatus("current")


class _Dhcpv6ServerBindingsClientInterfaceAction_Type(Integer32):
    """Custom type dhcpv6ServerBindingsClientInterfaceAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 1),
          ("Disable", 2))
    )


_Dhcpv6ServerBindingsClientInterfaceAction_Type.__name__ = "Integer32"
_Dhcpv6ServerBindingsClientInterfaceAction_Object = MibScalar
dhcpv6ServerBindingsClientInterfaceAction = _Dhcpv6ServerBindingsClientInterfaceAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 3, 6),
    _Dhcpv6ServerBindingsClientInterfaceAction_Type()
)
dhcpv6ServerBindingsClientInterfaceAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientInterfaceAction.setStatus("current")
_Dhcpv6ServerInterfaceTable_Object = MibTable
dhcpv6ServerInterfaceTable = _Dhcpv6ServerInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4)
)
if mibBuilder.loadTexts:
    dhcpv6ServerInterfaceTable.setStatus("current")
_Dhcpv6ServerInterfaceEntry_Object = MibTableRow
dhcpv6ServerInterfaceEntry = _Dhcpv6ServerInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4, 1)
)
dhcpv6ServerInterfaceEntry.setIndexNames(
    (0, "V1600D", "dhcpv6ServerBindingsClientInterfaceVlanId"),
)
if mibBuilder.loadTexts:
    dhcpv6ServerInterfaceEntry.setStatus("current")
_Dhcpv6ServerBindingsClientInterfaceVlanId_Type = Integer32
_Dhcpv6ServerBindingsClientInterfaceVlanId_Object = MibTableColumn
dhcpv6ServerBindingsClientInterfaceVlanId = _Dhcpv6ServerBindingsClientInterfaceVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4, 1, 1),
    _Dhcpv6ServerBindingsClientInterfaceVlanId_Type()
)
dhcpv6ServerBindingsClientInterfaceVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientInterfaceVlanId.setStatus("current")
_Dhcpv6ServerBindingsClientPoolName_Type = OctetString
_Dhcpv6ServerBindingsClientPoolName_Object = MibTableColumn
dhcpv6ServerBindingsClientPoolName = _Dhcpv6ServerBindingsClientPoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4, 1, 2),
    _Dhcpv6ServerBindingsClientPoolName_Type()
)
dhcpv6ServerBindingsClientPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientPoolName.setStatus("current")
_Dhcpv6InterfacePreferenceValue_Type = Integer32
_Dhcpv6InterfacePreferenceValue_Object = MibTableColumn
dhcpv6InterfacePreferenceValue = _Dhcpv6InterfacePreferenceValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4, 1, 3),
    _Dhcpv6InterfacePreferenceValue_Type()
)
dhcpv6InterfacePreferenceValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6InterfacePreferenceValue.setStatus("current")


class _Dhcpv6ServerAllowClientsHint_Type(Integer32):
    """Custom type dhcpv6ServerAllowClientsHint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ignored", 1),
          ("allow", 2))
    )


_Dhcpv6ServerAllowClientsHint_Type.__name__ = "Integer32"
_Dhcpv6ServerAllowClientsHint_Object = MibTableColumn
dhcpv6ServerAllowClientsHint = _Dhcpv6ServerAllowClientsHint_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4, 1, 4),
    _Dhcpv6ServerAllowClientsHint_Type()
)
dhcpv6ServerAllowClientsHint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerAllowClientsHint.setStatus("current")


class _Dhcpv6ServerRapidCommit_Type(Integer32):
    """Custom type dhcpv6ServerRapidCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Dhcpv6ServerRapidCommit_Type.__name__ = "Integer32"
_Dhcpv6ServerRapidCommit_Object = MibTableColumn
dhcpv6ServerRapidCommit = _Dhcpv6ServerRapidCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 4, 1, 5),
    _Dhcpv6ServerRapidCommit_Type()
)
dhcpv6ServerRapidCommit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6ServerRapidCommit.setStatus("current")
_Dhcpv6ServerBindingsTable_Object = MibTable
dhcpv6ServerBindingsTable = _Dhcpv6ServerBindingsTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5)
)
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsTable.setStatus("current")
_Dhcpv6ServerBindingsEntry_Object = MibTableRow
dhcpv6ServerBindingsEntry = _Dhcpv6ServerBindingsEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1)
)
dhcpv6ServerBindingsEntry.setIndexNames(
    (0, "V1600D", "dhcpv6ServerBindingsindex"),
)
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsEntry.setStatus("current")
_Dhcpv6ServerBindingsindex_Type = Integer32
_Dhcpv6ServerBindingsindex_Object = MibTableColumn
dhcpv6ServerBindingsindex = _Dhcpv6ServerBindingsindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 1),
    _Dhcpv6ServerBindingsindex_Type()
)
dhcpv6ServerBindingsindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsindex.setStatus("current")
_Dhcpv6ServerBindingsClientAddress_Type = OctetString
_Dhcpv6ServerBindingsClientAddress_Object = MibTableColumn
dhcpv6ServerBindingsClientAddress = _Dhcpv6ServerBindingsClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 2),
    _Dhcpv6ServerBindingsClientAddress_Type()
)
dhcpv6ServerBindingsClientAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientAddress.setStatus("current")
_Dhcpv6ServerBindingsCLientDUID_Type = OctetString
_Dhcpv6ServerBindingsCLientDUID_Object = MibTableColumn
dhcpv6ServerBindingsCLientDUID = _Dhcpv6ServerBindingsCLientDUID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 3),
    _Dhcpv6ServerBindingsCLientDUID_Type()
)
dhcpv6ServerBindingsCLientDUID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsCLientDUID.setStatus("current")
_Dhcpv6ServerBindingsClientPrefix_Type = OctetString
_Dhcpv6ServerBindingsClientPrefix_Object = MibTableColumn
dhcpv6ServerBindingsClientPrefix = _Dhcpv6ServerBindingsClientPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 4),
    _Dhcpv6ServerBindingsClientPrefix_Type()
)
dhcpv6ServerBindingsClientPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientPrefix.setStatus("current")
_Dhcpv6ServerBindingsClientPfxValidTime_Type = Unsigned32
_Dhcpv6ServerBindingsClientPfxValidTime_Object = MibTableColumn
dhcpv6ServerBindingsClientPfxValidTime = _Dhcpv6ServerBindingsClientPfxValidTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 5),
    _Dhcpv6ServerBindingsClientPfxValidTime_Type()
)
dhcpv6ServerBindingsClientPfxValidTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientPfxValidTime.setStatus("current")
_Dhcpv6ServerBindingsClientPfxPreferrefTime_Type = Unsigned32
_Dhcpv6ServerBindingsClientPfxPreferrefTime_Object = MibTableColumn
dhcpv6ServerBindingsClientPfxPreferrefTime = _Dhcpv6ServerBindingsClientPfxPreferrefTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 6),
    _Dhcpv6ServerBindingsClientPfxPreferrefTime_Type()
)
dhcpv6ServerBindingsClientPfxPreferrefTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsClientPfxPreferrefTime.setStatus("current")
_Dhcpv6ServerBindingsLeaseExpireTime_Type = OctetString
_Dhcpv6ServerBindingsLeaseExpireTime_Object = MibTableColumn
dhcpv6ServerBindingsLeaseExpireTime = _Dhcpv6ServerBindingsLeaseExpireTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 5, 1, 7),
    _Dhcpv6ServerBindingsLeaseExpireTime_Type()
)
dhcpv6ServerBindingsLeaseExpireTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerBindingsLeaseExpireTime.setStatus("current")
_Dhcpv6Duid_ObjectIdentity = ObjectIdentity
dhcpv6Duid = _Dhcpv6Duid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 6)
)


class _Dhcpv6DuidType_Type(Integer32):
    """Custom type dhcpv6DuidType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duid-llt", 1),
          ("duid-en", 2),
          ("duid-ll", 3))
    )


_Dhcpv6DuidType_Type.__name__ = "Integer32"
_Dhcpv6DuidType_Object = MibScalar
dhcpv6DuidType = _Dhcpv6DuidType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 6, 1),
    _Dhcpv6DuidType_Type()
)
dhcpv6DuidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6DuidType.setStatus("current")
_Dhcpv6DuidEnterprise_Type = OctetString
_Dhcpv6DuidEnterprise_Object = MibScalar
dhcpv6DuidEnterprise = _Dhcpv6DuidEnterprise_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 6, 2),
    _Dhcpv6DuidEnterprise_Type()
)
dhcpv6DuidEnterprise.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6DuidEnterprise.setStatus("current")
_Dhcpv6DuidIdentifier_Type = OctetString
_Dhcpv6DuidIdentifier_Object = MibScalar
dhcpv6DuidIdentifier = _Dhcpv6DuidIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 6, 3),
    _Dhcpv6DuidIdentifier_Type()
)
dhcpv6DuidIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6DuidIdentifier.setStatus("current")


class _Dhcpv6DuidAction_Type(Integer32):
    """Custom type dhcpv6DuidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("Submit", 1)
    )


_Dhcpv6DuidAction_Type.__name__ = "Integer32"
_Dhcpv6DuidAction_Object = MibScalar
dhcpv6DuidAction = _Dhcpv6DuidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 6, 4),
    _Dhcpv6DuidAction_Type()
)
dhcpv6DuidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6DuidAction.setStatus("current")
_Dhcpv6DuidTable_Object = MibTable
dhcpv6DuidTable = _Dhcpv6DuidTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 7)
)
if mibBuilder.loadTexts:
    dhcpv6DuidTable.setStatus("current")
_Dhcpv6DuidEntry_Object = MibTableRow
dhcpv6DuidEntry = _Dhcpv6DuidEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 7, 1)
)
dhcpv6DuidEntry.setIndexNames(
    (0, "V1600D", "dhcpv6DuidTableDuidType"),
)
if mibBuilder.loadTexts:
    dhcpv6DuidEntry.setStatus("current")
_Dhcpv6DuidTableDuidType_Type = OctetString
_Dhcpv6DuidTableDuidType_Object = MibTableColumn
dhcpv6DuidTableDuidType = _Dhcpv6DuidTableDuidType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 7, 1, 1),
    _Dhcpv6DuidTableDuidType_Type()
)
dhcpv6DuidTableDuidType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6DuidTableDuidType.setStatus("current")
_Dhcpv6DuidTableDuid_Type = OctetString
_Dhcpv6DuidTableDuid_Object = MibTableColumn
dhcpv6DuidTableDuid = _Dhcpv6DuidTableDuid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 1, 7, 1, 2),
    _Dhcpv6DuidTableDuid_Type()
)
dhcpv6DuidTableDuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6DuidTableDuid.setStatus("current")
_Dhcpv6Relay_ObjectIdentity = ObjectIdentity
dhcpv6Relay = _Dhcpv6Relay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2)
)
_Dhcpv6RelayCfg_ObjectIdentity = ObjectIdentity
dhcpv6RelayCfg = _Dhcpv6RelayCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 1)
)
_Dhcpv6RelayServerVlanId_Type = Integer32
_Dhcpv6RelayServerVlanId_Object = MibScalar
dhcpv6RelayServerVlanId = _Dhcpv6RelayServerVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 1, 1),
    _Dhcpv6RelayServerVlanId_Type()
)
dhcpv6RelayServerVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RelayServerVlanId.setStatus("current")
_Dhcpv6RelayServerAddr_Type = OctetString
_Dhcpv6RelayServerAddr_Object = MibScalar
dhcpv6RelayServerAddr = _Dhcpv6RelayServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 1, 2),
    _Dhcpv6RelayServerAddr_Type()
)
dhcpv6RelayServerAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RelayServerAddr.setStatus("current")


class _Dhcpv6RelayServerAction_Type(Integer32):
    """Custom type dhcpv6RelayServerAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_Dhcpv6RelayServerAction_Type.__name__ = "Integer32"
_Dhcpv6RelayServerAction_Object = MibScalar
dhcpv6RelayServerAction = _Dhcpv6RelayServerAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 1, 3),
    _Dhcpv6RelayServerAction_Type()
)
dhcpv6RelayServerAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RelayServerAction.setStatus("current")
_Dhcpv6RelayServerTable_Object = MibTable
dhcpv6RelayServerTable = _Dhcpv6RelayServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 2)
)
if mibBuilder.loadTexts:
    dhcpv6RelayServerTable.setStatus("current")
_Dhcpv6RelayServerEntry_Object = MibTableRow
dhcpv6RelayServerEntry = _Dhcpv6RelayServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 2, 1)
)
dhcpv6RelayServerEntry.setIndexNames(
    (0, "V1600D", "dhcpv6RelayServerVlanID"),
)
if mibBuilder.loadTexts:
    dhcpv6RelayServerEntry.setStatus("current")
_Dhcpv6RelayServerVlanID_Type = Integer32
_Dhcpv6RelayServerVlanID_Object = MibTableColumn
dhcpv6RelayServerVlanID = _Dhcpv6RelayServerVlanID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 2, 1, 1),
    _Dhcpv6RelayServerVlanID_Type()
)
dhcpv6RelayServerVlanID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RelayServerVlanID.setStatus("current")
_Dhcpv6RelayServerAddress_Type = OctetString
_Dhcpv6RelayServerAddress_Object = MibTableColumn
dhcpv6RelayServerAddress = _Dhcpv6RelayServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 2, 2, 1, 2),
    _Dhcpv6RelayServerAddress_Type()
)
dhcpv6RelayServerAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RelayServerAddress.setStatus("current")
_Dhcp6Snooping_ObjectIdentity = ObjectIdentity
dhcp6Snooping = _Dhcp6Snooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3)
)


class _Dhcp6SnoopingEnable_Type(Integer32):
    """Custom type dhcp6SnoopingEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcp6SnoopingEnable_Type.__name__ = "Integer32"
_Dhcp6SnoopingEnable_Object = MibScalar
dhcp6SnoopingEnable = _Dhcp6SnoopingEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 1),
    _Dhcp6SnoopingEnable_Type()
)
dhcp6SnoopingEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingEnable.setStatus("current")
_Dhcp6SnoopingVLAN_ObjectIdentity = ObjectIdentity
dhcp6SnoopingVLAN = _Dhcp6SnoopingVLAN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 2)
)


class _Dhcp6SnoopingVLANID_Type(Integer32):
    """Custom type dhcp6SnoopingVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_Dhcp6SnoopingVLANID_Type.__name__ = "Integer32"
_Dhcp6SnoopingVLANID_Object = MibScalar
dhcp6SnoopingVLANID = _Dhcp6SnoopingVLANID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 2, 1),
    _Dhcp6SnoopingVLANID_Type()
)
dhcp6SnoopingVLANID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingVLANID.setStatus("current")


class _Dhcp6SnoopingVLANAction_Type(Integer32):
    """Custom type dhcp6SnoopingVLANAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_Dhcp6SnoopingVLANAction_Type.__name__ = "Integer32"
_Dhcp6SnoopingVLANAction_Object = MibScalar
dhcp6SnoopingVLANAction = _Dhcp6SnoopingVLANAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 2, 2),
    _Dhcp6SnoopingVLANAction_Type()
)
dhcp6SnoopingVLANAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingVLANAction.setStatus("current")
_Dhcp6SnoopingVLANList_Type = OctetString
_Dhcp6SnoopingVLANList_Object = MibScalar
dhcp6SnoopingVLANList = _Dhcp6SnoopingVLANList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 2, 3),
    _Dhcp6SnoopingVLANList_Type()
)
dhcp6SnoopingVLANList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingVLANList.setStatus("current")
_Dhcp6SnoopingOption_ObjectIdentity = ObjectIdentity
dhcp6SnoopingOption = _Dhcp6SnoopingOption_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3)
)


class _Dhcp6SnoopingOptionInterfaceEnable_Type(Integer32):
    """Custom type dhcp6SnoopingOptionInterfaceEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcp6SnoopingOptionInterfaceEnable_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionInterfaceEnable_Object = MibScalar
dhcp6SnoopingOptionInterfaceEnable = _Dhcp6SnoopingOptionInterfaceEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 1),
    _Dhcp6SnoopingOptionInterfaceEnable_Type()
)
dhcp6SnoopingOptionInterfaceEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionInterfaceEnable.setStatus("current")


class _Dhcp6SnoopingOptionInterfacePolicy_Type(Integer32):
    """Custom type dhcp6SnoopingOptionInterfacePolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("drop", 0),
          ("keep", 1),
          ("replace", 2))
    )


_Dhcp6SnoopingOptionInterfacePolicy_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionInterfacePolicy_Object = MibScalar
dhcp6SnoopingOptionInterfacePolicy = _Dhcp6SnoopingOptionInterfacePolicy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 2),
    _Dhcp6SnoopingOptionInterfacePolicy_Type()
)
dhcp6SnoopingOptionInterfacePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionInterfacePolicy.setStatus("current")


class _Dhcp6SnoopingOptionRemoteEnable_Type(Integer32):
    """Custom type dhcp6SnoopingOptionRemoteEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcp6SnoopingOptionRemoteEnable_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionRemoteEnable_Object = MibScalar
dhcp6SnoopingOptionRemoteEnable = _Dhcp6SnoopingOptionRemoteEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 3),
    _Dhcp6SnoopingOptionRemoteEnable_Type()
)
dhcp6SnoopingOptionRemoteEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionRemoteEnable.setStatus("current")


class _Dhcp6SnoopingOptionRemotePolicy_Type(Integer32):
    """Custom type dhcp6SnoopingOptionRemotePolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("drop", 0),
          ("keep", 1),
          ("replace", 2))
    )


_Dhcp6SnoopingOptionRemotePolicy_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionRemotePolicy_Object = MibScalar
dhcp6SnoopingOptionRemotePolicy = _Dhcp6SnoopingOptionRemotePolicy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 4),
    _Dhcp6SnoopingOptionRemotePolicy_Type()
)
dhcp6SnoopingOptionRemotePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionRemotePolicy.setStatus("current")


class _Dhcp6SnoopingOptionSubscriberEnable_Type(Integer32):
    """Custom type dhcp6SnoopingOptionSubscriberEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcp6SnoopingOptionSubscriberEnable_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionSubscriberEnable_Object = MibScalar
dhcp6SnoopingOptionSubscriberEnable = _Dhcp6SnoopingOptionSubscriberEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 5),
    _Dhcp6SnoopingOptionSubscriberEnable_Type()
)
dhcp6SnoopingOptionSubscriberEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionSubscriberEnable.setStatus("current")


class _Dhcp6SnoopingOptionSubscriberPolicy_Type(Integer32):
    """Custom type dhcp6SnoopingOptionSubscriberPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("drop", 0),
          ("keep", 1),
          ("replace", 2))
    )


_Dhcp6SnoopingOptionSubscriberPolicy_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionSubscriberPolicy_Object = MibScalar
dhcp6SnoopingOptionSubscriberPolicy = _Dhcp6SnoopingOptionSubscriberPolicy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 6),
    _Dhcp6SnoopingOptionSubscriberPolicy_Type()
)
dhcp6SnoopingOptionSubscriberPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionSubscriberPolicy.setStatus("current")


class _Dhcp6SnoopingOptionAction_Type(Integer32):
    """Custom type dhcp6SnoopingOptionAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("change", 1)
    )


_Dhcp6SnoopingOptionAction_Type.__name__ = "Integer32"
_Dhcp6SnoopingOptionAction_Object = MibScalar
dhcp6SnoopingOptionAction = _Dhcp6SnoopingOptionAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 3, 7),
    _Dhcp6SnoopingOptionAction_Type()
)
dhcp6SnoopingOptionAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingOptionAction.setStatus("current")
_Dhcp6SnoopingPortCfgTable_Object = MibTable
dhcp6SnoopingPortCfgTable = _Dhcp6SnoopingPortCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4)
)
if mibBuilder.loadTexts:
    dhcp6SnoopingPortCfgTable.setStatus("current")
_Dhcp6SnoopingPortCfgEntry_Object = MibTableRow
dhcp6SnoopingPortCfgEntry = _Dhcp6SnoopingPortCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1)
)
dhcp6SnoopingPortCfgEntry.setIndexNames(
    (0, "V1600D", "dhcp6SnoopingPortIndex"),
)
if mibBuilder.loadTexts:
    dhcp6SnoopingPortCfgEntry.setStatus("current")
_Dhcp6SnoopingPortIndex_Type = Integer32
_Dhcp6SnoopingPortIndex_Object = MibTableColumn
dhcp6SnoopingPortIndex = _Dhcp6SnoopingPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 1),
    _Dhcp6SnoopingPortIndex_Type()
)
dhcp6SnoopingPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortIndex.setStatus("current")


class _Dhcp6SnoopingPortType_Type(Integer32):
    """Custom type dhcp6SnoopingPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("untrust", 0),
          ("trust", 1))
    )


_Dhcp6SnoopingPortType_Type.__name__ = "Integer32"
_Dhcp6SnoopingPortType_Object = MibTableColumn
dhcp6SnoopingPortType = _Dhcp6SnoopingPortType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 2),
    _Dhcp6SnoopingPortType_Type()
)
dhcp6SnoopingPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortType.setStatus("current")
_Dhcp6SnoopingPortInterfaceid_Type = OctetString
_Dhcp6SnoopingPortInterfaceid_Object = MibTableColumn
dhcp6SnoopingPortInterfaceid = _Dhcp6SnoopingPortInterfaceid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 3),
    _Dhcp6SnoopingPortInterfaceid_Type()
)
dhcp6SnoopingPortInterfaceid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortInterfaceid.setStatus("current")
_Dhcp6SnoopingPortRemoteid_Type = OctetString
_Dhcp6SnoopingPortRemoteid_Object = MibTableColumn
dhcp6SnoopingPortRemoteid = _Dhcp6SnoopingPortRemoteid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 4),
    _Dhcp6SnoopingPortRemoteid_Type()
)
dhcp6SnoopingPortRemoteid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortRemoteid.setStatus("current")
_Dhcp6SnoopingPortSubscriberd_Type = OctetString
_Dhcp6SnoopingPortSubscriberd_Object = MibTableColumn
dhcp6SnoopingPortSubscriberd = _Dhcp6SnoopingPortSubscriberd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 5),
    _Dhcp6SnoopingPortSubscriberd_Type()
)
dhcp6SnoopingPortSubscriberd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortSubscriberd.setStatus("current")


class _Dhcp6SnoopingPortRateLimit_Type(Integer32):
    """Custom type dhcp6SnoopingPortRateLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_Dhcp6SnoopingPortRateLimit_Type.__name__ = "Integer32"
_Dhcp6SnoopingPortRateLimit_Object = MibTableColumn
dhcp6SnoopingPortRateLimit = _Dhcp6SnoopingPortRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 6),
    _Dhcp6SnoopingPortRateLimit_Type()
)
dhcp6SnoopingPortRateLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortRateLimit.setStatus("current")


class _Dhcp6SnoopingPortDeny_Type(Integer32):
    """Custom type dhcp6SnoopingPortDeny based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcp6SnoopingPortDeny_Type.__name__ = "Integer32"
_Dhcp6SnoopingPortDeny_Object = MibTableColumn
dhcp6SnoopingPortDeny = _Dhcp6SnoopingPortDeny_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 7),
    _Dhcp6SnoopingPortDeny_Type()
)
dhcp6SnoopingPortDeny.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortDeny.setStatus("current")


class _Dhcp6SnoopingPortCheck_Type(Integer32):
    """Custom type dhcp6SnoopingPortCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcp6SnoopingPortCheck_Type.__name__ = "Integer32"
_Dhcp6SnoopingPortCheck_Object = MibTableColumn
dhcp6SnoopingPortCheck = _Dhcp6SnoopingPortCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 4, 1, 8),
    _Dhcp6SnoopingPortCheck_Type()
)
dhcp6SnoopingPortCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingPortCheck.setStatus("current")
_Dhcp6SnoopingBinding_ObjectIdentity = ObjectIdentity
dhcp6SnoopingBinding = _Dhcp6SnoopingBinding_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5)
)
_Dhcp6SnoopingBindingConfig_ObjectIdentity = ObjectIdentity
dhcp6SnoopingBindingConfig = _Dhcp6SnoopingBindingConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1)
)
_Dhcp6SnoopingBindMAC_Type = OctetString
_Dhcp6SnoopingBindMAC_Object = MibScalar
dhcp6SnoopingBindMAC = _Dhcp6SnoopingBindMAC_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 1),
    _Dhcp6SnoopingBindMAC_Type()
)
dhcp6SnoopingBindMAC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindMAC.setStatus("current")


class _Dhcp6SnoopingBindVLAN_Type(Integer32):
    """Custom type dhcp6SnoopingBindVLAN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_Dhcp6SnoopingBindVLAN_Type.__name__ = "Integer32"
_Dhcp6SnoopingBindVLAN_Object = MibScalar
dhcp6SnoopingBindVLAN = _Dhcp6SnoopingBindVLAN_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 2),
    _Dhcp6SnoopingBindVLAN_Type()
)
dhcp6SnoopingBindVLAN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindVLAN.setStatus("current")
_Dhcp6SnoopingBindIPv6_Type = OctetString
_Dhcp6SnoopingBindIPv6_Object = MibScalar
dhcp6SnoopingBindIPv6 = _Dhcp6SnoopingBindIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 3),
    _Dhcp6SnoopingBindIPv6_Type()
)
dhcp6SnoopingBindIPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindIPv6.setStatus("current")


class _Dhcp6SnoopingBindPortIndex_Type(Integer32):
    """Custom type dhcp6SnoopingBindPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_Dhcp6SnoopingBindPortIndex_Type.__name__ = "Integer32"
_Dhcp6SnoopingBindPortIndex_Object = MibScalar
dhcp6SnoopingBindPortIndex = _Dhcp6SnoopingBindPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 4),
    _Dhcp6SnoopingBindPortIndex_Type()
)
dhcp6SnoopingBindPortIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindPortIndex.setStatus("current")


class _Dhcp6SnoopingBindValidTime_Type(Unsigned32):
    """Custom type dhcp6SnoopingBindValidTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 4294967295),
    )


_Dhcp6SnoopingBindValidTime_Type.__name__ = "Unsigned32"
_Dhcp6SnoopingBindValidTime_Object = MibScalar
dhcp6SnoopingBindValidTime = _Dhcp6SnoopingBindValidTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 5),
    _Dhcp6SnoopingBindValidTime_Type()
)
dhcp6SnoopingBindValidTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindValidTime.setStatus("current")


class _Dhcp6SnoopingBindPreferredTime_Type(Unsigned32):
    """Custom type dhcp6SnoopingBindPreferredTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 4294967295),
    )


_Dhcp6SnoopingBindPreferredTime_Type.__name__ = "Unsigned32"
_Dhcp6SnoopingBindPreferredTime_Object = MibScalar
dhcp6SnoopingBindPreferredTime = _Dhcp6SnoopingBindPreferredTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 6),
    _Dhcp6SnoopingBindPreferredTime_Type()
)
dhcp6SnoopingBindPreferredTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindPreferredTime.setStatus("current")


class _Dhcp6SnoopingBindAction_Type(Integer32):
    """Custom type dhcp6SnoopingBindAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_Dhcp6SnoopingBindAction_Type.__name__ = "Integer32"
_Dhcp6SnoopingBindAction_Object = MibScalar
dhcp6SnoopingBindAction = _Dhcp6SnoopingBindAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 1, 7),
    _Dhcp6SnoopingBindAction_Type()
)
dhcp6SnoopingBindAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindAction.setStatus("current")
_Dhcp6SnoopingBindingTable_Object = MibTable
dhcp6SnoopingBindingTable = _Dhcp6SnoopingBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2)
)
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingTable.setStatus("current")
_Dhcp6SnoopingBindingEntry_Object = MibTableRow
dhcp6SnoopingBindingEntry = _Dhcp6SnoopingBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1)
)
dhcp6SnoopingBindingEntry.setIndexNames(
    (0, "V1600D", "dhcp6SnoopingBindingID"),
)
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingEntry.setStatus("current")
_Dhcp6SnoopingBindingID_Type = Integer32
_Dhcp6SnoopingBindingID_Object = MibTableColumn
dhcp6SnoopingBindingID = _Dhcp6SnoopingBindingID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 1),
    _Dhcp6SnoopingBindingID_Type()
)
dhcp6SnoopingBindingID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingID.setStatus("current")
_Dhcp6SnoopingBindingMAC_Type = OctetString
_Dhcp6SnoopingBindingMAC_Object = MibTableColumn
dhcp6SnoopingBindingMAC = _Dhcp6SnoopingBindingMAC_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 2),
    _Dhcp6SnoopingBindingMAC_Type()
)
dhcp6SnoopingBindingMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingMAC.setStatus("current")
_Dhcp6SnoopingBindingIPv6_Type = OctetString
_Dhcp6SnoopingBindingIPv6_Object = MibTableColumn
dhcp6SnoopingBindingIPv6 = _Dhcp6SnoopingBindingIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 3),
    _Dhcp6SnoopingBindingIPv6_Type()
)
dhcp6SnoopingBindingIPv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingIPv6.setStatus("current")
_Dhcp6SnoopingBindingPreferredTime_Type = Unsigned32
_Dhcp6SnoopingBindingPreferredTime_Object = MibTableColumn
dhcp6SnoopingBindingPreferredTime = _Dhcp6SnoopingBindingPreferredTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 4),
    _Dhcp6SnoopingBindingPreferredTime_Type()
)
dhcp6SnoopingBindingPreferredTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingPreferredTime.setStatus("current")
_Dhcp6SnoopingBindingValidTime_Type = Unsigned32
_Dhcp6SnoopingBindingValidTime_Object = MibTableColumn
dhcp6SnoopingBindingValidTime = _Dhcp6SnoopingBindingValidTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 5),
    _Dhcp6SnoopingBindingValidTime_Type()
)
dhcp6SnoopingBindingValidTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingValidTime.setStatus("current")


class _Dhcp6SnoopingBindingType_Type(Integer32):
    """Custom type dhcp6SnoopingBindingType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Static", 0),
          ("Dynamic", 1))
    )


_Dhcp6SnoopingBindingType_Type.__name__ = "Integer32"
_Dhcp6SnoopingBindingType_Object = MibTableColumn
dhcp6SnoopingBindingType = _Dhcp6SnoopingBindingType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 6),
    _Dhcp6SnoopingBindingType_Type()
)
dhcp6SnoopingBindingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingType.setStatus("current")
_Dhcp6SnoopingBindingVLAN_Type = Integer32
_Dhcp6SnoopingBindingVLAN_Object = MibTableColumn
dhcp6SnoopingBindingVLAN = _Dhcp6SnoopingBindingVLAN_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 7),
    _Dhcp6SnoopingBindingVLAN_Type()
)
dhcp6SnoopingBindingVLAN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingVLAN.setStatus("current")
_Dhcp6SnoopingBindingInterface_Type = Integer32
_Dhcp6SnoopingBindingInterface_Object = MibTableColumn
dhcp6SnoopingBindingInterface = _Dhcp6SnoopingBindingInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 19, 3, 5, 2, 1, 8),
    _Dhcp6SnoopingBindingInterface_Type()
)
dhcp6SnoopingBindingInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcp6SnoopingBindingInterface.setStatus("current")
_V1600dIPv6MldSnooping_ObjectIdentity = ObjectIdentity
v1600dIPv6MldSnooping = _V1600dIPv6MldSnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20)
)
_MldGlobalTable_Object = MibTable
mldGlobalTable = _MldGlobalTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1)
)
if mibBuilder.loadTexts:
    mldGlobalTable.setStatus("current")
_MldGlobalEntry_Object = MibTableRow
mldGlobalEntry = _MldGlobalEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1)
)
mldGlobalEntry.setIndexNames(
    (0, "V1600D", "mldGlobalIndex"),
)
if mibBuilder.loadTexts:
    mldGlobalEntry.setStatus("current")
_MldGlobalIndex_Type = Integer32
_MldGlobalIndex_Object = MibTableColumn
mldGlobalIndex = _MldGlobalIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1, 1),
    _MldGlobalIndex_Type()
)
mldGlobalIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGlobalIndex.setStatus("current")


class _MldLastListenQueryCount_Type(Integer32):
    """Custom type mldLastListenQueryCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_MldLastListenQueryCount_Type.__name__ = "Integer32"
_MldLastListenQueryCount_Object = MibTableColumn
mldLastListenQueryCount = _MldLastListenQueryCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1, 2),
    _MldLastListenQueryCount_Type()
)
mldLastListenQueryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldLastListenQueryCount.setStatus("current")


class _SendGeneralQueryPacket_Type(Integer32):
    """Custom type sendGeneralQueryPacket based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SendGeneralQueryPacket_Type.__name__ = "Integer32"
_SendGeneralQueryPacket_Object = MibTableColumn
sendGeneralQueryPacket = _SendGeneralQueryPacket_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1, 3),
    _SendGeneralQueryPacket_Type()
)
sendGeneralQueryPacket.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sendGeneralQueryPacket.setStatus("current")


class _GeneralQueryInterval_Type(Integer32):
    """Custom type generalQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_GeneralQueryInterval_Type.__name__ = "Integer32"
_GeneralQueryInterval_Object = MibTableColumn
generalQueryInterval = _GeneralQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1, 4),
    _GeneralQueryInterval_Type()
)
generalQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    generalQueryInterval.setStatus("current")
_QuerySourceIp_Type = OctetString
_QuerySourceIp_Object = MibTableColumn
querySourceIp = _QuerySourceIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1, 5),
    _QuerySourceIp_Type()
)
querySourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    querySourceIp.setStatus("current")


class _MldStatus_Type(Integer32):
    """Custom type mldStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MldStatus_Type.__name__ = "Integer32"
_MldStatus_Object = MibTableColumn
mldStatus = _MldStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 1, 1, 6),
    _MldStatus_Type()
)
mldStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldStatus.setStatus("current")
_MldUserVlanCfg_ObjectIdentity = ObjectIdentity
mldUserVlanCfg = _MldUserVlanCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 2)
)
_MldUserPortIndexCfg_Type = Integer32
_MldUserPortIndexCfg_Object = MibScalar
mldUserPortIndexCfg = _MldUserPortIndexCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 2, 1),
    _MldUserPortIndexCfg_Type()
)
mldUserPortIndexCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldUserPortIndexCfg.setStatus("current")


class _MldUserVlanIdCfg_Type(Integer32):
    """Custom type mldUserVlanIdCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MldUserVlanIdCfg_Type.__name__ = "Integer32"
_MldUserVlanIdCfg_Object = MibScalar
mldUserVlanIdCfg = _MldUserVlanIdCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 2, 2),
    _MldUserVlanIdCfg_Type()
)
mldUserVlanIdCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldUserVlanIdCfg.setStatus("current")


class _MldGroupVlanIdCfg_Type(Integer32):
    """Custom type mldGroupVlanIdCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MldGroupVlanIdCfg_Type.__name__ = "Integer32"
_MldGroupVlanIdCfg_Object = MibScalar
mldGroupVlanIdCfg = _MldGroupVlanIdCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 2, 3),
    _MldGroupVlanIdCfg_Type()
)
mldGroupVlanIdCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldGroupVlanIdCfg.setStatus("current")


class _MldUserVlanAction_Type(Integer32):
    """Custom type mldUserVlanAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MldUserVlanAction_Type.__name__ = "Integer32"
_MldUserVlanAction_Object = MibScalar
mldUserVlanAction = _MldUserVlanAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 2, 4),
    _MldUserVlanAction_Type()
)
mldUserVlanAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldUserVlanAction.setStatus("current")
_MldUserVlanTable_Object = MibTable
mldUserVlanTable = _MldUserVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 3)
)
if mibBuilder.loadTexts:
    mldUserVlanTable.setStatus("current")
_MldUserVlanEntry_Object = MibTableRow
mldUserVlanEntry = _MldUserVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 3, 1)
)
mldUserVlanEntry.setIndexNames(
    (0, "V1600D", "mldUserPortIndex"),
    (0, "V1600D", "mldUserVlanId"),
)
if mibBuilder.loadTexts:
    mldUserVlanEntry.setStatus("current")
_MldUserPortIndex_Type = Integer32
_MldUserPortIndex_Object = MibTableColumn
mldUserPortIndex = _MldUserPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 3, 1, 1),
    _MldUserPortIndex_Type()
)
mldUserPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldUserPortIndex.setStatus("current")
_MldUserVlanId_Type = Integer32
_MldUserVlanId_Object = MibTableColumn
mldUserVlanId = _MldUserVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 3, 1, 2),
    _MldUserVlanId_Type()
)
mldUserVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldUserVlanId.setStatus("current")
_MldGroupVlanId_Type = Integer32
_MldGroupVlanId_Object = MibTableColumn
mldGroupVlanId = _MldGroupVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 3, 1, 3),
    _MldGroupVlanId_Type()
)
mldGroupVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGroupVlanId.setStatus("current")
_MldPortTable_Object = MibTable
mldPortTable = _MldPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 4)
)
if mibBuilder.loadTexts:
    mldPortTable.setStatus("current")
_MldPortEntry_Object = MibTableRow
mldPortEntry = _MldPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 4, 1)
)
mldPortEntry.setIndexNames(
    (0, "V1600D", "mldPortIndex"),
)
if mibBuilder.loadTexts:
    mldPortEntry.setStatus("current")
_MldPortIndex_Type = Integer32
_MldPortIndex_Object = MibTableColumn
mldPortIndex = _MldPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 4, 1, 1),
    _MldPortIndex_Type()
)
mldPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldPortIndex.setStatus("current")


class _MldPortFastLeave_Type(Integer32):
    """Custom type mldPortFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MldPortFastLeave_Type.__name__ = "Integer32"
_MldPortFastLeave_Object = MibTableColumn
mldPortFastLeave = _MldPortFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 4, 1, 2),
    _MldPortFastLeave_Type()
)
mldPortFastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldPortFastLeave.setStatus("current")


class _MldPortGroupLimit_Type(Integer32):
    """Custom type mldPortGroupLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_MldPortGroupLimit_Type.__name__ = "Integer32"
_MldPortGroupLimit_Object = MibTableColumn
mldPortGroupLimit = _MldPortGroupLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 4, 1, 3),
    _MldPortGroupLimit_Type()
)
mldPortGroupLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldPortGroupLimit.setStatus("current")
_MldMrouterPortCfg_ObjectIdentity = ObjectIdentity
mldMrouterPortCfg = _MldMrouterPortCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 5)
)
_MldMrouterPort_Type = Integer32
_MldMrouterPort_Object = MibScalar
mldMrouterPort = _MldMrouterPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 5, 1),
    _MldMrouterPort_Type()
)
mldMrouterPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldMrouterPort.setStatus("current")


class _MldMrouterVlan_Type(Integer32):
    """Custom type mldMrouterVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MldMrouterVlan_Type.__name__ = "Integer32"
_MldMrouterVlan_Object = MibScalar
mldMrouterVlan = _MldMrouterVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 5, 2),
    _MldMrouterVlan_Type()
)
mldMrouterVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldMrouterVlan.setStatus("current")


class _MldMrouterAction_Type(Integer32):
    """Custom type mldMrouterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MldMrouterAction_Type.__name__ = "Integer32"
_MldMrouterAction_Object = MibScalar
mldMrouterAction = _MldMrouterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 5, 3),
    _MldMrouterAction_Type()
)
mldMrouterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldMrouterAction.setStatus("current")
_MldMrouterPortTable_Object = MibTable
mldMrouterPortTable = _MldMrouterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 6)
)
if mibBuilder.loadTexts:
    mldMrouterPortTable.setStatus("current")
_MldMrouterPortEntry_Object = MibTableRow
mldMrouterPortEntry = _MldMrouterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 6, 1)
)
mldMrouterPortEntry.setIndexNames(
    (0, "V1600D", "mldMrouterItem"),
)
if mibBuilder.loadTexts:
    mldMrouterPortEntry.setStatus("current")
_MldMrouterItem_Type = Integer32
_MldMrouterItem_Object = MibTableColumn
mldMrouterItem = _MldMrouterItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 6, 1, 1),
    _MldMrouterItem_Type()
)
mldMrouterItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldMrouterItem.setStatus("current")
_MldMrouterVlanId_Type = Integer32
_MldMrouterVlanId_Object = MibTableColumn
mldMrouterVlanId = _MldMrouterVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 6, 1, 2),
    _MldMrouterVlanId_Type()
)
mldMrouterVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldMrouterVlanId.setStatus("current")


class _MldMrouterType_Type(Integer32):
    """Custom type mldMrouterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_MldMrouterType_Type.__name__ = "Integer32"
_MldMrouterType_Object = MibTableColumn
mldMrouterType = _MldMrouterType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 6, 1, 3),
    _MldMrouterType_Type()
)
mldMrouterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldMrouterType.setStatus("current")
_MldStaticGroupCfg_ObjectIdentity = ObjectIdentity
mldStaticGroupCfg = _MldStaticGroupCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 7)
)
_MldStaticGroupPort_Type = Integer32
_MldStaticGroupPort_Object = MibScalar
mldStaticGroupPort = _MldStaticGroupPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 7, 1),
    _MldStaticGroupPort_Type()
)
mldStaticGroupPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldStaticGroupPort.setStatus("current")
_MldStaticGroupIpv6_Type = OctetString
_MldStaticGroupIpv6_Object = MibScalar
mldStaticGroupIpv6 = _MldStaticGroupIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 7, 2),
    _MldStaticGroupIpv6_Type()
)
mldStaticGroupIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldStaticGroupIpv6.setStatus("current")


class _MldStaticGroupVlan_Type(Integer32):
    """Custom type mldStaticGroupVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MldStaticGroupVlan_Type.__name__ = "Integer32"
_MldStaticGroupVlan_Object = MibScalar
mldStaticGroupVlan = _MldStaticGroupVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 7, 3),
    _MldStaticGroupVlan_Type()
)
mldStaticGroupVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldStaticGroupVlan.setStatus("current")


class _MldStaticGroupAction_Type(Integer32):
    """Custom type mldStaticGroupAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MldStaticGroupAction_Type.__name__ = "Integer32"
_MldStaticGroupAction_Object = MibScalar
mldStaticGroupAction = _MldStaticGroupAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 7, 4),
    _MldStaticGroupAction_Type()
)
mldStaticGroupAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldStaticGroupAction.setStatus("current")
_MldStaticGroupTable_Object = MibTable
mldStaticGroupTable = _MldStaticGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8)
)
if mibBuilder.loadTexts:
    mldStaticGroupTable.setStatus("current")
_MldStaticGroupEntry_Object = MibTableRow
mldStaticGroupEntry = _MldStaticGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8, 1)
)
mldStaticGroupEntry.setIndexNames(
    (0, "V1600D", "mldStaticGroupVlanId"),
    (0, "V1600D", "mldStaticGroupIpv6Addr"),
)
if mibBuilder.loadTexts:
    mldStaticGroupEntry.setStatus("current")
_MldStaticGroupVlanId_Type = Integer32
_MldStaticGroupVlanId_Object = MibTableColumn
mldStaticGroupVlanId = _MldStaticGroupVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8, 1, 1),
    _MldStaticGroupVlanId_Type()
)
mldStaticGroupVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldStaticGroupVlanId.setStatus("current")
_MldStaticGroupIpv6Addr_Type = OctetString
_MldStaticGroupIpv6Addr_Object = MibTableColumn
mldStaticGroupIpv6Addr = _MldStaticGroupIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8, 1, 2),
    _MldStaticGroupIpv6Addr_Type()
)
mldStaticGroupIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldStaticGroupIpv6Addr.setStatus("current")


class _MldStaticGroupType_Type(Integer32):
    """Custom type mldStaticGroupType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_MldStaticGroupType_Type.__name__ = "Integer32"
_MldStaticGroupType_Object = MibTableColumn
mldStaticGroupType = _MldStaticGroupType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8, 1, 3),
    _MldStaticGroupType_Type()
)
mldStaticGroupType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldStaticGroupType.setStatus("current")


class _MldStaticGroupVersion_Type(Integer32):
    """Custom type mldStaticGroupVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("v1", 1),
          ("v2", 2))
    )


_MldStaticGroupVersion_Type.__name__ = "Integer32"
_MldStaticGroupVersion_Object = MibTableColumn
mldStaticGroupVersion = _MldStaticGroupVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8, 1, 4),
    _MldStaticGroupVersion_Type()
)
mldStaticGroupVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldStaticGroupVersion.setStatus("current")
_MldStaticGroupPortLlist_Type = OctetString
_MldStaticGroupPortLlist_Object = MibTableColumn
mldStaticGroupPortLlist = _MldStaticGroupPortLlist_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 8, 1, 5),
    _MldStaticGroupPortLlist_Type()
)
mldStaticGroupPortLlist.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldStaticGroupPortLlist.setStatus("current")
_MldGroupMemberTable_Object = MibTable
mldGroupMemberTable = _MldGroupMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9)
)
if mibBuilder.loadTexts:
    mldGroupMemberTable.setStatus("current")
_MldGroupMemberEntry_Object = MibTableRow
mldGroupMemberEntry = _MldGroupMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9, 1)
)
mldGroupMemberEntry.setIndexNames(
    (0, "V1600D", "mldGroupMemberVlanId"),
    (0, "V1600D", "mldGroupMemberIpv6"),
)
if mibBuilder.loadTexts:
    mldGroupMemberEntry.setStatus("current")
_MldGroupMemberVlanId_Type = Integer32
_MldGroupMemberVlanId_Object = MibTableColumn
mldGroupMemberVlanId = _MldGroupMemberVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9, 1, 1),
    _MldGroupMemberVlanId_Type()
)
mldGroupMemberVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGroupMemberVlanId.setStatus("current")
_MldGroupMemberIpv6_Type = OctetString
_MldGroupMemberIpv6_Object = MibTableColumn
mldGroupMemberIpv6 = _MldGroupMemberIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9, 1, 2),
    _MldGroupMemberIpv6_Type()
)
mldGroupMemberIpv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGroupMemberIpv6.setStatus("current")
_MldGroupMemberPortId_Type = Integer32
_MldGroupMemberPortId_Object = MibTableColumn
mldGroupMemberPortId = _MldGroupMemberPortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9, 1, 3),
    _MldGroupMemberPortId_Type()
)
mldGroupMemberPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGroupMemberPortId.setStatus("current")


class _MldGroupMemberType_Type(Integer32):
    """Custom type mldGroupMemberType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_MldGroupMemberType_Type.__name__ = "Integer32"
_MldGroupMemberType_Object = MibTableColumn
mldGroupMemberType = _MldGroupMemberType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9, 1, 4),
    _MldGroupMemberType_Type()
)
mldGroupMemberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGroupMemberType.setStatus("current")
_MldGroupMemberUserVlanId_Type = Integer32
_MldGroupMemberUserVlanId_Object = MibTableColumn
mldGroupMemberUserVlanId = _MldGroupMemberUserVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 20, 9, 1, 5),
    _MldGroupMemberUserVlanId_Type()
)
mldGroupMemberUserVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mldGroupMemberUserVlanId.setStatus("current")
_V1600dSSH_ObjectIdentity = ObjectIdentity
v1600dSSH = _V1600dSSH_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21)
)
_SshConnectInfoTable_Object = MibTable
sshConnectInfoTable = _SshConnectInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1)
)
if mibBuilder.loadTexts:
    sshConnectInfoTable.setStatus("current")
_SshConnectInfoEntry_Object = MibTableRow
sshConnectInfoEntry = _SshConnectInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1)
)
sshConnectInfoEntry.setIndexNames(
    (0, "V1600D", "sshConnections"),
)
if mibBuilder.loadTexts:
    sshConnectInfoEntry.setStatus("current")
_SshConnections_Type = Integer32
_SshConnections_Object = MibTableColumn
sshConnections = _SshConnections_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 1),
    _SshConnections_Type()
)
sshConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshConnections.setStatus("current")


class _SshVersion_Type(Integer32):
    """Custom type sshVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version1", 1),
          ("version2", 2))
    )


_SshVersion_Type.__name__ = "Integer32"
_SshVersion_Object = MibTableColumn
sshVersion = _SshVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 2),
    _SshVersion_Type()
)
sshVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshVersion.setStatus("current")
_SshMode_Type = OctetString
_SshMode_Object = MibTableColumn
sshMode = _SshMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 3),
    _SshMode_Type()
)
sshMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshMode.setStatus("current")
_SshEncryption_Type = OctetString
_SshEncryption_Object = MibTableColumn
sshEncryption = _SshEncryption_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 4),
    _SshEncryption_Type()
)
sshEncryption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshEncryption.setStatus("current")
_SshHmac_Type = OctetString
_SshHmac_Object = MibTableColumn
sshHmac = _SshHmac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 5),
    _SshHmac_Type()
)
sshHmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshHmac.setStatus("current")
_SshState_Type = OctetString
_SshState_Object = MibTableColumn
sshState = _SshState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 6),
    _SshState_Type()
)
sshState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshState.setStatus("current")
_SshUsername_Type = OctetString
_SshUsername_Object = MibTableColumn
sshUsername = _SshUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 1, 1, 7),
    _SshUsername_Type()
)
sshUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshUsername.setStatus("current")
_SshEnable_ObjectIdentity = ObjectIdentity
sshEnable = _SshEnable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2)
)


class _SshEn_Type(Integer32):
    """Custom type sshEn based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("sshdisable", 0),
          ("sshenable", 1))
    )


_SshEn_Type.__name__ = "Integer32"
_SshEn_Object = MibScalar
sshEn = _SshEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2, 1),
    _SshEn_Type()
)
sshEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshEn.setStatus("current")


class _Sshversion_Type(Integer32):
    """Custom type sshversion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version1", 1),
          ("version2", 2))
    )


_Sshversion_Type.__name__ = "Integer32"
_Sshversion_Object = MibScalar
sshversion = _Sshversion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2, 2),
    _Sshversion_Type()
)
sshversion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshversion.setStatus("current")


class _SshAuthRetries_Type(Integer32):
    """Custom type sshAuthRetries based on Integer32"""
    defaultValue = 6


_SshAuthRetries_Type.__name__ = "Integer32"
_SshAuthRetries_Object = MibScalar
sshAuthRetries = _SshAuthRetries_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2, 3),
    _SshAuthRetries_Type()
)
sshAuthRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshAuthRetries.setStatus("current")


class _SshTimeout_Type(Integer32):
    """Custom type sshTimeout based on Integer32"""
    defaultValue = 120


_SshTimeout_Type.__name__ = "Integer32"
_SshTimeout_Object = MibScalar
sshTimeout = _SshTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2, 4),
    _SshTimeout_Type()
)
sshTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshTimeout.setStatus("current")


class _SshModulus_Type(Integer32):
    """Custom type sshModulus based on Integer32"""
    defaultValue = 2048


_SshModulus_Type.__name__ = "Integer32"
_SshModulus_Object = MibScalar
sshModulus = _SshModulus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2, 5),
    _SshModulus_Type()
)
sshModulus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshModulus.setStatus("current")


class _SshEnableAction_Type(Integer32):
    """Custom type sshEnableAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_SshEnableAction_Type.__name__ = "Integer32"
_SshEnableAction_Object = MibScalar
sshEnableAction = _SshEnableAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 21, 2, 6),
    _SshEnableAction_Type()
)
sshEnableAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshEnableAction.setStatus("current")
_V3500DHCP_ObjectIdentity = ObjectIdentity
v3500DHCP = _V3500DHCP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22)
)
_V3500DHCPServer_ObjectIdentity = ObjectIdentity
v3500DHCPServer = _V3500DHCPServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1)
)
_DhcpPool_ObjectIdentity = ObjectIdentity
dhcpPool = _DhcpPool_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1)
)
_DhcpPoolName_Type = OctetString
_DhcpPoolName_Object = MibScalar
dhcpPoolName = _DhcpPoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 1),
    _DhcpPoolName_Type()
)
dhcpPoolName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolName.setStatus("current")


class _DhcpPoolLeasetime_Type(Unsigned32):
    """Custom type dhcpPoolLeasetime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 864000),
    )


_DhcpPoolLeasetime_Type.__name__ = "Unsigned32"
_DhcpPoolLeasetime_Object = MibScalar
dhcpPoolLeasetime = _DhcpPoolLeasetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 2),
    _DhcpPoolLeasetime_Type()
)
dhcpPoolLeasetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolLeasetime.setStatus("current")
_DhcpPoolGw_Type = IpAddress
_DhcpPoolGw_Object = MibScalar
dhcpPoolGw = _DhcpPoolGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 3),
    _DhcpPoolGw_Type()
)
dhcpPoolGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolGw.setStatus("current")
_DhcpPoolDNS1_Type = IpAddress
_DhcpPoolDNS1_Object = MibScalar
dhcpPoolDNS1 = _DhcpPoolDNS1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 4),
    _DhcpPoolDNS1_Type()
)
dhcpPoolDNS1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolDNS1.setStatus("current")
_DhcpPoolDNS2_Type = IpAddress
_DhcpPoolDNS2_Object = MibScalar
dhcpPoolDNS2 = _DhcpPoolDNS2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 5),
    _DhcpPoolDNS2_Type()
)
dhcpPoolDNS2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolDNS2.setStatus("current")
_DhcpPoolDNS3_Type = IpAddress
_DhcpPoolDNS3_Object = MibScalar
dhcpPoolDNS3 = _DhcpPoolDNS3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 6),
    _DhcpPoolDNS3_Type()
)
dhcpPoolDNS3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolDNS3.setStatus("current")
_DhcpPoolWins_Type = IpAddress
_DhcpPoolWins_Object = MibScalar
dhcpPoolWins = _DhcpPoolWins_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 7),
    _DhcpPoolWins_Type()
)
dhcpPoolWins.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolWins.setStatus("current")
_DhcpPoolNetwork_Type = IpAddress
_DhcpPoolNetwork_Object = MibScalar
dhcpPoolNetwork = _DhcpPoolNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 8),
    _DhcpPoolNetwork_Type()
)
dhcpPoolNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolNetwork.setStatus("current")
_DhcpPoolNetworkSubnet_Type = IpAddress
_DhcpPoolNetworkSubnet_Object = MibScalar
dhcpPoolNetworkSubnet = _DhcpPoolNetworkSubnet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 9),
    _DhcpPoolNetworkSubnet_Type()
)
dhcpPoolNetworkSubnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolNetworkSubnet.setStatus("current")


class _DhcpPoolAction_Type(Integer32):
    """Custom type dhcpPoolAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_DhcpPoolAction_Type.__name__ = "Integer32"
_DhcpPoolAction_Object = MibScalar
dhcpPoolAction = _DhcpPoolAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 1, 10),
    _DhcpPoolAction_Type()
)
dhcpPoolAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolAction.setStatus("current")
_DhcpPoolReservedAddr_ObjectIdentity = ObjectIdentity
dhcpPoolReservedAddr = _DhcpPoolReservedAddr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 2)
)
_DhcpPoolReservedPoolname_Type = OctetString
_DhcpPoolReservedPoolname_Object = MibScalar
dhcpPoolReservedPoolname = _DhcpPoolReservedPoolname_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 2, 1),
    _DhcpPoolReservedPoolname_Type()
)
dhcpPoolReservedPoolname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolReservedPoolname.setStatus("current")
_DhcpPoolReservedAdd_Type = IpAddress
_DhcpPoolReservedAdd_Object = MibScalar
dhcpPoolReservedAdd = _DhcpPoolReservedAdd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 2, 2),
    _DhcpPoolReservedAdd_Type()
)
dhcpPoolReservedAdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolReservedAdd.setStatus("current")
_DhcpPoolClientMac_Type = OctetString
_DhcpPoolClientMac_Object = MibScalar
dhcpPoolClientMac = _DhcpPoolClientMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 2, 3),
    _DhcpPoolClientMac_Type()
)
dhcpPoolClientMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolClientMac.setStatus("current")


class _DhcpPoolReservedAction_Type(Integer32):
    """Custom type dhcpPoolReservedAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_DhcpPoolReservedAction_Type.__name__ = "Integer32"
_DhcpPoolReservedAction_Object = MibScalar
dhcpPoolReservedAction = _DhcpPoolReservedAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 2, 4),
    _DhcpPoolReservedAction_Type()
)
dhcpPoolReservedAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolReservedAction.setStatus("current")
_DhcpPoolExcludeAddr_ObjectIdentity = ObjectIdentity
dhcpPoolExcludeAddr = _DhcpPoolExcludeAddr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 3)
)
_DhcpPoolExcludePoolname_Type = OctetString
_DhcpPoolExcludePoolname_Object = MibScalar
dhcpPoolExcludePoolname = _DhcpPoolExcludePoolname_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 3, 1),
    _DhcpPoolExcludePoolname_Type()
)
dhcpPoolExcludePoolname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolExcludePoolname.setStatus("current")
_DhcpPoolExcludeLowAddr_Type = IpAddress
_DhcpPoolExcludeLowAddr_Object = MibScalar
dhcpPoolExcludeLowAddr = _DhcpPoolExcludeLowAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 3, 2),
    _DhcpPoolExcludeLowAddr_Type()
)
dhcpPoolExcludeLowAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolExcludeLowAddr.setStatus("current")
_DhcpPoolExcludeHighAddr_Type = IpAddress
_DhcpPoolExcludeHighAddr_Object = MibScalar
dhcpPoolExcludeHighAddr = _DhcpPoolExcludeHighAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 3, 3),
    _DhcpPoolExcludeHighAddr_Type()
)
dhcpPoolExcludeHighAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolExcludeHighAddr.setStatus("current")


class _DhcpPoolExcludeAction_Type(Integer32):
    """Custom type dhcpPoolExcludeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_DhcpPoolExcludeAction_Type.__name__ = "Integer32"
_DhcpPoolExcludeAction_Object = MibScalar
dhcpPoolExcludeAction = _DhcpPoolExcludeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 3, 4),
    _DhcpPoolExcludeAction_Type()
)
dhcpPoolExcludeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolExcludeAction.setStatus("current")
_DhcpPoolInterfaceEnable_ObjectIdentity = ObjectIdentity
dhcpPoolInterfaceEnable = _DhcpPoolInterfaceEnable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 4)
)


class _DhcpPoolVlan_Type(Unsigned32):
    """Custom type dhcpPoolVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_DhcpPoolVlan_Type.__name__ = "Unsigned32"
_DhcpPoolVlan_Object = MibScalar
dhcpPoolVlan = _DhcpPoolVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 4, 1),
    _DhcpPoolVlan_Type()
)
dhcpPoolVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolVlan.setStatus("current")
_DhcpServerPoolname_Type = OctetString
_DhcpServerPoolname_Object = MibScalar
dhcpServerPoolname = _DhcpServerPoolname_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 4, 2),
    _DhcpServerPoolname_Type()
)
dhcpServerPoolname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpServerPoolname.setStatus("current")


class _DhcpPoolEnable_Type(Integer32):
    """Custom type dhcpPoolEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpPoolEnable_Type.__name__ = "Integer32"
_DhcpPoolEnable_Object = MibScalar
dhcpPoolEnable = _DhcpPoolEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 4, 3),
    _DhcpPoolEnable_Type()
)
dhcpPoolEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolEnable.setStatus("current")
_DhcpPoolTable_Object = MibTable
dhcpPoolTable = _DhcpPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5)
)
if mibBuilder.loadTexts:
    dhcpPoolTable.setStatus("current")
_DhcpPoolEntry_Object = MibTableRow
dhcpPoolEntry = _DhcpPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1)
)
dhcpPoolEntry.setIndexNames(
    (0, "V1600D", "poolName"),
)
if mibBuilder.loadTexts:
    dhcpPoolEntry.setStatus("current")
_PoolName_Type = OctetString
_PoolName_Object = MibTableColumn
poolName = _PoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 1),
    _PoolName_Type()
)
poolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolName.setStatus("current")


class _PoolLeaseTime_Type(Unsigned32):
    """Custom type poolLeaseTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 864000),
    )


_PoolLeaseTime_Type.__name__ = "Unsigned32"
_PoolLeaseTime_Object = MibTableColumn
poolLeaseTime = _PoolLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 2),
    _PoolLeaseTime_Type()
)
poolLeaseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolLeaseTime.setStatus("current")
_PoolStartIP_Type = IpAddress
_PoolStartIP_Object = MibTableColumn
poolStartIP = _PoolStartIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 3),
    _PoolStartIP_Type()
)
poolStartIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolStartIP.setStatus("current")
_PoolEndIP_Type = IpAddress
_PoolEndIP_Object = MibTableColumn
poolEndIP = _PoolEndIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 4),
    _PoolEndIP_Type()
)
poolEndIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolEndIP.setStatus("current")
_PoolSubnet_Type = IpAddress
_PoolSubnet_Object = MibTableColumn
poolSubnet = _PoolSubnet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 5),
    _PoolSubnet_Type()
)
poolSubnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolSubnet.setStatus("current")
_PoolGateway_Type = IpAddress
_PoolGateway_Object = MibTableColumn
poolGateway = _PoolGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 6),
    _PoolGateway_Type()
)
poolGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolGateway.setStatus("current")
_PoolDNS1_Type = IpAddress
_PoolDNS1_Object = MibTableColumn
poolDNS1 = _PoolDNS1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 7),
    _PoolDNS1_Type()
)
poolDNS1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolDNS1.setStatus("current")
_PoolDNS2_Type = IpAddress
_PoolDNS2_Object = MibTableColumn
poolDNS2 = _PoolDNS2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 8),
    _PoolDNS2_Type()
)
poolDNS2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolDNS2.setStatus("current")
_PoolDNS3_Type = IpAddress
_PoolDNS3_Object = MibTableColumn
poolDNS3 = _PoolDNS3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 9),
    _PoolDNS3_Type()
)
poolDNS3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolDNS3.setStatus("current")
_PoolWins_Type = IpAddress
_PoolWins_Object = MibTableColumn
poolWins = _PoolWins_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 5, 1, 10),
    _PoolWins_Type()
)
poolWins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poolWins.setStatus("current")
_DhcpPoolReservedAddrTable_Object = MibTable
dhcpPoolReservedAddrTable = _DhcpPoolReservedAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 6)
)
if mibBuilder.loadTexts:
    dhcpPoolReservedAddrTable.setStatus("current")
_DhcpPoolReservedAddrEntry_Object = MibTableRow
dhcpPoolReservedAddrEntry = _DhcpPoolReservedAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 6, 1)
)
dhcpPoolReservedAddrEntry.setIndexNames(
    (0, "V1600D", "reservedIndex"),
    (0, "V1600D", "reservedPoolName"),
)
if mibBuilder.loadTexts:
    dhcpPoolReservedAddrEntry.setStatus("current")
_ReservedIndex_Type = Integer32
_ReservedIndex_Object = MibTableColumn
reservedIndex = _ReservedIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 6, 1, 1),
    _ReservedIndex_Type()
)
reservedIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservedIndex.setStatus("current")
_ReservedPoolName_Type = OctetString
_ReservedPoolName_Object = MibTableColumn
reservedPoolName = _ReservedPoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 6, 1, 2),
    _ReservedPoolName_Type()
)
reservedPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservedPoolName.setStatus("current")
_ReservedAddress_Type = IpAddress
_ReservedAddress_Object = MibTableColumn
reservedAddress = _ReservedAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 6, 1, 3),
    _ReservedAddress_Type()
)
reservedAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservedAddress.setStatus("current")
_ClientMacAddr_Type = OctetString
_ClientMacAddr_Object = MibTableColumn
clientMacAddr = _ClientMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 6, 1, 4),
    _ClientMacAddr_Type()
)
clientMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clientMacAddr.setStatus("current")
_DhcpPoolExcludeAddrTable_Object = MibTable
dhcpPoolExcludeAddrTable = _DhcpPoolExcludeAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 7)
)
if mibBuilder.loadTexts:
    dhcpPoolExcludeAddrTable.setStatus("current")
_DhcpPoolExcludeAddrEntry_Object = MibTableRow
dhcpPoolExcludeAddrEntry = _DhcpPoolExcludeAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 7, 1)
)
dhcpPoolExcludeAddrEntry.setIndexNames(
    (0, "V1600D", "excludeIndex"),
    (0, "V1600D", "excludePoolName"),
)
if mibBuilder.loadTexts:
    dhcpPoolExcludeAddrEntry.setStatus("current")
_ExcludePoolName_Type = OctetString
_ExcludePoolName_Object = MibTableColumn
excludePoolName = _ExcludePoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 7, 1, 1),
    _ExcludePoolName_Type()
)
excludePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    excludePoolName.setStatus("current")
_ExcludeIndex_Type = Integer32
_ExcludeIndex_Object = MibTableColumn
excludeIndex = _ExcludeIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 7, 1, 2),
    _ExcludeIndex_Type()
)
excludeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    excludeIndex.setStatus("current")
_ExcludeLowAddress_Type = IpAddress
_ExcludeLowAddress_Object = MibTableColumn
excludeLowAddress = _ExcludeLowAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 7, 1, 3),
    _ExcludeLowAddress_Type()
)
excludeLowAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    excludeLowAddress.setStatus("current")
_ExcludeHighAddress_Type = IpAddress
_ExcludeHighAddress_Object = MibTableColumn
excludeHighAddress = _ExcludeHighAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 7, 1, 4),
    _ExcludeHighAddress_Type()
)
excludeHighAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    excludeHighAddress.setStatus("current")
_DhcpPoolInterfaceEnableTable_Object = MibTable
dhcpPoolInterfaceEnableTable = _DhcpPoolInterfaceEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 8)
)
if mibBuilder.loadTexts:
    dhcpPoolInterfaceEnableTable.setStatus("current")
_DhcpPoolInterfaceEnableEntry_Object = MibTableRow
dhcpPoolInterfaceEnableEntry = _DhcpPoolInterfaceEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 8, 1)
)
dhcpPoolInterfaceEnableEntry.setIndexNames(
    (0, "V1600D", "dhcpPoolInterfaceVlan"),
    (0, "V1600D", "enabledPoolName"),
)
if mibBuilder.loadTexts:
    dhcpPoolInterfaceEnableEntry.setStatus("current")


class _DhcpPoolInterfaceVlan_Type(Unsigned32):
    """Custom type dhcpPoolInterfaceVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_DhcpPoolInterfaceVlan_Type.__name__ = "Unsigned32"
_DhcpPoolInterfaceVlan_Object = MibTableColumn
dhcpPoolInterfaceVlan = _DhcpPoolInterfaceVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 8, 1, 1),
    _DhcpPoolInterfaceVlan_Type()
)
dhcpPoolInterfaceVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpPoolInterfaceVlan.setStatus("current")
_EnabledPoolName_Type = OctetString
_EnabledPoolName_Object = MibTableColumn
enabledPoolName = _EnabledPoolName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 8, 1, 2),
    _EnabledPoolName_Type()
)
enabledPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    enabledPoolName.setStatus("current")
_DhcpBindingTable_Object = MibTable
dhcpBindingTable = _DhcpBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9)
)
if mibBuilder.loadTexts:
    dhcpBindingTable.setStatus("current")
_DhcpBindingEntry_Object = MibTableRow
dhcpBindingEntry = _DhcpBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1)
)
dhcpBindingEntry.setIndexNames(
    (0, "V1600D", "dhcpBindingClientMac"),
)
if mibBuilder.loadTexts:
    dhcpBindingEntry.setStatus("current")
_DhcpBindingIndex_Type = Integer32
_DhcpBindingIndex_Object = MibTableColumn
dhcpBindingIndex = _DhcpBindingIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1, 1),
    _DhcpBindingIndex_Type()
)
dhcpBindingIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpBindingIndex.setStatus("current")
_DhcpBindingClientMac_Type = OctetString
_DhcpBindingClientMac_Object = MibTableColumn
dhcpBindingClientMac = _DhcpBindingClientMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1, 2),
    _DhcpBindingClientMac_Type()
)
dhcpBindingClientMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpBindingClientMac.setStatus("current")
_DhcpBindingnAddr_Type = IpAddress
_DhcpBindingnAddr_Object = MibTableColumn
dhcpBindingnAddr = _DhcpBindingnAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1, 3),
    _DhcpBindingnAddr_Type()
)
dhcpBindingnAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpBindingnAddr.setStatus("current")


class _DhcpBindingLeaseTime_Type(Unsigned32):
    """Custom type dhcpBindingLeaseTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_DhcpBindingLeaseTime_Type.__name__ = "Unsigned32"
_DhcpBindingLeaseTime_Object = MibTableColumn
dhcpBindingLeaseTime = _DhcpBindingLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1, 4),
    _DhcpBindingLeaseTime_Type()
)
dhcpBindingLeaseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpBindingLeaseTime.setStatus("current")


class _DhcpBindingType_Type(Integer32):
    """Custom type dhcpBindingType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("Automatic", 1),
          ("Manual", 2),
          ("Ping", 3))
    )


_DhcpBindingType_Type.__name__ = "Integer32"
_DhcpBindingType_Object = MibTableColumn
dhcpBindingType = _DhcpBindingType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1, 5),
    _DhcpBindingType_Type()
)
dhcpBindingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpBindingType.setStatus("current")
_DhcpBindingHostName_Type = OctetString
_DhcpBindingHostName_Object = MibTableColumn
dhcpBindingHostName = _DhcpBindingHostName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 22, 1, 9, 1, 6),
    _DhcpBindingHostName_Type()
)
dhcpBindingHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpBindingHostName.setStatus("current")
_V1600RIPng_ObjectIdentity = ObjectIdentity
v1600RIPng = _V1600RIPng_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23)
)
_RipngGlobalCfg_ObjectIdentity = ObjectIdentity
ripngGlobalCfg = _RipngGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1)
)


class _RipngRouteEn_Type(Integer32):
    """Custom type ripngRouteEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RipngRouteEn_Type.__name__ = "Integer32"
_RipngRouteEn_Object = MibScalar
ripngRouteEn = _RipngRouteEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 1),
    _RipngRouteEn_Type()
)
ripngRouteEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngRouteEn.setStatus("current")


class _RipngUpdateTime_Type(Integer32):
    """Custom type ripngUpdateTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RipngUpdateTime_Type.__name__ = "Integer32"
_RipngUpdateTime_Object = MibScalar
ripngUpdateTime = _RipngUpdateTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 2),
    _RipngUpdateTime_Type()
)
ripngUpdateTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngUpdateTime.setStatus("current")


class _RipngTimeout_Type(Integer32):
    """Custom type ripngTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RipngTimeout_Type.__name__ = "Integer32"
_RipngTimeout_Object = MibScalar
ripngTimeout = _RipngTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 3),
    _RipngTimeout_Type()
)
ripngTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngTimeout.setStatus("current")


class _RipngGarbageTime_Type(Integer32):
    """Custom type ripngGarbageTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RipngGarbageTime_Type.__name__ = "Integer32"
_RipngGarbageTime_Object = MibScalar
ripngGarbageTime = _RipngGarbageTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 4),
    _RipngGarbageTime_Type()
)
ripngGarbageTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngGarbageTime.setStatus("current")


class _RipngDefMetric_Type(Integer32):
    """Custom type ripngDefMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_RipngDefMetric_Type.__name__ = "Integer32"
_RipngDefMetric_Object = MibScalar
ripngDefMetric = _RipngDefMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 5),
    _RipngDefMetric_Type()
)
ripngDefMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngDefMetric.setStatus("current")
_RipngRouteNetworking_ObjectIdentity = ObjectIdentity
ripngRouteNetworking = _RipngRouteNetworking_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 6)
)


class _RipngVlanid_Type(Integer32):
    """Custom type ripngVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_RipngVlanid_Type.__name__ = "Integer32"
_RipngVlanid_Object = MibScalar
ripngVlanid = _RipngVlanid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 6, 1),
    _RipngVlanid_Type()
)
ripngVlanid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngVlanid.setStatus("current")
_RipngIPv6Addr_Type = OctetString
_RipngIPv6Addr_Object = MibScalar
ripngIPv6Addr = _RipngIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 6, 2),
    _RipngIPv6Addr_Type()
)
ripngIPv6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngIPv6Addr.setStatus("current")


class _RipngRouteAction_Type(Integer32):
    """Custom type ripngRouteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_RipngRouteAction_Type.__name__ = "Integer32"
_RipngRouteAction_Object = MibScalar
ripngRouteAction = _RipngRouteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 6, 3),
    _RipngRouteAction_Type()
)
ripngRouteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngRouteAction.setStatus("current")
_RipngRouteNetworkTable_Object = MibTable
ripngRouteNetworkTable = _RipngRouteNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 7)
)
if mibBuilder.loadTexts:
    ripngRouteNetworkTable.setStatus("current")
_RipngRouteNetworkEntry_Object = MibTableRow
ripngRouteNetworkEntry = _RipngRouteNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 7, 1)
)
ripngRouteNetworkEntry.setIndexNames(
    (0, "V1600D", "ripngRouteNetwork"),
)
if mibBuilder.loadTexts:
    ripngRouteNetworkEntry.setStatus("current")
_RipngRouteNetwork_Type = OctetString
_RipngRouteNetwork_Object = MibTableColumn
ripngRouteNetwork = _RipngRouteNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 7, 1, 1),
    _RipngRouteNetwork_Type()
)
ripngRouteNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteNetwork.setStatus("current")
_RipngAggregate_ObjectIdentity = ObjectIdentity
ripngAggregate = _RipngAggregate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 8)
)
_RipngAggreIPv6_Type = OctetString
_RipngAggreIPv6_Object = MibScalar
ripngAggreIPv6 = _RipngAggreIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 8, 1),
    _RipngAggreIPv6_Type()
)
ripngAggreIPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngAggreIPv6.setStatus("current")


class _RipngAggrePrefix_Type(Integer32):
    """Custom type ripngAggrePrefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_RipngAggrePrefix_Type.__name__ = "Integer32"
_RipngAggrePrefix_Object = MibScalar
ripngAggrePrefix = _RipngAggrePrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 8, 2),
    _RipngAggrePrefix_Type()
)
ripngAggrePrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngAggrePrefix.setStatus("current")


class _RipngAggreAction_Type(Integer32):
    """Custom type ripngAggreAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_RipngAggreAction_Type.__name__ = "Integer32"
_RipngAggreAction_Object = MibScalar
ripngAggreAction = _RipngAggreAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 8, 3),
    _RipngAggreAction_Type()
)
ripngAggreAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngAggreAction.setStatus("current")
_RipngAggregateTable_Object = MibTable
ripngAggregateTable = _RipngAggregateTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 9)
)
if mibBuilder.loadTexts:
    ripngAggregateTable.setStatus("current")
_RipngAggregateEntry_Object = MibTableRow
ripngAggregateEntry = _RipngAggregateEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 9, 1)
)
ripngAggregateEntry.setIndexNames(
    (0, "V1600D", "ripngAggreNetwork"),
)
if mibBuilder.loadTexts:
    ripngAggregateEntry.setStatus("current")
_RipngAggreNetwork_Type = OctetString
_RipngAggreNetwork_Object = MibTableColumn
ripngAggreNetwork = _RipngAggreNetwork_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 9, 1, 1),
    _RipngAggreNetwork_Type()
)
ripngAggreNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngAggreNetwork.setStatus("current")
_RipngRedistribute_ObjectIdentity = ObjectIdentity
ripngRedistribute = _RipngRedistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 10)
)


class _RipngDefRedisEn_Type(Integer32):
    """Custom type ripngDefRedisEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RipngDefRedisEn_Type.__name__ = "Integer32"
_RipngDefRedisEn_Object = MibScalar
ripngDefRedisEn = _RipngDefRedisEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 10, 1),
    _RipngDefRedisEn_Type()
)
ripngDefRedisEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngDefRedisEn.setStatus("current")


class _RipngRedisType_Type(Integer32):
    """Custom type ripngRedisType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              7)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 1),
          ("connected", 2),
          ("static", 3),
          ("ospf6", 7))
    )


_RipngRedisType_Type.__name__ = "Integer32"
_RipngRedisType_Object = MibScalar
ripngRedisType = _RipngRedisType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 10, 2),
    _RipngRedisType_Type()
)
ripngRedisType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngRedisType.setStatus("current")


class _RipngRedisMetric_Type(Integer32):
    """Custom type ripngRedisMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_RipngRedisMetric_Type.__name__ = "Integer32"
_RipngRedisMetric_Object = MibScalar
ripngRedisMetric = _RipngRedisMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 10, 3),
    _RipngRedisMetric_Type()
)
ripngRedisMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngRedisMetric.setStatus("current")


class _RipngRedisAction_Type(Integer32):
    """Custom type ripngRedisAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_RipngRedisAction_Type.__name__ = "Integer32"
_RipngRedisAction_Object = MibScalar
ripngRedisAction = _RipngRedisAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 10, 4),
    _RipngRedisAction_Type()
)
ripngRedisAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngRedisAction.setStatus("current")
_RipngRedisTable_Object = MibTable
ripngRedisTable = _RipngRedisTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 11)
)
if mibBuilder.loadTexts:
    ripngRedisTable.setStatus("current")
_RipngRedisEntry_Object = MibTableRow
ripngRedisEntry = _RipngRedisEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 11, 1)
)
ripngRedisEntry.setIndexNames(
    (0, "V1600D", "ripngRedistributeType"),
)
if mibBuilder.loadTexts:
    ripngRedisEntry.setStatus("current")


class _RipngRedistributeType_Type(Integer32):
    """Custom type ripngRedistributeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              7)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 1),
          ("connect", 2),
          ("static", 3),
          ("ospf6", 7))
    )


_RipngRedistributeType_Type.__name__ = "Integer32"
_RipngRedistributeType_Object = MibTableColumn
ripngRedistributeType = _RipngRedistributeType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 11, 1, 1),
    _RipngRedistributeType_Type()
)
ripngRedistributeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRedistributeType.setStatus("current")


class _RipngRedistributeMetric_Type(Integer32):
    """Custom type ripngRedistributeMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_RipngRedistributeMetric_Type.__name__ = "Integer32"
_RipngRedistributeMetric_Object = MibTableColumn
ripngRedistributeMetric = _RipngRedistributeMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 11, 1, 2),
    _RipngRedistributeMetric_Type()
)
ripngRedistributeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRedistributeMetric.setStatus("current")
_RipngInterfaceTable_Object = MibTable
ripngInterfaceTable = _RipngInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 12)
)
if mibBuilder.loadTexts:
    ripngInterfaceTable.setStatus("current")
_RipngInterfaceEntry_Object = MibTableRow
ripngInterfaceEntry = _RipngInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 12, 1)
)
ripngInterfaceEntry.setIndexNames(
    (0, "V1600D", "ripngInterfaceID"),
)
if mibBuilder.loadTexts:
    ripngInterfaceEntry.setStatus("current")
_RipngInterfaceID_Type = OctetString
_RipngInterfaceID_Object = MibTableColumn
ripngInterfaceID = _RipngInterfaceID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 12, 1, 1),
    _RipngInterfaceID_Type()
)
ripngInterfaceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngInterfaceID.setStatus("current")


class _RipngInterSplitHorizon_Type(Integer32):
    """Custom type ripngInterSplitHorizon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("split-horizon", 1),
          ("horizon-and-reverse", 2))
    )


_RipngInterSplitHorizon_Type.__name__ = "Integer32"
_RipngInterSplitHorizon_Object = MibTableColumn
ripngInterSplitHorizon = _RipngInterSplitHorizon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 1, 12, 1, 2),
    _RipngInterSplitHorizon_Type()
)
ripngInterSplitHorizon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripngInterSplitHorizon.setStatus("current")
_RipngRouteTable_Object = MibTable
ripngRouteTable = _RipngRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2)
)
if mibBuilder.loadTexts:
    ripngRouteTable.setStatus("current")
_RipngRouteEntry_Object = MibTableRow
ripngRouteEntry = _RipngRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1)
)
ripngRouteEntry.setIndexNames(
    (0, "V1600D", "ripngRouteType"),
    (0, "V1600D", "ripngRouteNetworks"),
)
if mibBuilder.loadTexts:
    ripngRouteEntry.setStatus("current")
_RipngRouteType_Type = OctetString
_RipngRouteType_Object = MibTableColumn
ripngRouteType = _RipngRouteType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 1),
    _RipngRouteType_Type()
)
ripngRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteType.setStatus("current")
_RipngRouteNetworks_Type = OctetString
_RipngRouteNetworks_Object = MibTableColumn
ripngRouteNetworks = _RipngRouteNetworks_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 2),
    _RipngRouteNetworks_Type()
)
ripngRouteNetworks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteNetworks.setStatus("current")
_RipngRouteNextHop_Type = OctetString
_RipngRouteNextHop_Object = MibTableColumn
ripngRouteNextHop = _RipngRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 3),
    _RipngRouteNextHop_Type()
)
ripngRouteNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteNextHop.setStatus("current")
_RipngRouteVia_Type = OctetString
_RipngRouteVia_Object = MibTableColumn
ripngRouteVia = _RipngRouteVia_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 4),
    _RipngRouteVia_Type()
)
ripngRouteVia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteVia.setStatus("current")
_RipngRouteMetric_Type = Integer32
_RipngRouteMetric_Object = MibTableColumn
ripngRouteMetric = _RipngRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 5),
    _RipngRouteMetric_Type()
)
ripngRouteMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteMetric.setStatus("current")
_RipngRouteTag_Type = Integer32
_RipngRouteTag_Object = MibTableColumn
ripngRouteTag = _RipngRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 6),
    _RipngRouteTag_Type()
)
ripngRouteTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteTag.setStatus("current")
_RipngRouteTime_Type = OctetString
_RipngRouteTime_Object = MibTableColumn
ripngRouteTime = _RipngRouteTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 2, 1, 7),
    _RipngRouteTime_Type()
)
ripngRouteTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngRouteTime.setStatus("current")
_RipngRouteInfoSrcTable_Object = MibTable
ripngRouteInfoSrcTable = _RipngRouteInfoSrcTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3)
)
if mibBuilder.loadTexts:
    ripngRouteInfoSrcTable.setStatus("current")
_RipngRouteInfoSrcEntry_Object = MibTableRow
ripngRouteInfoSrcEntry = _RipngRouteInfoSrcEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3, 1)
)
ripngRouteInfoSrcEntry.setIndexNames(
    (0, "V1600D", "ripngGateway"),
)
if mibBuilder.loadTexts:
    ripngRouteInfoSrcEntry.setStatus("current")
_RipngGateway_Type = OctetString
_RipngGateway_Object = MibTableColumn
ripngGateway = _RipngGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3, 1, 1),
    _RipngGateway_Type()
)
ripngGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngGateway.setStatus("current")
_RipngBadPackets_Type = Unsigned32
_RipngBadPackets_Object = MibTableColumn
ripngBadPackets = _RipngBadPackets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3, 1, 2),
    _RipngBadPackets_Type()
)
ripngBadPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngBadPackets.setStatus("current")
_RipngBadRoutes_Type = Unsigned32
_RipngBadRoutes_Object = MibTableColumn
ripngBadRoutes = _RipngBadRoutes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3, 1, 3),
    _RipngBadRoutes_Type()
)
ripngBadRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngBadRoutes.setStatus("current")
_RipngDistance_Type = Unsigned32
_RipngDistance_Object = MibTableColumn
ripngDistance = _RipngDistance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3, 1, 4),
    _RipngDistance_Type()
)
ripngDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngDistance.setStatus("current")
_RipngLastUpdate_Type = OctetString
_RipngLastUpdate_Object = MibTableColumn
ripngLastUpdate = _RipngLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 23, 3, 1, 5),
    _RipngLastUpdate_Type()
)
ripngLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripngLastUpdate.setStatus("current")
_V1600Tacacs_ObjectIdentity = ObjectIdentity
v1600Tacacs = _V1600Tacacs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25)
)
_TacplusCfg_ObjectIdentity = ObjectIdentity
tacplusCfg = _TacplusCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1)
)


class _TacAAAEnable_Type(Integer32):
    """Custom type tacAAAEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAAAEnable_Type.__name__ = "Integer32"
_TacAAAEnable_Object = MibScalar
tacAAAEnable = _TacAAAEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 1),
    _TacAAAEnable_Type()
)
tacAAAEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAAAEnable.setStatus("current")


class _TacAuthen_Type(Integer32):
    """Custom type tacAuthen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthen_Type.__name__ = "Integer32"
_TacAuthen_Object = MibScalar
tacAuthen = _TacAuthen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 2),
    _TacAuthen_Type()
)
tacAuthen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthen.setStatus("current")


class _TacAuthenLocal_Type(Integer32):
    """Custom type tacAuthenLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthenLocal_Type.__name__ = "Integer32"
_TacAuthenLocal_Object = MibScalar
tacAuthenLocal = _TacAuthenLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 3),
    _TacAuthenLocal_Type()
)
tacAuthenLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthenLocal.setStatus("current")


class _TacAuthenEnable_Type(Integer32):
    """Custom type tacAuthenEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthenEnable_Type.__name__ = "Integer32"
_TacAuthenEnable_Object = MibScalar
tacAuthenEnable = _TacAuthenEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 4),
    _TacAuthenEnable_Type()
)
tacAuthenEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthenEnable.setStatus("current")


class _TacAuthenEnableLocal_Type(Integer32):
    """Custom type tacAuthenEnableLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthenEnableLocal_Type.__name__ = "Integer32"
_TacAuthenEnableLocal_Object = MibScalar
tacAuthenEnableLocal = _TacAuthenEnableLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 5),
    _TacAuthenEnableLocal_Type()
)
tacAuthenEnableLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthenEnableLocal.setStatus("current")


class _TacAuthorExec_Type(Integer32):
    """Custom type tacAuthorExec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthorExec_Type.__name__ = "Integer32"
_TacAuthorExec_Object = MibScalar
tacAuthorExec = _TacAuthorExec_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 6),
    _TacAuthorExec_Type()
)
tacAuthorExec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthorExec.setStatus("current")


class _TacAuthorExecLocal_Type(Integer32):
    """Custom type tacAuthorExecLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthorExecLocal_Type.__name__ = "Integer32"
_TacAuthorExecLocal_Object = MibScalar
tacAuthorExecLocal = _TacAuthorExecLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 7),
    _TacAuthorExecLocal_Type()
)
tacAuthorExecLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthorExecLocal.setStatus("current")


class _TacAuthorCmdLv_Type(Integer32):
    """Custom type tacAuthorCmdLv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_TacAuthorCmdLv_Type.__name__ = "Integer32"
_TacAuthorCmdLv_Object = MibScalar
tacAuthorCmdLv = _TacAuthorCmdLv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 8),
    _TacAuthorCmdLv_Type()
)
tacAuthorCmdLv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthorCmdLv.setStatus("current")


class _TacAuthorCmdLvLocal_Type(Integer32):
    """Custom type tacAuthorCmdLvLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_TacAuthorCmdLvLocal_Type.__name__ = "Integer32"
_TacAuthorCmdLvLocal_Object = MibScalar
tacAuthorCmdLvLocal = _TacAuthorCmdLvLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 9),
    _TacAuthorCmdLvLocal_Type()
)
tacAuthorCmdLvLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthorCmdLvLocal.setStatus("current")


class _TacAuthorCmdEnable_Type(Integer32):
    """Custom type tacAuthorCmdEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAuthorCmdEnable_Type.__name__ = "Integer32"
_TacAuthorCmdEnable_Object = MibScalar
tacAuthorCmdEnable = _TacAuthorCmdEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 10),
    _TacAuthorCmdEnable_Type()
)
tacAuthorCmdEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAuthorCmdEnable.setStatus("current")


class _TacAcctExec_Type(Integer32):
    """Custom type tacAcctExec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAcctExec_Type.__name__ = "Integer32"
_TacAcctExec_Object = MibScalar
tacAcctExec = _TacAcctExec_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 11),
    _TacAcctExec_Type()
)
tacAcctExec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAcctExec.setStatus("current")


class _TacAcctCmdLv_Type(Integer32):
    """Custom type tacAcctCmdLv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_TacAcctCmdLv_Type.__name__ = "Integer32"
_TacAcctCmdLv_Object = MibScalar
tacAcctCmdLv = _TacAcctCmdLv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 12),
    _TacAcctCmdLv_Type()
)
tacAcctCmdLv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAcctCmdLv.setStatus("current")


class _TacAcctCmdEnable_Type(Integer32):
    """Custom type tacAcctCmdEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacAcctCmdEnable_Type.__name__ = "Integer32"
_TacAcctCmdEnable_Object = MibScalar
tacAcctCmdEnable = _TacAcctCmdEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 13),
    _TacAcctCmdEnable_Type()
)
tacAcctCmdEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAcctCmdEnable.setStatus("current")


class _EnableConsoleTac_Type(Integer32):
    """Custom type enableConsoleTac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_EnableConsoleTac_Type.__name__ = "Integer32"
_EnableConsoleTac_Object = MibScalar
enableConsoleTac = _EnableConsoleTac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 14),
    _EnableConsoleTac_Type()
)
enableConsoleTac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    enableConsoleTac.setStatus("current")


class _EnableWebTac_Type(Integer32):
    """Custom type enableWebTac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_EnableWebTac_Type.__name__ = "Integer32"
_EnableWebTac_Object = MibScalar
enableWebTac = _EnableWebTac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 1, 15),
    _EnableWebTac_Type()
)
enableWebTac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    enableWebTac.setStatus("current")
_TacplusCfgTable_Object = MibTable
tacplusCfgTable = _TacplusCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2)
)
if mibBuilder.loadTexts:
    tacplusCfgTable.setStatus("current")
_TacplusCfgEntry_Object = MibTableRow
tacplusCfgEntry = _TacplusCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1)
)
tacplusCfgEntry.setIndexNames(
    (0, "V1600D", "tacplusAAA"),
)
if mibBuilder.loadTexts:
    tacplusCfgEntry.setStatus("current")


class _TacplusAAA_Type(Integer32):
    """Custom type tacplusAAA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAAA_Type.__name__ = "Integer32"
_TacplusAAA_Object = MibTableColumn
tacplusAAA = _TacplusAAA_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 1),
    _TacplusAAA_Type()
)
tacplusAAA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAAA.setStatus("current")


class _TacplusAuthentication_Type(Integer32):
    """Custom type tacplusAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAuthentication_Type.__name__ = "Integer32"
_TacplusAuthentication_Object = MibTableColumn
tacplusAuthentication = _TacplusAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 2),
    _TacplusAuthentication_Type()
)
tacplusAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthentication.setStatus("current")


class _TacplusAuthenLocal_Type(Integer32):
    """Custom type tacplusAuthenLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAuthenLocal_Type.__name__ = "Integer32"
_TacplusAuthenLocal_Object = MibTableColumn
tacplusAuthenLocal = _TacplusAuthenLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 3),
    _TacplusAuthenLocal_Type()
)
tacplusAuthenLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthenLocal.setStatus("current")


class _TacplusAuthenEnable_Type(Integer32):
    """Custom type tacplusAuthenEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAuthenEnable_Type.__name__ = "Integer32"
_TacplusAuthenEnable_Object = MibTableColumn
tacplusAuthenEnable = _TacplusAuthenEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 4),
    _TacplusAuthenEnable_Type()
)
tacplusAuthenEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthenEnable.setStatus("current")


class _TacplusAuthenEnableLocal_Type(Integer32):
    """Custom type tacplusAuthenEnableLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAuthenEnableLocal_Type.__name__ = "Integer32"
_TacplusAuthenEnableLocal_Object = MibTableColumn
tacplusAuthenEnableLocal = _TacplusAuthenEnableLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 5),
    _TacplusAuthenEnableLocal_Type()
)
tacplusAuthenEnableLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthenEnableLocal.setStatus("current")


class _TacplusAuthorExec_Type(Integer32):
    """Custom type tacplusAuthorExec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAuthorExec_Type.__name__ = "Integer32"
_TacplusAuthorExec_Object = MibTableColumn
tacplusAuthorExec = _TacplusAuthorExec_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 6),
    _TacplusAuthorExec_Type()
)
tacplusAuthorExec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthorExec.setStatus("current")


class _TacplusAuthorExecLocal_Type(Integer32):
    """Custom type tacplusAuthorExecLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAuthorExecLocal_Type.__name__ = "Integer32"
_TacplusAuthorExecLocal_Object = MibTableColumn
tacplusAuthorExecLocal = _TacplusAuthorExecLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 7),
    _TacplusAuthorExecLocal_Type()
)
tacplusAuthorExecLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthorExecLocal.setStatus("current")
_TacplusAuthorCmdLv_Type = OctetString
_TacplusAuthorCmdLv_Object = MibTableColumn
tacplusAuthorCmdLv = _TacplusAuthorCmdLv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 8),
    _TacplusAuthorCmdLv_Type()
)
tacplusAuthorCmdLv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthorCmdLv.setStatus("current")
_TacplusAuthorCmdLvLocal_Type = OctetString
_TacplusAuthorCmdLvLocal_Object = MibTableColumn
tacplusAuthorCmdLvLocal = _TacplusAuthorCmdLvLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 9),
    _TacplusAuthorCmdLvLocal_Type()
)
tacplusAuthorCmdLvLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAuthorCmdLvLocal.setStatus("current")


class _TacplusAcctExec_Type(Integer32):
    """Custom type tacplusAcctExec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusAcctExec_Type.__name__ = "Integer32"
_TacplusAcctExec_Object = MibTableColumn
tacplusAcctExec = _TacplusAcctExec_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 10),
    _TacplusAcctExec_Type()
)
tacplusAcctExec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAcctExec.setStatus("current")
_TacplusAcctCmdLv_Type = OctetString
_TacplusAcctCmdLv_Object = MibTableColumn
tacplusAcctCmdLv = _TacplusAcctCmdLv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 11),
    _TacplusAcctCmdLv_Type()
)
tacplusAcctCmdLv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusAcctCmdLv.setStatus("current")


class _TacplusConsoleStatus_Type(Integer32):
    """Custom type tacplusConsoleStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_TacplusConsoleStatus_Type.__name__ = "Integer32"
_TacplusConsoleStatus_Object = MibTableColumn
tacplusConsoleStatus = _TacplusConsoleStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 2, 1, 12),
    _TacplusConsoleStatus_Type()
)
tacplusConsoleStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusConsoleStatus.setStatus("current")
_TacplusServerCfg_ObjectIdentity = ObjectIdentity
tacplusServerCfg = _TacplusServerCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 3)
)
_TacServerHost_Type = OctetString
_TacServerHost_Object = MibScalar
tacServerHost = _TacServerHost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 3, 1),
    _TacServerHost_Type()
)
tacServerHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacServerHost.setStatus("current")


class _TacAddServer_Type(Integer32):
    """Custom type tacAddServer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("add", 0),
          ("del", 1))
    )


_TacAddServer_Type.__name__ = "Integer32"
_TacAddServer_Object = MibScalar
tacAddServer = _TacAddServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 3, 2),
    _TacAddServer_Type()
)
tacAddServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAddServer.setStatus("current")
_TacSharedKey_Type = OctetString
_TacSharedKey_Object = MibScalar
tacSharedKey = _TacSharedKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 3, 3),
    _TacSharedKey_Type()
)
tacSharedKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacSharedKey.setStatus("current")


class _TacAddKey_Type(Integer32):
    """Custom type tacAddKey based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("add", 0),
          ("del", 1))
    )


_TacAddKey_Type.__name__ = "Integer32"
_TacAddKey_Object = MibScalar
tacAddKey = _TacAddKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 3, 4),
    _TacAddKey_Type()
)
tacAddKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacAddKey.setStatus("current")
_TacplusServerTable_Object = MibTable
tacplusServerTable = _TacplusServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 4)
)
if mibBuilder.loadTexts:
    tacplusServerTable.setStatus("current")
_TacplusServerEntry_Object = MibTableRow
tacplusServerEntry = _TacplusServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 4, 1)
)
tacplusServerEntry.setIndexNames(
    (0, "V1600D", "tacplusServer"),
)
if mibBuilder.loadTexts:
    tacplusServerEntry.setStatus("current")
_TacplusServer_Type = OctetString
_TacplusServer_Object = MibTableColumn
tacplusServer = _TacplusServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 4, 1, 1),
    _TacplusServer_Type()
)
tacplusServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusServer.setStatus("current")
_TacplusKey_Type = OctetString
_TacplusKey_Object = MibTableColumn
tacplusKey = _TacplusKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 25, 4, 1, 2),
    _TacplusKey_Type()
)
tacplusKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tacplusKey.setStatus("current")
_V1600Radius_ObjectIdentity = ObjectIdentity
v1600Radius = _V1600Radius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26)
)
_RadiusCfg_ObjectIdentity = ObjectIdentity
radiusCfg = _RadiusCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1)
)


class _RadAAAEnable_Type(Integer32):
    """Custom type radAAAEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadAAAEnable_Type.__name__ = "Integer32"
_RadAAAEnable_Object = MibScalar
radAAAEnable = _RadAAAEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 1),
    _RadAAAEnable_Type()
)
radAAAEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAAAEnable.setStatus("current")


class _RadAuthen_Type(Integer32):
    """Custom type radAuthen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadAuthen_Type.__name__ = "Integer32"
_RadAuthen_Object = MibScalar
radAuthen = _RadAuthen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 2),
    _RadAuthen_Type()
)
radAuthen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAuthen.setStatus("current")


class _RadAuthenLocal_Type(Integer32):
    """Custom type radAuthenLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadAuthenLocal_Type.__name__ = "Integer32"
_RadAuthenLocal_Object = MibScalar
radAuthenLocal = _RadAuthenLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 3),
    _RadAuthenLocal_Type()
)
radAuthenLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAuthenLocal.setStatus("current")


class _RadAuthenEnable_Type(Integer32):
    """Custom type radAuthenEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadAuthenEnable_Type.__name__ = "Integer32"
_RadAuthenEnable_Object = MibScalar
radAuthenEnable = _RadAuthenEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 4),
    _RadAuthenEnable_Type()
)
radAuthenEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAuthenEnable.setStatus("current")


class _RadAuthenEnableLocal_Type(Integer32):
    """Custom type radAuthenEnableLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadAuthenEnableLocal_Type.__name__ = "Integer32"
_RadAuthenEnableLocal_Object = MibScalar
radAuthenEnableLocal = _RadAuthenEnableLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 5),
    _RadAuthenEnableLocal_Type()
)
radAuthenEnableLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAuthenEnableLocal.setStatus("current")


class _RadAcctExec_Type(Integer32):
    """Custom type radAcctExec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadAcctExec_Type.__name__ = "Integer32"
_RadAcctExec_Object = MibScalar
radAcctExec = _RadAcctExec_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 6),
    _RadAcctExec_Type()
)
radAcctExec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAcctExec.setStatus("current")


class _EnableConsoleRad_Type(Integer32):
    """Custom type enableConsoleRad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_EnableConsoleRad_Type.__name__ = "Integer32"
_EnableConsoleRad_Object = MibScalar
enableConsoleRad = _EnableConsoleRad_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 7),
    _EnableConsoleRad_Type()
)
enableConsoleRad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    enableConsoleRad.setStatus("current")


class _EnableWebRad_Type(Integer32):
    """Custom type enableWebRad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_EnableWebRad_Type.__name__ = "Integer32"
_EnableWebRad_Object = MibScalar
enableWebRad = _EnableWebRad_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 8),
    _EnableWebRad_Type()
)
enableWebRad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    enableWebRad.setStatus("current")


class _RadDot1xAuthen_Type(Integer32):
    """Custom type radDot1xAuthen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadDot1xAuthen_Type.__name__ = "Integer32"
_RadDot1xAuthen_Object = MibScalar
radDot1xAuthen = _RadDot1xAuthen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 9),
    _RadDot1xAuthen_Type()
)
radDot1xAuthen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radDot1xAuthen.setStatus("current")


class _RadDot1xAuthenLocal_Type(Integer32):
    """Custom type radDot1xAuthenLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadDot1xAuthenLocal_Type.__name__ = "Integer32"
_RadDot1xAuthenLocal_Object = MibScalar
radDot1xAuthenLocal = _RadDot1xAuthenLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 10),
    _RadDot1xAuthenLocal_Type()
)
radDot1xAuthenLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radDot1xAuthenLocal.setStatus("current")


class _RadDot1xAuthor_Type(Integer32):
    """Custom type radDot1xAuthor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadDot1xAuthor_Type.__name__ = "Integer32"
_RadDot1xAuthor_Object = MibScalar
radDot1xAuthor = _RadDot1xAuthor_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 11),
    _RadDot1xAuthor_Type()
)
radDot1xAuthor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radDot1xAuthor.setStatus("current")


class _RadDot1xAcct_Type(Integer32):
    """Custom type radDot1xAcct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadDot1xAcct_Type.__name__ = "Integer32"
_RadDot1xAcct_Object = MibScalar
radDot1xAcct = _RadDot1xAcct_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 1, 12),
    _RadDot1xAcct_Type()
)
radDot1xAcct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radDot1xAcct.setStatus("current")
_RadiusCfgTable_Object = MibTable
radiusCfgTable = _RadiusCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2)
)
if mibBuilder.loadTexts:
    radiusCfgTable.setStatus("current")
_RadiusCfgEntry_Object = MibTableRow
radiusCfgEntry = _RadiusCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1)
)
radiusCfgEntry.setIndexNames(
    (0, "V1600D", "radiusAAA"),
)
if mibBuilder.loadTexts:
    radiusCfgEntry.setStatus("current")


class _RadiusAAA_Type(Integer32):
    """Custom type radiusAAA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusAAA_Type.__name__ = "Integer32"
_RadiusAAA_Object = MibTableColumn
radiusAAA = _RadiusAAA_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 1),
    _RadiusAAA_Type()
)
radiusAAA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAAA.setStatus("current")


class _RadiusAuthentication_Type(Integer32):
    """Custom type radiusAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusAuthentication_Type.__name__ = "Integer32"
_RadiusAuthentication_Object = MibTableColumn
radiusAuthentication = _RadiusAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 2),
    _RadiusAuthentication_Type()
)
radiusAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAuthentication.setStatus("current")


class _RadiusAuthenLocal_Type(Integer32):
    """Custom type radiusAuthenLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusAuthenLocal_Type.__name__ = "Integer32"
_RadiusAuthenLocal_Object = MibTableColumn
radiusAuthenLocal = _RadiusAuthenLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 3),
    _RadiusAuthenLocal_Type()
)
radiusAuthenLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAuthenLocal.setStatus("current")


class _RadiusAuthenEnable_Type(Integer32):
    """Custom type radiusAuthenEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusAuthenEnable_Type.__name__ = "Integer32"
_RadiusAuthenEnable_Object = MibTableColumn
radiusAuthenEnable = _RadiusAuthenEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 4),
    _RadiusAuthenEnable_Type()
)
radiusAuthenEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAuthenEnable.setStatus("current")


class _RadiusAuthenEnableLocal_Type(Integer32):
    """Custom type radiusAuthenEnableLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusAuthenEnableLocal_Type.__name__ = "Integer32"
_RadiusAuthenEnableLocal_Object = MibTableColumn
radiusAuthenEnableLocal = _RadiusAuthenEnableLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 5),
    _RadiusAuthenEnableLocal_Type()
)
radiusAuthenEnableLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAuthenEnableLocal.setStatus("current")


class _RadiusAcctExec_Type(Integer32):
    """Custom type radiusAcctExec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusAcctExec_Type.__name__ = "Integer32"
_RadiusAcctExec_Object = MibTableColumn
radiusAcctExec = _RadiusAcctExec_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 6),
    _RadiusAcctExec_Type()
)
radiusAcctExec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctExec.setStatus("current")


class _RadiusConsoleStatus_Type(Integer32):
    """Custom type radiusConsoleStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusConsoleStatus_Type.__name__ = "Integer32"
_RadiusConsoleStatus_Object = MibTableColumn
radiusConsoleStatus = _RadiusConsoleStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 7),
    _RadiusConsoleStatus_Type()
)
radiusConsoleStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusConsoleStatus.setStatus("current")


class _RadiusWebStatus_Type(Integer32):
    """Custom type radiusWebStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusWebStatus_Type.__name__ = "Integer32"
_RadiusWebStatus_Object = MibTableColumn
radiusWebStatus = _RadiusWebStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 8),
    _RadiusWebStatus_Type()
)
radiusWebStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusWebStatus.setStatus("current")


class _RadiusDot1xAuthen_Type(Integer32):
    """Custom type radiusDot1xAuthen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusDot1xAuthen_Type.__name__ = "Integer32"
_RadiusDot1xAuthen_Object = MibTableColumn
radiusDot1xAuthen = _RadiusDot1xAuthen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 9),
    _RadiusDot1xAuthen_Type()
)
radiusDot1xAuthen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusDot1xAuthen.setStatus("current")


class _RadiusDot1xAuthenLocal_Type(Integer32):
    """Custom type radiusDot1xAuthenLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusDot1xAuthenLocal_Type.__name__ = "Integer32"
_RadiusDot1xAuthenLocal_Object = MibTableColumn
radiusDot1xAuthenLocal = _RadiusDot1xAuthenLocal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 10),
    _RadiusDot1xAuthenLocal_Type()
)
radiusDot1xAuthenLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusDot1xAuthenLocal.setStatus("current")


class _RadiusDot1xAuthor_Type(Integer32):
    """Custom type radiusDot1xAuthor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusDot1xAuthor_Type.__name__ = "Integer32"
_RadiusDot1xAuthor_Object = MibTableColumn
radiusDot1xAuthor = _RadiusDot1xAuthor_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 11),
    _RadiusDot1xAuthor_Type()
)
radiusDot1xAuthor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusDot1xAuthor.setStatus("current")


class _RadiusDot1xAcct_Type(Integer32):
    """Custom type radiusDot1xAcct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_RadiusDot1xAcct_Type.__name__ = "Integer32"
_RadiusDot1xAcct_Object = MibTableColumn
radiusDot1xAcct = _RadiusDot1xAcct_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 2, 1, 12),
    _RadiusDot1xAcct_Type()
)
radiusDot1xAcct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusDot1xAcct.setStatus("current")
_RadiusServerCfg_ObjectIdentity = ObjectIdentity
radiusServerCfg = _RadiusServerCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 3)
)
_RadServerHost_Type = OctetString
_RadServerHost_Object = MibScalar
radServerHost = _RadServerHost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 3, 1),
    _RadServerHost_Type()
)
radServerHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radServerHost.setStatus("current")
_RadSharedKey_Type = OctetString
_RadSharedKey_Object = MibScalar
radSharedKey = _RadSharedKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 3, 2),
    _RadSharedKey_Type()
)
radSharedKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radSharedKey.setStatus("current")


class _RadAddAction_Type(Integer32):
    """Custom type radAddAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("add", 0),
          ("del", 1))
    )


_RadAddAction_Type.__name__ = "Integer32"
_RadAddAction_Object = MibScalar
radAddAction = _RadAddAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 3, 3),
    _RadAddAction_Type()
)
radAddAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radAddAction.setStatus("current")
_RadiusServerTable_Object = MibTable
radiusServerTable = _RadiusServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 4)
)
if mibBuilder.loadTexts:
    radiusServerTable.setStatus("current")
_RadiusServerEntry_Object = MibTableRow
radiusServerEntry = _RadiusServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 4, 1)
)
radiusServerEntry.setIndexNames(
    (0, "V1600D", "radiusServer"),
)
if mibBuilder.loadTexts:
    radiusServerEntry.setStatus("current")
_RadiusServer_Type = OctetString
_RadiusServer_Object = MibTableColumn
radiusServer = _RadiusServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 4, 1, 1),
    _RadiusServer_Type()
)
radiusServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusServer.setStatus("current")


class _RadiusKey_Type(OctetString):
    """Custom type radiusKey based on OctetString"""
    defaultHexValue = ""


_RadiusKey_Type.__name__ = "OctetString"
_RadiusKey_Object = MibTableColumn
radiusKey = _RadiusKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 26, 4, 1, 2),
    _RadiusKey_Type()
)
radiusKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusKey.setStatus("current")
_V1600dMstp_ObjectIdentity = ObjectIdentity
v1600dMstp = _V1600dMstp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27)
)


class _MstpEn_Type(Integer32):
    """Custom type mstpEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpEn_Type.__name__ = "Integer32"
_MstpEn_Object = MibScalar
mstpEn = _MstpEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 1),
    _MstpEn_Type()
)
mstpEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpEn.setStatus("current")
_MstpCfg_ObjectIdentity = ObjectIdentity
mstpCfg = _MstpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 2)
)


class _MstpHelloTime_Type(Integer32):
    """Custom type mstpHelloTime based on Integer32"""
    defaultValue = 2


_MstpHelloTime_Type.__name__ = "Integer32"
_MstpHelloTime_Object = MibScalar
mstpHelloTime = _MstpHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 2, 1),
    _MstpHelloTime_Type()
)
mstpHelloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpHelloTime.setStatus("current")


class _MstpForwardDelay_Type(Integer32):
    """Custom type mstpForwardDelay based on Integer32"""
    defaultValue = 15


_MstpForwardDelay_Type.__name__ = "Integer32"
_MstpForwardDelay_Object = MibScalar
mstpForwardDelay = _MstpForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 2, 2),
    _MstpForwardDelay_Type()
)
mstpForwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpForwardDelay.setStatus("current")


class _MstpMaxAge_Type(Integer32):
    """Custom type mstpMaxAge based on Integer32"""
    defaultValue = 20


_MstpMaxAge_Type.__name__ = "Integer32"
_MstpMaxAge_Object = MibScalar
mstpMaxAge = _MstpMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 2, 3),
    _MstpMaxAge_Type()
)
mstpMaxAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpMaxAge.setStatus("current")


class _MstpMaxHops_Type(Integer32):
    """Custom type mstpMaxHops based on Integer32"""
    defaultValue = 20


_MstpMaxHops_Type.__name__ = "Integer32"
_MstpMaxHops_Object = MibScalar
mstpMaxHops = _MstpMaxHops_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 2, 4),
    _MstpMaxHops_Type()
)
mstpMaxHops.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpMaxHops.setStatus("current")


class _MstpCfgAction_Type(Integer32):
    """Custom type mstpCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MstpCfgAction_Type.__name__ = "Integer32"
_MstpCfgAction_Object = MibScalar
mstpCfgAction = _MstpCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 2, 5),
    _MstpCfgAction_Type()
)
mstpCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpCfgAction.setStatus("current")
_MstpRegionCfg_ObjectIdentity = ObjectIdentity
mstpRegionCfg = _MstpRegionCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 3)
)


class _MstpFormatID_Type(Integer32):
    """Custom type mstpFormatID based on Integer32"""
    defaultValue = 0


_MstpFormatID_Type.__name__ = "Integer32"
_MstpFormatID_Object = MibScalar
mstpFormatID = _MstpFormatID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 3, 1),
    _MstpFormatID_Type()
)
mstpFormatID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpFormatID.setStatus("current")
_MstpRegionName_Type = OctetString
_MstpRegionName_Object = MibScalar
mstpRegionName = _MstpRegionName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 3, 2),
    _MstpRegionName_Type()
)
mstpRegionName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpRegionName.setStatus("current")


class _MstpRevisionLevel_Type(Integer32):
    """Custom type mstpRevisionLevel based on Integer32"""
    defaultValue = 0


_MstpRevisionLevel_Type.__name__ = "Integer32"
_MstpRevisionLevel_Object = MibScalar
mstpRevisionLevel = _MstpRevisionLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 3, 3),
    _MstpRevisionLevel_Type()
)
mstpRevisionLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpRevisionLevel.setStatus("current")
_MstpDigest_Type = OctetString
_MstpDigest_Object = MibScalar
mstpDigest = _MstpDigest_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 3, 4),
    _MstpDigest_Type()
)
mstpDigest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpDigest.setStatus("current")


class _MstpRegionCfgAction_Type(Integer32):
    """Custom type mstpRegionCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MstpRegionCfgAction_Type.__name__ = "Integer32"
_MstpRegionCfgAction_Object = MibScalar
mstpRegionCfgAction = _MstpRegionCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 3, 5),
    _MstpRegionCfgAction_Type()
)
mstpRegionCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpRegionCfgAction.setStatus("current")
_MstpGuard_ObjectIdentity = ObjectIdentity
mstpGuard = _MstpGuard_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 4)
)


class _MstpBPDUFilter_Type(Integer32):
    """Custom type mstpBPDUFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpBPDUFilter_Type.__name__ = "Integer32"
_MstpBPDUFilter_Object = MibScalar
mstpBPDUFilter = _MstpBPDUFilter_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 4, 1),
    _MstpBPDUFilter_Type()
)
mstpBPDUFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpBPDUFilter.setStatus("current")


class _MstpBPDUFilterRecovery_Type(Integer32):
    """Custom type mstpBPDUFilterRecovery based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpBPDUFilterRecovery_Type.__name__ = "Integer32"
_MstpBPDUFilterRecovery_Object = MibScalar
mstpBPDUFilterRecovery = _MstpBPDUFilterRecovery_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 4, 2),
    _MstpBPDUFilterRecovery_Type()
)
mstpBPDUFilterRecovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpBPDUFilterRecovery.setStatus("current")


class _MstpBPDUGuard_Type(Integer32):
    """Custom type mstpBPDUGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpBPDUGuard_Type.__name__ = "Integer32"
_MstpBPDUGuard_Object = MibScalar
mstpBPDUGuard = _MstpBPDUGuard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 4, 3),
    _MstpBPDUGuard_Type()
)
mstpBPDUGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpBPDUGuard.setStatus("current")


class _MstpLoopGuard_Type(Integer32):
    """Custom type mstpLoopGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpLoopGuard_Type.__name__ = "Integer32"
_MstpLoopGuard_Object = MibScalar
mstpLoopGuard = _MstpLoopGuard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 4, 4),
    _MstpLoopGuard_Type()
)
mstpLoopGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpLoopGuard.setStatus("current")


class _MstpGuardAction_Type(Integer32):
    """Custom type mstpGuardAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MstpGuardAction_Type.__name__ = "Integer32"
_MstpGuardAction_Object = MibScalar
mstpGuardAction = _MstpGuardAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 4, 5),
    _MstpGuardAction_Type()
)
mstpGuardAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpGuardAction.setStatus("current")
_MstpInstance_ObjectIdentity = ObjectIdentity
mstpInstance = _MstpInstance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 5)
)
_MstpInstanceID_Type = Integer32
_MstpInstanceID_Object = MibScalar
mstpInstanceID = _MstpInstanceID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 5, 1),
    _MstpInstanceID_Type()
)
mstpInstanceID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstanceID.setStatus("current")


class _MstpInstancePriority_Type(Integer32):
    """Custom type mstpInstancePriority based on Integer32"""
    defaultValue = 32768


_MstpInstancePriority_Type.__name__ = "Integer32"
_MstpInstancePriority_Object = MibScalar
mstpInstancePriority = _MstpInstancePriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 5, 2),
    _MstpInstancePriority_Type()
)
mstpInstancePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePriority.setStatus("current")
_MstpVLANMapped_Type = Integer32
_MstpVLANMapped_Object = MibScalar
mstpVLANMapped = _MstpVLANMapped_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 5, 3),
    _MstpVLANMapped_Type()
)
mstpVLANMapped.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpVLANMapped.setStatus("current")


class _MstpInstanceAction_Type(Integer32):
    """Custom type mstpInstanceAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("del", 2))
    )


_MstpInstanceAction_Type.__name__ = "Integer32"
_MstpInstanceAction_Object = MibScalar
mstpInstanceAction = _MstpInstanceAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 5, 4),
    _MstpInstanceAction_Type()
)
mstpInstanceAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstanceAction.setStatus("current")
_MstpInstanceTable_Object = MibTable
mstpInstanceTable = _MstpInstanceTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 6)
)
if mibBuilder.loadTexts:
    mstpInstanceTable.setStatus("current")
_MstpInstanceEntry_Object = MibTableRow
mstpInstanceEntry = _MstpInstanceEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 6, 1)
)
mstpInstanceEntry.setIndexNames(
    (0, "V1600D", "mstpInstanceId"),
)
if mibBuilder.loadTexts:
    mstpInstanceEntry.setStatus("current")
_MstpInstanceId_Type = Integer32
_MstpInstanceId_Object = MibTableColumn
mstpInstanceId = _MstpInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 6, 1, 1),
    _MstpInstanceId_Type()
)
mstpInstanceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpInstanceId.setStatus("current")
_MstpInstanceVLANMapped_Type = OctetString
_MstpInstanceVLANMapped_Object = MibTableColumn
mstpInstanceVLANMapped = _MstpInstanceVLANMapped_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 6, 1, 2),
    _MstpInstanceVLANMapped_Type()
)
mstpInstanceVLANMapped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpInstanceVLANMapped.setStatus("current")
_MstpPortTable_Object = MibTable
mstpPortTable = _MstpPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7)
)
if mibBuilder.loadTexts:
    mstpPortTable.setStatus("current")
_MstpPortEntry_Object = MibTableRow
mstpPortEntry = _MstpPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1)
)
mstpPortEntry.setIndexNames(
    (0, "V1600D", "mstpPortInstanceID"),
    (0, "V1600D", "mstpPortIfindex"),
)
if mibBuilder.loadTexts:
    mstpPortEntry.setStatus("current")
_MstpPortInstanceID_Type = Integer32
_MstpPortInstanceID_Object = MibTableColumn
mstpPortInstanceID = _MstpPortInstanceID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 1),
    _MstpPortInstanceID_Type()
)
mstpPortInstanceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpPortInstanceID.setStatus("current")
_MstpPortIfindex_Type = Integer32
_MstpPortIfindex_Object = MibTableColumn
mstpPortIfindex = _MstpPortIfindex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 2),
    _MstpPortIfindex_Type()
)
mstpPortIfindex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpPortIfindex.setStatus("current")


class _MstpPortstatus_Type(Integer32):
    """Custom type mstpPortstatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("disable", 0)
    )


_MstpPortstatus_Type.__name__ = "Integer32"
_MstpPortstatus_Object = MibTableColumn
mstpPortstatus = _MstpPortstatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 3),
    _MstpPortstatus_Type()
)
mstpPortstatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortstatus.setStatus("current")
_MstpPortPriority_Type = Integer32
_MstpPortPriority_Object = MibTableColumn
mstpPortPriority = _MstpPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 4),
    _MstpPortPriority_Type()
)
mstpPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortPriority.setStatus("current")
_MstpPortPathCost_Type = Integer32
_MstpPortPathCost_Object = MibTableColumn
mstpPortPathCost = _MstpPortPathCost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 5),
    _MstpPortPathCost_Type()
)
mstpPortPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortPathCost.setStatus("current")


class _MstpPortFast_Type(Integer32):
    """Custom type mstpPortFast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpPortFast_Type.__name__ = "Integer32"
_MstpPortFast_Object = MibTableColumn
mstpPortFast = _MstpPortFast_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 6),
    _MstpPortFast_Type()
)
mstpPortFast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortFast.setStatus("current")


class _MstpPortP2P_Type(Integer32):
    """Custom type mstpPortP2P based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("disable", 0)
    )


_MstpPortP2P_Type.__name__ = "Integer32"
_MstpPortP2P_Object = MibTableColumn
mstpPortP2P = _MstpPortP2P_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 7),
    _MstpPortP2P_Type()
)
mstpPortP2P.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortP2P.setStatus("current")


class _MstpPortBPDUFilter_Type(Integer32):
    """Custom type mstpPortBPDUFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpPortBPDUFilter_Type.__name__ = "Integer32"
_MstpPortBPDUFilter_Object = MibTableColumn
mstpPortBPDUFilter = _MstpPortBPDUFilter_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 8),
    _MstpPortBPDUFilter_Type()
)
mstpPortBPDUFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortBPDUFilter.setStatus("current")


class _MstpPortBPDUGuard_Type(Integer32):
    """Custom type mstpPortBPDUGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MstpPortBPDUGuard_Type.__name__ = "Integer32"
_MstpPortBPDUGuard_Object = MibTableColumn
mstpPortBPDUGuard = _MstpPortBPDUGuard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 9),
    _MstpPortBPDUGuard_Type()
)
mstpPortBPDUGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortBPDUGuard.setStatus("current")


class _MstpPortGuard_Type(Integer32):
    """Custom type mstpPortGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("root", 1))
    )


_MstpPortGuard_Type.__name__ = "Integer32"
_MstpPortGuard_Object = MibTableColumn
mstpPortGuard = _MstpPortGuard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 7, 1, 10),
    _MstpPortGuard_Type()
)
mstpPortGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpPortGuard.setStatus("current")
_MstpInformation_ObjectIdentity = ObjectIdentity
mstpInformation = _MstpInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8)
)
_MstpInstanceInfoTable_Object = MibTable
mstpInstanceInfoTable = _MstpInstanceInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1)
)
if mibBuilder.loadTexts:
    mstpInstanceInfoTable.setStatus("current")
_MstpInstanceInfoEntry_Object = MibTableRow
mstpInstanceInfoEntry = _MstpInstanceInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1)
)
mstpInstanceInfoEntry.setIndexNames(
    (0, "V1600D", "mstpInfoInstanceID"),
)
if mibBuilder.loadTexts:
    mstpInstanceInfoEntry.setStatus("current")
_MstpInfoInstanceID_Type = Integer32
_MstpInfoInstanceID_Object = MibTableColumn
mstpInfoInstanceID = _MstpInfoInstanceID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 1),
    _MstpInfoInstanceID_Type()
)
mstpInfoInstanceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpInfoInstanceID.setStatus("current")
_MstpInfoInstanceVlanMapped_Type = OctetString
_MstpInfoInstanceVlanMapped_Object = MibTableColumn
mstpInfoInstanceVlanMapped = _MstpInfoInstanceVlanMapped_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 2),
    _MstpInfoInstanceVlanMapped_Type()
)
mstpInfoInstanceVlanMapped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpInfoInstanceVlanMapped.setStatus("current")
_MstpBridgeAddress_Type = OctetString
_MstpBridgeAddress_Object = MibTableColumn
mstpBridgeAddress = _MstpBridgeAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 3),
    _MstpBridgeAddress_Type()
)
mstpBridgeAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpBridgeAddress.setStatus("current")
_MstpBridgePriority_Type = Integer32
_MstpBridgePriority_Object = MibTableColumn
mstpBridgePriority = _MstpBridgePriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 4),
    _MstpBridgePriority_Type()
)
mstpBridgePriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpBridgePriority.setStatus("current")
_MstpRootAddress_Type = OctetString
_MstpRootAddress_Object = MibTableColumn
mstpRootAddress = _MstpRootAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 5),
    _MstpRootAddress_Type()
)
mstpRootAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRootAddress.setStatus("current")
_MstpRootPriority_Type = Integer32
_MstpRootPriority_Object = MibTableColumn
mstpRootPriority = _MstpRootPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 6),
    _MstpRootPriority_Type()
)
mstpRootPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRootPriority.setStatus("current")
_MstpRegRootAddress_Type = OctetString
_MstpRegRootAddress_Object = MibTableColumn
mstpRegRootAddress = _MstpRegRootAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 7),
    _MstpRegRootAddress_Type()
)
mstpRegRootAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRegRootAddress.setStatus("current")
_MstpRegRootPriority_Type = Integer32
_MstpRegRootPriority_Object = MibTableColumn
mstpRegRootPriority = _MstpRegRootPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 8),
    _MstpRegRootPriority_Type()
)
mstpRegRootPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRegRootPriority.setStatus("current")
_MstpBridgeHelloTime_Type = Integer32
_MstpBridgeHelloTime_Object = MibTableColumn
mstpBridgeHelloTime = _MstpBridgeHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 9),
    _MstpBridgeHelloTime_Type()
)
mstpBridgeHelloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpBridgeHelloTime.setStatus("current")
_MstpBridgeForwardDelay_Type = Integer32
_MstpBridgeForwardDelay_Object = MibTableColumn
mstpBridgeForwardDelay = _MstpBridgeForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 10),
    _MstpBridgeForwardDelay_Type()
)
mstpBridgeForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpBridgeForwardDelay.setStatus("current")
_MstpBridgeMaxAge_Type = Integer32
_MstpBridgeMaxAge_Object = MibTableColumn
mstpBridgeMaxAge = _MstpBridgeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 11),
    _MstpBridgeMaxAge_Type()
)
mstpBridgeMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpBridgeMaxAge.setStatus("current")
_MstpBridgeMaxHops_Type = Integer32
_MstpBridgeMaxHops_Object = MibTableColumn
mstpBridgeMaxHops = _MstpBridgeMaxHops_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 12),
    _MstpBridgeMaxHops_Type()
)
mstpBridgeMaxHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpBridgeMaxHops.setStatus("current")
_MstpRootHelloTime_Type = Integer32
_MstpRootHelloTime_Object = MibTableColumn
mstpRootHelloTime = _MstpRootHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 13),
    _MstpRootHelloTime_Type()
)
mstpRootHelloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRootHelloTime.setStatus("current")
_MstpRootForwardDelay_Type = Integer32
_MstpRootForwardDelay_Object = MibTableColumn
mstpRootForwardDelay = _MstpRootForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 14),
    _MstpRootForwardDelay_Type()
)
mstpRootForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRootForwardDelay.setStatus("current")
_MstpRootMaxAge_Type = Integer32
_MstpRootMaxAge_Object = MibTableColumn
mstpRootMaxAge = _MstpRootMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 1, 1, 15),
    _MstpRootMaxAge_Type()
)
mstpRootMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpRootMaxAge.setStatus("current")
_MstpInstancePortTable_Object = MibTable
mstpInstancePortTable = _MstpInstancePortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2)
)
if mibBuilder.loadTexts:
    mstpInstancePortTable.setStatus("current")
_MstpInstancePortEntry_Object = MibTableRow
mstpInstancePortEntry = _MstpInstancePortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1)
)
mstpInstancePortEntry.setIndexNames(
    (0, "V1600D", "mstpPortInstanceID"),
    (0, "V1600D", "mstpPortIfindex"),
)
if mibBuilder.loadTexts:
    mstpInstancePortEntry.setStatus("current")
_MstpInterfaceName_Type = OctetString
_MstpInterfaceName_Object = MibTableColumn
mstpInterfaceName = _MstpInterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 1),
    _MstpInterfaceName_Type()
)
mstpInterfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mstpInterfaceName.setStatus("obsolete")
_MstpInstancePortRole_Type = OctetString
_MstpInstancePortRole_Object = MibTableColumn
mstpInstancePortRole = _MstpInstancePortRole_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 2),
    _MstpInstancePortRole_Type()
)
mstpInstancePortRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePortRole.setStatus("current")
_MstpInstancePortState_Type = OctetString
_MstpInstancePortState_Object = MibTableColumn
mstpInstancePortState = _MstpInstancePortState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 3),
    _MstpInstancePortState_Type()
)
mstpInstancePortState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePortState.setStatus("current")
_MstpInstancePortPathCost_Type = Integer32
_MstpInstancePortPathCost_Object = MibTableColumn
mstpInstancePortPathCost = _MstpInstancePortPathCost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 4),
    _MstpInstancePortPathCost_Type()
)
mstpInstancePortPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePortPathCost.setStatus("current")
_MstpInstancePortPriority_Type = Integer32
_MstpInstancePortPriority_Object = MibTableColumn
mstpInstancePortPriority = _MstpInstancePortPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 5),
    _MstpInstancePortPriority_Type()
)
mstpInstancePortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePortPriority.setStatus("current")
_MstpInstancePortNumber_Type = Integer32
_MstpInstancePortNumber_Object = MibTableColumn
mstpInstancePortNumber = _MstpInstancePortNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 6),
    _MstpInstancePortNumber_Type()
)
mstpInstancePortNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePortNumber.setStatus("current")
_MstpInstancePortLinkType_Type = OctetString
_MstpInstancePortLinkType_Object = MibTableColumn
mstpInstancePortLinkType = _MstpInstancePortLinkType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 27, 8, 2, 1, 7),
    _MstpInstancePortLinkType_Type()
)
mstpInstancePortLinkType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mstpInstancePortLinkType.setStatus("current")
_V1600dNdSnooping_ObjectIdentity = ObjectIdentity
v1600dNdSnooping = _V1600dNdSnooping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28)
)
_NdSnoopingCfg_ObjectIdentity = ObjectIdentity
ndSnoopingCfg = _NdSnoopingCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 1)
)


class _NdSnoopingEnable_Type(Integer32):
    """Custom type ndSnoopingEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NdSnoopingEnable_Type.__name__ = "Integer32"
_NdSnoopingEnable_Object = MibScalar
ndSnoopingEnable = _NdSnoopingEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 1, 1),
    _NdSnoopingEnable_Type()
)
ndSnoopingEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingEnable.setStatus("current")


class _NdSnoopingDetect_Type(Integer32):
    """Custom type ndSnoopingDetect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NdSnoopingDetect_Type.__name__ = "Integer32"
_NdSnoopingDetect_Object = MibScalar
ndSnoopingDetect = _NdSnoopingDetect_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 1, 2),
    _NdSnoopingDetect_Type()
)
ndSnoopingDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingDetect.setStatus("current")


class _NdSnoopingRetransmit_Type(Integer32):
    """Custom type ndSnoopingRetransmit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_NdSnoopingRetransmit_Type.__name__ = "Integer32"
_NdSnoopingRetransmit_Object = MibScalar
ndSnoopingRetransmit = _NdSnoopingRetransmit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 1, 3),
    _NdSnoopingRetransmit_Type()
)
ndSnoopingRetransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingRetransmit.setStatus("current")


class _NdSnoopingInterval_Type(Integer32):
    """Custom type ndSnoopingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_NdSnoopingInterval_Type.__name__ = "Integer32"
_NdSnoopingInterval_Object = MibScalar
ndSnoopingInterval = _NdSnoopingInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 1, 4),
    _NdSnoopingInterval_Type()
)
ndSnoopingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingInterval.setStatus("current")
_NdSnoopingVLAN_ObjectIdentity = ObjectIdentity
ndSnoopingVLAN = _NdSnoopingVLAN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 2)
)


class _NdSnoopingVLANID_Type(Integer32):
    """Custom type ndSnoopingVLANID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_NdSnoopingVLANID_Type.__name__ = "Integer32"
_NdSnoopingVLANID_Object = MibScalar
ndSnoopingVLANID = _NdSnoopingVLANID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 2, 1),
    _NdSnoopingVLANID_Type()
)
ndSnoopingVLANID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingVLANID.setStatus("current")


class _NdSnoopingVLANAction_Type(Integer32):
    """Custom type ndSnoopingVLANAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_NdSnoopingVLANAction_Type.__name__ = "Integer32"
_NdSnoopingVLANAction_Object = MibScalar
ndSnoopingVLANAction = _NdSnoopingVLANAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 2, 2),
    _NdSnoopingVLANAction_Type()
)
ndSnoopingVLANAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingVLANAction.setStatus("current")
_NdSnoopingVLANList_Type = OctetString
_NdSnoopingVLANList_Object = MibScalar
ndSnoopingVLANList = _NdSnoopingVLANList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 2, 3),
    _NdSnoopingVLANList_Type()
)
ndSnoopingVLANList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingVLANList.setStatus("current")
_NdSnoopingPortCfgTable_Object = MibTable
ndSnoopingPortCfgTable = _NdSnoopingPortCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3)
)
if mibBuilder.loadTexts:
    ndSnoopingPortCfgTable.setStatus("current")
_NdSnoopingPortCfgEntry_Object = MibTableRow
ndSnoopingPortCfgEntry = _NdSnoopingPortCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3, 1)
)
ndSnoopingPortCfgEntry.setIndexNames(
    (0, "V1600D", "ndSnoopingPortIndex"),
)
if mibBuilder.loadTexts:
    ndSnoopingPortCfgEntry.setStatus("current")
_NdSnoopingPortIndex_Type = Integer32
_NdSnoopingPortIndex_Object = MibTableColumn
ndSnoopingPortIndex = _NdSnoopingPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3, 1, 1),
    _NdSnoopingPortIndex_Type()
)
ndSnoopingPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPortIndex.setStatus("current")


class _NdSnoopingPortType_Type(Integer32):
    """Custom type ndSnoopingPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("untrust", 0),
          ("trust", 1))
    )


_NdSnoopingPortType_Type.__name__ = "Integer32"
_NdSnoopingPortType_Object = MibTableColumn
ndSnoopingPortType = _NdSnoopingPortType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3, 1, 2),
    _NdSnoopingPortType_Type()
)
ndSnoopingPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingPortType.setStatus("current")


class _NdSnoopingPortCfgNaCheck_Type(Integer32):
    """Custom type ndSnoopingPortCfgNaCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NdSnoopingPortCfgNaCheck_Type.__name__ = "Integer32"
_NdSnoopingPortCfgNaCheck_Object = MibTableColumn
ndSnoopingPortCfgNaCheck = _NdSnoopingPortCfgNaCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3, 1, 3),
    _NdSnoopingPortCfgNaCheck_Type()
)
ndSnoopingPortCfgNaCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingPortCfgNaCheck.setStatus("current")


class _NdSnoopingPortCfgNsCheck_Type(Integer32):
    """Custom type ndSnoopingPortCfgNsCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NdSnoopingPortCfgNsCheck_Type.__name__ = "Integer32"
_NdSnoopingPortCfgNsCheck_Object = MibTableColumn
ndSnoopingPortCfgNsCheck = _NdSnoopingPortCfgNsCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3, 1, 4),
    _NdSnoopingPortCfgNsCheck_Type()
)
ndSnoopingPortCfgNsCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingPortCfgNsCheck.setStatus("current")


class _NdSnoopingPortCfgRsCheck_Type(Integer32):
    """Custom type ndSnoopingPortCfgRsCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_NdSnoopingPortCfgRsCheck_Type.__name__ = "Integer32"
_NdSnoopingPortCfgRsCheck_Object = MibTableColumn
ndSnoopingPortCfgRsCheck = _NdSnoopingPortCfgRsCheck_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 3, 1, 5),
    _NdSnoopingPortCfgRsCheck_Type()
)
ndSnoopingPortCfgRsCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ndSnoopingPortCfgRsCheck.setStatus("current")
_NdSnoopingEntry_ObjectIdentity = ObjectIdentity
ndSnoopingEntry = _NdSnoopingEntry_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4)
)
_NdSnoopingPrefixEntryTable_Object = MibTable
ndSnoopingPrefixEntryTable = _NdSnoopingPrefixEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1)
)
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryTable.setStatus("current")
_NdSnoopingPrefixEntryEntry_Object = MibTableRow
ndSnoopingPrefixEntryEntry = _NdSnoopingPrefixEntryEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1)
)
ndSnoopingPrefixEntryEntry.setIndexNames(
    (0, "V1600D", "ndSnoopingPrefixEntryID"),
)
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryEntry.setStatus("current")
_NdSnoopingPrefixEntryID_Type = Integer32
_NdSnoopingPrefixEntryID_Object = MibTableColumn
ndSnoopingPrefixEntryID = _NdSnoopingPrefixEntryID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 1),
    _NdSnoopingPrefixEntryID_Type()
)
ndSnoopingPrefixEntryID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryID.setStatus("current")
_NdSnoopingPrefixEntryPrefix_Type = OctetString
_NdSnoopingPrefixEntryPrefix_Object = MibTableColumn
ndSnoopingPrefixEntryPrefix = _NdSnoopingPrefixEntryPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 2),
    _NdSnoopingPrefixEntryPrefix_Type()
)
ndSnoopingPrefixEntryPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryPrefix.setStatus("current")
_NdSnoopingPrefixEntryPrefixlen_Type = Integer32
_NdSnoopingPrefixEntryPrefixlen_Object = MibTableColumn
ndSnoopingPrefixEntryPrefixlen = _NdSnoopingPrefixEntryPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 3),
    _NdSnoopingPrefixEntryPrefixlen_Type()
)
ndSnoopingPrefixEntryPrefixlen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryPrefixlen.setStatus("current")
_NdSnoopingPrefixEntryValidLifetime_Type = Integer32
_NdSnoopingPrefixEntryValidLifetime_Object = MibTableColumn
ndSnoopingPrefixEntryValidLifetime = _NdSnoopingPrefixEntryValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 4),
    _NdSnoopingPrefixEntryValidLifetime_Type()
)
ndSnoopingPrefixEntryValidLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryValidLifetime.setStatus("current")
_NdSnoopingPrefixEntryPreferredLifetime_Type = Integer32
_NdSnoopingPrefixEntryPreferredLifetime_Object = MibTableColumn
ndSnoopingPrefixEntryPreferredLifetime = _NdSnoopingPrefixEntryPreferredLifetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 5),
    _NdSnoopingPrefixEntryPreferredLifetime_Type()
)
ndSnoopingPrefixEntryPreferredLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryPreferredLifetime.setStatus("current")
_NdSnoopingPrefixEntryVlan_Type = Integer32
_NdSnoopingPrefixEntryVlan_Object = MibTableColumn
ndSnoopingPrefixEntryVlan = _NdSnoopingPrefixEntryVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 6),
    _NdSnoopingPrefixEntryVlan_Type()
)
ndSnoopingPrefixEntryVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryVlan.setStatus("current")
_NdSnoopingPrefixEntryInterface_Type = OctetString
_NdSnoopingPrefixEntryInterface_Object = MibTableColumn
ndSnoopingPrefixEntryInterface = _NdSnoopingPrefixEntryInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 1, 1, 7),
    _NdSnoopingPrefixEntryInterface_Type()
)
ndSnoopingPrefixEntryInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingPrefixEntryInterface.setStatus("current")
_NdSnoopingBindingEntryTable_Object = MibTable
ndSnoopingBindingEntryTable = _NdSnoopingBindingEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2)
)
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryTable.setStatus("current")
_NdSnoopingBindingEntryEntry_Object = MibTableRow
ndSnoopingBindingEntryEntry = _NdSnoopingBindingEntryEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2, 1)
)
ndSnoopingBindingEntryEntry.setIndexNames(
    (0, "V1600D", "ndSnoopingBindingEntryID"),
)
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryEntry.setStatus("current")
_NdSnoopingBindingEntryID_Type = Integer32
_NdSnoopingBindingEntryID_Object = MibTableColumn
ndSnoopingBindingEntryID = _NdSnoopingBindingEntryID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2, 1, 1),
    _NdSnoopingBindingEntryID_Type()
)
ndSnoopingBindingEntryID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryID.setStatus("current")
_NdSnoopingBindingEntryMac_Type = OctetString
_NdSnoopingBindingEntryMac_Object = MibTableColumn
ndSnoopingBindingEntryMac = _NdSnoopingBindingEntryMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2, 1, 2),
    _NdSnoopingBindingEntryMac_Type()
)
ndSnoopingBindingEntryMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryMac.setStatus("current")
_NdSnoopingBindingEntryIPv6_Type = OctetString
_NdSnoopingBindingEntryIPv6_Object = MibTableColumn
ndSnoopingBindingEntryIPv6 = _NdSnoopingBindingEntryIPv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2, 1, 3),
    _NdSnoopingBindingEntryIPv6_Type()
)
ndSnoopingBindingEntryIPv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryIPv6.setStatus("current")
_NdSnoopingBindingEntryVlan_Type = Integer32
_NdSnoopingBindingEntryVlan_Object = MibTableColumn
ndSnoopingBindingEntryVlan = _NdSnoopingBindingEntryVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2, 1, 4),
    _NdSnoopingBindingEntryVlan_Type()
)
ndSnoopingBindingEntryVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryVlan.setStatus("current")
_NdSnoopingBindingEntryInterface_Type = OctetString
_NdSnoopingBindingEntryInterface_Object = MibTableColumn
ndSnoopingBindingEntryInterface = _NdSnoopingBindingEntryInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 28, 4, 2, 1, 5),
    _NdSnoopingBindingEntryInterface_Type()
)
ndSnoopingBindingEntryInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ndSnoopingBindingEntryInterface.setStatus("current")
_V1600dDot1x_ObjectIdentity = ObjectIdentity
v1600dDot1x = _V1600dDot1x_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29)
)


class _Dot1xGlobalEn_Type(Integer32):
    """Custom type dot1xGlobalEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dot1xGlobalEn_Type.__name__ = "Integer32"
_Dot1xGlobalEn_Object = MibScalar
dot1xGlobalEn = _Dot1xGlobalEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 1),
    _Dot1xGlobalEn_Type()
)
dot1xGlobalEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xGlobalEn.setStatus("current")
_Dot1xPortEn_ObjectIdentity = ObjectIdentity
dot1xPortEn = _Dot1xPortEn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 2)
)


class _Dot1xPortId_Type(Integer32):
    """Custom type dot1xPortId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_Dot1xPortId_Type.__name__ = "Integer32"
_Dot1xPortId_Object = MibScalar
dot1xPortId = _Dot1xPortId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 2, 1),
    _Dot1xPortId_Type()
)
dot1xPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xPortId.setStatus("current")


class _Dot1xPortAction_Type(Integer32):
    """Custom type dot1xPortAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dot1xPortAction_Type.__name__ = "Integer32"
_Dot1xPortAction_Object = MibScalar
dot1xPortAction = _Dot1xPortAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 2, 2),
    _Dot1xPortAction_Type()
)
dot1xPortAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xPortAction.setStatus("current")
_Dot1xPortConfigTable_Object = MibTable
dot1xPortConfigTable = _Dot1xPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3)
)
if mibBuilder.loadTexts:
    dot1xPortConfigTable.setStatus("current")
_Dot1xPortConfigEntry_Object = MibTableRow
dot1xPortConfigEntry = _Dot1xPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1)
)
dot1xPortConfigEntry.setIndexNames(
    (0, "V1600D", "dot1xPort"),
)
if mibBuilder.loadTexts:
    dot1xPortConfigEntry.setStatus("current")


class _Dot1xPort_Type(Integer32):
    """Custom type dot1xPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_Dot1xPort_Type.__name__ = "Integer32"
_Dot1xPort_Object = MibTableColumn
dot1xPort = _Dot1xPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 1),
    _Dot1xPort_Type()
)
dot1xPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xPort.setStatus("current")


class _Dot1xAuthenType_Type(Integer32):
    """Custom type dot1xAuthenType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("CHAP", 1),
          ("PAP", 2),
          ("EAP", 3))
    )


_Dot1xAuthenType_Type.__name__ = "Integer32"
_Dot1xAuthenType_Object = MibTableColumn
dot1xAuthenType = _Dot1xAuthenType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 2),
    _Dot1xAuthenType_Type()
)
dot1xAuthenType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xAuthenType.setStatus("current")


class _Dot1xPortControl_Type(Integer32):
    """Custom type dot1xPortControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("authorized-force", 1),
          ("unauthorized-force", 2))
    )


_Dot1xPortControl_Type.__name__ = "Integer32"
_Dot1xPortControl_Object = MibTableColumn
dot1xPortControl = _Dot1xPortControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 3),
    _Dot1xPortControl_Type()
)
dot1xPortControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xPortControl.setStatus("current")


class _Dot1xMethodType_Type(Integer32):
    """Custom type dot1xMethodType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("macbased", 1),
          ("portbased", 2))
    )


_Dot1xMethodType_Type.__name__ = "Integer32"
_Dot1xMethodType_Object = MibTableColumn
dot1xMethodType = _Dot1xMethodType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 4),
    _Dot1xMethodType_Type()
)
dot1xMethodType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xMethodType.setStatus("current")


class _Dot1xMaxUser_Type(Integer32):
    """Custom type dot1xMaxUser based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_Dot1xMaxUser_Type.__name__ = "Integer32"
_Dot1xMaxUser_Object = MibTableColumn
dot1xMaxUser = _Dot1xMaxUser_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 5),
    _Dot1xMaxUser_Type()
)
dot1xMaxUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xMaxUser.setStatus("current")


class _Dot1xGuestVlan_Type(Integer32):
    """Custom type dot1xGuestVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Dot1xGuestVlan_Type.__name__ = "Integer32"
_Dot1xGuestVlan_Object = MibTableColumn
dot1xGuestVlan = _Dot1xGuestVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 6),
    _Dot1xGuestVlan_Type()
)
dot1xGuestVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xGuestVlan.setStatus("current")


class _Dot1xAuthFailVlan_Type(Integer32):
    """Custom type dot1xAuthFailVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_Dot1xAuthFailVlan_Type.__name__ = "Integer32"
_Dot1xAuthFailVlan_Object = MibTableColumn
dot1xAuthFailVlan = _Dot1xAuthFailVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 7),
    _Dot1xAuthFailVlan_Type()
)
dot1xAuthFailVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xAuthFailVlan.setStatus("current")


class _Dot1xTxTimer_Type(Integer32):
    """Custom type dot1xTxTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 120),
    )


_Dot1xTxTimer_Type.__name__ = "Integer32"
_Dot1xTxTimer_Object = MibTableColumn
dot1xTxTimer = _Dot1xTxTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 8),
    _Dot1xTxTimer_Type()
)
dot1xTxTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xTxTimer.setStatus("current")


class _Dot1xSuppTimer_Type(Integer32):
    """Custom type dot1xSuppTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 120),
    )


_Dot1xSuppTimer_Type.__name__ = "Integer32"
_Dot1xSuppTimer_Object = MibTableColumn
dot1xSuppTimer = _Dot1xSuppTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 9),
    _Dot1xSuppTimer_Type()
)
dot1xSuppTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xSuppTimer.setStatus("current")


class _Dot1xHandshakeEnable_Type(Integer32):
    """Custom type dot1xHandshakeEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dot1xHandshakeEnable_Type.__name__ = "Integer32"
_Dot1xHandshakeEnable_Object = MibTableColumn
dot1xHandshakeEnable = _Dot1xHandshakeEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 10),
    _Dot1xHandshakeEnable_Type()
)
dot1xHandshakeEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xHandshakeEnable.setStatus("current")


class _Dot1xHandshakeTimer_Type(Integer32):
    """Custom type dot1xHandshakeTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 1024),
    )


_Dot1xHandshakeTimer_Type.__name__ = "Integer32"
_Dot1xHandshakeTimer_Object = MibTableColumn
dot1xHandshakeTimer = _Dot1xHandshakeTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 3, 1, 11),
    _Dot1xHandshakeTimer_Type()
)
dot1xHandshakeTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xHandshakeTimer.setStatus("current")
_RadiusDot1xCfg_ObjectIdentity = ObjectIdentity
radiusDot1xCfg = _RadiusDot1xCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 29, 4)
)
_V1600dPim_ObjectIdentity = ObjectIdentity
v1600dPim = _V1600dPim_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30)
)


class _PimMulticastRoutingEn_Type(Integer32):
    """Custom type pimMulticastRoutingEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PimMulticastRoutingEn_Type.__name__ = "Integer32"
_PimMulticastRoutingEn_Object = MibScalar
pimMulticastRoutingEn = _PimMulticastRoutingEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 1),
    _PimMulticastRoutingEn_Type()
)
pimMulticastRoutingEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimMulticastRoutingEn.setStatus("current")
_PimIgmpCfg_ObjectIdentity = ObjectIdentity
pimIgmpCfg = _PimIgmpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 2)
)


class _PimIgmpQueryInterval_Type(Integer32):
    """Custom type pimIgmpQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PimIgmpQueryInterval_Type.__name__ = "Integer32"
_PimIgmpQueryInterval_Object = MibScalar
pimIgmpQueryInterval = _PimIgmpQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 2, 1),
    _PimIgmpQueryInterval_Type()
)
pimIgmpQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgmpQueryInterval.setStatus("current")


class _PimIgmpQueryMaxResTime_Type(Integer32):
    """Custom type pimIgmpQueryMaxResTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_PimIgmpQueryMaxResTime_Type.__name__ = "Integer32"
_PimIgmpQueryMaxResTime_Object = MibScalar
pimIgmpQueryMaxResTime = _PimIgmpQueryMaxResTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 2, 2),
    _PimIgmpQueryMaxResTime_Type()
)
pimIgmpQueryMaxResTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgmpQueryMaxResTime.setStatus("current")


class _PimIgmpQuerierTimeout_Type(Integer32):
    """Custom type pimIgmpQuerierTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_PimIgmpQuerierTimeout_Type.__name__ = "Integer32"
_PimIgmpQuerierTimeout_Object = MibScalar
pimIgmpQuerierTimeout = _PimIgmpQuerierTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 2, 3),
    _PimIgmpQuerierTimeout_Type()
)
pimIgmpQuerierTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgmpQuerierTimeout.setStatus("current")


class _PmIgmpLastMenberInterval_Type(Integer32):
    """Custom type pmIgmpLastMenberInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65),
    )


_PmIgmpLastMenberInterval_Type.__name__ = "Integer32"
_PmIgmpLastMenberInterval_Object = MibScalar
pmIgmpLastMenberInterval = _PmIgmpLastMenberInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 2, 4),
    _PmIgmpLastMenberInterval_Type()
)
pmIgmpLastMenberInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pmIgmpLastMenberInterval.setStatus("current")


class _PimIgmpRobustness_Type(Integer32):
    """Custom type pimIgmpRobustness based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_PimIgmpRobustness_Type.__name__ = "Integer32"
_PimIgmpRobustness_Object = MibScalar
pimIgmpRobustness = _PimIgmpRobustness_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 2, 5),
    _PimIgmpRobustness_Type()
)
pimIgmpRobustness.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgmpRobustness.setStatus("current")
_PimIgmpGroupCfg_ObjectIdentity = ObjectIdentity
pimIgmpGroupCfg = _PimIgmpGroupCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 3)
)


class _IgmpInterface_Type(Integer32):
    """Custom type igmpInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IgmpInterface_Type.__name__ = "Integer32"
_IgmpInterface_Object = MibScalar
igmpInterface = _IgmpInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 3, 1),
    _IgmpInterface_Type()
)
igmpInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpInterface.setStatus("current")
_IgmpGroupAddress_Type = IpAddress
_IgmpGroupAddress_Object = MibScalar
igmpGroupAddress = _IgmpGroupAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 3, 2),
    _IgmpGroupAddress_Type()
)
igmpGroupAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpGroupAddress.setStatus("current")


class _IgmpAddressMode_Type(Integer32):
    """Custom type igmpAddressMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_IgmpAddressMode_Type.__name__ = "Integer32"
_IgmpAddressMode_Object = MibScalar
igmpAddressMode = _IgmpAddressMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 3, 3),
    _IgmpAddressMode_Type()
)
igmpAddressMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpAddressMode.setStatus("current")


class _PimIgmpAction_Type(Integer32):
    """Custom type pimIgmpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PimIgmpAction_Type.__name__ = "Integer32"
_PimIgmpAction_Object = MibScalar
pimIgmpAction = _PimIgmpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 3, 4),
    _PimIgmpAction_Type()
)
pimIgmpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgmpAction.setStatus("current")
_PimGlobalCfg_ObjectIdentity = ObjectIdentity
pimGlobalCfg = _PimGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 4)
)


class _PimQueryInterval_Type(Integer32):
    """Custom type pimQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PimQueryInterval_Type.__name__ = "Integer32"
_PimQueryInterval_Object = MibScalar
pimQueryInterval = _PimQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 4, 1),
    _PimQueryInterval_Type()
)
pimQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimQueryInterval.setStatus("current")


class _PimSPTThresholdInfinity_Type(Integer32):
    """Custom type pimSPTThresholdInfinity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enable", 0),
          ("disable", 1))
    )


_PimSPTThresholdInfinity_Type.__name__ = "Integer32"
_PimSPTThresholdInfinity_Object = MibScalar
pimSPTThresholdInfinity = _PimSPTThresholdInfinity_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 4, 2),
    _PimSPTThresholdInfinity_Type()
)
pimSPTThresholdInfinity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimSPTThresholdInfinity.setStatus("current")
_PimInterfaceCfg_ObjectIdentity = ObjectIdentity
pimInterfaceCfg = _PimInterfaceCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 5)
)


class _PimInterface_Type(Integer32):
    """Custom type pimInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_PimInterface_Type.__name__ = "Integer32"
_PimInterface_Object = MibScalar
pimInterface = _PimInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 5, 1),
    _PimInterface_Type()
)
pimInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimInterface.setStatus("current")


class _PimMode_Type(Integer32):
    """Custom type pimMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("sparse_mode", 1))
    )


_PimMode_Type.__name__ = "Integer32"
_PimMode_Object = MibScalar
pimMode = _PimMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 5, 2),
    _PimMode_Type()
)
pimMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimMode.setStatus("current")


class _PimDRPriority_Type(Unsigned32):
    """Custom type pimDRPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967294),
    )


_PimDRPriority_Type.__name__ = "Unsigned32"
_PimDRPriority_Object = MibScalar
pimDRPriority = _PimDRPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 5, 3),
    _PimDRPriority_Type()
)
pimDRPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimDRPriority.setStatus("current")


class _PimBSRBorder_Type(Integer32):
    """Custom type pimBSRBorder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PimBSRBorder_Type.__name__ = "Integer32"
_PimBSRBorder_Object = MibScalar
pimBSRBorder = _PimBSRBorder_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 5, 4),
    _PimBSRBorder_Type()
)
pimBSRBorder.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimBSRBorder.setStatus("current")


class _PimInterfaceAction_Type(Integer32):
    """Custom type pimInterfaceAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("action", 1)
    )


_PimInterfaceAction_Type.__name__ = "Integer32"
_PimInterfaceAction_Object = MibScalar
pimInterfaceAction = _PimInterfaceAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 5, 5),
    _PimInterfaceAction_Type()
)
pimInterfaceAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimInterfaceAction.setStatus("current")
_PimRPsCfg_ObjectIdentity = ObjectIdentity
pimRPsCfg = _PimRPsCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 6)
)
_PimRPsAddress_Type = IpAddress
_PimRPsAddress_Object = MibScalar
pimRPsAddress = _PimRPsAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 6, 1),
    _PimRPsAddress_Type()
)
pimRPsAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRPsAddress.setStatus("current")


class _PimRPsAction_Type(Integer32):
    """Custom type pimRPsAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PimRPsAction_Type.__name__ = "Integer32"
_PimRPsAction_Object = MibScalar
pimRPsAction = _PimRPsAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 6, 2),
    _PimRPsAction_Type()
)
pimRPsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRPsAction.setStatus("current")
_PimCandidateRPCfg_ObjectIdentity = ObjectIdentity
pimCandidateRPCfg = _PimCandidateRPCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 7)
)


class _PimCRPInterface_Type(Integer32):
    """Custom type pimCRPInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_PimCRPInterface_Type.__name__ = "Integer32"
_PimCRPInterface_Object = MibScalar
pimCRPInterface = _PimCRPInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 7, 1),
    _PimCRPInterface_Type()
)
pimCRPInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCRPInterface.setStatus("current")


class _PimCRPPriority_Type(Integer32):
    """Custom type pimCRPPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PimCRPPriority_Type.__name__ = "Integer32"
_PimCRPPriority_Object = MibScalar
pimCRPPriority = _PimCRPPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 7, 2),
    _PimCRPPriority_Type()
)
pimCRPPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCRPPriority.setStatus("current")


class _PimCRPAction_Type(Integer32):
    """Custom type pimCRPAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PimCRPAction_Type.__name__ = "Integer32"
_PimCRPAction_Object = MibScalar
pimCRPAction = _PimCRPAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 7, 3),
    _PimCRPAction_Type()
)
pimCRPAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCRPAction.setStatus("current")
_PimCandidateBSRCfg_ObjectIdentity = ObjectIdentity
pimCandidateBSRCfg = _PimCandidateBSRCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 8)
)


class _PimCBSRInterface_Type(Integer32):
    """Custom type pimCBSRInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_PimCBSRInterface_Type.__name__ = "Integer32"
_PimCBSRInterface_Object = MibScalar
pimCBSRInterface = _PimCBSRInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 8, 1),
    _PimCBSRInterface_Type()
)
pimCBSRInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCBSRInterface.setStatus("current")


class _PimCBSRPriority_Type(Integer32):
    """Custom type pimCBSRPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PimCBSRPriority_Type.__name__ = "Integer32"
_PimCBSRPriority_Object = MibScalar
pimCBSRPriority = _PimCBSRPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 8, 2),
    _PimCBSRPriority_Type()
)
pimCBSRPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCBSRPriority.setStatus("current")


class _PimCBSRHashMaskLen_Type(Integer32):
    """Custom type pimCBSRHashMaskLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PimCBSRHashMaskLen_Type.__name__ = "Integer32"
_PimCBSRHashMaskLen_Object = MibScalar
pimCBSRHashMaskLen = _PimCBSRHashMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 8, 3),
    _PimCBSRHashMaskLen_Type()
)
pimCBSRHashMaskLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCBSRHashMaskLen.setStatus("current")


class _PimCBSRAction_Type(Integer32):
    """Custom type pimCBSRAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PimCBSRAction_Type.__name__ = "Integer32"
_PimCBSRAction_Object = MibScalar
pimCBSRAction = _PimCBSRAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 8, 4),
    _PimCBSRAction_Type()
)
pimCBSRAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCBSRAction.setStatus("current")
_PimMRouteTable_Object = MibTable
pimMRouteTable = _PimMRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9)
)
if mibBuilder.loadTexts:
    pimMRouteTable.setStatus("current")
_PimMRouteEntry_Object = MibTableRow
pimMRouteEntry = _PimMRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1)
)
pimMRouteEntry.setIndexNames(
    (0, "V1600D", "pimMRouteSource"),
    (0, "V1600D", "pimMRouteGroup"),
    (0, "V1600D", "pimMRouteCRP"),
)
if mibBuilder.loadTexts:
    pimMRouteEntry.setStatus("current")
_PimMRouteSource_Type = IpAddress
_PimMRouteSource_Object = MibTableColumn
pimMRouteSource = _PimMRouteSource_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 1),
    _PimMRouteSource_Type()
)
pimMRouteSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteSource.setStatus("current")
_PimMRouteGroup_Type = IpAddress
_PimMRouteGroup_Object = MibTableColumn
pimMRouteGroup = _PimMRouteGroup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 2),
    _PimMRouteGroup_Type()
)
pimMRouteGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteGroup.setStatus("current")
_PimMRouteCRP_Type = IpAddress
_PimMRouteCRP_Object = MibTableColumn
pimMRouteCRP = _PimMRouteCRP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 3),
    _PimMRouteCRP_Type()
)
pimMRouteCRP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteCRP.setStatus("current")
_PimMRouteUptime_Type = TimeTicks
_PimMRouteUptime_Object = MibTableColumn
pimMRouteUptime = _PimMRouteUptime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 4),
    _PimMRouteUptime_Type()
)
pimMRouteUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteUptime.setStatus("current")
_PimMRouteExpires_Type = TimeTicks
_PimMRouteExpires_Object = MibTableColumn
pimMRouteExpires = _PimMRouteExpires_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 5),
    _PimMRouteExpires_Type()
)
pimMRouteExpires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteExpires.setStatus("current")
_PimMRouteRP_Type = IpAddress
_PimMRouteRP_Object = MibTableColumn
pimMRouteRP = _PimMRouteRP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 6),
    _PimMRouteRP_Type()
)
pimMRouteRP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteRP.setStatus("current")


class _PimMRouteMode_Type(Integer32):
    """Custom type pimMRouteMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("sprase_mode", 1)
    )


_PimMRouteMode_Type.__name__ = "Integer32"
_PimMRouteMode_Object = MibTableColumn
pimMRouteMode = _PimMRouteMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 7),
    _PimMRouteMode_Type()
)
pimMRouteMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteMode.setStatus("current")
_PimMRouteIncomingInf_Type = OctetString
_PimMRouteIncomingInf_Object = MibTableColumn
pimMRouteIncomingInf = _PimMRouteIncomingInf_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 8),
    _PimMRouteIncomingInf_Type()
)
pimMRouteIncomingInf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteIncomingInf.setStatus("current")
_PimMRouteRPFNbr_Type = IpAddress
_PimMRouteRPFNbr_Object = MibTableColumn
pimMRouteRPFNbr = _PimMRouteRPFNbr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 9),
    _PimMRouteRPFNbr_Type()
)
pimMRouteRPFNbr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteRPFNbr.setStatus("current")
_PimMRouteOutgoingList_Type = OctetString
_PimMRouteOutgoingList_Object = MibTableColumn
pimMRouteOutgoingList = _PimMRouteOutgoingList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 9, 1, 10),
    _PimMRouteOutgoingList_Type()
)
pimMRouteOutgoingList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMRouteOutgoingList.setStatus("current")
_PimIpIgmpGroupTable_Object = MibTable
pimIpIgmpGroupTable = _PimIpIgmpGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10)
)
if mibBuilder.loadTexts:
    pimIpIgmpGroupTable.setStatus("current")
_PimIpIgmpGroupEntry_Object = MibTableRow
pimIpIgmpGroupEntry = _PimIpIgmpGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10, 1)
)
pimIpIgmpGroupEntry.setIndexNames(
    (0, "V1600D", "pimIpIgmpGroupAddress"),
    (0, "V1600D", "pimIpIgmpGroupInterface"),
)
if mibBuilder.loadTexts:
    pimIpIgmpGroupEntry.setStatus("current")
_PimIpIgmpGroupAddress_Type = IpAddress
_PimIpIgmpGroupAddress_Object = MibTableColumn
pimIpIgmpGroupAddress = _PimIpIgmpGroupAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10, 1, 1),
    _PimIpIgmpGroupAddress_Type()
)
pimIpIgmpGroupAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIpIgmpGroupAddress.setStatus("current")
_PimIpIgmpGroupInterface_Type = Integer32
_PimIpIgmpGroupInterface_Object = MibTableColumn
pimIpIgmpGroupInterface = _PimIpIgmpGroupInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10, 1, 2),
    _PimIpIgmpGroupInterface_Type()
)
pimIpIgmpGroupInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIpIgmpGroupInterface.setStatus("current")
_PimIpIgmpGroupUptime_Type = TimeTicks
_PimIpIgmpGroupUptime_Object = MibTableColumn
pimIpIgmpGroupUptime = _PimIpIgmpGroupUptime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10, 1, 3),
    _PimIpIgmpGroupUptime_Type()
)
pimIpIgmpGroupUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIpIgmpGroupUptime.setStatus("current")
_PimIpIgmpGroupExpires_Type = TimeTicks
_PimIpIgmpGroupExpires_Object = MibTableColumn
pimIpIgmpGroupExpires = _PimIpIgmpGroupExpires_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10, 1, 4),
    _PimIpIgmpGroupExpires_Type()
)
pimIpIgmpGroupExpires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIpIgmpGroupExpires.setStatus("current")
_PimIpIgmpGroupLastReporter_Type = IpAddress
_PimIpIgmpGroupLastReporter_Object = MibTableColumn
pimIpIgmpGroupLastReporter = _PimIpIgmpGroupLastReporter_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 10, 1, 5),
    _PimIpIgmpGroupLastReporter_Type()
)
pimIpIgmpGroupLastReporter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIpIgmpGroupLastReporter.setStatus("current")
_PimIpIgmpInterfaceTable_Object = MibTable
pimIpIgmpInterfaceTable = _PimIpIgmpInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11)
)
if mibBuilder.loadTexts:
    pimIpIgmpInterfaceTable.setStatus("current")
_PimIpIgmpInterfaceEntry_Object = MibTableRow
pimIpIgmpInterfaceEntry = _PimIpIgmpInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1)
)
pimIpIgmpInterfaceEntry.setIndexNames(
    (0, "V1600D", "pimIgmpInterfaceID"),
)
if mibBuilder.loadTexts:
    pimIpIgmpInterfaceEntry.setStatus("current")


class _PimIgmpInterfaceID_Type(Integer32):
    """Custom type pimIgmpInterfaceID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_PimIgmpInterfaceID_Type.__name__ = "Integer32"
_PimIgmpInterfaceID_Object = MibTableColumn
pimIgmpInterfaceID = _PimIgmpInterfaceID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 1),
    _PimIgmpInterfaceID_Type()
)
pimIgmpInterfaceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceID.setStatus("current")
_PimIgmpInterfaceAddress_Type = IpAddress
_PimIgmpInterfaceAddress_Object = MibTableColumn
pimIgmpInterfaceAddress = _PimIgmpInterfaceAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 2),
    _PimIgmpInterfaceAddress_Type()
)
pimIgmpInterfaceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceAddress.setStatus("current")


class _PimIgmpInterfaceVersion_Type(Integer32):
    """Custom type pimIgmpInterfaceVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("igmpv1", 1),
          ("igmpv2", 2),
          ("igmpv3", 3))
    )


_PimIgmpInterfaceVersion_Type.__name__ = "Integer32"
_PimIgmpInterfaceVersion_Object = MibTableColumn
pimIgmpInterfaceVersion = _PimIgmpInterfaceVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 3),
    _PimIgmpInterfaceVersion_Type()
)
pimIgmpInterfaceVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceVersion.setStatus("current")
_PimIgmpInterfaceQueryInterval_Type = Integer32
_PimIgmpInterfaceQueryInterval_Object = MibTableColumn
pimIgmpInterfaceQueryInterval = _PimIgmpInterfaceQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 4),
    _PimIgmpInterfaceQueryInterval_Type()
)
pimIgmpInterfaceQueryInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceQueryInterval.setStatus("current")
_PimIgmpInterfaceQuerierTimeout_Type = Integer32
_PimIgmpInterfaceQuerierTimeout_Object = MibTableColumn
pimIgmpInterfaceQuerierTimeout = _PimIgmpInterfaceQuerierTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 5),
    _PimIgmpInterfaceQuerierTimeout_Type()
)
pimIgmpInterfaceQuerierTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceQuerierTimeout.setStatus("current")
_PimIgmpInterfaceMaxResponseTime_Type = Integer32
_PimIgmpInterfaceMaxResponseTime_Object = MibTableColumn
pimIgmpInterfaceMaxResponseTime = _PimIgmpInterfaceMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 6),
    _PimIgmpInterfaceMaxResponseTime_Type()
)
pimIgmpInterfaceMaxResponseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceMaxResponseTime.setStatus("current")
_PimIgmpInterfaceLastRespInterval_Type = Integer32
_PimIgmpInterfaceLastRespInterval_Object = MibTableColumn
pimIgmpInterfaceLastRespInterval = _PimIgmpInterfaceLastRespInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 7),
    _PimIgmpInterfaceLastRespInterval_Type()
)
pimIgmpInterfaceLastRespInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgmpInterfaceLastRespInterval.setStatus("current")
_PimIgmpInterfaceTtl_Type = Integer32
_PimIgmpInterfaceTtl_Object = MibTableColumn
pimIgmpInterfaceTtl = _PimIgmpInterfaceTtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 8),
    _PimIgmpInterfaceTtl_Type()
)
pimIgmpInterfaceTtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceTtl.setStatus("current")
_PimIgmpInterfaceDR_Type = IpAddress
_PimIgmpInterfaceDR_Object = MibTableColumn
pimIgmpInterfaceDR = _PimIgmpInterfaceDR_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 9),
    _PimIgmpInterfaceDR_Type()
)
pimIgmpInterfaceDR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceDR.setStatus("current")
_PimIgmpInterfaceQueryRouter_Type = IpAddress
_PimIgmpInterfaceQueryRouter_Object = MibTableColumn
pimIgmpInterfaceQueryRouter = _PimIgmpInterfaceQueryRouter_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 10),
    _PimIgmpInterfaceQueryRouter_Type()
)
pimIgmpInterfaceQueryRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceQueryRouter.setStatus("current")
_PimIgmpInterfaceGroup_Type = IpAddress
_PimIgmpInterfaceGroup_Object = MibTableColumn
pimIgmpInterfaceGroup = _PimIgmpInterfaceGroup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 11, 1, 11),
    _PimIgmpInterfaceGroup_Type()
)
pimIgmpInterfaceGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIgmpInterfaceGroup.setStatus("current")
_PimInfTable_Object = MibTable
pimInfTable = _PimInfTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12)
)
if mibBuilder.loadTexts:
    pimInfTable.setStatus("current")
_PimInfEntry_Object = MibTableRow
pimInfEntry = _PimInfEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1)
)
pimInfEntry.setIndexNames(
    (0, "V1600D", "pimInfID"),
)
if mibBuilder.loadTexts:
    pimInfEntry.setStatus("current")
_PimInfAddress_Type = IpAddress
_PimInfAddress_Object = MibTableColumn
pimInfAddress = _PimInfAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 1),
    _PimInfAddress_Type()
)
pimInfAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfAddress.setStatus("current")
_PimInfID_Type = Integer32
_PimInfID_Object = MibTableColumn
pimInfID = _PimInfID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 2),
    _PimInfID_Type()
)
pimInfID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfID.setStatus("current")


class _PimInfVersion_Type(Integer32):
    """Custom type pimInfVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("v2", 2)
    )


_PimInfVersion_Type.__name__ = "Integer32"
_PimInfVersion_Object = MibTableColumn
pimInfVersion = _PimInfVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 3),
    _PimInfVersion_Type()
)
pimInfVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfVersion.setStatus("current")


class _PimInfMode_Type(Integer32):
    """Custom type pimInfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("sprase_mode", 1)
    )


_PimInfMode_Type.__name__ = "Integer32"
_PimInfMode_Object = MibTableColumn
pimInfMode = _PimInfMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 4),
    _PimInfMode_Type()
)
pimInfMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfMode.setStatus("current")
_PimInfNbrCount_Type = Integer32
_PimInfNbrCount_Object = MibTableColumn
pimInfNbrCount = _PimInfNbrCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 5),
    _PimInfNbrCount_Type()
)
pimInfNbrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfNbrCount.setStatus("current")
_PimInfQueryIntvl_Type = Integer32
_PimInfQueryIntvl_Object = MibTableColumn
pimInfQueryIntvl = _PimInfQueryIntvl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 6),
    _PimInfQueryIntvl_Type()
)
pimInfQueryIntvl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfQueryIntvl.setStatus("current")
_PimInfDRPriority_Type = Unsigned32
_PimInfDRPriority_Object = MibTableColumn
pimInfDRPriority = _PimInfDRPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 7),
    _PimInfDRPriority_Type()
)
pimInfDRPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfDRPriority.setStatus("current")
_PimInfDR_Type = IpAddress
_PimInfDR_Object = MibTableColumn
pimInfDR = _PimInfDR_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 12, 1, 8),
    _PimInfDR_Type()
)
pimInfDR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimInfDR.setStatus("current")
_PimRPsTable_Object = MibTable
pimRPsTable = _PimRPsTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13)
)
if mibBuilder.loadTexts:
    pimRPsTable.setStatus("current")
_PimRPsEntry_Object = MibTableRow
pimRPsEntry = _PimRPsEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1)
)
pimRPsEntry.setIndexNames(
    (0, "V1600D", "pimRPsIndex"),
)
if mibBuilder.loadTexts:
    pimRPsEntry.setStatus("current")
_PimRPsIndex_Type = Integer32
_PimRPsIndex_Object = MibTableColumn
pimRPsIndex = _PimRPsIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 1),
    _PimRPsIndex_Type()
)
pimRPsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pimRPsIndex.setStatus("current")
_PimRPGroup_Type = IpAddress
_PimRPGroup_Object = MibTableColumn
pimRPGroup = _PimRPGroup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 2),
    _PimRPGroup_Type()
)
pimRPGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPGroup.setStatus("current")
_PimRPGroupMaskLen_Type = Integer32
_PimRPGroupMaskLen_Object = MibTableColumn
pimRPGroupMaskLen = _PimRPGroupMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 3),
    _PimRPGroupMaskLen_Type()
)
pimRPGroupMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPGroupMaskLen.setStatus("current")
_PimRPAddr_Type = IpAddress
_PimRPAddr_Object = MibTableColumn
pimRPAddr = _PimRPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 4),
    _PimRPAddr_Type()
)
pimRPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPAddr.setStatus("current")
_PimRPIncoming_Type = OctetString
_PimRPIncoming_Object = MibTableColumn
pimRPIncoming = _PimRPIncoming_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 5),
    _PimRPIncoming_Type()
)
pimRPIncoming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPIncoming.setStatus("current")
_PimRPPriority_Type = Integer32
_PimRPPriority_Object = MibTableColumn
pimRPPriority = _PimRPPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 6),
    _PimRPPriority_Type()
)
pimRPPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPPriority.setStatus("current")
_PimRPHoldtime_Type = Integer32
_PimRPHoldtime_Object = MibTableColumn
pimRPHoldtime = _PimRPHoldtime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 7),
    _PimRPHoldtime_Type()
)
pimRPHoldtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPHoldtime.setStatus("current")


class _PimRPType_Type(Integer32):
    """Custom type pimRPType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_PimRPType_Type.__name__ = "Integer32"
_PimRPType_Object = MibTableColumn
pimRPType = _PimRPType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 13, 1, 8),
    _PimRPType_Type()
)
pimRPType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimRPType.setStatus("current")
_PimNbrTable_Object = MibTable
pimNbrTable = _PimNbrTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14)
)
if mibBuilder.loadTexts:
    pimNbrTable.setStatus("current")
_PimNbrEntry_Object = MibTableRow
pimNbrEntry = _PimNbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1)
)
pimNbrEntry.setIndexNames(
    (0, "V1600D", "pimNbrAddress"),
    (0, "V1600D", "pimNbrInterface"),
)
if mibBuilder.loadTexts:
    pimNbrEntry.setStatus("current")
_PimNbrAddress_Type = IpAddress
_PimNbrAddress_Object = MibTableColumn
pimNbrAddress = _PimNbrAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1, 1),
    _PimNbrAddress_Type()
)
pimNbrAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimNbrAddress.setStatus("current")
_PimNbrInterface_Type = Integer32
_PimNbrInterface_Object = MibTableColumn
pimNbrInterface = _PimNbrInterface_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1, 2),
    _PimNbrInterface_Type()
)
pimNbrInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimNbrInterface.setStatus("current")
_PimNbrExpires_Type = TimeTicks
_PimNbrExpires_Object = MibTableColumn
pimNbrExpires = _PimNbrExpires_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1, 3),
    _PimNbrExpires_Type()
)
pimNbrExpires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimNbrExpires.setStatus("current")


class _PimNbrVersion_Type(Integer32):
    """Custom type pimNbrVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("v1", 1),
          ("v2", 2))
    )


_PimNbrVersion_Type.__name__ = "Integer32"
_PimNbrVersion_Object = MibTableColumn
pimNbrVersion = _PimNbrVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1, 4),
    _PimNbrVersion_Type()
)
pimNbrVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimNbrVersion.setStatus("current")
_PimNbrDRPrio_Type = Unsigned32
_PimNbrDRPrio_Object = MibTableColumn
pimNbrDRPrio = _PimNbrDRPrio_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1, 5),
    _PimNbrDRPrio_Type()
)
pimNbrDRPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimNbrDRPrio.setStatus("current")
_PimNbrMode_Type = OctetString
_PimNbrMode_Object = MibTableColumn
pimNbrMode = _PimNbrMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 14, 1, 6),
    _PimNbrMode_Type()
)
pimNbrMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimNbrMode.setStatus("current")
_PimBSRRouterTable_Object = MibTable
pimBSRRouterTable = _PimBSRRouterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15)
)
if mibBuilder.loadTexts:
    pimBSRRouterTable.setStatus("current")
_PimBSRRouterEntry_Object = MibTableRow
pimBSRRouterEntry = _PimBSRRouterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1)
)
pimBSRRouterEntry.setIndexNames(
    (0, "V1600D", "pimBSRAddress"),
)
if mibBuilder.loadTexts:
    pimBSRRouterEntry.setStatus("current")
_PimBSRAddress_Type = IpAddress
_PimBSRAddress_Object = MibTableColumn
pimBSRAddress = _PimBSRAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1, 1),
    _PimBSRAddress_Type()
)
pimBSRAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimBSRAddress.setStatus("current")
_PimBSRPriority_Type = Unsigned32
_PimBSRPriority_Object = MibTableColumn
pimBSRPriority = _PimBSRPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1, 2),
    _PimBSRPriority_Type()
)
pimBSRPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimBSRPriority.setStatus("current")
_PimBSRMaskLen_Type = Integer32
_PimBSRMaskLen_Object = MibTableColumn
pimBSRMaskLen = _PimBSRMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1, 3),
    _PimBSRMaskLen_Type()
)
pimBSRMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimBSRMaskLen.setStatus("current")
_PimBSRCandidateAddr_Type = IpAddress
_PimBSRCandidateAddr_Object = MibTableColumn
pimBSRCandidateAddr = _PimBSRCandidateAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1, 4),
    _PimBSRCandidateAddr_Type()
)
pimBSRCandidateAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimBSRCandidateAddr.setStatus("current")
_PimBSRCandidatePriority_Type = Unsigned32
_PimBSRCandidatePriority_Object = MibTableColumn
pimBSRCandidatePriority = _PimBSRCandidatePriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1, 5),
    _PimBSRCandidatePriority_Type()
)
pimBSRCandidatePriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimBSRCandidatePriority.setStatus("current")
_PimBSRCandidateMaskLen_Type = Integer32
_PimBSRCandidateMaskLen_Object = MibTableColumn
pimBSRCandidateMaskLen = _PimBSRCandidateMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 30, 15, 1, 6),
    _PimBSRCandidateMaskLen_Type()
)
pimBSRCandidateMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimBSRCandidateMaskLen.setStatus("current")
_V1600dPPPoE_ObjectIdentity = ObjectIdentity
v1600dPPPoE = _V1600dPPPoE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31)
)
_PppoeIaCfg_ObjectIdentity = ObjectIdentity
pppoeIaCfg = _PppoeIaCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1)
)


class _PppoeIaEnable_Type(Integer32):
    """Custom type pppoeIaEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PppoeIaEnable_Type.__name__ = "Integer32"
_PppoeIaEnable_Object = MibScalar
pppoeIaEnable = _PppoeIaEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1, 1),
    _PppoeIaEnable_Type()
)
pppoeIaEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaEnable.setStatus("current")
_PppoeIaVendorId_Type = Unsigned32
_PppoeIaVendorId_Object = MibScalar
pppoeIaVendorId = _PppoeIaVendorId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1, 2),
    _PppoeIaVendorId_Type()
)
pppoeIaVendorId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaVendorId.setStatus("current")


class _PppoeIaEncapsulation_Type(Integer32):
    """Custom type pppoeIaEncapsulation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("null", 0),
          ("Circuit", 1),
          ("Remote", 2),
          ("CircuitRemote", 3))
    )


_PppoeIaEncapsulation_Type.__name__ = "Integer32"
_PppoeIaEncapsulation_Object = MibScalar
pppoeIaEncapsulation = _PppoeIaEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1, 3),
    _PppoeIaEncapsulation_Type()
)
pppoeIaEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaEncapsulation.setStatus("current")


class _PppoeIaPolicy_Type(Integer32):
    """Custom type pppoeIaPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("drop", 0),
          ("keep", 1),
          ("replace", 2))
    )


_PppoeIaPolicy_Type.__name__ = "Integer32"
_PppoeIaPolicy_Object = MibScalar
pppoeIaPolicy = _PppoeIaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1, 4),
    _PppoeIaPolicy_Type()
)
pppoeIaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaPolicy.setStatus("current")


class _PppoeIaIgnoreReply_Type(Integer32):
    """Custom type pppoeIaIgnoreReply based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PppoeIaIgnoreReply_Type.__name__ = "Integer32"
_PppoeIaIgnoreReply_Object = MibScalar
pppoeIaIgnoreReply = _PppoeIaIgnoreReply_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1, 5),
    _PppoeIaIgnoreReply_Type()
)
pppoeIaIgnoreReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaIgnoreReply.setStatus("current")


class _PppoeIaCfgAction_Type(Integer32):
    """Custom type pppoeIaCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_PppoeIaCfgAction_Type.__name__ = "Integer32"
_PppoeIaCfgAction_Object = MibScalar
pppoeIaCfgAction = _PppoeIaCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 1, 6),
    _PppoeIaCfgAction_Type()
)
pppoeIaCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaCfgAction.setStatus("current")
_PppoeIaVlan_ObjectIdentity = ObjectIdentity
pppoeIaVlan = _PppoeIaVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 2)
)
_PppoeIaVlanId_Type = Unsigned32
_PppoeIaVlanId_Object = MibScalar
pppoeIaVlanId = _PppoeIaVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 2, 1),
    _PppoeIaVlanId_Type()
)
pppoeIaVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaVlanId.setStatus("current")


class _PppoeIaVlanAction_Type(Integer32):
    """Custom type pppoeIaVlanAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PppoeIaVlanAction_Type.__name__ = "Integer32"
_PppoeIaVlanAction_Object = MibScalar
pppoeIaVlanAction = _PppoeIaVlanAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 2, 2),
    _PppoeIaVlanAction_Type()
)
pppoeIaVlanAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaVlanAction.setStatus("current")
_PppoeIaVlanList_Type = OctetString
_PppoeIaVlanList_Object = MibScalar
pppoeIaVlanList = _PppoeIaVlanList_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 2, 3),
    _PppoeIaVlanList_Type()
)
pppoeIaVlanList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppoeIaVlanList.setStatus("current")
_PppoeIaPortCfgTable_Object = MibTable
pppoeIaPortCfgTable = _PppoeIaPortCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3)
)
if mibBuilder.loadTexts:
    pppoeIaPortCfgTable.setStatus("current")
_PppoeIaPortCfgEntry_Object = MibTableRow
pppoeIaPortCfgEntry = _PppoeIaPortCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1)
)
pppoeIaPortCfgEntry.setIndexNames(
    (0, "V1600D", "pppoeIaPortIndex"),
)
if mibBuilder.loadTexts:
    pppoeIaPortCfgEntry.setStatus("current")
_PppoeIaPortIndex_Type = Unsigned32
_PppoeIaPortIndex_Object = MibTableColumn
pppoeIaPortIndex = _PppoeIaPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1, 1),
    _PppoeIaPortIndex_Type()
)
pppoeIaPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppoeIaPortIndex.setStatus("current")


class _PppoeIaPortType_Type(Integer32):
    """Custom type pppoeIaPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("untrust", 0),
          ("trust", 1))
    )


_PppoeIaPortType_Type.__name__ = "Integer32"
_PppoeIaPortType_Object = MibTableColumn
pppoeIaPortType = _PppoeIaPortType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1, 2),
    _PppoeIaPortType_Type()
)
pppoeIaPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaPortType.setStatus("current")


class _PppoeIaPortCircuitFormat_Type(Integer32):
    """Custom type pppoeIaPortCircuitFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("common", 0),
          ("extend", 1),
          ("user-defined", 2))
    )


_PppoeIaPortCircuitFormat_Type.__name__ = "Integer32"
_PppoeIaPortCircuitFormat_Object = MibTableColumn
pppoeIaPortCircuitFormat = _PppoeIaPortCircuitFormat_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1, 3),
    _PppoeIaPortCircuitFormat_Type()
)
pppoeIaPortCircuitFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaPortCircuitFormat.setStatus("current")
_PppoeIaPortCircuit_Type = OctetString
_PppoeIaPortCircuit_Object = MibTableColumn
pppoeIaPortCircuit = _PppoeIaPortCircuit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1, 4),
    _PppoeIaPortCircuit_Type()
)
pppoeIaPortCircuit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaPortCircuit.setStatus("current")


class _PppoeIaPortRemoteFormat_Type(Integer32):
    """Custom type pppoeIaPortRemoteFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("common", 0),
          ("extend", 1),
          ("user-defined", 2))
    )


_PppoeIaPortRemoteFormat_Type.__name__ = "Integer32"
_PppoeIaPortRemoteFormat_Object = MibTableColumn
pppoeIaPortRemoteFormat = _PppoeIaPortRemoteFormat_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1, 5),
    _PppoeIaPortRemoteFormat_Type()
)
pppoeIaPortRemoteFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaPortRemoteFormat.setStatus("current")
_PppoeIaPortRemote_Type = OctetString
_PppoeIaPortRemote_Object = MibTableColumn
pppoeIaPortRemote = _PppoeIaPortRemote_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 31, 3, 1, 6),
    _PppoeIaPortRemote_Type()
)
pppoeIaPortRemote.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeIaPortRemote.setStatus("current")
_V1600dBsClient_ObjectIdentity = ObjectIdentity
v1600dBsClient = _V1600dBsClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 32)
)
_BsServer_Type = OctetString
_BsServer_Object = MibScalar
bsServer = _BsServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 32, 1),
    _BsServer_Type()
)
bsServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bsServer.setStatus("current")
_BsUsername_Type = OctetString
_BsUsername_Object = MibScalar
bsUsername = _BsUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 32, 2),
    _BsUsername_Type()
)
bsUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bsUsername.setStatus("current")
_BsPassword_Type = OctetString
_BsPassword_Object = MibScalar
bsPassword = _BsPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 32, 3),
    _BsPassword_Type()
)
bsPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bsPassword.setStatus("current")
_BsSlaveServer_Type = OctetString
_BsSlaveServer_Object = MibScalar
bsSlaveServer = _BsSlaveServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 32, 4),
    _BsSlaveServer_Type()
)
bsSlaveServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bsSlaveServer.setStatus("current")
_V1600dOnuMgmt_ObjectIdentity = ObjectIdentity
v1600dOnuMgmt = _V1600dOnuMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12)
)
_OnuAuth_ObjectIdentity = ObjectIdentity
onuAuth = _OnuAuth_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1)
)
_AuthModeTable_Object = MibTable
authModeTable = _AuthModeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 1)
)
if mibBuilder.loadTexts:
    authModeTable.setStatus("current")
_AuthModeEntry_Object = MibTableRow
authModeEntry = _AuthModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 1, 1)
)
authModeEntry.setIndexNames(
    (0, "V1600D", "onuAuthPonNo"),
)
if mibBuilder.loadTexts:
    authModeEntry.setStatus("current")


class _OnuAuthPonNo_Type(Integer32):
    """Custom type onuAuthPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuAuthPonNo_Type.__name__ = "Integer32"
_OnuAuthPonNo_Object = MibTableColumn
onuAuthPonNo = _OnuAuthPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 1, 1, 1),
    _OnuAuthPonNo_Type()
)
onuAuthPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthPonNo.setStatus("current")


class _OnuAuthMode_Type(Integer32):
    """Custom type onuAuthMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("mac", 1),
          ("loid", 2),
          ("hybrid", 3))
    )


_OnuAuthMode_Type.__name__ = "Integer32"
_OnuAuthMode_Object = MibTableColumn
onuAuthMode = _OnuAuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 1, 1, 2),
    _OnuAuthMode_Type()
)
onuAuthMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthMode.setStatus("current")
_WhiteMaclistCfg_ObjectIdentity = ObjectIdentity
whiteMaclistCfg = _WhiteMaclistCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 2)
)


class _WhiteMacPonNo_Type(Integer32):
    """Custom type whiteMacPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_WhiteMacPonNo_Type.__name__ = "Integer32"
_WhiteMacPonNo_Object = MibScalar
whiteMacPonNo = _WhiteMacPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 2, 1),
    _WhiteMacPonNo_Type()
)
whiteMacPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    whiteMacPonNo.setStatus("current")
_WhiteMacValue_Type = OctetString
_WhiteMacValue_Object = MibScalar
whiteMacValue = _WhiteMacValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 2, 2),
    _WhiteMacValue_Type()
)
whiteMacValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    whiteMacValue.setStatus("current")


class _WhiteMacAction_Type(Integer32):
    """Custom type whiteMacAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_WhiteMacAction_Type.__name__ = "Integer32"
_WhiteMacAction_Object = MibScalar
whiteMacAction = _WhiteMacAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 2, 3),
    _WhiteMacAction_Type()
)
whiteMacAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    whiteMacAction.setStatus("current")
_WhiteMaclistTable_Object = MibTable
whiteMaclistTable = _WhiteMaclistTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 3)
)
if mibBuilder.loadTexts:
    whiteMaclistTable.setStatus("current")
_WhiteMaclistEntry_Object = MibTableRow
whiteMaclistEntry = _WhiteMaclistEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 3, 1)
)
whiteMaclistEntry.setIndexNames(
    (0, "V1600D", "whiteMacIndex"),
)
if mibBuilder.loadTexts:
    whiteMaclistEntry.setStatus("current")
_WhiteMacIndex_Type = Integer32
_WhiteMacIndex_Object = MibTableColumn
whiteMacIndex = _WhiteMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 3, 1, 1),
    _WhiteMacIndex_Type()
)
whiteMacIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    whiteMacIndex.setStatus("current")


class _WhiteMaclistPonNo_Type(Integer32):
    """Custom type whiteMaclistPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_WhiteMaclistPonNo_Type.__name__ = "Integer32"
_WhiteMaclistPonNo_Object = MibTableColumn
whiteMaclistPonNo = _WhiteMaclistPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 3, 1, 2),
    _WhiteMaclistPonNo_Type()
)
whiteMaclistPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    whiteMaclistPonNo.setStatus("current")
_WhiteMaclistValue_Type = OctetString
_WhiteMaclistValue_Object = MibTableColumn
whiteMaclistValue = _WhiteMaclistValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 3, 1, 3),
    _WhiteMaclistValue_Type()
)
whiteMaclistValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    whiteMaclistValue.setStatus("current")
_BlackMaclistCfg_ObjectIdentity = ObjectIdentity
blackMaclistCfg = _BlackMaclistCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 4)
)


class _BlackMacPonNo_Type(Integer32):
    """Custom type blackMacPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_BlackMacPonNo_Type.__name__ = "Integer32"
_BlackMacPonNo_Object = MibScalar
blackMacPonNo = _BlackMacPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 4, 1),
    _BlackMacPonNo_Type()
)
blackMacPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    blackMacPonNo.setStatus("current")
_BlackMacValue_Type = OctetString
_BlackMacValue_Object = MibScalar
blackMacValue = _BlackMacValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 4, 2),
    _BlackMacValue_Type()
)
blackMacValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    blackMacValue.setStatus("current")


class _BlackMacAction_Type(Integer32):
    """Custom type blackMacAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_BlackMacAction_Type.__name__ = "Integer32"
_BlackMacAction_Object = MibScalar
blackMacAction = _BlackMacAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 4, 3),
    _BlackMacAction_Type()
)
blackMacAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    blackMacAction.setStatus("current")
_BlackMaclistTable_Object = MibTable
blackMaclistTable = _BlackMaclistTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 5)
)
if mibBuilder.loadTexts:
    blackMaclistTable.setStatus("current")
_BlackMaclistEntry_Object = MibTableRow
blackMaclistEntry = _BlackMaclistEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 5, 1)
)
blackMaclistEntry.setIndexNames(
    (0, "V1600D", "blackMacIndex"),
)
if mibBuilder.loadTexts:
    blackMaclistEntry.setStatus("current")
_BlackMacIndex_Type = Integer32
_BlackMacIndex_Object = MibTableColumn
blackMacIndex = _BlackMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 5, 1, 1),
    _BlackMacIndex_Type()
)
blackMacIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    blackMacIndex.setStatus("current")


class _BlackMaclistPonNo_Type(Integer32):
    """Custom type blackMaclistPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_BlackMaclistPonNo_Type.__name__ = "Integer32"
_BlackMaclistPonNo_Object = MibTableColumn
blackMaclistPonNo = _BlackMaclistPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 5, 1, 2),
    _BlackMaclistPonNo_Type()
)
blackMaclistPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    blackMaclistPonNo.setStatus("current")
_BlackMaclistValue_Type = OctetString
_BlackMaclistValue_Object = MibTableColumn
blackMaclistValue = _BlackMaclistValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 5, 1, 3),
    _BlackMaclistValue_Type()
)
blackMaclistValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    blackMaclistValue.setStatus("current")
_LoidListCfg_ObjectIdentity = ObjectIdentity
loidListCfg = _LoidListCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 6)
)


class _LoidPonNo_Type(Integer32):
    """Custom type loidPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LoidPonNo_Type.__name__ = "Integer32"
_LoidPonNo_Object = MibScalar
loidPonNo = _LoidPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 6, 1),
    _LoidPonNo_Type()
)
loidPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loidPonNo.setStatus("current")
_Loid_Type = OctetString
_Loid_Object = MibScalar
loid = _Loid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 6, 2),
    _Loid_Type()
)
loid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loid.setStatus("current")
_Loidpw_Type = OctetString
_Loidpw_Object = MibScalar
loidpw = _Loidpw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 6, 3),
    _Loidpw_Type()
)
loidpw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loidpw.setStatus("current")


class _LoidAction_Type(Integer32):
    """Custom type loidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_LoidAction_Type.__name__ = "Integer32"
_LoidAction_Object = MibScalar
loidAction = _LoidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 6, 4),
    _LoidAction_Type()
)
loidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loidAction.setStatus("current")
_LoidListTable_Object = MibTable
loidListTable = _LoidListTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 7)
)
if mibBuilder.loadTexts:
    loidListTable.setStatus("current")
_LoidListEntry_Object = MibTableRow
loidListEntry = _LoidListEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 7, 1)
)
loidListEntry.setIndexNames(
    (0, "V1600D", "loidIndex"),
)
if mibBuilder.loadTexts:
    loidListEntry.setStatus("current")
_LoidIndex_Type = Integer32
_LoidIndex_Object = MibTableColumn
loidIndex = _LoidIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 7, 1, 1),
    _LoidIndex_Type()
)
loidIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loidIndex.setStatus("current")


class _LoidListPonNo_Type(Integer32):
    """Custom type loidListPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LoidListPonNo_Type.__name__ = "Integer32"
_LoidListPonNo_Object = MibTableColumn
loidListPonNo = _LoidListPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 7, 1, 2),
    _LoidListPonNo_Type()
)
loidListPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loidListPonNo.setStatus("current")
_LoidValue_Type = OctetString
_LoidValue_Object = MibTableColumn
loidValue = _LoidValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 7, 1, 3),
    _LoidValue_Type()
)
loidValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loidValue.setStatus("current")
_LoidpwValue_Type = OctetString
_LoidpwValue_Object = MibTableColumn
loidpwValue = _LoidpwValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 7, 1, 4),
    _LoidpwValue_Type()
)
loidpwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loidpwValue.setStatus("current")
_NoAuthOnu_ObjectIdentity = ObjectIdentity
noAuthOnu = _NoAuthOnu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 8)
)


class _PonNo_Type(Integer32):
    """Custom type ponNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonNo_Type.__name__ = "Integer32"
_PonNo_Object = MibScalar
ponNo = _PonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 8, 1),
    _PonNo_Type()
)
ponNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponNo.setStatus("current")


class _NoAuthOnuId_Type(Integer32):
    """Custom type noAuthOnuId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NoAuthOnuId_Type.__name__ = "Integer32"
_NoAuthOnuId_Object = MibScalar
noAuthOnuId = _NoAuthOnuId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 8, 2),
    _NoAuthOnuId_Type()
)
noAuthOnuId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    noAuthOnuId.setStatus("current")
_OnuListTable_Object = MibTable
onuListTable = _OnuListTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9)
)
if mibBuilder.loadTexts:
    onuListTable.setStatus("current")
_OnuListEntry_Object = MibTableRow
onuListEntry = _OnuListEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9, 1)
)
onuListEntry.setIndexNames(
    (0, "V1600D", "onuIndex"),
)
if mibBuilder.loadTexts:
    onuListEntry.setStatus("current")
_OnuIndex_Type = Integer32
_OnuIndex_Object = MibTableColumn
onuIndex = _OnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9, 1, 1),
    _OnuIndex_Type()
)
onuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuIndex.setStatus("current")
_PonId_Type = Integer32
_PonId_Object = MibTableColumn
ponId = _PonId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9, 1, 2),
    _PonId_Type()
)
ponId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ponId.setStatus("current")
_Llid_Type = Integer32
_Llid_Object = MibTableColumn
llid = _Llid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9, 1, 3),
    _Llid_Type()
)
llid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    llid.setStatus("current")
_Status_Type = OctetString
_Status_Object = MibTableColumn
status = _Status_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9, 1, 4),
    _Status_Type()
)
status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    status.setStatus("current")
_MacAddress_Type = OctetString
_MacAddress_Object = MibTableColumn
macAddress = _MacAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 9, 1, 5),
    _MacAddress_Type()
)
macAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    macAddress.setStatus("current")
_OnuTypeCfg_ObjectIdentity = ObjectIdentity
onuTypeCfg = _OnuTypeCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 10)
)


class _OnuVerdorId_Type(OctetString):
    """Custom type onuVerdorId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4


_OnuVerdorId_Type.__name__ = "OctetString"
_OnuVerdorId_Object = MibScalar
onuVerdorId = _OnuVerdorId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 10, 1),
    _OnuVerdorId_Type()
)
onuVerdorId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVerdorId.setStatus("current")


class _OnuModelId_Type(OctetString):
    """Custom type onuModelId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4


_OnuModelId_Type.__name__ = "OctetString"
_OnuModelId_Object = MibScalar
onuModelId = _OnuModelId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 10, 2),
    _OnuModelId_Type()
)
onuModelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuModelId.setStatus("current")


class _OnuTpyeLanPortNo_Type(Integer32):
    """Custom type onuTpyeLanPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OnuTpyeLanPortNo_Type.__name__ = "Integer32"
_OnuTpyeLanPortNo_Object = MibScalar
onuTpyeLanPortNo = _OnuTpyeLanPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 10, 3),
    _OnuTpyeLanPortNo_Type()
)
onuTpyeLanPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTpyeLanPortNo.setStatus("current")


class _OnuTypeValue_Type(OctetString):
    """Custom type onuTypeValue based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_OnuTypeValue_Type.__name__ = "OctetString"
_OnuTypeValue_Object = MibScalar
onuTypeValue = _OnuTypeValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 10, 4),
    _OnuTypeValue_Type()
)
onuTypeValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTypeValue.setStatus("current")


class _OnuTypeAction_Type(Integer32):
    """Custom type onuTypeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_OnuTypeAction_Type.__name__ = "Integer32"
_OnuTypeAction_Object = MibScalar
onuTypeAction = _OnuTypeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 10, 5),
    _OnuTypeAction_Type()
)
onuTypeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTypeAction.setStatus("current")
_OnuTypeTable_Object = MibTable
onuTypeTable = _OnuTypeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11)
)
if mibBuilder.loadTexts:
    onuTypeTable.setStatus("current")
_OnuTypeEntry_Object = MibTableRow
onuTypeEntry = _OnuTypeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11, 1)
)
onuTypeEntry.setIndexNames(
    (0, "V1600D", "onuTypeIndex"),
)
if mibBuilder.loadTexts:
    onuTypeEntry.setStatus("current")
_OnuTypeIndex_Type = Integer32
_OnuTypeIndex_Object = MibTableColumn
onuTypeIndex = _OnuTypeIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11, 1, 1),
    _OnuTypeIndex_Type()
)
onuTypeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuTypeIndex.setStatus("current")
_OnuVerdorID_Type = OctetString
_OnuVerdorID_Object = MibTableColumn
onuVerdorID = _OnuVerdorID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11, 1, 2),
    _OnuVerdorID_Type()
)
onuVerdorID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVerdorID.setStatus("current")
_OnuModelID_Type = OctetString
_OnuModelID_Object = MibTableColumn
onuModelID = _OnuModelID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11, 1, 3),
    _OnuModelID_Type()
)
onuModelID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuModelID.setStatus("current")
_OnuTypeLanPortVal_Type = Integer32
_OnuTypeLanPortVal_Object = MibTableColumn
onuTypeLanPortVal = _OnuTypeLanPortVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11, 1, 4),
    _OnuTypeLanPortVal_Type()
)
onuTypeLanPortVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTypeLanPortVal.setStatus("current")
_OnuTypeVal_Type = OctetString
_OnuTypeVal_Object = MibTableColumn
onuTypeVal = _OnuTypeVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 11, 1, 5),
    _OnuTypeVal_Type()
)
onuTypeVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuTypeVal.setStatus("current")
_OnuAuthInfoTable_Object = MibTable
onuAuthInfoTable = _OnuAuthInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12)
)
if mibBuilder.loadTexts:
    onuAuthInfoTable.setStatus("current")
_OnuAuthInfoEntry_Object = MibTableRow
onuAuthInfoEntry = _OnuAuthInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1)
)
onuAuthInfoEntry.setIndexNames(
    (0, "V1600D", "authInfoIndex"),
)
if mibBuilder.loadTexts:
    onuAuthInfoEntry.setStatus("current")
_AuthInfoIndex_Type = Integer32
_AuthInfoIndex_Object = MibTableColumn
authInfoIndex = _AuthInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 1),
    _AuthInfoIndex_Type()
)
authInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoIndex.setStatus("current")
_AuthInfoPonNo_Type = Integer32
_AuthInfoPonNo_Object = MibTableColumn
authInfoPonNo = _AuthInfoPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 2),
    _AuthInfoPonNo_Type()
)
authInfoPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoPonNo.setStatus("current")
_AuthInfoOnuNo_Type = Integer32
_AuthInfoOnuNo_Object = MibTableColumn
authInfoOnuNo = _AuthInfoOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 3),
    _AuthInfoOnuNo_Type()
)
authInfoOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoOnuNo.setStatus("current")
_AuthInfoLlid_Type = Integer32
_AuthInfoLlid_Object = MibTableColumn
authInfoLlid = _AuthInfoLlid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 4),
    _AuthInfoLlid_Type()
)
authInfoLlid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoLlid.setStatus("current")


class _LineStatus_Type(Integer32):
    """Custom type lineStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offline", 0),
          ("online", 1))
    )


_LineStatus_Type.__name__ = "Integer32"
_LineStatus_Object = MibTableColumn
lineStatus = _LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 5),
    _LineStatus_Type()
)
lineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lineStatus.setStatus("current")
_OnuMacAddr_Type = OctetString
_OnuMacAddr_Object = MibTableColumn
onuMacAddr = _OnuMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 6),
    _OnuMacAddr_Type()
)
onuMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMacAddr.setStatus("current")
_Onutype_Type = OctetString
_Onutype_Object = MibTableColumn
onutype = _Onutype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 7),
    _Onutype_Type()
)
onutype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onutype.setStatus("current")


class _Exchange_Type(Integer32):
    """Custom type exchange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("busy", 2))
    )


_Exchange_Type.__name__ = "Integer32"
_Exchange_Object = MibTableColumn
exchange = _Exchange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 8),
    _Exchange_Type()
)
exchange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exchange.setStatus("current")


class _AuthMode_Type(Integer32):
    """Custom type authMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("macAuth", 1),
          ("loidAuth", 2))
    )


_AuthMode_Type.__name__ = "Integer32"
_AuthMode_Object = MibTableColumn
authMode = _AuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 9),
    _AuthMode_Type()
)
authMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authMode.setStatus("current")
_OnuAuthInfoDescription_Type = OctetString
_OnuAuthInfoDescription_Object = MibTableColumn
onuAuthInfoDescription = _OnuAuthInfoDescription_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 10),
    _OnuAuthInfoDescription_Type()
)
onuAuthInfoDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfoDescription.setStatus("current")
_OnuAuthInfoLoid_Type = OctetString
_OnuAuthInfoLoid_Object = MibTableColumn
onuAuthInfoLoid = _OnuAuthInfoLoid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 11),
    _OnuAuthInfoLoid_Type()
)
onuAuthInfoLoid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfoLoid.setStatus("current")
_OnuAuthInfoLoidPwd_Type = OctetString
_OnuAuthInfoLoidPwd_Object = MibTableColumn
onuAuthInfoLoidPwd = _OnuAuthInfoLoidPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 12),
    _OnuAuthInfoLoidPwd_Type()
)
onuAuthInfoLoidPwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfoLoidPwd.setStatus("current")
_OnuAuthInfoRtt_Type = Integer32
_OnuAuthInfoRtt_Object = MibTableColumn
onuAuthInfoRtt = _OnuAuthInfoRtt_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 13),
    _OnuAuthInfoRtt_Type()
)
onuAuthInfoRtt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoRtt.setStatus("current")
_OnuType2_Type = OctetString
_OnuType2_Object = MibTableColumn
onuType2 = _OnuType2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 12, 1, 14),
    _OnuType2_Type()
)
onuType2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuType2.setStatus("current")
_OnuAutoFindTable_Object = MibTable
onuAutoFindTable = _OnuAutoFindTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13)
)
if mibBuilder.loadTexts:
    onuAutoFindTable.setStatus("current")
_OnuAutoFindEntry_Object = MibTableRow
onuAutoFindEntry = _OnuAutoFindEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1)
)
onuAutoFindEntry.setIndexNames(
    (0, "V1600D", "onuAutoFindIndex"),
)
if mibBuilder.loadTexts:
    onuAutoFindEntry.setStatus("current")
_OnuAutoFindIndex_Type = Integer32
_OnuAutoFindIndex_Object = MibTableColumn
onuAutoFindIndex = _OnuAutoFindIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1, 1),
    _OnuAutoFindIndex_Type()
)
onuAutoFindIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAutoFindIndex.setStatus("current")


class _OnuAutoFindPon_Type(Integer32):
    """Custom type onuAutoFindPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuAutoFindPon_Type.__name__ = "Integer32"
_OnuAutoFindPon_Object = MibTableColumn
onuAutoFindPon = _OnuAutoFindPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1, 2),
    _OnuAutoFindPon_Type()
)
onuAutoFindPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAutoFindPon.setStatus("current")
_OnuAutoFindMac_Type = OctetString
_OnuAutoFindMac_Object = MibTableColumn
onuAutoFindMac = _OnuAutoFindMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1, 3),
    _OnuAutoFindMac_Type()
)
onuAutoFindMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAutoFindMac.setStatus("current")
_OnuAutoFindTimeout_Type = Integer32
_OnuAutoFindTimeout_Object = MibTableColumn
onuAutoFindTimeout = _OnuAutoFindTimeout_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1, 4),
    _OnuAutoFindTimeout_Type()
)
onuAutoFindTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAutoFindTimeout.setStatus("current")
_OnuAutoFindLoid_Type = OctetString
_OnuAutoFindLoid_Object = MibTableColumn
onuAutoFindLoid = _OnuAutoFindLoid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1, 5),
    _OnuAutoFindLoid_Type()
)
onuAutoFindLoid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAutoFindLoid.setStatus("current")
_OnuAutoFindLoidPwd_Type = OctetString
_OnuAutoFindLoidPwd_Object = MibTableColumn
onuAutoFindLoidPwd = _OnuAutoFindLoidPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 13, 1, 6),
    _OnuAutoFindLoidPwd_Type()
)
onuAutoFindLoidPwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAutoFindLoidPwd.setStatus("current")
_DeregisterOnu_ObjectIdentity = ObjectIdentity
deregisterOnu = _DeregisterOnu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 14)
)


class _DeregisterOnuPonIndex_Type(Integer32):
    """Custom type deregisterOnuPonIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DeregisterOnuPonIndex_Type.__name__ = "Integer32"
_DeregisterOnuPonIndex_Object = MibScalar
deregisterOnuPonIndex = _DeregisterOnuPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 14, 1),
    _DeregisterOnuPonIndex_Type()
)
deregisterOnuPonIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deregisterOnuPonIndex.setStatus("current")


class _DeregisterOnuIndex_Type(Integer32):
    """Custom type deregisterOnuIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_DeregisterOnuIndex_Type.__name__ = "Integer32"
_DeregisterOnuIndex_Object = MibScalar
deregisterOnuIndex = _DeregisterOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 14, 2),
    _DeregisterOnuIndex_Type()
)
deregisterOnuIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deregisterOnuIndex.setStatus("current")
_ResetOnu_ObjectIdentity = ObjectIdentity
resetOnu = _ResetOnu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 15)
)


class _ResetOnuPonIndex_Type(Integer32):
    """Custom type resetOnuPonIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ResetOnuPonIndex_Type.__name__ = "Integer32"
_ResetOnuPonIndex_Object = MibScalar
resetOnuPonIndex = _ResetOnuPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 15, 1),
    _ResetOnuPonIndex_Type()
)
resetOnuPonIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetOnuPonIndex.setStatus("current")


class _ResetOnuIndex_Type(Integer32):
    """Custom type resetOnuIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ResetOnuIndex_Type.__name__ = "Integer32"
_ResetOnuIndex_Object = MibScalar
resetOnuIndex = _ResetOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 15, 2),
    _ResetOnuIndex_Type()
)
resetOnuIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetOnuIndex.setStatus("current")
_OnuDescription_ObjectIdentity = ObjectIdentity
onuDescription = _OnuDescription_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 16)
)


class _OnuDescriptionPon_Type(Integer32):
    """Custom type onuDescriptionPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuDescriptionPon_Type.__name__ = "Integer32"
_OnuDescriptionPon_Object = MibScalar
onuDescriptionPon = _OnuDescriptionPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 16, 1),
    _OnuDescriptionPon_Type()
)
onuDescriptionPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDescriptionPon.setStatus("current")


class _OnuDescriptionOnu_Type(Integer32):
    """Custom type onuDescriptionOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuDescriptionOnu_Type.__name__ = "Integer32"
_OnuDescriptionOnu_Object = MibScalar
onuDescriptionOnu = _OnuDescriptionOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 16, 2),
    _OnuDescriptionOnu_Type()
)
onuDescriptionOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDescriptionOnu.setStatus("current")
_OnuDescriptionStr_Type = OctetString
_OnuDescriptionStr_Object = MibScalar
onuDescriptionStr = _OnuDescriptionStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 16, 3),
    _OnuDescriptionStr_Type()
)
onuDescriptionStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDescriptionStr.setStatus("current")


class _OnuDescriptionAction_Type(Integer32):
    """Custom type onuDescriptionAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_OnuDescriptionAction_Type.__name__ = "Integer32"
_OnuDescriptionAction_Object = MibScalar
onuDescriptionAction = _OnuDescriptionAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 16, 4),
    _OnuDescriptionAction_Type()
)
onuDescriptionAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDescriptionAction.setStatus("current")
_OnuRttTable_Object = MibTable
onuRttTable = _OnuRttTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 17)
)
if mibBuilder.loadTexts:
    onuRttTable.setStatus("current")
_OnuRttEntry_Object = MibTableRow
onuRttEntry = _OnuRttEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 17, 1)
)
onuRttEntry.setIndexNames(
    (0, "V1600D", "onuRttPon"),
    (0, "V1600D", "onuRttOnu"),
)
if mibBuilder.loadTexts:
    onuRttEntry.setStatus("current")


class _OnuRttPon_Type(Integer32):
    """Custom type onuRttPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuRttPon_Type.__name__ = "Integer32"
_OnuRttPon_Object = MibTableColumn
onuRttPon = _OnuRttPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 17, 1, 1),
    _OnuRttPon_Type()
)
onuRttPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuRttPon.setStatus("current")


class _OnuRttOnu_Type(Integer32):
    """Custom type onuRttOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuRttOnu_Type.__name__ = "Integer32"
_OnuRttOnu_Object = MibTableColumn
onuRttOnu = _OnuRttOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 17, 1, 2),
    _OnuRttOnu_Type()
)
onuRttOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuRttOnu.setStatus("current")
_OnuRttValue_Type = Integer32
_OnuRttValue_Object = MibTableColumn
onuRttValue = _OnuRttValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 17, 1, 3),
    _OnuRttValue_Type()
)
onuRttValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuRttValue.setStatus("current")
_OnuEncryption_ObjectIdentity = ObjectIdentity
onuEncryption = _OnuEncryption_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 18)
)


class _OnuEncryptionPon_Type(Integer32):
    """Custom type onuEncryptionPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuEncryptionPon_Type.__name__ = "Integer32"
_OnuEncryptionPon_Object = MibScalar
onuEncryptionPon = _OnuEncryptionPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 18, 1),
    _OnuEncryptionPon_Type()
)
onuEncryptionPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuEncryptionPon.setStatus("current")


class _OnuEncryptionOnu_Type(Integer32):
    """Custom type onuEncryptionOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuEncryptionOnu_Type.__name__ = "Integer32"
_OnuEncryptionOnu_Object = MibScalar
onuEncryptionOnu = _OnuEncryptionOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 18, 2),
    _OnuEncryptionOnu_Type()
)
onuEncryptionOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuEncryptionOnu.setStatus("current")


class _OnuEncryptionEnable_Type(Integer32):
    """Custom type onuEncryptionEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuEncryptionEnable_Type.__name__ = "Integer32"
_OnuEncryptionEnable_Object = MibScalar
onuEncryptionEnable = _OnuEncryptionEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 18, 3),
    _OnuEncryptionEnable_Type()
)
onuEncryptionEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuEncryptionEnable.setStatus("current")


class _OnuEncryptionAction_Type(Integer32):
    """Custom type onuEncryptionAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_OnuEncryptionAction_Type.__name__ = "Integer32"
_OnuEncryptionAction_Object = MibScalar
onuEncryptionAction = _OnuEncryptionAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 18, 4),
    _OnuEncryptionAction_Type()
)
onuEncryptionAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuEncryptionAction.setStatus("current")
_OnuEncryptionTable_Object = MibTable
onuEncryptionTable = _OnuEncryptionTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 19)
)
if mibBuilder.loadTexts:
    onuEncryptionTable.setStatus("current")
_OnuEncryptionEntry_Object = MibTableRow
onuEncryptionEntry = _OnuEncryptionEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 19, 1)
)
onuEncryptionEntry.setIndexNames(
    (0, "V1600D", "onuEncryptionPonS"),
    (0, "V1600D", "onuEncryptionOnuS"),
)
if mibBuilder.loadTexts:
    onuEncryptionEntry.setStatus("current")


class _OnuEncryptionPonS_Type(Integer32):
    """Custom type onuEncryptionPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuEncryptionPonS_Type.__name__ = "Integer32"
_OnuEncryptionPonS_Object = MibTableColumn
onuEncryptionPonS = _OnuEncryptionPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 19, 1, 1),
    _OnuEncryptionPonS_Type()
)
onuEncryptionPonS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuEncryptionPonS.setStatus("current")


class _OnuEncryptionOnuS_Type(Integer32):
    """Custom type onuEncryptionOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuEncryptionOnuS_Type.__name__ = "Integer32"
_OnuEncryptionOnuS_Object = MibTableColumn
onuEncryptionOnuS = _OnuEncryptionOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 19, 1, 2),
    _OnuEncryptionOnuS_Type()
)
onuEncryptionOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuEncryptionOnuS.setStatus("current")


class _OnuEncryptionEnableS_Type(Integer32):
    """Custom type onuEncryptionEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuEncryptionEnableS_Type.__name__ = "Integer32"
_OnuEncryptionEnableS_Object = MibTableColumn
onuEncryptionEnableS = _OnuEncryptionEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 19, 1, 3),
    _OnuEncryptionEnableS_Type()
)
onuEncryptionEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuEncryptionEnableS.setStatus("current")
_OnuStatisticsTable_Object = MibTable
onuStatisticsTable = _OnuStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20)
)
if mibBuilder.loadTexts:
    onuStatisticsTable.setStatus("current")
_OnuStatisticsEntry_Object = MibTableRow
onuStatisticsEntry = _OnuStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1)
)
onuStatisticsEntry.setIndexNames(
    (0, "V1600D", "onuStatisticsPon"),
    (0, "V1600D", "onuStatisticsOnu"),
)
if mibBuilder.loadTexts:
    onuStatisticsEntry.setStatus("current")


class _OnuStatisticsPon_Type(Integer32):
    """Custom type onuStatisticsPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuStatisticsPon_Type.__name__ = "Integer32"
_OnuStatisticsPon_Object = MibTableColumn
onuStatisticsPon = _OnuStatisticsPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 1),
    _OnuStatisticsPon_Type()
)
onuStatisticsPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStatisticsPon.setStatus("current")


class _OnuStatisticsOnu_Type(Integer32):
    """Custom type onuStatisticsOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuStatisticsOnu_Type.__name__ = "Integer32"
_OnuStatisticsOnu_Object = MibTableColumn
onuStatisticsOnu = _OnuStatisticsOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 2),
    _OnuStatisticsOnu_Type()
)
onuStatisticsOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStatisticsOnu.setStatus("current")
_StatRxGoodOctets_Type = Counter64
_StatRxGoodOctets_Object = MibTableColumn
statRxGoodOctets = _StatRxGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 3),
    _StatRxGoodOctets_Type()
)
statRxGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxGoodOctets.setStatus("current")
_StatRxUcastFrames_Type = Unsigned32
_StatRxUcastFrames_Object = MibTableColumn
statRxUcastFrames = _StatRxUcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 4),
    _StatRxUcastFrames_Type()
)
statRxUcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxUcastFrames.setStatus("current")
_StatRxMcastFrames_Type = Unsigned32
_StatRxMcastFrames_Object = MibTableColumn
statRxMcastFrames = _StatRxMcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 5),
    _StatRxMcastFrames_Type()
)
statRxMcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxMcastFrames.setStatus("current")
_StatRxBcastFrames_Type = Unsigned32
_StatRxBcastFrames_Object = MibTableColumn
statRxBcastFrames = _StatRxBcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 6),
    _StatRxBcastFrames_Type()
)
statRxBcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxBcastFrames.setStatus("current")
_StatRxRegreqFrames_Type = Unsigned32
_StatRxRegreqFrames_Object = MibTableColumn
statRxRegreqFrames = _StatRxRegreqFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 7),
    _StatRxRegreqFrames_Type()
)
statRxRegreqFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxRegreqFrames.setStatus("current")
_StatRxRegackFrames_Type = Unsigned32
_StatRxRegackFrames_Object = MibTableColumn
statRxRegackFrames = _StatRxRegackFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 8),
    _StatRxRegackFrames_Type()
)
statRxRegackFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxRegackFrames.setStatus("current")
_StatRxReportFrames_Type = Unsigned32
_StatRxReportFrames_Object = MibTableColumn
statRxReportFrames = _StatRxReportFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 9),
    _StatRxReportFrames_Type()
)
statRxReportFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxReportFrames.setStatus("current")
_StatTxGoodOctets_Type = Counter64
_StatTxGoodOctets_Object = MibTableColumn
statTxGoodOctets = _StatTxGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 10),
    _StatTxGoodOctets_Type()
)
statTxGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxGoodOctets.setStatus("current")
_StatTxUcastFrames_Type = Unsigned32
_StatTxUcastFrames_Object = MibTableColumn
statTxUcastFrames = _StatTxUcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 11),
    _StatTxUcastFrames_Type()
)
statTxUcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxUcastFrames.setStatus("current")
_StatTxMcastFrames_Type = Unsigned32
_StatTxMcastFrames_Object = MibTableColumn
statTxMcastFrames = _StatTxMcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 12),
    _StatTxMcastFrames_Type()
)
statTxMcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxMcastFrames.setStatus("current")
_StatTxBcastFrames_Type = Unsigned32
_StatTxBcastFrames_Object = MibTableColumn
statTxBcastFrames = _StatTxBcastFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 13),
    _StatTxBcastFrames_Type()
)
statTxBcastFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxBcastFrames.setStatus("current")
_StatTxGateFrames_Type = Unsigned32
_StatTxGateFrames_Object = MibTableColumn
statTxGateFrames = _StatTxGateFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 14),
    _StatTxGateFrames_Type()
)
statTxGateFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxGateFrames.setStatus("current")
_StatTxRegFrames_Type = Unsigned32
_StatTxRegFrames_Object = MibTableColumn
statTxRegFrames = _StatTxRegFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 15),
    _StatTxRegFrames_Type()
)
statTxRegFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxRegFrames.setStatus("current")
_StatTxOamFrames_Type = Unsigned32
_StatTxOamFrames_Object = MibTableColumn
statTxOamFrames = _StatTxOamFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 16),
    _StatTxOamFrames_Type()
)
statTxOamFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statTxOamFrames.setStatus("current")
_StatRxGoodOpi_Type = Unsigned32
_StatRxGoodOpi_Object = MibTableColumn
statRxGoodOpi = _StatRxGoodOpi_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 17),
    _StatRxGoodOpi_Type()
)
statRxGoodOpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxGoodOpi.setStatus("current")
_StatRxBadCrc32_Type = Unsigned32
_StatRxBadCrc32_Object = MibTableColumn
statRxBadCrc32 = _StatRxBadCrc32_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 18),
    _StatRxBadCrc32_Type()
)
statRxBadCrc32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRxBadCrc32.setStatus("current")
_StatRxOamFrames_Type = Unsigned32
_StatRxOamFrames_Object = MibTableColumn
statRxOamFrames = _StatRxOamFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 20, 1, 19),
    _StatRxOamFrames_Type()
)
statRxOamFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statRxOamFrames.setStatus("current")
_OnuUpstream_ObjectIdentity = ObjectIdentity
onuUpstream = _OnuUpstream_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21)
)


class _OnuUpstreamPon_Type(Integer32):
    """Custom type onuUpstreamPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuUpstreamPon_Type.__name__ = "Integer32"
_OnuUpstreamPon_Object = MibScalar
onuUpstreamPon = _OnuUpstreamPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 1),
    _OnuUpstreamPon_Type()
)
onuUpstreamPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamPon.setStatus("current")


class _OnuUpstreamOnu_Type(Integer32):
    """Custom type onuUpstreamOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuUpstreamOnu_Type.__name__ = "Integer32"
_OnuUpstreamOnu_Object = MibScalar
onuUpstreamOnu = _OnuUpstreamOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 2),
    _OnuUpstreamOnu_Type()
)
onuUpstreamOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamOnu.setStatus("current")


class _OnuUpstreamFir_Type(Integer32):
    """Custom type onuUpstreamFir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 950000),
    )


_OnuUpstreamFir_Type.__name__ = "Integer32"
_OnuUpstreamFir_Object = MibScalar
onuUpstreamFir = _OnuUpstreamFir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 3),
    _OnuUpstreamFir_Type()
)
onuUpstreamFir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamFir.setStatus("current")


class _OnuUpstreamCir_Type(Integer32):
    """Custom type onuUpstreamCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 950000),
    )


_OnuUpstreamCir_Type.__name__ = "Integer32"
_OnuUpstreamCir_Object = MibScalar
onuUpstreamCir = _OnuUpstreamCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 4),
    _OnuUpstreamCir_Type()
)
onuUpstreamCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamCir.setStatus("current")


class _OnuUpstreamPir_Type(Integer32):
    """Custom type onuUpstreamPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 1000000),
    )


_OnuUpstreamPir_Type.__name__ = "Integer32"
_OnuUpstreamPir_Object = MibScalar
onuUpstreamPir = _OnuUpstreamPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 5),
    _OnuUpstreamPir_Type()
)
onuUpstreamPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamPir.setStatus("current")


class _OnuUpstreamWeight_Type(Integer32):
    """Custom type onuUpstreamWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_OnuUpstreamWeight_Type.__name__ = "Integer32"
_OnuUpstreamWeight_Object = MibScalar
onuUpstreamWeight = _OnuUpstreamWeight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 6),
    _OnuUpstreamWeight_Type()
)
onuUpstreamWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamWeight.setStatus("current")


class _OnuUpstreamAction_Type(Integer32):
    """Custom type onuUpstreamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_OnuUpstreamAction_Type.__name__ = "Integer32"
_OnuUpstreamAction_Object = MibScalar
onuUpstreamAction = _OnuUpstreamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 21, 7),
    _OnuUpstreamAction_Type()
)
onuUpstreamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuUpstreamAction.setStatus("current")
_OnuUpstreamTable_Object = MibTable
onuUpstreamTable = _OnuUpstreamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22)
)
if mibBuilder.loadTexts:
    onuUpstreamTable.setStatus("current")
_OnuUpstreamEntry_Object = MibTableRow
onuUpstreamEntry = _OnuUpstreamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1)
)
onuUpstreamEntry.setIndexNames(
    (0, "V1600D", "onuUpstreamPonS"),
    (0, "V1600D", "onuUpstreamOnuS"),
)
if mibBuilder.loadTexts:
    onuUpstreamEntry.setStatus("current")


class _OnuUpstreamPonS_Type(Integer32):
    """Custom type onuUpstreamPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuUpstreamPonS_Type.__name__ = "Integer32"
_OnuUpstreamPonS_Object = MibTableColumn
onuUpstreamPonS = _OnuUpstreamPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1, 1),
    _OnuUpstreamPonS_Type()
)
onuUpstreamPonS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUpstreamPonS.setStatus("current")


class _OnuUpstreamOnuS_Type(Integer32):
    """Custom type onuUpstreamOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuUpstreamOnuS_Type.__name__ = "Integer32"
_OnuUpstreamOnuS_Object = MibTableColumn
onuUpstreamOnuS = _OnuUpstreamOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1, 2),
    _OnuUpstreamOnuS_Type()
)
onuUpstreamOnuS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUpstreamOnuS.setStatus("current")


class _OnuUpstreamFirS_Type(Integer32):
    """Custom type onuUpstreamFirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 950000),
    )


_OnuUpstreamFirS_Type.__name__ = "Integer32"
_OnuUpstreamFirS_Object = MibTableColumn
onuUpstreamFirS = _OnuUpstreamFirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1, 3),
    _OnuUpstreamFirS_Type()
)
onuUpstreamFirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUpstreamFirS.setStatus("current")


class _OnuUpstreamCirS_Type(Integer32):
    """Custom type onuUpstreamCirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 950000),
    )


_OnuUpstreamCirS_Type.__name__ = "Integer32"
_OnuUpstreamCirS_Object = MibTableColumn
onuUpstreamCirS = _OnuUpstreamCirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1, 4),
    _OnuUpstreamCirS_Type()
)
onuUpstreamCirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUpstreamCirS.setStatus("current")


class _OnuUpstreamPirS_Type(Integer32):
    """Custom type onuUpstreamPirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 1000000),
    )


_OnuUpstreamPirS_Type.__name__ = "Integer32"
_OnuUpstreamPirS_Object = MibTableColumn
onuUpstreamPirS = _OnuUpstreamPirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1, 5),
    _OnuUpstreamPirS_Type()
)
onuUpstreamPirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUpstreamPirS.setStatus("current")


class _OnuUpstreamWeightS_Type(Integer32):
    """Custom type onuUpstreamWeightS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_OnuUpstreamWeightS_Type.__name__ = "Integer32"
_OnuUpstreamWeightS_Object = MibTableColumn
onuUpstreamWeightS = _OnuUpstreamWeightS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 22, 1, 6),
    _OnuUpstreamWeightS_Type()
)
onuUpstreamWeightS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUpstreamWeightS.setStatus("current")
_OnuDownsteam_ObjectIdentity = ObjectIdentity
onuDownsteam = _OnuDownsteam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 23)
)


class _OnuDownsteamPon_Type(Integer32):
    """Custom type onuDownsteamPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuDownsteamPon_Type.__name__ = "Integer32"
_OnuDownsteamPon_Object = MibScalar
onuDownsteamPon = _OnuDownsteamPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 23, 1),
    _OnuDownsteamPon_Type()
)
onuDownsteamPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDownsteamPon.setStatus("current")


class _OnuDownsteamOnu_Type(Integer32):
    """Custom type onuDownsteamOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuDownsteamOnu_Type.__name__ = "Integer32"
_OnuDownsteamOnu_Object = MibScalar
onuDownsteamOnu = _OnuDownsteamOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 23, 2),
    _OnuDownsteamOnu_Type()
)
onuDownsteamOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDownsteamOnu.setStatus("current")


class _OnuDownsteamPir_Type(Integer32):
    """Custom type onuDownsteamPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_OnuDownsteamPir_Type.__name__ = "Integer32"
_OnuDownsteamPir_Object = MibScalar
onuDownsteamPir = _OnuDownsteamPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 23, 3),
    _OnuDownsteamPir_Type()
)
onuDownsteamPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDownsteamPir.setStatus("current")


class _OnuDownsteamWeight_Type(Integer32):
    """Custom type onuDownsteamWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuDownsteamWeight_Type.__name__ = "Integer32"
_OnuDownsteamWeight_Object = MibScalar
onuDownsteamWeight = _OnuDownsteamWeight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 23, 4),
    _OnuDownsteamWeight_Type()
)
onuDownsteamWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDownsteamWeight.setStatus("current")


class _OnuDownsteamAction_Type(Integer32):
    """Custom type onuDownsteamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_OnuDownsteamAction_Type.__name__ = "Integer32"
_OnuDownsteamAction_Object = MibScalar
onuDownsteamAction = _OnuDownsteamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 23, 5),
    _OnuDownsteamAction_Type()
)
onuDownsteamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDownsteamAction.setStatus("current")
_OnuDownsteamTable_Object = MibTable
onuDownsteamTable = _OnuDownsteamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 24)
)
if mibBuilder.loadTexts:
    onuDownsteamTable.setStatus("current")
_OnuDownsteamEntry_Object = MibTableRow
onuDownsteamEntry = _OnuDownsteamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 24, 1)
)
onuDownsteamEntry.setIndexNames(
    (0, "V1600D", "onuDownsteamPonS"),
    (0, "V1600D", "onuDownsteamOnuS"),
)
if mibBuilder.loadTexts:
    onuDownsteamEntry.setStatus("current")


class _OnuDownsteamPonS_Type(Integer32):
    """Custom type onuDownsteamPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuDownsteamPonS_Type.__name__ = "Integer32"
_OnuDownsteamPonS_Object = MibTableColumn
onuDownsteamPonS = _OnuDownsteamPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 24, 1, 1),
    _OnuDownsteamPonS_Type()
)
onuDownsteamPonS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuDownsteamPonS.setStatus("current")


class _OnuDownsteamOnuS_Type(Integer32):
    """Custom type onuDownsteamOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuDownsteamOnuS_Type.__name__ = "Integer32"
_OnuDownsteamOnuS_Object = MibTableColumn
onuDownsteamOnuS = _OnuDownsteamOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 24, 1, 2),
    _OnuDownsteamOnuS_Type()
)
onuDownsteamOnuS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuDownsteamOnuS.setStatus("current")


class _OnuDownsteamPirS_Type(Integer32):
    """Custom type onuDownsteamPirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_OnuDownsteamPirS_Type.__name__ = "Integer32"
_OnuDownsteamPirS_Object = MibTableColumn
onuDownsteamPirS = _OnuDownsteamPirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 24, 1, 3),
    _OnuDownsteamPirS_Type()
)
onuDownsteamPirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuDownsteamPirS.setStatus("current")


class _OnuDownsteamWeightS_Type(Integer32):
    """Custom type onuDownsteamWeightS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuDownsteamWeightS_Type.__name__ = "Integer32"
_OnuDownsteamWeightS_Object = MibTableColumn
onuDownsteamWeightS = _OnuDownsteamWeightS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 24, 1, 4),
    _OnuDownsteamWeightS_Type()
)
onuDownsteamWeightS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuDownsteamWeightS.setStatus("current")
_OnuAuthInfo2Table_Object = MibTable
onuAuthInfo2Table = _OnuAuthInfo2Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25)
)
if mibBuilder.loadTexts:
    onuAuthInfo2Table.setStatus("current")
_OnuAuthInfo2Entry_Object = MibTableRow
onuAuthInfo2Entry = _OnuAuthInfo2Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1)
)
onuAuthInfo2Entry.setIndexNames(
    (0, "V1600D", "authInfoPonNo2"),
    (0, "V1600D", "authInfoOnuNo2"),
)
if mibBuilder.loadTexts:
    onuAuthInfo2Entry.setStatus("current")
_AuthInfoPonNo2_Type = Integer32
_AuthInfoPonNo2_Object = MibTableColumn
authInfoPonNo2 = _AuthInfoPonNo2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 1),
    _AuthInfoPonNo2_Type()
)
authInfoPonNo2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoPonNo2.setStatus("current")
_AuthInfoOnuNo2_Type = Integer32
_AuthInfoOnuNo2_Object = MibTableColumn
authInfoOnuNo2 = _AuthInfoOnuNo2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 2),
    _AuthInfoOnuNo2_Type()
)
authInfoOnuNo2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoOnuNo2.setStatus("current")
_AuthInfoLlid2_Type = Integer32
_AuthInfoLlid2_Object = MibTableColumn
authInfoLlid2 = _AuthInfoLlid2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 3),
    _AuthInfoLlid2_Type()
)
authInfoLlid2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoLlid2.setStatus("current")


class _LineStatus2_Type(Integer32):
    """Custom type lineStatus2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offline", 0),
          ("online", 1))
    )


_LineStatus2_Type.__name__ = "Integer32"
_LineStatus2_Object = MibTableColumn
lineStatus2 = _LineStatus2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 4),
    _LineStatus2_Type()
)
lineStatus2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lineStatus2.setStatus("current")
_OnuMacAddr2_Type = OctetString
_OnuMacAddr2_Object = MibTableColumn
onuMacAddr2 = _OnuMacAddr2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 5),
    _OnuMacAddr2_Type()
)
onuMacAddr2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMacAddr2.setStatus("current")
_Onutype2_Type = OctetString
_Onutype2_Object = MibTableColumn
onutype2 = _Onutype2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 6),
    _Onutype2_Type()
)
onutype2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onutype2.setStatus("current")


class _Exchange2_Type(Integer32):
    """Custom type exchange2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("busy", 2))
    )


_Exchange2_Type.__name__ = "Integer32"
_Exchange2_Object = MibTableColumn
exchange2 = _Exchange2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 7),
    _Exchange2_Type()
)
exchange2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exchange2.setStatus("current")


class _AuthMode2_Type(Integer32):
    """Custom type authMode2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("macAuth", 1),
          ("loidAuth", 2))
    )


_AuthMode2_Type.__name__ = "Integer32"
_AuthMode2_Object = MibTableColumn
authMode2 = _AuthMode2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 8),
    _AuthMode2_Type()
)
authMode2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authMode2.setStatus("current")
_OnuAuthInfoDescription2_Type = OctetString
_OnuAuthInfoDescription2_Object = MibTableColumn
onuAuthInfoDescription2 = _OnuAuthInfoDescription2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 9),
    _OnuAuthInfoDescription2_Type()
)
onuAuthInfoDescription2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfoDescription2.setStatus("current")
_OnuAuthInfoLoid2_Type = OctetString
_OnuAuthInfoLoid2_Object = MibTableColumn
onuAuthInfoLoid2 = _OnuAuthInfoLoid2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 10),
    _OnuAuthInfoLoid2_Type()
)
onuAuthInfoLoid2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfoLoid2.setStatus("current")
_OnuAuthInfoLoidPwd2_Type = OctetString
_OnuAuthInfoLoidPwd2_Object = MibTableColumn
onuAuthInfoLoidPwd2 = _OnuAuthInfoLoidPwd2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 11),
    _OnuAuthInfoLoidPwd2_Type()
)
onuAuthInfoLoidPwd2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfoLoidPwd2.setStatus("current")
_OnuAuthInfoRtt2_Type = Integer32
_OnuAuthInfoRtt2_Object = MibTableColumn
onuAuthInfoRtt2 = _OnuAuthInfoRtt2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 12),
    _OnuAuthInfoRtt2_Type()
)
onuAuthInfoRtt2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoRtt2.setStatus("current")
_Onutype22_Type = OctetString
_Onutype22_Object = MibTableColumn
onutype22 = _Onutype22_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 13),
    _Onutype22_Type()
)
onutype22.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onutype22.setStatus("current")


class _OnuAuthInfoStatus2_Type(Integer32):
    """Custom type onuAuthInfoStatus2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unfinish", 0),
          ("finish", 1))
    )


_OnuAuthInfoStatus2_Type.__name__ = "Integer32"
_OnuAuthInfoStatus2_Object = MibTableColumn
onuAuthInfoStatus2 = _OnuAuthInfoStatus2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 14),
    _OnuAuthInfoStatus2_Type()
)
onuAuthInfoStatus2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoStatus2.setStatus("current")


class _OnuAuthInfo2DeregReason_Type(Integer32):
    """Custom type onuAuthInfo2DeregReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wire_down", 0),
          ("power_off", 1))
    )


_OnuAuthInfo2DeregReason_Type.__name__ = "Integer32"
_OnuAuthInfo2DeregReason_Object = MibTableColumn
onuAuthInfo2DeregReason = _OnuAuthInfo2DeregReason_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 15),
    _OnuAuthInfo2DeregReason_Type()
)
onuAuthInfo2DeregReason.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfo2DeregReason.setStatus("current")
_OnuAuthInfo2PriSupport_Type = Unsigned32
_OnuAuthInfo2PriSupport_Object = MibTableColumn
onuAuthInfo2PriSupport = _OnuAuthInfo2PriSupport_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 16),
    _OnuAuthInfo2PriSupport_Type()
)
onuAuthInfo2PriSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfo2PriSupport.setStatus("current")
_OnuAuthInfoDistance2_Type = Unsigned32
_OnuAuthInfoDistance2_Object = MibTableColumn
onuAuthInfoDistance2 = _OnuAuthInfoDistance2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 17),
    _OnuAuthInfoDistance2_Type()
)
onuAuthInfoDistance2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoDistance2.setStatus("current")
_OnuAuthInfoLastRegTime_Type = OctetString
_OnuAuthInfoLastRegTime_Object = MibTableColumn
onuAuthInfoLastRegTime = _OnuAuthInfoLastRegTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 18),
    _OnuAuthInfoLastRegTime_Type()
)
onuAuthInfoLastRegTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoLastRegTime.setStatus("current")
_OnuAuthInfoLastDeregTime_Type = OctetString
_OnuAuthInfoLastDeregTime_Object = MibTableColumn
onuAuthInfoLastDeregTime = _OnuAuthInfoLastDeregTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 19),
    _OnuAuthInfoLastDeregTime_Type()
)
onuAuthInfoLastDeregTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoLastDeregTime.setStatus("current")
_OnuAuthInfoAliveTime_Type = OctetString
_OnuAuthInfoAliveTime_Object = MibTableColumn
onuAuthInfoAliveTime = _OnuAuthInfoAliveTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 20),
    _OnuAuthInfoAliveTime_Type()
)
onuAuthInfoAliveTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoAliveTime.setStatus("current")
_OnuAuthInfoPriSupportNew_Type = Unsigned32
_OnuAuthInfoPriSupportNew_Object = MibTableColumn
onuAuthInfoPriSupportNew = _OnuAuthInfoPriSupportNew_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 25, 1, 21),
    _OnuAuthInfoPriSupportNew_Type()
)
onuAuthInfoPriSupportNew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAuthInfoPriSupportNew.setStatus("current")
_OnuMacTable_Object = MibTable
onuMacTable = _OnuMacTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26)
)
if mibBuilder.loadTexts:
    onuMacTable.setStatus("current")
_OnuMacEntry_Object = MibTableRow
onuMacEntry = _OnuMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1)
)
onuMacEntry.setIndexNames(
    (0, "V1600D", "onuMacPon"),
    (0, "V1600D", "onuMacOnuId"),
    (0, "V1600D", "onuMacNum"),
)
if mibBuilder.loadTexts:
    onuMacEntry.setStatus("current")
_OnuMacPon_Type = Integer32
_OnuMacPon_Object = MibTableColumn
onuMacPon = _OnuMacPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1, 1),
    _OnuMacPon_Type()
)
onuMacPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacPon.setStatus("current")
_OnuMacOnuId_Type = Integer32
_OnuMacOnuId_Object = MibTableColumn
onuMacOnuId = _OnuMacOnuId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1, 2),
    _OnuMacOnuId_Type()
)
onuMacOnuId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacOnuId.setStatus("current")
_OnuMacNum_Type = Integer32
_OnuMacNum_Object = MibTableColumn
onuMacNum = _OnuMacNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1, 3),
    _OnuMacNum_Type()
)
onuMacNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacNum.setStatus("current")
_OnuMacVlan_Type = Integer32
_OnuMacVlan_Object = MibTableColumn
onuMacVlan = _OnuMacVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1, 4),
    _OnuMacVlan_Type()
)
onuMacVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacVlan.setStatus("current")
_OnuMacAddress_Type = OctetString
_OnuMacAddress_Object = MibTableColumn
onuMacAddress = _OnuMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1, 5),
    _OnuMacAddress_Type()
)
onuMacAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacAddress.setStatus("current")
_OnuMacAge_Type = Integer32
_OnuMacAge_Object = MibTableColumn
onuMacAge = _OnuMacAge_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 26, 1, 6),
    _OnuMacAge_Type()
)
onuMacAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacAge.setStatus("current")
_OnuNumberTable_Object = MibTable
onuNumberTable = _OnuNumberTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 27)
)
if mibBuilder.loadTexts:
    onuNumberTable.setStatus("current")
_OnuNumberEntry_Object = MibTableRow
onuNumberEntry = _OnuNumberEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 27, 1)
)
onuNumberEntry.setIndexNames(
    (0, "V1600D", "onuNumberPon"),
)
if mibBuilder.loadTexts:
    onuNumberEntry.setStatus("current")
_OnuNumberPon_Type = Integer32
_OnuNumberPon_Object = MibTableColumn
onuNumberPon = _OnuNumberPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 27, 1, 1),
    _OnuNumberPon_Type()
)
onuNumberPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuNumberPon.setStatus("current")
_OnuNumberAll_Type = Integer32
_OnuNumberAll_Object = MibTableColumn
onuNumberAll = _OnuNumberAll_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 27, 1, 2),
    _OnuNumberAll_Type()
)
onuNumberAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuNumberAll.setStatus("current")
_OnuNumberOnline_Type = Integer32
_OnuNumberOnline_Object = MibTableColumn
onuNumberOnline = _OnuNumberOnline_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 27, 1, 3),
    _OnuNumberOnline_Type()
)
onuNumberOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuNumberOnline.setStatus("current")
_OnuRecievePowerTable_Object = MibTable
onuRecievePowerTable = _OnuRecievePowerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 28)
)
if mibBuilder.loadTexts:
    onuRecievePowerTable.setStatus("current")
_OnuRecievePowerEntry_Object = MibTableRow
onuRecievePowerEntry = _OnuRecievePowerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 28, 1)
)
onuRecievePowerEntry.setIndexNames(
    (0, "V1600D", "onuid"),
)
if mibBuilder.loadTexts:
    onuRecievePowerEntry.setStatus("current")
_Onuid_Type = Integer32
_Onuid_Object = MibTableColumn
onuid = _Onuid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 28, 1, 1),
    _Onuid_Type()
)
onuid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuid.setStatus("current")
_OnuMACAddr_Type = OctetString
_OnuMACAddr_Object = MibTableColumn
onuMACAddr = _OnuMACAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 28, 1, 2),
    _OnuMACAddr_Type()
)
onuMACAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMACAddr.setStatus("current")
_OnuRecievepower_Type = OctetString
_OnuRecievepower_Object = MibTableColumn
onuRecievepower = _OnuRecievepower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 28, 1, 3),
    _OnuRecievepower_Type()
)
onuRecievepower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuRecievepower.setStatus("current")
_OnlineOnuAuthInfoTable_Object = MibTable
onlineOnuAuthInfoTable = _OnlineOnuAuthInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29)
)
if mibBuilder.loadTexts:
    onlineOnuAuthInfoTable.setStatus("current")
_OnlineOnuAuthInfoEntry_Object = MibTableRow
onlineOnuAuthInfoEntry = _OnlineOnuAuthInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1)
)
onlineOnuAuthInfoEntry.setIndexNames(
    (0, "V1600D", "onlineOnuAuthInfoPonNo"),
    (0, "V1600D", "onlineOnuAuthInfoOnuNo"),
)
if mibBuilder.loadTexts:
    onlineOnuAuthInfoEntry.setStatus("current")
_OnlineOnuAuthInfoPonNo_Type = Integer32
_OnlineOnuAuthInfoPonNo_Object = MibTableColumn
onlineOnuAuthInfoPonNo = _OnlineOnuAuthInfoPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 1),
    _OnlineOnuAuthInfoPonNo_Type()
)
onlineOnuAuthInfoPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoPonNo.setStatus("current")
_OnlineOnuAuthInfoOnuNo_Type = Integer32
_OnlineOnuAuthInfoOnuNo_Object = MibTableColumn
onlineOnuAuthInfoOnuNo = _OnlineOnuAuthInfoOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 2),
    _OnlineOnuAuthInfoOnuNo_Type()
)
onlineOnuAuthInfoOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoOnuNo.setStatus("current")
_OnlineOnuAuthInfoLlid_Type = Integer32
_OnlineOnuAuthInfoLlid_Object = MibTableColumn
onlineOnuAuthInfoLlid = _OnlineOnuAuthInfoLlid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 3),
    _OnlineOnuAuthInfoLlid_Type()
)
onlineOnuAuthInfoLlid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoLlid.setStatus("current")


class _OnlineOnulineStatus_Type(Integer32):
    """Custom type onlineOnulineStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offline", 0),
          ("online", 1))
    )


_OnlineOnulineStatus_Type.__name__ = "Integer32"
_OnlineOnulineStatus_Object = MibTableColumn
onlineOnulineStatus = _OnlineOnulineStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 4),
    _OnlineOnulineStatus_Type()
)
onlineOnulineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnulineStatus.setStatus("current")
_OnlineOnuMacAddr_Type = OctetString
_OnlineOnuMacAddr_Object = MibTableColumn
onlineOnuMacAddr = _OnlineOnuMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 5),
    _OnlineOnuMacAddr_Type()
)
onlineOnuMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuMacAddr.setStatus("current")
_OnlineOnutype_Type = OctetString
_OnlineOnutype_Object = MibTableColumn
onlineOnutype = _OnlineOnutype_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 6),
    _OnlineOnutype_Type()
)
onlineOnutype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnutype.setStatus("current")


class _OnlineOnuExchange_Type(Integer32):
    """Custom type onlineOnuExchange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("busy", 2))
    )


_OnlineOnuExchange_Type.__name__ = "Integer32"
_OnlineOnuExchange_Object = MibTableColumn
onlineOnuExchange = _OnlineOnuExchange_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 7),
    _OnlineOnuExchange_Type()
)
onlineOnuExchange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuExchange.setStatus("current")


class _OnlineOnuAuthMode_Type(Integer32):
    """Custom type onlineOnuAuthMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("macAuth", 1),
          ("loidAuth", 2))
    )


_OnlineOnuAuthMode_Type.__name__ = "Integer32"
_OnlineOnuAuthMode_Object = MibTableColumn
onlineOnuAuthMode = _OnlineOnuAuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 8),
    _OnlineOnuAuthMode_Type()
)
onlineOnuAuthMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthMode.setStatus("current")
_OnlineOnuAuthInfoDescription_Type = OctetString
_OnlineOnuAuthInfoDescription_Object = MibTableColumn
onlineOnuAuthInfoDescription = _OnlineOnuAuthInfoDescription_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 9),
    _OnlineOnuAuthInfoDescription_Type()
)
onlineOnuAuthInfoDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoDescription.setStatus("current")
_OnlineOnuAuthInfoLoid_Type = OctetString
_OnlineOnuAuthInfoLoid_Object = MibTableColumn
onlineOnuAuthInfoLoid = _OnlineOnuAuthInfoLoid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 10),
    _OnlineOnuAuthInfoLoid_Type()
)
onlineOnuAuthInfoLoid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoLoid.setStatus("current")
_OnlineOnuAuthInfoLoidPwd_Type = OctetString
_OnlineOnuAuthInfoLoidPwd_Object = MibTableColumn
onlineOnuAuthInfoLoidPwd = _OnlineOnuAuthInfoLoidPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 11),
    _OnlineOnuAuthInfoLoidPwd_Type()
)
onlineOnuAuthInfoLoidPwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoLoidPwd.setStatus("current")
_OnlineOnuAuthInfoRtt_Type = Integer32
_OnlineOnuAuthInfoRtt_Object = MibTableColumn
onlineOnuAuthInfoRtt = _OnlineOnuAuthInfoRtt_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 12),
    _OnlineOnuAuthInfoRtt_Type()
)
onlineOnuAuthInfoRtt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoRtt.setStatus("current")
_OnlineOnutype1_Type = OctetString
_OnlineOnutype1_Object = MibTableColumn
onlineOnutype1 = _OnlineOnutype1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 13),
    _OnlineOnutype1_Type()
)
onlineOnutype1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnutype1.setStatus("current")


class _OnlineOnuAuthInfoStatus_Type(Integer32):
    """Custom type onlineOnuAuthInfoStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unfinish", 0),
          ("finish", 1))
    )


_OnlineOnuAuthInfoStatus_Type.__name__ = "Integer32"
_OnlineOnuAuthInfoStatus_Object = MibTableColumn
onlineOnuAuthInfoStatus = _OnlineOnuAuthInfoStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 14),
    _OnlineOnuAuthInfoStatus_Type()
)
onlineOnuAuthInfoStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoStatus.setStatus("current")


class _OnlineOnuAuthInfoDeregReason_Type(Integer32):
    """Custom type onlineOnuAuthInfoDeregReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wire_down", 0),
          ("power_off", 1))
    )


_OnlineOnuAuthInfoDeregReason_Type.__name__ = "Integer32"
_OnlineOnuAuthInfoDeregReason_Object = MibTableColumn
onlineOnuAuthInfoDeregReason = _OnlineOnuAuthInfoDeregReason_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 15),
    _OnlineOnuAuthInfoDeregReason_Type()
)
onlineOnuAuthInfoDeregReason.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoDeregReason.setStatus("current")
_OnlineOnuAuthInfoPriSupport_Type = Unsigned32
_OnlineOnuAuthInfoPriSupport_Object = MibTableColumn
onlineOnuAuthInfoPriSupport = _OnlineOnuAuthInfoPriSupport_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 16),
    _OnlineOnuAuthInfoPriSupport_Type()
)
onlineOnuAuthInfoPriSupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoPriSupport.setStatus("current")
_OnlineOnuAuthInfoDistance_Type = Unsigned32
_OnlineOnuAuthInfoDistance_Object = MibTableColumn
onlineOnuAuthInfoDistance = _OnlineOnuAuthInfoDistance_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 17),
    _OnlineOnuAuthInfoDistance_Type()
)
onlineOnuAuthInfoDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoDistance.setStatus("current")
_OnlineOnuAuthInfoLastRegTime_Type = OctetString
_OnlineOnuAuthInfoLastRegTime_Object = MibTableColumn
onlineOnuAuthInfoLastRegTime = _OnlineOnuAuthInfoLastRegTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 18),
    _OnlineOnuAuthInfoLastRegTime_Type()
)
onlineOnuAuthInfoLastRegTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoLastRegTime.setStatus("current")
_OnlineOnuAuthInfoLastDeregTime_Type = OctetString
_OnlineOnuAuthInfoLastDeregTime_Object = MibTableColumn
onlineOnuAuthInfoLastDeregTime = _OnlineOnuAuthInfoLastDeregTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 19),
    _OnlineOnuAuthInfoLastDeregTime_Type()
)
onlineOnuAuthInfoLastDeregTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoLastDeregTime.setStatus("current")
_OnlineOnuAuthInfoAliveTime_Type = OctetString
_OnlineOnuAuthInfoAliveTime_Object = MibTableColumn
onlineOnuAuthInfoAliveTime = _OnlineOnuAuthInfoAliveTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 20),
    _OnlineOnuAuthInfoAliveTime_Type()
)
onlineOnuAuthInfoAliveTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoAliveTime.setStatus("current")
_OnlineOnuAuthInfoPriSupportNew_Type = Unsigned32
_OnlineOnuAuthInfoPriSupportNew_Object = MibTableColumn
onlineOnuAuthInfoPriSupportNew = _OnlineOnuAuthInfoPriSupportNew_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 29, 1, 21),
    _OnlineOnuAuthInfoPriSupportNew_Type()
)
onlineOnuAuthInfoPriSupportNew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoPriSupportNew.setStatus("current")
_OnuMacAddrLimit_ObjectIdentity = ObjectIdentity
onuMacAddrLimit = _OnuMacAddrLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 30)
)


class _OnuMacLimitPon_Type(Integer32):
    """Custom type onuMacLimitPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuMacLimitPon_Type.__name__ = "Integer32"
_OnuMacLimitPon_Object = MibScalar
onuMacLimitPon = _OnuMacLimitPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 30, 1),
    _OnuMacLimitPon_Type()
)
onuMacLimitPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacLimitPon.setStatus("current")


class _OnuMacLimitOnu_Type(Integer32):
    """Custom type onuMacLimitOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuMacLimitOnu_Type.__name__ = "Integer32"
_OnuMacLimitOnu_Object = MibScalar
onuMacLimitOnu = _OnuMacLimitOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 30, 2),
    _OnuMacLimitOnu_Type()
)
onuMacLimitOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacLimitOnu.setStatus("current")


class _OnuMacLimitNum_Type(Integer32):
    """Custom type onuMacLimitNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 16383),
    )


_OnuMacLimitNum_Type.__name__ = "Integer32"
_OnuMacLimitNum_Object = MibScalar
onuMacLimitNum = _OnuMacLimitNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 30, 3),
    _OnuMacLimitNum_Type()
)
onuMacLimitNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMacLimitNum.setStatus("current")
_OnuAuthInfo3Table_Object = MibTable
onuAuthInfo3Table = _OnuAuthInfo3Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 31)
)
if mibBuilder.loadTexts:
    onuAuthInfo3Table.setStatus("current")
_OnuAuthInfo3Entry_Object = MibTableRow
onuAuthInfo3Entry = _OnuAuthInfo3Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 31, 1)
)
onuAuthInfo3Entry.setIndexNames(
    (0, "V1600D", "authInfoPonNo3"),
    (0, "V1600D", "authInfoOnuNo3"),
)
if mibBuilder.loadTexts:
    onuAuthInfo3Entry.setStatus("current")
_AuthInfoPonNo3_Type = Integer32
_AuthInfoPonNo3_Object = MibTableColumn
authInfoPonNo3 = _AuthInfoPonNo3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 31, 1, 1),
    _AuthInfoPonNo3_Type()
)
authInfoPonNo3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoPonNo3.setStatus("current")
_AuthInfoOnuNo3_Type = Integer32
_AuthInfoOnuNo3_Object = MibTableColumn
authInfoOnuNo3 = _AuthInfoOnuNo3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 31, 1, 2),
    _AuthInfoOnuNo3_Type()
)
authInfoOnuNo3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    authInfoOnuNo3.setStatus("current")
_OnuAuthInfo3Details_Type = OctetString
_OnuAuthInfo3Details_Object = MibTableColumn
onuAuthInfo3Details = _OnuAuthInfo3Details_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 31, 1, 3),
    _OnuAuthInfo3Details_Type()
)
onuAuthInfo3Details.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAuthInfo3Details.setStatus("current")
_OnlineOnuAuthInfo3Table_Object = MibTable
onlineOnuAuthInfo3Table = _OnlineOnuAuthInfo3Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 32)
)
if mibBuilder.loadTexts:
    onlineOnuAuthInfo3Table.setStatus("current")
_OnlineOnuAuthInfo3Entry_Object = MibTableRow
onlineOnuAuthInfo3Entry = _OnlineOnuAuthInfo3Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 32, 1)
)
onlineOnuAuthInfo3Entry.setIndexNames(
    (0, "V1600D", "onlineOnuAuthInfoPonNo3"),
    (0, "V1600D", "onlineOnuAuthInfoOnuNo3"),
)
if mibBuilder.loadTexts:
    onlineOnuAuthInfo3Entry.setStatus("current")
_OnlineOnuAuthInfoPonNo3_Type = Integer32
_OnlineOnuAuthInfoPonNo3_Object = MibTableColumn
onlineOnuAuthInfoPonNo3 = _OnlineOnuAuthInfoPonNo3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 32, 1, 1),
    _OnlineOnuAuthInfoPonNo3_Type()
)
onlineOnuAuthInfoPonNo3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoPonNo3.setStatus("current")
_OnlineOnuAuthInfoOnuNo3_Type = Integer32
_OnlineOnuAuthInfoOnuNo3_Object = MibTableColumn
onlineOnuAuthInfoOnuNo3 = _OnlineOnuAuthInfoOnuNo3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 32, 1, 2),
    _OnlineOnuAuthInfoOnuNo3_Type()
)
onlineOnuAuthInfoOnuNo3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfoOnuNo3.setStatus("current")
_OnlineOnuAuthInfo3Details_Type = OctetString
_OnlineOnuAuthInfo3Details_Object = MibTableColumn
onlineOnuAuthInfo3Details = _OnlineOnuAuthInfo3Details_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 1, 32, 1, 3),
    _OnlineOnuAuthInfo3Details_Type()
)
onlineOnuAuthInfo3Details.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onlineOnuAuthInfo3Details.setStatus("current")
_OnuGlobalCfg_ObjectIdentity = ObjectIdentity
onuGlobalCfg = _OnuGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2)
)
_OnuInfo_ObjectIdentity = ObjectIdentity
onuInfo = _OnuInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1)
)
_OnuCtcInfoTable_Object = MibTable
onuCtcInfoTable = _OnuCtcInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 1)
)
if mibBuilder.loadTexts:
    onuCtcInfoTable.setStatus("current")
_OnuCtcInfoEntry_Object = MibTableRow
onuCtcInfoEntry = _OnuCtcInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 1, 1)
)
onuCtcInfoEntry.setIndexNames(
    (0, "V1600D", "onuCtcInfoPonIndex"),
    (0, "V1600D", "onuCtcInfoOnuIndex"),
)
if mibBuilder.loadTexts:
    onuCtcInfoEntry.setStatus("current")
_OnuCtcInfoPonIndex_Type = Integer32
_OnuCtcInfoPonIndex_Object = MibTableColumn
onuCtcInfoPonIndex = _OnuCtcInfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 1, 1, 1),
    _OnuCtcInfoPonIndex_Type()
)
onuCtcInfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcInfoPonIndex.setStatus("current")
_OnuCtcInfoOnuIndex_Type = Integer32
_OnuCtcInfoOnuIndex_Object = MibTableColumn
onuCtcInfoOnuIndex = _OnuCtcInfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 1, 1, 2),
    _OnuCtcInfoOnuIndex_Type()
)
onuCtcInfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcInfoOnuIndex.setStatus("current")
_OnuOamVersion_Type = OctetString
_OnuOamVersion_Object = MibTableColumn
onuOamVersion = _OnuOamVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 1, 1, 3),
    _OnuOamVersion_Type()
)
onuOamVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOamVersion.setStatus("current")
_OnuOamOUI_Type = OctetString
_OnuOamOUI_Object = MibTableColumn
onuOamOUI = _OnuOamOUI_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 1, 1, 4),
    _OnuOamOUI_Type()
)
onuOamOUI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOamOUI.setStatus("current")
_OnuSnInfoTable_Object = MibTable
onuSnInfoTable = _OnuSnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2)
)
if mibBuilder.loadTexts:
    onuSnInfoTable.setStatus("current")
_OnuSnInfoEntry_Object = MibTableRow
onuSnInfoEntry = _OnuSnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1)
)
onuSnInfoEntry.setIndexNames(
    (0, "V1600D", "onuSnInfoPonIndex"),
    (0, "V1600D", "onuSnInfoOnuIndex"),
)
if mibBuilder.loadTexts:
    onuSnInfoEntry.setStatus("current")
_OnuSnInfoPonIndex_Type = Integer32
_OnuSnInfoPonIndex_Object = MibTableColumn
onuSnInfoPonIndex = _OnuSnInfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 1),
    _OnuSnInfoPonIndex_Type()
)
onuSnInfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnInfoPonIndex.setStatus("current")
_OnuSnInfoOnuIndex_Type = Integer32
_OnuSnInfoOnuIndex_Object = MibTableColumn
onuSnInfoOnuIndex = _OnuSnInfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 2),
    _OnuSnInfoOnuIndex_Type()
)
onuSnInfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnInfoOnuIndex.setStatus("current")
_OnuVendorId_Type = OctetString
_OnuVendorId_Object = MibTableColumn
onuVendorId = _OnuVendorId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 3),
    _OnuVendorId_Type()
)
onuVendorId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVendorId.setStatus("current")
_OnuModel_Type = OctetString
_OnuModel_Object = MibTableColumn
onuModel = _OnuModel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 4),
    _OnuModel_Type()
)
onuModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuModel.setStatus("current")
_OnuID_Type = OctetString
_OnuID_Object = MibTableColumn
onuID = _OnuID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 5),
    _OnuID_Type()
)
onuID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuID.setStatus("current")
_OnuHardwareVersion_Type = OctetString
_OnuHardwareVersion_Object = MibTableColumn
onuHardwareVersion = _OnuHardwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 6),
    _OnuHardwareVersion_Type()
)
onuHardwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuHardwareVersion.setStatus("current")
_OnuSoftwareVersion_Type = OctetString
_OnuSoftwareVersion_Object = MibTableColumn
onuSoftwareVersion = _OnuSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 2, 1, 7),
    _OnuSoftwareVersion_Type()
)
onuSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSoftwareVersion.setStatus("current")
_FwVersionInfoTable_Object = MibTable
fwVersionInfoTable = _FwVersionInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 3)
)
if mibBuilder.loadTexts:
    fwVersionInfoTable.setStatus("current")
_FwVersionInfoEntry_Object = MibTableRow
fwVersionInfoEntry = _FwVersionInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 3, 1)
)
fwVersionInfoEntry.setIndexNames(
    (0, "V1600D", "fwVersionInfoPonIndex"),
    (0, "V1600D", "fwVersionInfoOnuIndex"),
)
if mibBuilder.loadTexts:
    fwVersionInfoEntry.setStatus("current")
_FwVersionInfoPonIndex_Type = Integer32
_FwVersionInfoPonIndex_Object = MibTableColumn
fwVersionInfoPonIndex = _FwVersionInfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 3, 1, 1),
    _FwVersionInfoPonIndex_Type()
)
fwVersionInfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwVersionInfoPonIndex.setStatus("current")
_FwVersionInfoOnuIndex_Type = Integer32
_FwVersionInfoOnuIndex_Object = MibTableColumn
fwVersionInfoOnuIndex = _FwVersionInfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 3, 1, 2),
    _FwVersionInfoOnuIndex_Type()
)
fwVersionInfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwVersionInfoOnuIndex.setStatus("current")
_FwVersion_Type = OctetString
_FwVersion_Object = MibTableColumn
fwVersion = _FwVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 3, 1, 3),
    _FwVersion_Type()
)
fwVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwVersion.setStatus("current")
_ChipIdInfoTable_Object = MibTable
chipIdInfoTable = _ChipIdInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4)
)
if mibBuilder.loadTexts:
    chipIdInfoTable.setStatus("current")
_ChipIdInfoEntry_Object = MibTableRow
chipIdInfoEntry = _ChipIdInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4, 1)
)
chipIdInfoEntry.setIndexNames(
    (0, "V1600D", "chipIdInfoPonIndex"),
    (0, "V1600D", "chipIdInfoOnuIndex"),
)
if mibBuilder.loadTexts:
    chipIdInfoEntry.setStatus("current")
_ChipIdInfoPonIndex_Type = Integer32
_ChipIdInfoPonIndex_Object = MibTableColumn
chipIdInfoPonIndex = _ChipIdInfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4, 1, 1),
    _ChipIdInfoPonIndex_Type()
)
chipIdInfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chipIdInfoPonIndex.setStatus("current")
_ChipIdInfoOnuIndex_Type = Integer32
_ChipIdInfoOnuIndex_Object = MibTableColumn
chipIdInfoOnuIndex = _ChipIdInfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4, 1, 2),
    _ChipIdInfoOnuIndex_Type()
)
chipIdInfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chipIdInfoOnuIndex.setStatus("current")
_VerderId_Type = OctetString
_VerderId_Object = MibTableColumn
verderId = _VerderId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4, 1, 3),
    _VerderId_Type()
)
verderId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    verderId.setStatus("current")
_ChipModel_Type = OctetString
_ChipModel_Object = MibTableColumn
chipModel = _ChipModel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4, 1, 4),
    _ChipModel_Type()
)
chipModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chipModel.setStatus("current")
_Date_Type = OctetString
_Date_Object = MibTableColumn
date = _Date_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 4, 1, 5),
    _Date_Type()
)
date.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    date.setStatus("current")
_Cap1InfoTable_Object = MibTable
cap1InfoTable = _Cap1InfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5)
)
if mibBuilder.loadTexts:
    cap1InfoTable.setStatus("current")
_Cap1InfoEntry_Object = MibTableRow
cap1InfoEntry = _Cap1InfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1)
)
cap1InfoEntry.setIndexNames(
    (0, "V1600D", "cap1InfoPonIndex"),
    (0, "V1600D", "cap1InfoOnuIndex"),
)
if mibBuilder.loadTexts:
    cap1InfoEntry.setStatus("current")
_Cap1InfoPonIndex_Type = Integer32
_Cap1InfoPonIndex_Object = MibTableColumn
cap1InfoPonIndex = _Cap1InfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 1),
    _Cap1InfoPonIndex_Type()
)
cap1InfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cap1InfoPonIndex.setStatus("current")
_Cap1InfoOnuIndex_Type = Integer32
_Cap1InfoOnuIndex_Object = MibTableColumn
cap1InfoOnuIndex = _Cap1InfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 2),
    _Cap1InfoOnuIndex_Type()
)
cap1InfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cap1InfoOnuIndex.setStatus("current")
_ServiceSupported_Type = OctetString
_ServiceSupported_Object = MibTableColumn
serviceSupported = _ServiceSupported_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 3),
    _ServiceSupported_Type()
)
serviceSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceSupported.setStatus("current")
_NumGEPorts_Type = Integer32
_NumGEPorts_Object = MibTableColumn
numGEPorts = _NumGEPorts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 4),
    _NumGEPorts_Type()
)
numGEPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numGEPorts.setStatus("current")
_GeBitMap_Type = OctetString
_GeBitMap_Object = MibTableColumn
geBitMap = _GeBitMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 5),
    _GeBitMap_Type()
)
geBitMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    geBitMap.setStatus("current")
_NumFEPorts_Type = Integer32
_NumFEPorts_Object = MibTableColumn
numFEPorts = _NumFEPorts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 6),
    _NumFEPorts_Type()
)
numFEPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numFEPorts.setStatus("current")
_FeBitMap_Type = OctetString
_FeBitMap_Object = MibTableColumn
feBitMap = _FeBitMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 7),
    _FeBitMap_Type()
)
feBitMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    feBitMap.setStatus("current")
_NumPOTSPorts_Type = Integer32
_NumPOTSPorts_Object = MibTableColumn
numPOTSPorts = _NumPOTSPorts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 8),
    _NumPOTSPorts_Type()
)
numPOTSPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numPOTSPorts.setStatus("current")
_NumE1Ports_Type = Integer32
_NumE1Ports_Object = MibTableColumn
numE1Ports = _NumE1Ports_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 9),
    _NumE1Ports_Type()
)
numE1Ports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numE1Ports.setStatus("current")
_NumUSQueues_Type = Integer32
_NumUSQueues_Object = MibTableColumn
numUSQueues = _NumUSQueues_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 10),
    _NumUSQueues_Type()
)
numUSQueues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numUSQueues.setStatus("current")
_MaxQueueUSPort_Type = Integer32
_MaxQueueUSPort_Object = MibTableColumn
maxQueueUSPort = _MaxQueueUSPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 11),
    _MaxQueueUSPort_Type()
)
maxQueueUSPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxQueueUSPort.setStatus("current")
_NumDSQueues_Type = Integer32
_NumDSQueues_Object = MibTableColumn
numDSQueues = _NumDSQueues_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 12),
    _NumDSQueues_Type()
)
numDSQueues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numDSQueues.setStatus("current")
_MaxQueueDSPort_Type = Integer32
_MaxQueueDSPort_Object = MibTableColumn
maxQueueDSPort = _MaxQueueDSPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 13),
    _MaxQueueDSPort_Type()
)
maxQueueDSPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxQueueDSPort.setStatus("current")
_BatteryBackup_Type = Integer32
_BatteryBackup_Object = MibTableColumn
batteryBackup = _BatteryBackup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 5, 1, 14),
    _BatteryBackup_Type()
)
batteryBackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    batteryBackup.setStatus("current")
_Cap2InfoTable_Object = MibTable
cap2InfoTable = _Cap2InfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6)
)
if mibBuilder.loadTexts:
    cap2InfoTable.setStatus("current")
_Cap2InfoEntry_Object = MibTableRow
cap2InfoEntry = _Cap2InfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1)
)
cap2InfoEntry.setIndexNames(
    (0, "V1600D", "cap2InfoPonIndex"),
    (0, "V1600D", "cap2InfoOnuIndex"),
)
if mibBuilder.loadTexts:
    cap2InfoEntry.setStatus("current")
_Cap2InfoPonIndex_Type = Integer32
_Cap2InfoPonIndex_Object = MibTableColumn
cap2InfoPonIndex = _Cap2InfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 1),
    _Cap2InfoPonIndex_Type()
)
cap2InfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cap2InfoPonIndex.setStatus("current")
_Cap2InfoOnuIndex_Type = Integer32
_Cap2InfoOnuIndex_Object = MibTableColumn
cap2InfoOnuIndex = _Cap2InfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 2),
    _Cap2InfoOnuIndex_Type()
)
cap2InfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cap2InfoOnuIndex.setStatus("current")
_OnuType_Type = OctetString
_OnuType_Object = MibTableColumn
onuType = _OnuType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 3),
    _OnuType_Type()
)
onuType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuType.setStatus("current")
_MultiLLID_Type = OctetString
_MultiLLID_Object = MibTableColumn
multiLLID = _MultiLLID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 4),
    _MultiLLID_Type()
)
multiLLID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    multiLLID.setStatus("current")
_ProtectionType_Type = OctetString
_ProtectionType_Object = MibTableColumn
protectionType = _ProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 5),
    _ProtectionType_Type()
)
protectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectionType.setStatus("current")
_NumPONIf_Type = Integer32
_NumPONIf_Object = MibTableColumn
numPONIf = _NumPONIf_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 6),
    _NumPONIf_Type()
)
numPONIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numPONIf.setStatus("current")
_NumSlot_Type = Integer32
_NumSlot_Object = MibTableColumn
numSlot = _NumSlot_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 7),
    _NumSlot_Type()
)
numSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numSlot.setStatus("current")
_NumInterfaceType_Type = Integer32
_NumInterfaceType_Object = MibTableColumn
numInterfaceType = _NumInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 8),
    _NumInterfaceType_Type()
)
numInterfaceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    numInterfaceType.setStatus("current")
_InterfaceTypePorts_Type = OctetString
_InterfaceTypePorts_Object = MibTableColumn
interfaceTypePorts = _InterfaceTypePorts_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 9),
    _InterfaceTypePorts_Type()
)
interfaceTypePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceTypePorts.setStatus("current")
_BatBackup_Type = OctetString
_BatBackup_Object = MibTableColumn
batBackup = _BatBackup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 6, 1, 10),
    _BatBackup_Type()
)
batBackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    batBackup.setStatus("current")
_Cap3InfoTable_Object = MibTable
cap3InfoTable = _Cap3InfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 7)
)
if mibBuilder.loadTexts:
    cap3InfoTable.setStatus("current")
_Cap3InfoEntry_Object = MibTableRow
cap3InfoEntry = _Cap3InfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 7, 1)
)
cap3InfoEntry.setIndexNames(
    (0, "V1600D", "cap3InfoPonIndex"),
    (0, "V1600D", "cap3InfoOnuIndex"),
)
if mibBuilder.loadTexts:
    cap3InfoEntry.setStatus("current")
_Cap3InfoPonIndex_Type = Integer32
_Cap3InfoPonIndex_Object = MibTableColumn
cap3InfoPonIndex = _Cap3InfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 7, 1, 1),
    _Cap3InfoPonIndex_Type()
)
cap3InfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cap3InfoPonIndex.setStatus("current")
_Cap3InfoOnuIndex_Type = Integer32
_Cap3InfoOnuIndex_Object = MibTableColumn
cap3InfoOnuIndex = _Cap3InfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 7, 1, 2),
    _Cap3InfoOnuIndex_Type()
)
cap3InfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cap3InfoOnuIndex.setStatus("current")


class _Ipv6Support_Type(Integer32):
    """Custom type ipv6Support based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("not_support", 0),
          ("support", 1))
    )


_Ipv6Support_Type.__name__ = "Integer32"
_Ipv6Support_Object = MibTableColumn
ipv6Support = _Ipv6Support_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 7, 1, 3),
    _Ipv6Support_Type()
)
ipv6Support.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipv6Support.setStatus("current")


class _PowerControl_Type(Integer32):
    """Custom type powerControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not_support", 0),
          ("support_onu_tx", 1),
          ("support_onu_tx_and_rx", 2))
    )


_PowerControl_Type.__name__ = "Integer32"
_PowerControl_Object = MibTableColumn
powerControl = _PowerControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 7, 1, 4),
    _PowerControl_Type()
)
powerControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerControl.setStatus("current")
_OpmDiagInfoTable_Object = MibTable
opmDiagInfoTable = _OpmDiagInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8)
)
if mibBuilder.loadTexts:
    opmDiagInfoTable.setStatus("current")
_OpmDiagInfoEntry_Object = MibTableRow
opmDiagInfoEntry = _OpmDiagInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1)
)
opmDiagInfoEntry.setIndexNames(
    (0, "V1600D", "opmDiagInfoPonIndex"),
    (0, "V1600D", "opmDiagInfoOnuIndex"),
)
if mibBuilder.loadTexts:
    opmDiagInfoEntry.setStatus("current")
_OpmDiagInfoPonIndex_Type = Integer32
_OpmDiagInfoPonIndex_Object = MibTableColumn
opmDiagInfoPonIndex = _OpmDiagInfoPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 1),
    _OpmDiagInfoPonIndex_Type()
)
opmDiagInfoPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opmDiagInfoPonIndex.setStatus("current")
_OpmDiagInfoOnuIndex_Type = Integer32
_OpmDiagInfoOnuIndex_Object = MibTableColumn
opmDiagInfoOnuIndex = _OpmDiagInfoOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 2),
    _OpmDiagInfoOnuIndex_Type()
)
opmDiagInfoOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opmDiagInfoOnuIndex.setStatus("current")
_Temperature_Type = OctetString
_Temperature_Object = MibTableColumn
temperature = _Temperature_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 3),
    _Temperature_Type()
)
temperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    temperature.setStatus("current")
_SupplyVoltage_Type = OctetString
_SupplyVoltage_Object = MibTableColumn
supplyVoltage = _SupplyVoltage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 4),
    _SupplyVoltage_Type()
)
supplyVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    supplyVoltage.setStatus("current")
_TxBias_Type = OctetString
_TxBias_Object = MibTableColumn
txBias = _TxBias_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 5),
    _TxBias_Type()
)
txBias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    txBias.setStatus("current")
_TxPower_Type = OctetString
_TxPower_Object = MibTableColumn
txPower = _TxPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 6),
    _TxPower_Type()
)
txPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    txPower.setStatus("current")
_RxPower_Type = OctetString
_RxPower_Object = MibTableColumn
rxPower = _RxPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 8, 1, 7),
    _RxPower_Type()
)
rxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rxPower.setStatus("current")
_FecAbilityTable_Object = MibTable
fecAbilityTable = _FecAbilityTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 9)
)
if mibBuilder.loadTexts:
    fecAbilityTable.setStatus("current")
_FecAbilityEntry_Object = MibTableRow
fecAbilityEntry = _FecAbilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 9, 1)
)
fecAbilityEntry.setIndexNames(
    (0, "V1600D", "fecAbilityPonIndex"),
    (0, "V1600D", "fecAbilityOnuIndex"),
)
if mibBuilder.loadTexts:
    fecAbilityEntry.setStatus("current")
_FecAbilityPonIndex_Type = Integer32
_FecAbilityPonIndex_Object = MibTableColumn
fecAbilityPonIndex = _FecAbilityPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 9, 1, 1),
    _FecAbilityPonIndex_Type()
)
fecAbilityPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fecAbilityPonIndex.setStatus("current")
_FecAbilityOnuIndex_Type = Integer32
_FecAbilityOnuIndex_Object = MibTableColumn
fecAbilityOnuIndex = _FecAbilityOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 9, 1, 2),
    _FecAbilityOnuIndex_Type()
)
fecAbilityOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fecAbilityOnuIndex.setStatus("current")
_FecAbility_Type = OctetString
_FecAbility_Object = MibTableColumn
fecAbility = _FecAbility_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 9, 1, 3),
    _FecAbility_Type()
)
fecAbility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fecAbility.setStatus("current")


class _FecMode_Type(Integer32):
    """Custom type fecMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("Unknow", 1),
          ("Enable", 2),
          ("Disable", 3))
    )


_FecMode_Type.__name__ = "Integer32"
_FecMode_Object = MibTableColumn
fecMode = _FecMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 9, 1, 4),
    _FecMode_Type()
)
fecMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fecMode.setStatus("current")
_PowerSavingCapTable_Object = MibTable
powerSavingCapTable = _PowerSavingCapTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 10)
)
if mibBuilder.loadTexts:
    powerSavingCapTable.setStatus("current")
_PowerSavingCapEntry_Object = MibTableRow
powerSavingCapEntry = _PowerSavingCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 10, 1)
)
powerSavingCapEntry.setIndexNames(
    (0, "V1600D", "powerSavingCapPonIndex"),
    (0, "V1600D", "powerSavingCapOnuIndex"),
)
if mibBuilder.loadTexts:
    powerSavingCapEntry.setStatus("current")
_PowerSavingCapPonIndex_Type = Integer32
_PowerSavingCapPonIndex_Object = MibTableColumn
powerSavingCapPonIndex = _PowerSavingCapPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 10, 1, 1),
    _PowerSavingCapPonIndex_Type()
)
powerSavingCapPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSavingCapPonIndex.setStatus("current")
_PowerSavingCapOnuIndex_Type = Integer32
_PowerSavingCapOnuIndex_Object = MibTableColumn
powerSavingCapOnuIndex = _PowerSavingCapOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 10, 1, 2),
    _PowerSavingCapOnuIndex_Type()
)
powerSavingCapOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSavingCapOnuIndex.setStatus("current")
_Sleepmode_Type = OctetString
_Sleepmode_Object = MibTableColumn
sleepmode = _Sleepmode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 10, 1, 3),
    _Sleepmode_Type()
)
sleepmode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleepmode.setStatus("current")
_Earlywakeup_Type = OctetString
_Earlywakeup_Object = MibTableColumn
earlywakeup = _Earlywakeup_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 10, 1, 4),
    _Earlywakeup_Type()
)
earlywakeup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    earlywakeup.setStatus("current")
_OnuSnmpTable_Object = MibTable
onuSnmpTable = _OnuSnmpTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11)
)
if mibBuilder.loadTexts:
    onuSnmpTable.setStatus("current")
_OnuSnmpEntry_Object = MibTableRow
onuSnmpEntry = _OnuSnmpEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1)
)
onuSnmpEntry.setIndexNames(
    (0, "V1600D", "snmpPonNo"),
    (0, "V1600D", "snmpOnuNo"),
)
if mibBuilder.loadTexts:
    onuSnmpEntry.setStatus("current")
_SnmpPonNo_Type = Integer32
_SnmpPonNo_Object = MibTableColumn
snmpPonNo = _SnmpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 1),
    _SnmpPonNo_Type()
)
snmpPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpPonNo.setStatus("current")
_SnmpOnuNo_Type = Integer32
_SnmpOnuNo_Object = MibTableColumn
snmpOnuNo = _SnmpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 2),
    _SnmpOnuNo_Type()
)
snmpOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOnuNo.setStatus("current")


class _SnmpVer_Type(Integer32):
    """Custom type snmpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("SNMP_V1", 1),
          ("SNMP_V2", 2),
          ("SNMP_V3", 3))
    )


_SnmpVer_Type.__name__ = "Integer32"
_SnmpVer_Object = MibTableColumn
snmpVer = _SnmpVer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 3),
    _SnmpVer_Type()
)
snmpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpVer.setStatus("current")
_SnmpTrapIPaddr_Type = IpAddress
_SnmpTrapIPaddr_Object = MibTableColumn
snmpTrapIPaddr = _SnmpTrapIPaddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 4),
    _SnmpTrapIPaddr_Type()
)
snmpTrapIPaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapIPaddr.setStatus("current")
_SnmpTrapPort_Type = Integer32
_SnmpTrapPort_Object = MibTableColumn
snmpTrapPort = _SnmpTrapPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 5),
    _SnmpTrapPort_Type()
)
snmpTrapPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapPort.setStatus("current")
_SnmpPort_Type = Integer32
_SnmpPort_Object = MibTableColumn
snmpPort = _SnmpPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 6),
    _SnmpPort_Type()
)
snmpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpPort.setStatus("current")
_SnmpSecuritName_Type = OctetString
_SnmpSecuritName_Object = MibTableColumn
snmpSecuritName = _SnmpSecuritName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 7),
    _SnmpSecuritName_Type()
)
snmpSecuritName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpSecuritName.setStatus("current")
_SnmpCommunityRead_Type = OctetString
_SnmpCommunityRead_Object = MibTableColumn
snmpCommunityRead = _SnmpCommunityRead_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 8),
    _SnmpCommunityRead_Type()
)
snmpCommunityRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpCommunityRead.setStatus("current")
_SnmpCommunityWrite_Type = OctetString
_SnmpCommunityWrite_Object = MibTableColumn
snmpCommunityWrite = _SnmpCommunityWrite_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 11, 1, 9),
    _SnmpCommunityWrite_Type()
)
snmpCommunityWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpCommunityWrite.setStatus("current")
_OnuSlaTable_Object = MibTable
onuSlaTable = _OnuSlaTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12)
)
if mibBuilder.loadTexts:
    onuSlaTable.setStatus("current")
_OnuSlaEntry_Object = MibTableRow
onuSlaEntry = _OnuSlaEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1)
)
onuSlaEntry.setIndexNames(
    (0, "V1600D", "slaPonNo"),
    (0, "V1600D", "slaOnuNo"),
)
if mibBuilder.loadTexts:
    onuSlaEntry.setStatus("current")
_SlaPonNo_Type = Integer32
_SlaPonNo_Object = MibTableColumn
slaPonNo = _SlaPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 1),
    _SlaPonNo_Type()
)
slaPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaPonNo.setStatus("current")
_SlaOnuNo_Type = Integer32
_SlaOnuNo_Object = MibTableColumn
slaOnuNo = _SlaOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 2),
    _SlaOnuNo_Type()
)
slaOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaOnuNo.setStatus("current")


class _SlaOperActive_Type(Integer32):
    """Custom type slaOperActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Deactivate", 0),
          ("Active", 1))
    )


_SlaOperActive_Type.__name__ = "Integer32"
_SlaOperActive_Object = MibTableColumn
slaOperActive = _SlaOperActive_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 3),
    _SlaOperActive_Type()
)
slaOperActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaOperActive.setStatus("current")


class _SlaScheduleScheme_Type(Integer32):
    """Custom type slaScheduleScheme based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("SP", 0),
          ("WRR", 1),
          ("SP_WRR", 2))
    )


_SlaScheduleScheme_Type.__name__ = "Integer32"
_SlaScheduleScheme_Object = MibTableColumn
slaScheduleScheme = _SlaScheduleScheme_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 4),
    _SlaScheduleScheme_Type()
)
slaScheduleScheme.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaScheduleScheme.setStatus("current")
_SlaHPriorityBoundary_Type = Integer32
_SlaHPriorityBoundary_Object = MibTableColumn
slaHPriorityBoundary = _SlaHPriorityBoundary_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 5),
    _SlaHPriorityBoundary_Type()
)
slaHPriorityBoundary.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaHPriorityBoundary.setStatus("current")
_SlaCycleLen_Type = Integer32
_SlaCycleLen_Object = MibTableColumn
slaCycleLen = _SlaCycleLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 6),
    _SlaCycleLen_Type()
)
slaCycleLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaCycleLen.setStatus("current")
_SlaNumService_Type = Integer32
_SlaNumService_Object = MibTableColumn
slaNumService = _SlaNumService_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 7),
    _SlaNumService_Type()
)
slaNumService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaNumService.setStatus("current")
_SlaQueIdStr_Type = OctetString
_SlaQueIdStr_Object = MibTableColumn
slaQueIdStr = _SlaQueIdStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 8),
    _SlaQueIdStr_Type()
)
slaQueIdStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaQueIdStr.setStatus("current")
_SlaFixPacketSizeStr_Type = OctetString
_SlaFixPacketSizeStr_Object = MibTableColumn
slaFixPacketSizeStr = _SlaFixPacketSizeStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 9),
    _SlaFixPacketSizeStr_Type()
)
slaFixPacketSizeStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaFixPacketSizeStr.setStatus("current")
_SlaFixBandwidthStr_Type = OctetString
_SlaFixBandwidthStr_Object = MibTableColumn
slaFixBandwidthStr = _SlaFixBandwidthStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 10),
    _SlaFixBandwidthStr_Type()
)
slaFixBandwidthStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaFixBandwidthStr.setStatus("current")
_SlaGuarantBwStr_Type = OctetString
_SlaGuarantBwStr_Object = MibTableColumn
slaGuarantBwStr = _SlaGuarantBwStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 11),
    _SlaGuarantBwStr_Type()
)
slaGuarantBwStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaGuarantBwStr.setStatus("current")
_SlaBestEffortBWStr_Type = OctetString
_SlaBestEffortBWStr_Object = MibTableColumn
slaBestEffortBWStr = _SlaBestEffortBWStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 12),
    _SlaBestEffortBWStr_Type()
)
slaBestEffortBWStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaBestEffortBWStr.setStatus("current")
_SlaWrrWeightStr_Type = OctetString
_SlaWrrWeightStr_Object = MibTableColumn
slaWrrWeightStr = _SlaWrrWeightStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 12, 1, 13),
    _SlaWrrWeightStr_Type()
)
slaWrrWeightStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slaWrrWeightStr.setStatus("current")
_OnuOpmDiagTable_Object = MibTable
onuOpmDiagTable = _OnuOpmDiagTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13)
)
if mibBuilder.loadTexts:
    onuOpmDiagTable.setStatus("current")
_OnuOpmDiagEntry_Object = MibTableRow
onuOpmDiagEntry = _OnuOpmDiagEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1)
)
onuOpmDiagEntry.setIndexNames(
    (0, "V1600D", "onuOpmDiagPonId"),
    (0, "V1600D", "onuOpmDiageOnuId"),
)
if mibBuilder.loadTexts:
    onuOpmDiagEntry.setStatus("current")
_OnuOpmDiagPonId_Type = Integer32
_OnuOpmDiagPonId_Object = MibTableColumn
onuOpmDiagPonId = _OnuOpmDiagPonId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 1),
    _OnuOpmDiagPonId_Type()
)
onuOpmDiagPonId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiagPonId.setStatus("current")
_OnuOpmDiageOnuId_Type = Integer32
_OnuOpmDiageOnuId_Object = MibTableColumn
onuOpmDiageOnuId = _OnuOpmDiageOnuId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 2),
    _OnuOpmDiageOnuId_Type()
)
onuOpmDiageOnuId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiageOnuId.setStatus("current")
_OnuOpmDiagTemperatue_Type = OctetString
_OnuOpmDiagTemperatue_Object = MibTableColumn
onuOpmDiagTemperatue = _OnuOpmDiagTemperatue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 3),
    _OnuOpmDiagTemperatue_Type()
)
onuOpmDiagTemperatue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiagTemperatue.setStatus("current")
_OnuOpmDiagVoltage_Type = OctetString
_OnuOpmDiagVoltage_Object = MibTableColumn
onuOpmDiagVoltage = _OnuOpmDiagVoltage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 4),
    _OnuOpmDiagVoltage_Type()
)
onuOpmDiagVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiagVoltage.setStatus("current")
_OnuOpmDiagTxBias_Type = OctetString
_OnuOpmDiagTxBias_Object = MibTableColumn
onuOpmDiagTxBias = _OnuOpmDiagTxBias_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 5),
    _OnuOpmDiagTxBias_Type()
)
onuOpmDiagTxBias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiagTxBias.setStatus("current")
_OnuOpmDiagTxPower_Type = OctetString
_OnuOpmDiagTxPower_Object = MibTableColumn
onuOpmDiagTxPower = _OnuOpmDiagTxPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 6),
    _OnuOpmDiagTxPower_Type()
)
onuOpmDiagTxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiagTxPower.setStatus("current")
_OnuOpmDiagRxPower_Type = OctetString
_OnuOpmDiagRxPower_Object = MibTableColumn
onuOpmDiagRxPower = _OnuOpmDiagRxPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 13, 1, 7),
    _OnuOpmDiagRxPower_Type()
)
onuOpmDiagRxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuOpmDiagRxPower.setStatus("current")
_OnuOpmPowerTable_Object = MibTable
onuOpmPowerTable = _OnuOpmPowerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 14)
)
if mibBuilder.loadTexts:
    onuOpmPowerTable.setStatus("current")
_OnuOpmPowerEntry_Object = MibTableRow
onuOpmPowerEntry = _OnuOpmPowerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 14, 1)
)
onuOpmPowerEntry.setIndexNames(
    (0, "V1600D", "onuOpmPowerIndex"),
)
if mibBuilder.loadTexts:
    onuOpmPowerEntry.setStatus("current")
_OnuOpmPowerIndex_Type = Integer32
_OnuOpmPowerIndex_Object = MibTableColumn
onuOpmPowerIndex = _OnuOpmPowerIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 14, 1, 1),
    _OnuOpmPowerIndex_Type()
)
onuOpmPowerIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuOpmPowerIndex.setStatus("current")
_OnuOpmPowerName_Type = OctetString
_OnuOpmPowerName_Object = MibTableColumn
onuOpmPowerName = _OnuOpmPowerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 14, 1, 2),
    _OnuOpmPowerName_Type()
)
onuOpmPowerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuOpmPowerName.setStatus("current")
_OnuOpmPowerRx_Type = Integer32
_OnuOpmPowerRx_Object = MibTableColumn
onuOpmPowerRx = _OnuOpmPowerRx_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 14, 1, 3),
    _OnuOpmPowerRx_Type()
)
onuOpmPowerRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuOpmPowerRx.setStatus("current")
_OnuOpmPowerTx_Type = Integer32
_OnuOpmPowerTx_Object = MibTableColumn
onuOpmPowerTx = _OnuOpmPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 1, 14, 1, 4),
    _OnuOpmPowerTx_Type()
)
onuOpmPowerTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuOpmPowerTx.setStatus("current")
_OnuUpgrade_ObjectIdentity = ObjectIdentity
onuUpgrade = _OnuUpgrade_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2)
)
_TftpDownloadFile_ObjectIdentity = ObjectIdentity
tftpDownloadFile = _TftpDownloadFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 1)
)
_Filename_Type = OctetString
_Filename_Object = MibScalar
filename = _Filename_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 1, 1),
    _Filename_Type()
)
filename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filename.setStatus("current")
_TftpServer_Type = OctetString
_TftpServer_Object = MibScalar
tftpServer = _TftpServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 1, 2),
    _TftpServer_Type()
)
tftpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpServer.setStatus("current")


class _TftpAction_Type(Integer32):
    """Custom type tftpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_TftpAction_Type.__name__ = "Integer32"
_TftpAction_Object = MibScalar
tftpAction = _TftpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 1, 3),
    _TftpAction_Type()
)
tftpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tftpAction.setStatus("current")
_UpgradeLoadOnuImg_ObjectIdentity = ObjectIdentity
upgradeLoadOnuImg = _UpgradeLoadOnuImg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 2)
)
_FilenameSet_Type = OctetString
_FilenameSet_Object = MibScalar
filenameSet = _FilenameSet_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 2, 1),
    _FilenameSet_Type()
)
filenameSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    filenameSet.setStatus("current")


class _LoadAction_Type(Integer32):
    """Custom type loadAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("clean", 2))
    )


_LoadAction_Type.__name__ = "Integer32"
_LoadAction_Object = MibScalar
loadAction = _LoadAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 2, 2),
    _LoadAction_Type()
)
loadAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loadAction.setStatus("current")
_CtcUpgradeCfg_ObjectIdentity = ObjectIdentity
ctcUpgradeCfg = _CtcUpgradeCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 3)
)


class _UpgradePonNo_Type(Integer32):
    """Custom type upgradePonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UpgradePonNo_Type.__name__ = "Integer32"
_UpgradePonNo_Object = MibScalar
upgradePonNo = _UpgradePonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 3, 1),
    _UpgradePonNo_Type()
)
upgradePonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradePonNo.setStatus("current")


class _UpgradeOnuNo_Type(Integer32):
    """Custom type upgradeOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_UpgradeOnuNo_Type.__name__ = "Integer32"
_UpgradeOnuNo_Object = MibScalar
upgradeOnuNo = _UpgradeOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 3, 2),
    _UpgradeOnuNo_Type()
)
upgradeOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeOnuNo.setStatus("current")


class _CtcUpgrade_Type(Integer32):
    """Custom type ctcUpgrade based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("start", 1),
          ("commit", 2))
    )


_CtcUpgrade_Type.__name__ = "Integer32"
_CtcUpgrade_Object = MibScalar
ctcUpgrade = _CtcUpgrade_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 3, 3),
    _CtcUpgrade_Type()
)
ctcUpgrade.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUpgrade.setStatus("current")
_UpgradeOnuImage_ObjectIdentity = ObjectIdentity
upgradeOnuImage = _UpgradeOnuImage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 4)
)
_UpgradeImage_Type = OctetString
_UpgradeImage_Object = MibScalar
upgradeImage = _UpgradeImage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 4, 1),
    _UpgradeImage_Type()
)
upgradeImage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeImage.setStatus("current")
_UpgradeIp_Type = IpAddress
_UpgradeIp_Object = MibScalar
upgradeIp = _UpgradeIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 4, 2),
    _UpgradeIp_Type()
)
upgradeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeIp.setStatus("current")


class _UpgradeImageAction_Type(Integer32):
    """Custom type upgradeImageAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_UpgradeImageAction_Type.__name__ = "Integer32"
_UpgradeImageAction_Object = MibScalar
upgradeImageAction = _UpgradeImageAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 4, 3),
    _UpgradeImageAction_Type()
)
upgradeImageAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeImageAction.setStatus("current")
_UpgradeOnuSelect_ObjectIdentity = ObjectIdentity
upgradeOnuSelect = _UpgradeOnuSelect_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 5)
)


class _UpgradePon_Type(Integer32):
    """Custom type upgradePon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UpgradePon_Type.__name__ = "Integer32"
_UpgradePon_Object = MibScalar
upgradePon = _UpgradePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 5, 1),
    _UpgradePon_Type()
)
upgradePon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradePon.setStatus("current")
_UpgradeOnu_Type = OctetString
_UpgradeOnu_Object = MibScalar
upgradeOnu = _UpgradeOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 5, 2),
    _UpgradeOnu_Type()
)
upgradeOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeOnu.setStatus("current")


class _UpgradeSelectAction_Type(Integer32):
    """Custom type upgradeSelectAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_UpgradeSelectAction_Type.__name__ = "Integer32"
_UpgradeSelectAction_Object = MibScalar
upgradeSelectAction = _UpgradeSelectAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 5, 3),
    _UpgradeSelectAction_Type()
)
upgradeSelectAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeSelectAction.setStatus("current")
_UpgradeOnuSelectTable_Object = MibTable
upgradeOnuSelectTable = _UpgradeOnuSelectTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 6)
)
if mibBuilder.loadTexts:
    upgradeOnuSelectTable.setStatus("current")
_UpgradeOnuSelectEntry_Object = MibTableRow
upgradeOnuSelectEntry = _UpgradeOnuSelectEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 6, 1)
)
upgradeOnuSelectEntry.setIndexNames(
    (0, "V1600D", "upgradeOnuPonS"),
)
if mibBuilder.loadTexts:
    upgradeOnuSelectEntry.setStatus("current")


class _UpgradeOnuPonS_Type(Integer32):
    """Custom type upgradeOnuPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UpgradeOnuPonS_Type.__name__ = "Integer32"
_UpgradeOnuPonS_Object = MibTableColumn
upgradeOnuPonS = _UpgradeOnuPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 6, 1, 1),
    _UpgradeOnuPonS_Type()
)
upgradeOnuPonS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upgradeOnuPonS.setStatus("current")
_UpgradeOnuSelectS_Type = OctetString
_UpgradeOnuSelectS_Object = MibTableColumn
upgradeOnuSelectS = _UpgradeOnuSelectS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 6, 1, 2),
    _UpgradeOnuSelectS_Type()
)
upgradeOnuSelectS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upgradeOnuSelectS.setStatus("current")
_UpgreadOnuAction_ObjectIdentity = ObjectIdentity
upgreadOnuAction = _UpgreadOnuAction_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 7)
)


class _UpgreadAction_Type(Integer32):
    """Custom type upgreadAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("start", 1),
          ("stop", 2))
    )


_UpgreadAction_Type.__name__ = "Integer32"
_UpgreadAction_Object = MibScalar
upgreadAction = _UpgreadAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 7, 1),
    _UpgreadAction_Type()
)
upgreadAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgreadAction.setStatus("current")
_UpgradeOver_Type = Integer32
_UpgradeOver_Object = MibScalar
upgradeOver = _UpgradeOver_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 7, 2),
    _UpgradeOver_Type()
)
upgradeOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upgradeOver.setStatus("current")
_UpgradeOnuStatusTable_Object = MibTable
upgradeOnuStatusTable = _UpgradeOnuStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8)
)
if mibBuilder.loadTexts:
    upgradeOnuStatusTable.setStatus("current")
_UpgradeOnuStatusEntry_Object = MibTableRow
upgradeOnuStatusEntry = _UpgradeOnuStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8, 1)
)
upgradeOnuStatusEntry.setIndexNames(
    (0, "V1600D", "upgradeOnuStatusIndex"),
)
if mibBuilder.loadTexts:
    upgradeOnuStatusEntry.setStatus("current")
_UpgradeOnuStatusIndex_Type = Integer32
_UpgradeOnuStatusIndex_Object = MibTableColumn
upgradeOnuStatusIndex = _UpgradeOnuStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8, 1, 1),
    _UpgradeOnuStatusIndex_Type()
)
upgradeOnuStatusIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeOnuStatusIndex.setStatus("current")
_UpgreadeStatusPonS_Type = Integer32
_UpgreadeStatusPonS_Object = MibTableColumn
upgreadeStatusPonS = _UpgreadeStatusPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8, 1, 2),
    _UpgreadeStatusPonS_Type()
)
upgreadeStatusPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgreadeStatusPonS.setStatus("current")
_UpgradeOnuLlid_Type = Integer32
_UpgradeOnuLlid_Object = MibTableColumn
upgradeOnuLlid = _UpgradeOnuLlid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8, 1, 3),
    _UpgradeOnuLlid_Type()
)
upgradeOnuLlid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeOnuLlid.setStatus("current")
_UpgradeOnuStatusS_Type = OctetString
_UpgradeOnuStatusS_Object = MibTableColumn
upgradeOnuStatusS = _UpgradeOnuStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8, 1, 4),
    _UpgradeOnuStatusS_Type()
)
upgradeOnuStatusS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeOnuStatusS.setStatus("current")
_UpgradeOnuStatusProcess_Type = OctetString
_UpgradeOnuStatusProcess_Object = MibTableColumn
upgradeOnuStatusProcess = _UpgradeOnuStatusProcess_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 8, 1, 5),
    _UpgradeOnuStatusProcess_Type()
)
upgradeOnuStatusProcess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeOnuStatusProcess.setStatus("current")
_AutoUpgrade_ObjectIdentity = ObjectIdentity
autoUpgrade = _AutoUpgrade_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9)
)
_AutoUpgradeCreate_ObjectIdentity = ObjectIdentity
autoUpgradeCreate = _AutoUpgradeCreate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1)
)


class _AutoForceMode_Type(Integer32):
    """Custom type autoForceMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoForceMode_Type.__name__ = "Integer32"
_AutoForceMode_Object = MibScalar
autoForceMode = _AutoForceMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 1),
    _AutoForceMode_Type()
)
autoForceMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoForceMode.setStatus("current")


class _AutoVendorID_Type(OctetString):
    """Custom type autoVendorID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_AutoVendorID_Type.__name__ = "OctetString"
_AutoVendorID_Object = MibScalar
autoVendorID = _AutoVendorID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 2),
    _AutoVendorID_Type()
)
autoVendorID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoVendorID.setStatus("current")


class _AutoModelID_Type(OctetString):
    """Custom type autoModelID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_AutoModelID_Type.__name__ = "OctetString"
_AutoModelID_Object = MibScalar
autoModelID = _AutoModelID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 3),
    _AutoModelID_Type()
)
autoModelID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoModelID.setStatus("current")


class _AutoSoftwareVersion_Type(OctetString):
    """Custom type autoSoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_AutoSoftwareVersion_Type.__name__ = "OctetString"
_AutoSoftwareVersion_Object = MibScalar
autoSoftwareVersion = _AutoSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 4),
    _AutoSoftwareVersion_Type()
)
autoSoftwareVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoSoftwareVersion.setStatus("current")


class _AutoImageName_Type(OctetString):
    """Custom type autoImageName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_AutoImageName_Type.__name__ = "OctetString"
_AutoImageName_Object = MibScalar
autoImageName = _AutoImageName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 5),
    _AutoImageName_Type()
)
autoImageName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoImageName.setStatus("current")


class _AutoTftpServerIP_Type(OctetString):
    """Custom type autoTftpServerIP based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_AutoTftpServerIP_Type.__name__ = "OctetString"
_AutoTftpServerIP_Object = MibScalar
autoTftpServerIP = _AutoTftpServerIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 6),
    _AutoTftpServerIP_Type()
)
autoTftpServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoTftpServerIP.setStatus("current")


class _AutoCreateAction_Type(Integer32):
    """Custom type autoCreateAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_AutoCreateAction_Type.__name__ = "Integer32"
_AutoCreateAction_Object = MibScalar
autoCreateAction = _AutoCreateAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 1, 7),
    _AutoCreateAction_Type()
)
autoCreateAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoCreateAction.setStatus("current")
_AutoUpgradeDelete_ObjectIdentity = ObjectIdentity
autoUpgradeDelete = _AutoUpgradeDelete_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 2)
)


class _DeleteVendorID_Type(OctetString):
    """Custom type deleteVendorID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_DeleteVendorID_Type.__name__ = "OctetString"
_DeleteVendorID_Object = MibScalar
deleteVendorID = _DeleteVendorID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 2, 1),
    _DeleteVendorID_Type()
)
deleteVendorID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deleteVendorID.setStatus("current")


class _DeleteModelID_Type(OctetString):
    """Custom type deleteModelID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_DeleteModelID_Type.__name__ = "OctetString"
_DeleteModelID_Object = MibScalar
deleteModelID = _DeleteModelID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 2, 2),
    _DeleteModelID_Type()
)
deleteModelID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deleteModelID.setStatus("current")


class _AutoDeleteAction_Type(Integer32):
    """Custom type autoDeleteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("delete", 1)
    )


_AutoDeleteAction_Type.__name__ = "Integer32"
_AutoDeleteAction_Object = MibScalar
autoDeleteAction = _AutoDeleteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 2, 3),
    _AutoDeleteAction_Type()
)
autoDeleteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoDeleteAction.setStatus("current")
_AutoUpgradeTable_Object = MibTable
autoUpgradeTable = _AutoUpgradeTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3)
)
if mibBuilder.loadTexts:
    autoUpgradeTable.setStatus("current")
_AutoUpgradeEntry_Object = MibTableRow
autoUpgradeEntry = _AutoUpgradeEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1)
)
autoUpgradeEntry.setIndexNames(
    (0, "V1600D", "autoUpgradeIndex"),
)
if mibBuilder.loadTexts:
    autoUpgradeEntry.setStatus("current")


class _AutoUpgradeIndex_Type(Integer32):
    """Custom type autoUpgradeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_AutoUpgradeIndex_Type.__name__ = "Integer32"
_AutoUpgradeIndex_Object = MibTableColumn
autoUpgradeIndex = _AutoUpgradeIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 1),
    _AutoUpgradeIndex_Type()
)
autoUpgradeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoUpgradeIndex.setStatus("current")


class _AutoForceModeS_Type(Integer32):
    """Custom type autoForceModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AutoForceModeS_Type.__name__ = "Integer32"
_AutoForceModeS_Object = MibTableColumn
autoForceModeS = _AutoForceModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 2),
    _AutoForceModeS_Type()
)
autoForceModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoForceModeS.setStatus("current")


class _AutoVendorIDS_Type(OctetString):
    """Custom type autoVendorIDS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_AutoVendorIDS_Type.__name__ = "OctetString"
_AutoVendorIDS_Object = MibTableColumn
autoVendorIDS = _AutoVendorIDS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 3),
    _AutoVendorIDS_Type()
)
autoVendorIDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoVendorIDS.setStatus("current")


class _AutoModelIDS_Type(OctetString):
    """Custom type autoModelIDS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_AutoModelIDS_Type.__name__ = "OctetString"
_AutoModelIDS_Object = MibTableColumn
autoModelIDS = _AutoModelIDS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 4),
    _AutoModelIDS_Type()
)
autoModelIDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoModelIDS.setStatus("current")


class _AutoSoftwareVersionS_Type(OctetString):
    """Custom type autoSoftwareVersionS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_AutoSoftwareVersionS_Type.__name__ = "OctetString"
_AutoSoftwareVersionS_Object = MibTableColumn
autoSoftwareVersionS = _AutoSoftwareVersionS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 5),
    _AutoSoftwareVersionS_Type()
)
autoSoftwareVersionS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoSoftwareVersionS.setStatus("current")


class _AutoImageNameS_Type(OctetString):
    """Custom type autoImageNameS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_AutoImageNameS_Type.__name__ = "OctetString"
_AutoImageNameS_Object = MibTableColumn
autoImageNameS = _AutoImageNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 6),
    _AutoImageNameS_Type()
)
autoImageNameS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoImageNameS.setStatus("current")


class _AutoTftpServerIPS_Type(OctetString):
    """Custom type autoTftpServerIPS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_AutoTftpServerIPS_Type.__name__ = "OctetString"
_AutoTftpServerIPS_Object = MibTableColumn
autoTftpServerIPS = _AutoTftpServerIPS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 3, 1, 7),
    _AutoTftpServerIPS_Type()
)
autoTftpServerIPS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoTftpServerIPS.setStatus("current")
_AutoUpgradeStatus_Type = OctetString
_AutoUpgradeStatus_Object = MibScalar
autoUpgradeStatus = _AutoUpgradeStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 2, 9, 4),
    _AutoUpgradeStatus_Type()
)
autoUpgradeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoUpgradeStatus.setStatus("current")
_OnuManagementIp_ObjectIdentity = ObjectIdentity
onuManagementIp = _OnuManagementIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3)
)


class _MgmtIpPonNo_Type(Integer32):
    """Custom type mgmtIpPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MgmtIpPonNo_Type.__name__ = "Integer32"
_MgmtIpPonNo_Object = MibScalar
mgmtIpPonNo = _MgmtIpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 1),
    _MgmtIpPonNo_Type()
)
mgmtIpPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpPonNo.setStatus("current")


class _MgmtIpOnuNo_Type(Integer32):
    """Custom type mgmtIpOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MgmtIpOnuNo_Type.__name__ = "Integer32"
_MgmtIpOnuNo_Object = MibScalar
mgmtIpOnuNo = _MgmtIpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 2),
    _MgmtIpOnuNo_Type()
)
mgmtIpOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpOnuNo.setStatus("current")
_MgmtIp_Type = IpAddress
_MgmtIp_Object = MibScalar
mgmtIp = _MgmtIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 3),
    _MgmtIp_Type()
)
mgmtIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIp.setStatus("current")
_MgmtIpMask_Type = IpAddress
_MgmtIpMask_Object = MibScalar
mgmtIpMask = _MgmtIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 4),
    _MgmtIpMask_Type()
)
mgmtIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpMask.setStatus("current")
_MgmtIpGw_Type = IpAddress
_MgmtIpGw_Object = MibScalar
mgmtIpGw = _MgmtIpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 5),
    _MgmtIpGw_Type()
)
mgmtIpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpGw.setStatus("current")


class _MgmtIpCVlan_Type(Integer32):
    """Custom type mgmtIpCVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MgmtIpCVlan_Type.__name__ = "Integer32"
_MgmtIpCVlan_Object = MibScalar
mgmtIpCVlan = _MgmtIpCVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 6),
    _MgmtIpCVlan_Type()
)
mgmtIpCVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpCVlan.setStatus("current")


class _MgmtIpSVlan_Type(Integer32):
    """Custom type mgmtIpSVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MgmtIpSVlan_Type.__name__ = "Integer32"
_MgmtIpSVlan_Object = MibScalar
mgmtIpSVlan = _MgmtIpSVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 7),
    _MgmtIpSVlan_Type()
)
mgmtIpSVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpSVlan.setStatus("current")


class _MgmtIpPri_Type(Integer32):
    """Custom type mgmtIpPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MgmtIpPri_Type.__name__ = "Integer32"
_MgmtIpPri_Object = MibScalar
mgmtIpPri = _MgmtIpPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 8),
    _MgmtIpPri_Type()
)
mgmtIpPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIpPri.setStatus("current")


class _MgmtIPAction_Type(Integer32):
    """Custom type mgmtIPAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_MgmtIPAction_Type.__name__ = "Integer32"
_MgmtIPAction_Object = MibScalar
mgmtIPAction = _MgmtIPAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 9),
    _MgmtIPAction_Type()
)
mgmtIPAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgmtIPAction.setStatus("current")
_OnuManagementIpTable_Object = MibTable
onuManagementIpTable = _OnuManagementIpTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10)
)
if mibBuilder.loadTexts:
    onuManagementIpTable.setStatus("current")
_OnuManagementIpEntry_Object = MibTableRow
onuManagementIpEntry = _OnuManagementIpEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1)
)
onuManagementIpEntry.setIndexNames(
    (0, "V1600D", "mgmtIPPonNo"),
    (0, "V1600D", "mgmtIPOnuNo"),
)
if mibBuilder.loadTexts:
    onuManagementIpEntry.setStatus("current")


class _MgmtIPPonNo_Type(Integer32):
    """Custom type mgmtIPPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MgmtIPPonNo_Type.__name__ = "Integer32"
_MgmtIPPonNo_Object = MibTableColumn
mgmtIPPonNo = _MgmtIPPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 1),
    _MgmtIPPonNo_Type()
)
mgmtIPPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPPonNo.setStatus("current")


class _MgmtIPOnuNo_Type(Integer32):
    """Custom type mgmtIPOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MgmtIPOnuNo_Type.__name__ = "Integer32"
_MgmtIPOnuNo_Object = MibTableColumn
mgmtIPOnuNo = _MgmtIPOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 2),
    _MgmtIPOnuNo_Type()
)
mgmtIPOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPOnuNo.setStatus("current")
_MgmtIP_Type = IpAddress
_MgmtIP_Object = MibTableColumn
mgmtIP = _MgmtIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 3),
    _MgmtIP_Type()
)
mgmtIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIP.setStatus("current")
_MgmtIPMask_Type = IpAddress
_MgmtIPMask_Object = MibTableColumn
mgmtIPMask = _MgmtIPMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 4),
    _MgmtIPMask_Type()
)
mgmtIPMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPMask.setStatus("current")
_MgmtIPGw_Type = IpAddress
_MgmtIPGw_Object = MibTableColumn
mgmtIPGw = _MgmtIPGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 5),
    _MgmtIPGw_Type()
)
mgmtIPGw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPGw.setStatus("current")


class _MgmtIPCvlan_Type(Integer32):
    """Custom type mgmtIPCvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MgmtIPCvlan_Type.__name__ = "Integer32"
_MgmtIPCvlan_Object = MibTableColumn
mgmtIPCvlan = _MgmtIPCvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 6),
    _MgmtIPCvlan_Type()
)
mgmtIPCvlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPCvlan.setStatus("current")


class _MgmtIPSvlan_Type(Integer32):
    """Custom type mgmtIPSvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MgmtIPSvlan_Type.__name__ = "Integer32"
_MgmtIPSvlan_Object = MibTableColumn
mgmtIPSvlan = _MgmtIPSvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 7),
    _MgmtIPSvlan_Type()
)
mgmtIPSvlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPSvlan.setStatus("current")


class _MgmtIPPri_Type(Integer32):
    """Custom type mgmtIPPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MgmtIPPri_Type.__name__ = "Integer32"
_MgmtIPPri_Object = MibTableColumn
mgmtIPPri = _MgmtIPPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 3, 10, 1, 8),
    _MgmtIPPri_Type()
)
mgmtIPPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgmtIPPri.setStatus("current")
_OnuSnmpCfg_ObjectIdentity = ObjectIdentity
onuSnmpCfg = _OnuSnmpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4)
)


class _OnuSnmpPonNo_Type(Integer32):
    """Custom type onuSnmpPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuSnmpPonNo_Type.__name__ = "Integer32"
_OnuSnmpPonNo_Object = MibScalar
onuSnmpPonNo = _OnuSnmpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 1),
    _OnuSnmpPonNo_Type()
)
onuSnmpPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSnmpPonNo.setStatus("current")


class _OnuSnmpOnuNo_Type(Integer32):
    """Custom type onuSnmpOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuSnmpOnuNo_Type.__name__ = "Integer32"
_OnuSnmpOnuNo_Object = MibScalar
onuSnmpOnuNo = _OnuSnmpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 2),
    _OnuSnmpOnuNo_Type()
)
onuSnmpOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSnmpOnuNo.setStatus("current")
_OnuSnmpTrapHostIp_Type = IpAddress
_OnuSnmpTrapHostIp_Object = MibScalar
onuSnmpTrapHostIp = _OnuSnmpTrapHostIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 3),
    _OnuSnmpTrapHostIp_Type()
)
onuSnmpTrapHostIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSnmpTrapHostIp.setStatus("current")


class _OnuSnmpTrapUdpPort_Type(Integer32):
    """Custom type onuSnmpTrapUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSnmpTrapUdpPort_Type.__name__ = "Integer32"
_OnuSnmpTrapUdpPort_Object = MibScalar
onuSnmpTrapUdpPort = _OnuSnmpTrapUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 4),
    _OnuSnmpTrapUdpPort_Type()
)
onuSnmpTrapUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSnmpTrapUdpPort.setStatus("current")


class _OnuSnmpPort_Type(Integer32):
    """Custom type onuSnmpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSnmpPort_Type.__name__ = "Integer32"
_OnuSnmpPort_Object = MibScalar
onuSnmpPort = _OnuSnmpPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 5),
    _OnuSnmpPort_Type()
)
onuSnmpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSnmpPort.setStatus("current")
_OnuCommunityName_Type = OctetString
_OnuCommunityName_Object = MibScalar
onuCommunityName = _OnuCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 6),
    _OnuCommunityName_Type()
)
onuCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCommunityName.setStatus("current")
_OnuRoCommunityName_Type = OctetString
_OnuRoCommunityName_Object = MibScalar
onuRoCommunityName = _OnuRoCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 7),
    _OnuRoCommunityName_Type()
)
onuRoCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuRoCommunityName.setStatus("current")
_OnuRwCommunityName_Type = OctetString
_OnuRwCommunityName_Object = MibScalar
onuRwCommunityName = _OnuRwCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 8),
    _OnuRwCommunityName_Type()
)
onuRwCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuRwCommunityName.setStatus("current")


class _OnuCommunityAction_Type(Integer32):
    """Custom type onuCommunityAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_OnuCommunityAction_Type.__name__ = "Integer32"
_OnuCommunityAction_Object = MibScalar
onuCommunityAction = _OnuCommunityAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 4, 9),
    _OnuCommunityAction_Type()
)
onuCommunityAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCommunityAction.setStatus("current")
_OnuMultiLlid_ObjectIdentity = ObjectIdentity
onuMultiLlid = _OnuMultiLlid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 5)
)


class _LlidPonNo_Type(Integer32):
    """Custom type llidPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LlidPonNo_Type.__name__ = "Integer32"
_LlidPonNo_Object = MibScalar
llidPonNo = _LlidPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 5, 1),
    _LlidPonNo_Type()
)
llidPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    llidPonNo.setStatus("current")


class _LlidOnuNo_Type(Integer32):
    """Custom type llidOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LlidOnuNo_Type.__name__ = "Integer32"
_LlidOnuNo_Object = MibScalar
llidOnuNo = _LlidOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 5, 2),
    _LlidOnuNo_Type()
)
llidOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    llidOnuNo.setStatus("current")


class _LlidNo_Type(Integer32):
    """Custom type llidNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_LlidNo_Type.__name__ = "Integer32"
_LlidNo_Object = MibScalar
llidNo = _LlidNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 5, 3),
    _LlidNo_Type()
)
llidNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    llidNo.setStatus("current")
_OnuMainPonCfg_ObjectIdentity = ObjectIdentity
onuMainPonCfg = _OnuMainPonCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 6)
)


class _PonNumber_Type(Integer32):
    """Custom type ponNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonNumber_Type.__name__ = "Integer32"
_PonNumber_Object = MibScalar
ponNumber = _PonNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 6, 1),
    _PonNumber_Type()
)
ponNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponNumber.setStatus("current")


class _OnuNumber_Type(Integer32):
    """Custom type onuNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuNumber_Type.__name__ = "Integer32"
_OnuNumber_Object = MibScalar
onuNumber = _OnuNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 6, 2),
    _OnuNumber_Type()
)
onuNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuNumber.setStatus("current")


class _OnuMainPonNo_Type(Integer32):
    """Custom type onuMainPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_OnuMainPonNo_Type.__name__ = "Integer32"
_OnuMainPonNo_Object = MibScalar
onuMainPonNo = _OnuMainPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 6, 3),
    _OnuMainPonNo_Type()
)
onuMainPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMainPonNo.setStatus("current")
_OnuFecCfg_ObjectIdentity = ObjectIdentity
onuFecCfg = _OnuFecCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 7)
)


class _OnuFecPonNo_Type(Integer32):
    """Custom type onuFecPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuFecPonNo_Type.__name__ = "Integer32"
_OnuFecPonNo_Object = MibScalar
onuFecPonNo = _OnuFecPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 7, 1),
    _OnuFecPonNo_Type()
)
onuFecPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuFecPonNo.setStatus("current")


class _OnuFecOnuNo_Type(Integer32):
    """Custom type onuFecOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuFecOnuNo_Type.__name__ = "Integer32"
_OnuFecOnuNo_Object = MibScalar
onuFecOnuNo = _OnuFecOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 7, 2),
    _OnuFecOnuNo_Type()
)
onuFecOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuFecOnuNo.setStatus("current")


class _OnuFecEn_Type(Integer32):
    """Custom type onuFecEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuFecEn_Type.__name__ = "Integer32"
_OnuFecEn_Object = MibScalar
onuFecEn = _OnuFecEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 7, 3),
    _OnuFecEn_Type()
)
onuFecEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuFecEn.setStatus("current")
_OnuHoldoverCfg_ObjectIdentity = ObjectIdentity
onuHoldoverCfg = _OnuHoldoverCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 8)
)


class _HoldoverPonNo_Type(Integer32):
    """Custom type holdoverPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_HoldoverPonNo_Type.__name__ = "Integer32"
_HoldoverPonNo_Object = MibScalar
holdoverPonNo = _HoldoverPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 8, 1),
    _HoldoverPonNo_Type()
)
holdoverPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    holdoverPonNo.setStatus("current")


class _HoldoverOnuNo_Type(Integer32):
    """Custom type holdoverOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HoldoverOnuNo_Type.__name__ = "Integer32"
_HoldoverOnuNo_Object = MibScalar
holdoverOnuNo = _HoldoverOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 8, 2),
    _HoldoverOnuNo_Type()
)
holdoverOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    holdoverOnuNo.setStatus("current")


class _Holdover_Type(Integer32):
    """Custom type holdover based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Holdover_Type.__name__ = "Integer32"
_Holdover_Object = MibScalar
holdover = _Holdover_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 8, 3),
    _Holdover_Type()
)
holdover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    holdover.setStatus("current")
_OnuSlaCfg_ObjectIdentity = ObjectIdentity
onuSlaCfg = _OnuSlaCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9)
)


class _OnuSlaPonNo_Type(Integer32):
    """Custom type onuSlaPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuSlaPonNo_Type.__name__ = "Integer32"
_OnuSlaPonNo_Object = MibScalar
onuSlaPonNo = _OnuSlaPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 1),
    _OnuSlaPonNo_Type()
)
onuSlaPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSlaPonNo.setStatus("current")


class _OnuSlaOnuNo_Type(Integer32):
    """Custom type onuSlaOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuSlaOnuNo_Type.__name__ = "Integer32"
_OnuSlaOnuNo_Object = MibScalar
onuSlaOnuNo = _OnuSlaOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 2),
    _OnuSlaOnuNo_Type()
)
onuSlaOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSlaOnuNo.setStatus("current")


class _OnuSlaEn_Type(Integer32):
    """Custom type onuSlaEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuSlaEn_Type.__name__ = "Integer32"
_OnuSlaEn_Object = MibScalar
onuSlaEn = _OnuSlaEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 3),
    _OnuSlaEn_Type()
)
onuSlaEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSlaEn.setStatus("current")


class _OnuSlaMode_Type(Integer32):
    """Custom type onuSlaMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("sp_basic", 1),
          ("wrr", 2),
          ("sp_wrr", 3))
    )


_OnuSlaMode_Type.__name__ = "Integer32"
_OnuSlaMode_Object = MibScalar
onuSlaMode = _OnuSlaMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 4),
    _OnuSlaMode_Type()
)
onuSlaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuSlaMode.setStatus("current")


class _HighPriBoundary_Type(Integer32):
    """Custom type highPriBoundary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HighPriBoundary_Type.__name__ = "Integer32"
_HighPriBoundary_Object = MibScalar
highPriBoundary = _HighPriBoundary_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 5),
    _HighPriBoundary_Type()
)
highPriBoundary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    highPriBoundary.setStatus("current")
_CycleLength_Type = Integer32
_CycleLength_Object = MibScalar
cycleLength = _CycleLength_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 6),
    _CycleLength_Type()
)
cycleLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cycleLength.setStatus("current")


class _NumServices_Type(Integer32):
    """Custom type numServices based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_NumServices_Type.__name__ = "Integer32"
_NumServices_Object = MibScalar
numServices = _NumServices_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 7),
    _NumServices_Type()
)
numServices.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    numServices.setStatus("current")
_QueueIdListStr_Type = OctetString
_QueueIdListStr_Object = MibScalar
queueIdListStr = _QueueIdListStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 8),
    _QueueIdListStr_Type()
)
queueIdListStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queueIdListStr.setStatus("current")
_FixPacketSizeListStr_Type = OctetString
_FixPacketSizeListStr_Object = MibScalar
fixPacketSizeListStr = _FixPacketSizeListStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 9),
    _FixPacketSizeListStr_Type()
)
fixPacketSizeListStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fixPacketSizeListStr.setStatus("current")
_QueweightListStr_Type = OctetString
_QueweightListStr_Object = MibScalar
queweightListStr = _QueweightListStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 10),
    _QueweightListStr_Type()
)
queweightListStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queweightListStr.setStatus("current")
_FixBandwidthListStr_Type = OctetString
_FixBandwidthListStr_Object = MibScalar
fixBandwidthListStr = _FixBandwidthListStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 11),
    _FixBandwidthListStr_Type()
)
fixBandwidthListStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fixBandwidthListStr.setStatus("current")
_GuaranteedBandwidthListStr_Type = OctetString
_GuaranteedBandwidthListStr_Object = MibScalar
guaranteedBandwidthListStr = _GuaranteedBandwidthListStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 12),
    _GuaranteedBandwidthListStr_Type()
)
guaranteedBandwidthListStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    guaranteedBandwidthListStr.setStatus("current")
_BesteffortBandwithListStr_Type = OctetString
_BesteffortBandwithListStr_Object = MibScalar
besteffortBandwithListStr = _BesteffortBandwithListStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 13),
    _BesteffortBandwithListStr_Type()
)
besteffortBandwithListStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    besteffortBandwithListStr.setStatus("current")


class _SlaAction_Type(Integer32):
    """Custom type slaAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_SlaAction_Type.__name__ = "Integer32"
_SlaAction_Object = MibScalar
slaAction = _SlaAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 9, 56),
    _SlaAction_Type()
)
slaAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slaAction.setStatus("current")
_OnuIgmpCfg_ObjectIdentity = ObjectIdentity
onuIgmpCfg = _OnuIgmpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10)
)
_IgmpMode_ObjectIdentity = ObjectIdentity
igmpMode = _IgmpMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 1)
)


class _IgmpModePonNo_Type(Integer32):
    """Custom type igmpModePonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_IgmpModePonNo_Type.__name__ = "Integer32"
_IgmpModePonNo_Object = MibScalar
igmpModePonNo = _IgmpModePonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 1, 1),
    _IgmpModePonNo_Type()
)
igmpModePonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpModePonNo.setStatus("current")


class _IgmpModeOnuNo_Type(Integer32):
    """Custom type igmpModeOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IgmpModeOnuNo_Type.__name__ = "Integer32"
_IgmpModeOnuNo_Object = MibScalar
igmpModeOnuNo = _IgmpModeOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 1, 2),
    _IgmpModeOnuNo_Type()
)
igmpModeOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpModeOnuNo.setStatus("current")


class _OnuIgmpMode_Type(Integer32):
    """Custom type onuIgmpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snooping", 1),
          ("control", 2))
    )


_OnuIgmpMode_Type.__name__ = "Integer32"
_OnuIgmpMode_Object = MibScalar
onuIgmpMode = _OnuIgmpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 1, 3),
    _OnuIgmpMode_Type()
)
onuIgmpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuIgmpMode.setStatus("current")
_IgmpFastLeave_ObjectIdentity = ObjectIdentity
igmpFastLeave = _IgmpFastLeave_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 2)
)


class _IgmpFastPonNo_Type(Integer32):
    """Custom type igmpFastPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_IgmpFastPonNo_Type.__name__ = "Integer32"
_IgmpFastPonNo_Object = MibScalar
igmpFastPonNo = _IgmpFastPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 2, 1),
    _IgmpFastPonNo_Type()
)
igmpFastPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpFastPonNo.setStatus("current")


class _IgmpFastOnuNo_Type(Integer32):
    """Custom type igmpFastOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IgmpFastOnuNo_Type.__name__ = "Integer32"
_IgmpFastOnuNo_Object = MibScalar
igmpFastOnuNo = _IgmpFastOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 2, 2),
    _IgmpFastOnuNo_Type()
)
igmpFastOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpFastOnuNo.setStatus("current")


class _OnuIgmpFastLeave_Type(Integer32):
    """Custom type onuIgmpFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Disable", 1),
          ("Enable", 2))
    )


_OnuIgmpFastLeave_Type.__name__ = "Integer32"
_OnuIgmpFastLeave_Object = MibScalar
onuIgmpFastLeave = _OnuIgmpFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 2, 3),
    _OnuIgmpFastLeave_Type()
)
onuIgmpFastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuIgmpFastLeave.setStatus("current")
_IgmpCfgTable_Object = MibTable
igmpCfgTable = _IgmpCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 3)
)
if mibBuilder.loadTexts:
    igmpCfgTable.setStatus("current")
_IgmpCfgEntry_Object = MibTableRow
igmpCfgEntry = _IgmpCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 3, 1)
)
igmpCfgEntry.setIndexNames(
    (0, "V1600D", "igmpCfgPonNo"),
    (0, "V1600D", "igmpCfgOnuNo"),
)
if mibBuilder.loadTexts:
    igmpCfgEntry.setStatus("current")
_IgmpCfgPonNo_Type = Integer32
_IgmpCfgPonNo_Object = MibTableColumn
igmpCfgPonNo = _IgmpCfgPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 3, 1, 1),
    _IgmpCfgPonNo_Type()
)
igmpCfgPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpCfgPonNo.setStatus("current")
_IgmpCfgOnuNo_Type = Integer32
_IgmpCfgOnuNo_Object = MibTableColumn
igmpCfgOnuNo = _IgmpCfgOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 3, 1, 2),
    _IgmpCfgOnuNo_Type()
)
igmpCfgOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpCfgOnuNo.setStatus("current")


class _IgmpCfgMode_Type(Integer32):
    """Custom type igmpCfgMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Snooping", 1),
          ("CTC", 2))
    )


_IgmpCfgMode_Type.__name__ = "Integer32"
_IgmpCfgMode_Object = MibTableColumn
igmpCfgMode = _IgmpCfgMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 3, 1, 3),
    _IgmpCfgMode_Type()
)
igmpCfgMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpCfgMode.setStatus("current")


class _IgmpCfgFastLeave_Type(Integer32):
    """Custom type igmpCfgFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 1),
          ("Disable", 2))
    )


_IgmpCfgFastLeave_Type.__name__ = "Integer32"
_IgmpCfgFastLeave_Object = MibTableColumn
igmpCfgFastLeave = _IgmpCfgFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 10, 3, 1, 4),
    _IgmpCfgFastLeave_Type()
)
igmpCfgFastLeave.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpCfgFastLeave.setStatus("current")
_OnuReset_ObjectIdentity = ObjectIdentity
onuReset = _OnuReset_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 11)
)


class _OnuResetPonNo_Type(Integer32):
    """Custom type onuResetPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuResetPonNo_Type.__name__ = "Integer32"
_OnuResetPonNo_Object = MibScalar
onuResetPonNo = _OnuResetPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 11, 1),
    _OnuResetPonNo_Type()
)
onuResetPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuResetPonNo.setStatus("current")


class _OnuResetOnuNo_Type(Integer32):
    """Custom type onuResetOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuResetOnuNo_Type.__name__ = "Integer32"
_OnuResetOnuNo_Object = MibScalar
onuResetOnuNo = _OnuResetOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 11, 2),
    _OnuResetOnuNo_Type()
)
onuResetOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuResetOnuNo.setStatus("current")


class _OnuResetAction_Type(Integer32):
    """Custom type onuResetAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_OnuResetAction_Type.__name__ = "Integer32"
_OnuResetAction_Object = MibScalar
onuResetAction = _OnuResetAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 11, 3),
    _OnuResetAction_Type()
)
onuResetAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuResetAction.setStatus("current")
_OnuPowerSavingCfg_ObjectIdentity = ObjectIdentity
onuPowerSavingCfg = _OnuPowerSavingCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 12)
)


class _OnuPowerSavPonNo_Type(Integer32):
    """Custom type onuPowerSavPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuPowerSavPonNo_Type.__name__ = "Integer32"
_OnuPowerSavPonNo_Object = MibScalar
onuPowerSavPonNo = _OnuPowerSavPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 12, 1),
    _OnuPowerSavPonNo_Type()
)
onuPowerSavPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPowerSavPonNo.setStatus("current")


class _OnuPowerSavOnuNo_Type(Integer32):
    """Custom type onuPowerSavOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPowerSavOnuNo_Type.__name__ = "Integer32"
_OnuPowerSavOnuNo_Object = MibScalar
onuPowerSavOnuNo = _OnuPowerSavOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 12, 2),
    _OnuPowerSavOnuNo_Type()
)
onuPowerSavOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPowerSavOnuNo.setStatus("current")


class _EarlyWakeupEn_Type(Integer32):
    """Custom type earlyWakeupEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_EarlyWakeupEn_Type.__name__ = "Integer32"
_EarlyWakeupEn_Object = MibScalar
earlyWakeupEn = _EarlyWakeupEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 12, 3),
    _EarlyWakeupEn_Type()
)
earlyWakeupEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    earlyWakeupEn.setStatus("current")


class _SleepDurationMax_Type(Integer32):
    """Custom type sleepDurationMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleepDurationMax_Type.__name__ = "Integer32"
_SleepDurationMax_Object = MibScalar
sleepDurationMax = _SleepDurationMax_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 12, 4),
    _SleepDurationMax_Type()
)
sleepDurationMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleepDurationMax.setStatus("current")


class _PowerSavAction_Type(Integer32):
    """Custom type powerSavAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PowerSavAction_Type.__name__ = "Integer32"
_PowerSavAction_Object = MibScalar
powerSavAction = _PowerSavAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 12, 5),
    _PowerSavAction_Type()
)
powerSavAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSavAction.setStatus("current")
_OnuPowerSavParameter_ObjectIdentity = ObjectIdentity
onuPowerSavParameter = _OnuPowerSavParameter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13)
)


class _OnuPwSavPonNo_Type(Integer32):
    """Custom type onuPwSavPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuPwSavPonNo_Type.__name__ = "Integer32"
_OnuPwSavPonNo_Object = MibScalar
onuPwSavPonNo = _OnuPwSavPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 1),
    _OnuPwSavPonNo_Type()
)
onuPwSavPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPwSavPonNo.setStatus("current")


class _OnuPwSavOnuNo_Type(Integer32):
    """Custom type onuPwSavOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPwSavOnuNo_Type.__name__ = "Integer32"
_OnuPwSavOnuNo_Object = MibScalar
onuPwSavOnuNo = _OnuPwSavOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 2),
    _OnuPwSavOnuNo_Type()
)
onuPwSavOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPwSavOnuNo.setStatus("current")


class _SleepDuration_Type(Integer32):
    """Custom type sleepDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SleepDuration_Type.__name__ = "Integer32"
_SleepDuration_Object = MibScalar
sleepDuration = _SleepDuration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 3),
    _SleepDuration_Type()
)
sleepDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleepDuration.setStatus("current")


class _WakeDuration_Type(Integer32):
    """Custom type wakeDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WakeDuration_Type.__name__ = "Integer32"
_WakeDuration_Object = MibScalar
wakeDuration = _WakeDuration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 4),
    _WakeDuration_Type()
)
wakeDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wakeDuration.setStatus("current")


class _SleepFlag_Type(Integer32):
    """Custom type sleepFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2),
          ("change", 3))
    )


_SleepFlag_Type.__name__ = "Integer32"
_SleepFlag_Object = MibScalar
sleepFlag = _SleepFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 5),
    _SleepFlag_Type()
)
sleepFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleepFlag.setStatus("current")


class _SleepMode_Type(Integer32):
    """Custom type sleepMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("txSleepOnly", 2),
          ("txAndRxSleep", 3))
    )


_SleepMode_Type.__name__ = "Integer32"
_SleepMode_Object = MibScalar
sleepMode = _SleepMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 6),
    _SleepMode_Type()
)
sleepMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sleepMode.setStatus("current")


class _OnuPwSaveAction_Type(Integer32):
    """Custom type onuPwSaveAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_OnuPwSaveAction_Type.__name__ = "Integer32"
_OnuPwSaveAction_Object = MibScalar
onuPwSaveAction = _OnuPwSaveAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 13, 7),
    _OnuPwSaveAction_Type()
)
onuPwSaveAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPwSaveAction.setStatus("current")
_OnuPonProtectCfg_ObjectIdentity = ObjectIdentity
onuPonProtectCfg = _OnuPonProtectCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14)
)


class _PonProtectPonNo_Type(Integer32):
    """Custom type ponProtectPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PonProtectPonNo_Type.__name__ = "Integer32"
_PonProtectPonNo_Object = MibScalar
ponProtectPonNo = _PonProtectPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 1),
    _PonProtectPonNo_Type()
)
ponProtectPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponProtectPonNo.setStatus("current")


class _PonProtectOnuNo_Type(Integer32):
    """Custom type ponProtectOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PonProtectOnuNo_Type.__name__ = "Integer32"
_PonProtectOnuNo_Object = MibScalar
ponProtectOnuNo = _PonProtectOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 2),
    _PonProtectOnuNo_Type()
)
ponProtectOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponProtectOnuNo.setStatus("current")


class _LosOptical_Type(Integer32):
    """Custom type losOptical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LosOptical_Type.__name__ = "Integer32"
_LosOptical_Object = MibScalar
losOptical = _LosOptical_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 3),
    _LosOptical_Type()
)
losOptical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    losOptical.setStatus("current")


class _LosMpcp_Type(Integer32):
    """Custom type losMpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LosMpcp_Type.__name__ = "Integer32"
_LosMpcp_Object = MibScalar
losMpcp = _LosMpcp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 4),
    _LosMpcp_Type()
)
losMpcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    losMpcp.setStatus("current")


class _PonProtectAction_Type(Integer32):
    """Custom type ponProtectAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PonProtectAction_Type.__name__ = "Integer32"
_PonProtectAction_Object = MibScalar
ponProtectAction = _PonProtectAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 5),
    _PonProtectAction_Type()
)
ponProtectAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponProtectAction.setStatus("current")
_OnuPonProtectTable_Object = MibTable
onuPonProtectTable = _OnuPonProtectTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 6)
)
if mibBuilder.loadTexts:
    onuPonProtectTable.setStatus("current")
_OnuPonProtectEntry_Object = MibTableRow
onuPonProtectEntry = _OnuPonProtectEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 6, 1)
)
onuPonProtectEntry.setIndexNames(
    (0, "V1600D", "protectPonNo"),
    (0, "V1600D", "protectPonOnuNo"),
)
if mibBuilder.loadTexts:
    onuPonProtectEntry.setStatus("current")
_ProtectPonNo_Type = Integer32
_ProtectPonNo_Object = MibTableColumn
protectPonNo = _ProtectPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 6, 1, 1),
    _ProtectPonNo_Type()
)
protectPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectPonNo.setStatus("current")
_ProtectPonOnuNo_Type = Integer32
_ProtectPonOnuNo_Object = MibTableColumn
protectPonOnuNo = _ProtectPonOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 6, 1, 2),
    _ProtectPonOnuNo_Type()
)
protectPonOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectPonOnuNo.setStatus("current")
_ProtectLostOptical_Type = Integer32
_ProtectLostOptical_Object = MibTableColumn
protectLostOptical = _ProtectLostOptical_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 6, 1, 3),
    _ProtectLostOptical_Type()
)
protectLostOptical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectLostOptical.setStatus("current")
_ProtectLostMpcp_Type = Integer32
_ProtectLostMpcp_Object = MibTableColumn
protectLostMpcp = _ProtectLostMpcp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 14, 6, 1, 4),
    _ProtectLostMpcp_Type()
)
protectLostMpcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectLostMpcp.setStatus("current")
_OnuPonPowerOnOff_ObjectIdentity = ObjectIdentity
onuPonPowerOnOff = _OnuPonPowerOnOff_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15)
)


class _OnOffPonNo_Type(Integer32):
    """Custom type onOffPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnOffPonNo_Type.__name__ = "Integer32"
_OnOffPonNo_Object = MibScalar
onOffPonNo = _OnOffPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15, 1),
    _OnOffPonNo_Type()
)
onOffPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onOffPonNo.setStatus("current")


class _OnOffOnuNo_Type(Integer32):
    """Custom type onOffOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnOffOnuNo_Type.__name__ = "Integer32"
_OnOffOnuNo_Object = MibScalar
onOffOnuNo = _OnOffOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15, 2),
    _OnOffOnuNo_Type()
)
onOffOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onOffOnuNo.setStatus("current")


class _LaserAction_Type(Integer32):
    """Custom type laserAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LaserAction_Type.__name__ = "Integer32"
_LaserAction_Object = MibScalar
laserAction = _LaserAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15, 3),
    _LaserAction_Type()
)
laserAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    laserAction.setStatus("current")
_PonMac_Type = OctetString
_PonMac_Object = MibScalar
ponMac = _PonMac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15, 4),
    _PonMac_Type()
)
ponMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponMac.setStatus("current")


class _Transmitter_Type(Integer32):
    """Custom type transmitter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("major", 1),
          ("standby", 2),
          ("both", 3))
    )


_Transmitter_Type.__name__ = "Integer32"
_Transmitter_Object = MibScalar
transmitter = _Transmitter_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15, 5),
    _Transmitter_Type()
)
transmitter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    transmitter.setStatus("current")


class _OnOffAction_Type(Integer32):
    """Custom type onOffAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_OnOffAction_Type.__name__ = "Integer32"
_OnOffAction_Object = MibScalar
onOffAction = _OnOffAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 15, 6),
    _OnOffAction_Type()
)
onOffAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onOffAction.setStatus("current")
_OnuMacAgingTime_ObjectIdentity = ObjectIdentity
onuMacAgingTime = _OnuMacAgingTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 16)
)


class _AgingTimePonNo_Type(Integer32):
    """Custom type agingTimePonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_AgingTimePonNo_Type.__name__ = "Integer32"
_AgingTimePonNo_Object = MibScalar
agingTimePonNo = _AgingTimePonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 16, 1),
    _AgingTimePonNo_Type()
)
agingTimePonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    agingTimePonNo.setStatus("current")


class _AgingTimeOnuNo_Type(Integer32):
    """Custom type agingTimeOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AgingTimeOnuNo_Type.__name__ = "Integer32"
_AgingTimeOnuNo_Object = MibScalar
agingTimeOnuNo = _AgingTimeOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 16, 2),
    _AgingTimeOnuNo_Type()
)
agingTimeOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    agingTimeOnuNo.setStatus("current")


class _MacAgetime_Type(Integer32):
    """Custom type macAgetime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MacAgetime_Type.__name__ = "Integer32"
_MacAgetime_Object = MibScalar
macAgetime = _MacAgetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 16, 3),
    _MacAgetime_Type()
)
macAgetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macAgetime.setStatus("current")
_OnuInfoTable_Object = MibTable
onuInfoTable = _OnuInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17)
)
if mibBuilder.loadTexts:
    onuInfoTable.setStatus("current")
_OnuInfoEntry_Object = MibTableRow
onuInfoEntry = _OnuInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17, 1)
)
onuInfoEntry.setIndexNames(
    (0, "V1600D", "onuInfoPonNo"),
    (0, "V1600D", "onuInfoOnuNo"),
)
if mibBuilder.loadTexts:
    onuInfoEntry.setStatus("current")
_OnuInfoPonNo_Type = Integer32
_OnuInfoPonNo_Object = MibTableColumn
onuInfoPonNo = _OnuInfoPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17, 1, 1),
    _OnuInfoPonNo_Type()
)
onuInfoPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuInfoPonNo.setStatus("current")
_OnuInfoOnuNo_Type = Integer32
_OnuInfoOnuNo_Object = MibTableColumn
onuInfoOnuNo = _OnuInfoOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17, 1, 2),
    _OnuInfoOnuNo_Type()
)
onuInfoOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuInfoOnuNo.setStatus("current")
_OnuInfoMacAgingTime_Type = Integer32
_OnuInfoMacAgingTime_Object = MibTableColumn
onuInfoMacAgingTime = _OnuInfoMacAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17, 1, 3),
    _OnuInfoMacAgingTime_Type()
)
onuInfoMacAgingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuInfoMacAgingTime.setStatus("current")
_OnuInfoHoldOver_Type = Integer32
_OnuInfoHoldOver_Object = MibTableColumn
onuInfoHoldOver = _OnuInfoHoldOver_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17, 1, 4),
    _OnuInfoHoldOver_Type()
)
onuInfoHoldOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuInfoHoldOver.setStatus("current")
_OnuInfoMainPon_Type = Integer32
_OnuInfoMainPon_Object = MibTableColumn
onuInfoMainPon = _OnuInfoMainPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 17, 1, 5),
    _OnuInfoMainPon_Type()
)
onuInfoMainPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuInfoMainPon.setStatus("current")
_PowerSavingTable_Object = MibTable
powerSavingTable = _PowerSavingTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 18)
)
if mibBuilder.loadTexts:
    powerSavingTable.setStatus("current")
_PowerSavingEntry_Object = MibTableRow
powerSavingEntry = _PowerSavingEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 18, 1)
)
powerSavingEntry.setIndexNames(
    (0, "V1600D", "pSPonNo"),
    (0, "V1600D", "pSOnuNo"),
)
if mibBuilder.loadTexts:
    powerSavingEntry.setStatus("current")
_PSPonNo_Type = Integer32
_PSPonNo_Object = MibTableColumn
pSPonNo = _PSPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 18, 1, 1),
    _PSPonNo_Type()
)
pSPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSPonNo.setStatus("current")
_PSOnuNo_Type = Integer32
_PSOnuNo_Object = MibTableColumn
pSOnuNo = _PSOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 18, 1, 2),
    _PSOnuNo_Type()
)
pSOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSOnuNo.setStatus("current")


class _PSEarlyWakeupEn_Type(Integer32):
    """Custom type pSEarlyWakeupEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enableWakeUp", 0),
          ("disableWakeUp", 1))
    )


_PSEarlyWakeupEn_Type.__name__ = "Integer32"
_PSEarlyWakeupEn_Object = MibTableColumn
pSEarlyWakeupEn = _PSEarlyWakeupEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 18, 1, 3),
    _PSEarlyWakeupEn_Type()
)
pSEarlyWakeupEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSEarlyWakeupEn.setStatus("current")


class _PSSleepDurationMax_Type(Integer32):
    """Custom type pSSleepDurationMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("enableWakeUp", 0),
          ("disableWakeUp", 1))
    )


_PSSleepDurationMax_Type.__name__ = "Integer32"
_PSSleepDurationMax_Object = MibTableColumn
pSSleepDurationMax = _PSSleepDurationMax_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 18, 1, 4),
    _PSSleepDurationMax_Type()
)
pSSleepDurationMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSSleepDurationMax.setStatus("current")
_OnuSleepControlTable_Object = MibTable
onuSleepControlTable = _OnuSleepControlTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19)
)
if mibBuilder.loadTexts:
    onuSleepControlTable.setStatus("current")
_OnuSleepControlEntry_Object = MibTableRow
onuSleepControlEntry = _OnuSleepControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1)
)
onuSleepControlEntry.setIndexNames(
    (0, "V1600D", "sleepCtlPonNo"),
    (0, "V1600D", "sleepCtlOnuNo"),
)
if mibBuilder.loadTexts:
    onuSleepControlEntry.setStatus("current")
_SleepCtlPonNo_Type = Integer32
_SleepCtlPonNo_Object = MibTableColumn
sleepCtlPonNo = _SleepCtlPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1, 1),
    _SleepCtlPonNo_Type()
)
sleepCtlPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleepCtlPonNo.setStatus("current")
_SleepCtlOnuNo_Type = Integer32
_SleepCtlOnuNo_Object = MibTableColumn
sleepCtlOnuNo = _SleepCtlOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1, 2),
    _SleepCtlOnuNo_Type()
)
sleepCtlOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sleepCtlOnuNo.setStatus("current")
_ScSleepDuration_Type = Integer32
_ScSleepDuration_Object = MibTableColumn
scSleepDuration = _ScSleepDuration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1, 3),
    _ScSleepDuration_Type()
)
scSleepDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scSleepDuration.setStatus("current")
_ScWakeDuration_Type = Integer32
_ScWakeDuration_Object = MibTableColumn
scWakeDuration = _ScWakeDuration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1, 4),
    _ScWakeDuration_Type()
)
scWakeDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scWakeDuration.setStatus("current")
_ScSleepFlag_Type = Integer32
_ScSleepFlag_Object = MibTableColumn
scSleepFlag = _ScSleepFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1, 5),
    _ScSleepFlag_Type()
)
scSleepFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scSleepFlag.setStatus("current")
_ScSleepMode_Type = Integer32
_ScSleepMode_Object = MibTableColumn
scSleepMode = _ScSleepMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 2, 19, 1, 6),
    _ScSleepMode_Type()
)
scSleepMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scSleepMode.setStatus("current")
_OnuPriGlobal_ObjectIdentity = ObjectIdentity
onuPriGlobal = _OnuPriGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3)
)
_OnuPriGlobalCfg_ObjectIdentity = ObjectIdentity
onuPriGlobalCfg = _OnuPriGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1)
)
_OnuPriIgmpAdmin_ObjectIdentity = ObjectIdentity
onuPriIgmpAdmin = _OnuPriIgmpAdmin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 1)
)


class _PriIgmpAdminPon_Type(Integer32):
    """Custom type priIgmpAdminPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriIgmpAdminPon_Type.__name__ = "Integer32"
_PriIgmpAdminPon_Object = MibScalar
priIgmpAdminPon = _PriIgmpAdminPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 1, 1),
    _PriIgmpAdminPon_Type()
)
priIgmpAdminPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdminPon.setStatus("current")


class _PriIgmpAdminOnu_Type(Integer32):
    """Custom type priIgmpAdminOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65565),
    )


_PriIgmpAdminOnu_Type.__name__ = "Integer32"
_PriIgmpAdminOnu_Object = MibScalar
priIgmpAdminOnu = _PriIgmpAdminOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 1, 2),
    _PriIgmpAdminOnu_Type()
)
priIgmpAdminOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdminOnu.setStatus("current")


class _PriIgmpAdmin_Type(Integer32):
    """Custom type priIgmpAdmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriIgmpAdmin_Type.__name__ = "Integer32"
_PriIgmpAdmin_Object = MibScalar
priIgmpAdmin = _PriIgmpAdmin_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 1, 3),
    _PriIgmpAdmin_Type()
)
priIgmpAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdmin.setStatus("current")


class _PriIgmpAdminAction_Type(Integer32):
    """Custom type priIgmpAdminAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriIgmpAdminAction_Type.__name__ = "Integer32"
_PriIgmpAdminAction_Object = MibScalar
priIgmpAdminAction = _PriIgmpAdminAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 1, 4),
    _PriIgmpAdminAction_Type()
)
priIgmpAdminAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdminAction.setStatus("current")
_OnuPriCatvEnable_ObjectIdentity = ObjectIdentity
onuPriCatvEnable = _OnuPriCatvEnable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 2)
)


class _PriCatvEnablePon_Type(Integer32):
    """Custom type priCatvEnablePon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriCatvEnablePon_Type.__name__ = "Integer32"
_PriCatvEnablePon_Object = MibScalar
priCatvEnablePon = _PriCatvEnablePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 2, 1),
    _PriCatvEnablePon_Type()
)
priCatvEnablePon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvEnablePon.setStatus("current")


class _PriCatvEnableOnu_Type(Integer32):
    """Custom type priCatvEnableOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriCatvEnableOnu_Type.__name__ = "Integer32"
_PriCatvEnableOnu_Object = MibScalar
priCatvEnableOnu = _PriCatvEnableOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 2, 2),
    _PriCatvEnableOnu_Type()
)
priCatvEnableOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvEnableOnu.setStatus("current")


class _PriCatvEnable_Type(Integer32):
    """Custom type priCatvEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriCatvEnable_Type.__name__ = "Integer32"
_PriCatvEnable_Object = MibScalar
priCatvEnable = _PriCatvEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 2, 3),
    _PriCatvEnable_Type()
)
priCatvEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvEnable.setStatus("current")


class _PriCatvAction_Type(Integer32):
    """Custom type priCatvAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriCatvAction_Type.__name__ = "Integer32"
_PriCatvAction_Object = MibScalar
priCatvAction = _PriCatvAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 2, 4),
    _PriCatvAction_Type()
)
priCatvAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvAction.setStatus("current")
_OnuPriCtcoamSkip_ObjectIdentity = ObjectIdentity
onuPriCtcoamSkip = _OnuPriCtcoamSkip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 3)
)


class _PriCtcoamSkipPon_Type(Integer32):
    """Custom type priCtcoamSkipPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriCtcoamSkipPon_Type.__name__ = "Integer32"
_PriCtcoamSkipPon_Object = MibScalar
priCtcoamSkipPon = _PriCtcoamSkipPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 3, 1),
    _PriCtcoamSkipPon_Type()
)
priCtcoamSkipPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcoamSkipPon.setStatus("current")


class _PriCtcoamSkipOnu_Type(Integer32):
    """Custom type priCtcoamSkipOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriCtcoamSkipOnu_Type.__name__ = "Integer32"
_PriCtcoamSkipOnu_Object = MibScalar
priCtcoamSkipOnu = _PriCtcoamSkipOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 3, 2),
    _PriCtcoamSkipOnu_Type()
)
priCtcoamSkipOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcoamSkipOnu.setStatus("current")


class _PriCtcoamSkip_Type(Integer32):
    """Custom type priCtcoamSkip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriCtcoamSkip_Type.__name__ = "Integer32"
_PriCtcoamSkip_Object = MibScalar
priCtcoamSkip = _PriCtcoamSkip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 3, 3),
    _PriCtcoamSkip_Type()
)
priCtcoamSkip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcoamSkip.setStatus("current")


class _PriCtcoamSkipAction_Type(Integer32):
    """Custom type priCtcoamSkipAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriCtcoamSkipAction_Type.__name__ = "Integer32"
_PriCtcoamSkipAction_Object = MibScalar
priCtcoamSkipAction = _PriCtcoamSkipAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 3, 4),
    _PriCtcoamSkipAction_Type()
)
priCtcoamSkipAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcoamSkipAction.setStatus("current")
_OnuPriWifiSwitch_ObjectIdentity = ObjectIdentity
onuPriWifiSwitch = _OnuPriWifiSwitch_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4)
)


class _PriWifiSwitchPon_Type(Integer32):
    """Custom type priWifiSwitchPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWifiSwitchPon_Type.__name__ = "Integer32"
_PriWifiSwitchPon_Object = MibScalar
priWifiSwitchPon = _PriWifiSwitchPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 1),
    _PriWifiSwitchPon_Type()
)
priWifiSwitchPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchPon.setStatus("current")


class _PriWifiSwitchOnu_Type(Integer32):
    """Custom type priWifiSwitchOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWifiSwitchOnu_Type.__name__ = "Integer32"
_PriWifiSwitchOnu_Object = MibScalar
priWifiSwitchOnu = _PriWifiSwitchOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 2),
    _PriWifiSwitchOnu_Type()
)
priWifiSwitchOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchOnu.setStatus("current")


class _PriWifiApModule_Type(Integer32):
    """Custom type priWifiApModule based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiApModule_Type.__name__ = "Integer32"
_PriWifiApModule_Object = MibScalar
priWifiApModule = _PriWifiApModule_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 3),
    _PriWifiApModule_Type()
)
priWifiApModule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiApModule.setStatus("current")


class _PriWifiContry_Type(Integer32):
    """Custom type priWifiContry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_PriWifiContry_Type.__name__ = "Integer32"
_PriWifiContry_Object = MibScalar
priWifiContry = _PriWifiContry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 4),
    _PriWifiContry_Type()
)
priWifiContry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiContry.setStatus("current")


class _PriWifiChannel_Type(Integer32):
    """Custom type priWifiChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_PriWifiChannel_Type.__name__ = "Integer32"
_PriWifiChannel_Object = MibScalar
priWifiChannel = _PriWifiChannel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 5),
    _PriWifiChannel_Type()
)
priWifiChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiChannel.setStatus("current")


class _PriWifiStandard_Type(Integer32):
    """Custom type priWifiStandard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4))
    )


_PriWifiStandard_Type.__name__ = "Integer32"
_PriWifiStandard_Object = MibScalar
priWifiStandard = _PriWifiStandard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 6),
    _PriWifiStandard_Type()
)
priWifiStandard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiStandard.setStatus("current")


class _PriWifiPower_Type(Integer32):
    """Custom type priWifiPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_PriWifiPower_Type.__name__ = "Integer32"
_PriWifiPower_Object = MibScalar
priWifiPower = _PriWifiPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 7),
    _PriWifiPower_Type()
)
priWifiPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiPower.setStatus("current")


class _PriWifiSwitchAction_Type(Integer32):
    """Custom type priWifiSwitchAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriWifiSwitchAction_Type.__name__ = "Integer32"
_PriWifiSwitchAction_Object = MibScalar
priWifiSwitchAction = _PriWifiSwitchAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 8),
    _PriWifiSwitchAction_Type()
)
priWifiSwitchAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchAction.setStatus("current")


class _PriWifiChannelWidth_Type(Integer32):
    """Custom type priWifiChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s20_40", 3))
    )


_PriWifiChannelWidth_Type.__name__ = "Integer32"
_PriWifiChannelWidth_Object = MibScalar
priWifiChannelWidth = _PriWifiChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 4, 9),
    _PriWifiChannelWidth_Type()
)
priWifiChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiChannelWidth.setStatus("current")
_OnuPriWifiSsid_ObjectIdentity = ObjectIdentity
onuPriWifiSsid = _OnuPriWifiSsid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5)
)


class _PriSsidPon_Type(Integer32):
    """Custom type priSsidPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriSsidPon_Type.__name__ = "Integer32"
_PriSsidPon_Object = MibScalar
priSsidPon = _PriSsidPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 1),
    _PriSsidPon_Type()
)
priSsidPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidPon.setStatus("current")


class _ProSsidOnu_Type(Integer32):
    """Custom type proSsidOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ProSsidOnu_Type.__name__ = "Integer32"
_ProSsidOnu_Object = MibScalar
proSsidOnu = _ProSsidOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 2),
    _ProSsidOnu_Type()
)
proSsidOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proSsidOnu.setStatus("current")


class _PriSsidId_Type(Integer32):
    """Custom type priSsidId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_PriSsidId_Type.__name__ = "Integer32"
_PriSsidId_Object = MibScalar
priSsidId = _PriSsidId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 3),
    _PriSsidId_Type()
)
priSsidId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidId.setStatus("current")
_PriSsidName_Type = OctetString
_PriSsidName_Object = MibScalar
priSsidName = _PriSsidName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 4),
    _PriSsidName_Type()
)
priSsidName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidName.setStatus("current")


class _PriSsidEnable_Type(Integer32):
    """Custom type priSsidEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriSsidEnable_Type.__name__ = "Integer32"
_PriSsidEnable_Object = MibScalar
priSsidEnable = _PriSsidEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 5),
    _PriSsidEnable_Type()
)
priSsidEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidEnable.setStatus("current")


class _PriSsidHide_Type(Integer32):
    """Custom type priSsidHide based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriSsidHide_Type.__name__ = "Integer32"
_PriSsidHide_Object = MibScalar
priSsidHide = _PriSsidHide_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 6),
    _PriSsidHide_Type()
)
priSsidHide.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidHide.setStatus("current")


class _PriSsidAuthMode_Type(Integer32):
    """Custom type priSsidAuthMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("open", 1),
          ("shared", 2),
          ("wepauto", 3),
          ("wpapsk", 4),
          ("wpa", 5),
          ("wpa2psk", 6),
          ("wpa2", 7),
          ("wpa_wpa2", 8),
          ("wpapsk_wpa2psk", 9))
    )


_PriSsidAuthMode_Type.__name__ = "Integer32"
_PriSsidAuthMode_Object = MibScalar
priSsidAuthMode = _PriSsidAuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 7),
    _PriSsidAuthMode_Type()
)
priSsidAuthMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidAuthMode.setStatus("current")


class _PriSsidEncrypTpye_Type(Integer32):
    """Custom type priSsidEncrypTpye based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("wep", 2),
          ("tkip", 3),
          ("aes", 4),
          ("tkipaes", 5))
    )


_PriSsidEncrypTpye_Type.__name__ = "Integer32"
_PriSsidEncrypTpye_Object = MibScalar
priSsidEncrypTpye = _PriSsidEncrypTpye_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 8),
    _PriSsidEncrypTpye_Type()
)
priSsidEncrypTpye.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidEncrypTpye.setStatus("current")
_PriSsidPresharedKey_Type = OctetString
_PriSsidPresharedKey_Object = MibScalar
priSsidPresharedKey = _PriSsidPresharedKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 9),
    _PriSsidPresharedKey_Type()
)
priSsidPresharedKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidPresharedKey.setStatus("current")


class _PriSsidPrekeyInterval_Type(Integer32):
    """Custom type priSsidPrekeyInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4194303),
    )


_PriSsidPrekeyInterval_Type.__name__ = "Integer32"
_PriSsidPrekeyInterval_Object = MibScalar
priSsidPrekeyInterval = _PriSsidPrekeyInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 10),
    _PriSsidPrekeyInterval_Type()
)
priSsidPrekeyInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidPrekeyInterval.setStatus("current")


class _PriSsidRadiusSeripType_Type(Integer32):
    """Custom type priSsidRadiusSeripType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2),
          ("ipv4z", 3),
          ("ipv6z", 4),
          ("dns", 16))
    )


_PriSsidRadiusSeripType_Type.__name__ = "Integer32"
_PriSsidRadiusSeripType_Object = MibScalar
priSsidRadiusSeripType = _PriSsidRadiusSeripType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 11),
    _PriSsidRadiusSeripType_Type()
)
priSsidRadiusSeripType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusSeripType.setStatus("current")
_PriSsidRadiusSerip_Type = OctetString
_PriSsidRadiusSerip_Object = MibScalar
priSsidRadiusSerip = _PriSsidRadiusSerip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 12),
    _PriSsidRadiusSerip_Type()
)
priSsidRadiusSerip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusSerip.setStatus("current")


class _PriSsidRadiusServipPrefixLen_Type(Integer32):
    """Custom type priSsidRadiusServipPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PriSsidRadiusServipPrefixLen_Type.__name__ = "Integer32"
_PriSsidRadiusServipPrefixLen_Object = MibScalar
priSsidRadiusServipPrefixLen = _PriSsidRadiusServipPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 13),
    _PriSsidRadiusServipPrefixLen_Type()
)
priSsidRadiusServipPrefixLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusServipPrefixLen.setStatus("current")


class _PriSsidRadiusPort_Type(Integer32):
    """Custom type priSsidRadiusPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriSsidRadiusPort_Type.__name__ = "Integer32"
_PriSsidRadiusPort_Object = MibScalar
priSsidRadiusPort = _PriSsidRadiusPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 14),
    _PriSsidRadiusPort_Type()
)
priSsidRadiusPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusPort.setStatus("current")


class _PriSsidRadiusKey_Type(OctetString):
    """Custom type priSsidRadiusKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PriSsidRadiusKey_Type.__name__ = "OctetString"
_PriSsidRadiusKey_Object = MibScalar
priSsidRadiusKey = _PriSsidRadiusKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 15),
    _PriSsidRadiusKey_Type()
)
priSsidRadiusKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusKey.setStatus("current")


class _PriSsidWepEncrytionLevel_Type(Integer32):
    """Custom type priSsidWepEncrytionLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("s64bit", 1),
          ("s128bit", 2))
    )


_PriSsidWepEncrytionLevel_Type.__name__ = "Integer32"
_PriSsidWepEncrytionLevel_Object = MibScalar
priSsidWepEncrytionLevel = _PriSsidWepEncrytionLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 16),
    _PriSsidWepEncrytionLevel_Type()
)
priSsidWepEncrytionLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepEncrytionLevel.setStatus("current")


class _PriSsidWepKeyIndex_Type(Integer32):
    """Custom type priSsidWepKeyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_PriSsidWepKeyIndex_Type.__name__ = "Integer32"
_PriSsidWepKeyIndex_Object = MibScalar
priSsidWepKeyIndex = _PriSsidWepKeyIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 17),
    _PriSsidWepKeyIndex_Type()
)
priSsidWepKeyIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKeyIndex.setStatus("current")
_PriSsidWepKey1_Type = OctetString
_PriSsidWepKey1_Object = MibScalar
priSsidWepKey1 = _PriSsidWepKey1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 18),
    _PriSsidWepKey1_Type()
)
priSsidWepKey1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey1.setStatus("current")
_PriSsidWepKey2_Type = OctetString
_PriSsidWepKey2_Object = MibScalar
priSsidWepKey2 = _PriSsidWepKey2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 19),
    _PriSsidWepKey2_Type()
)
priSsidWepKey2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey2.setStatus("current")
_PriSsidWepKey3_Type = OctetString
_PriSsidWepKey3_Object = MibScalar
priSsidWepKey3 = _PriSsidWepKey3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 20),
    _PriSsidWepKey3_Type()
)
priSsidWepKey3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey3.setStatus("current")
_PriSsidWepKey4_Type = OctetString
_PriSsidWepKey4_Object = MibScalar
priSsidWepKey4 = _PriSsidWepKey4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 21),
    _PriSsidWepKey4_Type()
)
priSsidWepKey4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey4.setStatus("current")


class _PriSsidAction_Type(Integer32):
    """Custom type priSsidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriSsidAction_Type.__name__ = "Integer32"
_PriSsidAction_Object = MibScalar
priSsidAction = _PriSsidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 5, 22),
    _PriSsidAction_Type()
)
priSsidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidAction.setStatus("current")
_OnuPriWanConn_ObjectIdentity = ObjectIdentity
onuPriWanConn = _OnuPriWanConn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6)
)
_PriWanConnAdd_ObjectIdentity = ObjectIdentity
priWanConnAdd = _PriWanConnAdd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 1)
)


class _PriWanAddPon_Type(Integer32):
    """Custom type priWanAddPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWanAddPon_Type.__name__ = "Integer32"
_PriWanAddPon_Object = MibScalar
priWanAddPon = _PriWanAddPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 1, 1),
    _PriWanAddPon_Type()
)
priWanAddPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanAddPon.setStatus("current")


class _PriWanAddOnu_Type(Integer32):
    """Custom type priWanAddOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWanAddOnu_Type.__name__ = "Integer32"
_PriWanAddOnu_Object = MibScalar
priWanAddOnu = _PriWanAddOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 1, 2),
    _PriWanAddOnu_Type()
)
priWanAddOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanAddOnu.setStatus("current")


class _PriConnType_Type(Integer32):
    """Custom type priConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_PriConnType_Type.__name__ = "Integer32"
_PriConnType_Object = MibScalar
priConnType = _PriConnType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 1, 3),
    _PriConnType_Type()
)
priConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnType.setStatus("current")


class _PriConnAddAction_Type(Integer32):
    """Custom type priConnAddAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_PriConnAddAction_Type.__name__ = "Integer32"
_PriConnAddAction_Object = MibScalar
priConnAddAction = _PriConnAddAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 1, 4),
    _PriConnAddAction_Type()
)
priConnAddAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnAddAction.setStatus("current")
_PriWanConnDelete_ObjectIdentity = ObjectIdentity
priWanConnDelete = _PriWanConnDelete_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 2)
)


class _PriWanDeletePon_Type(Integer32):
    """Custom type priWanDeletePon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWanDeletePon_Type.__name__ = "Integer32"
_PriWanDeletePon_Object = MibScalar
priWanDeletePon = _PriWanDeletePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 2, 1),
    _PriWanDeletePon_Type()
)
priWanDeletePon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanDeletePon.setStatus("current")


class _PriWanDeleteOnu_Type(Integer32):
    """Custom type priWanDeleteOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWanDeleteOnu_Type.__name__ = "Integer32"
_PriWanDeleteOnu_Object = MibScalar
priWanDeleteOnu = _PriWanDeleteOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 2, 2),
    _PriWanDeleteOnu_Type()
)
priWanDeleteOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanDeleteOnu.setStatus("current")


class _PriConnIndexD_Type(Integer32):
    """Custom type priConnIndexD based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriConnIndexD_Type.__name__ = "Integer32"
_PriConnIndexD_Object = MibScalar
priConnIndexD = _PriConnIndexD_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 2, 3),
    _PriConnIndexD_Type()
)
priConnIndexD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnIndexD.setStatus("current")


class _PriConnDeleteAction_Type(Integer32):
    """Custom type priConnDeleteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("delete", 1)
    )


_PriConnDeleteAction_Type.__name__ = "Integer32"
_PriConnDeleteAction_Object = MibScalar
priConnDeleteAction = _PriConnDeleteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 2, 4),
    _PriConnDeleteAction_Type()
)
priConnDeleteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnDeleteAction.setStatus("current")
_PriWanConnCfg_ObjectIdentity = ObjectIdentity
priWanConnCfg = _PriWanConnCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3)
)


class _PriConnPon_Type(Integer32):
    """Custom type priConnPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriConnPon_Type.__name__ = "Integer32"
_PriConnPon_Object = MibScalar
priConnPon = _PriConnPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 1),
    _PriConnPon_Type()
)
priConnPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnPon.setStatus("current")


class _PriConnOnu_Type(Integer32):
    """Custom type priConnOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriConnOnu_Type.__name__ = "Integer32"
_PriConnOnu_Object = MibScalar
priConnOnu = _PriConnOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 2),
    _PriConnOnu_Type()
)
priConnOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnOnu.setStatus("current")


class _PriConnIndex_Type(Integer32):
    """Custom type priConnIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriConnIndex_Type.__name__ = "Integer32"
_PriConnIndex_Object = MibScalar
priConnIndex = _PriConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 3),
    _PriConnIndex_Type()
)
priConnIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnIndex.setStatus("current")


class _PriConnBindLan_Type(Integer32):
    """Custom type priConnBindLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_PriConnBindLan_Type.__name__ = "Integer32"
_PriConnBindLan_Object = MibScalar
priConnBindLan = _PriConnBindLan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 4),
    _PriConnBindLan_Type()
)
priConnBindLan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnBindLan.setStatus("current")


class _PriConnBindSsid_Type(Integer32):
    """Custom type priConnBindSsid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriConnBindSsid_Type.__name__ = "Integer32"
_PriConnBindSsid_Object = MibScalar
priConnBindSsid = _PriConnBindSsid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 5),
    _PriConnBindSsid_Type()
)
priConnBindSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnBindSsid.setStatus("current")


class _PriWanMode_Type(Integer32):
    """Custom type priWanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("other", 100))
    )


_PriWanMode_Type.__name__ = "Integer32"
_PriWanMode_Object = MibScalar
priWanMode = _PriWanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 6),
    _PriWanMode_Type()
)
priWanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanMode.setStatus("current")


class _PriConnTypeCfg_Type(Integer32):
    """Custom type priConnTypeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_PriConnTypeCfg_Type.__name__ = "Integer32"
_PriConnTypeCfg_Object = MibScalar
priConnTypeCfg = _PriConnTypeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 7),
    _PriConnTypeCfg_Type()
)
priConnTypeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnTypeCfg.setStatus("current")


class _PriConnVlanId_Type(Integer32):
    """Custom type priConnVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriConnVlanId_Type.__name__ = "Integer32"
_PriConnVlanId_Object = MibScalar
priConnVlanId = _PriConnVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 8),
    _PriConnVlanId_Type()
)
priConnVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnVlanId.setStatus("current")


class _PriConnCos_Type(Integer32):
    """Custom type priConnCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriConnCos_Type.__name__ = "Integer32"
_PriConnCos_Object = MibScalar
priConnCos = _PriConnCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 9),
    _PriConnCos_Type()
)
priConnCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnCos.setStatus("current")


class _PriConnNatEnable_Type(Integer32):
    """Custom type priConnNatEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriConnNatEnable_Type.__name__ = "Integer32"
_PriConnNatEnable_Object = MibScalar
priConnNatEnable = _PriConnNatEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 10),
    _PriConnNatEnable_Type()
)
priConnNatEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnNatEnable.setStatus("current")


class _PriConnModeCfg_Type(Integer32):
    """Custom type priConnModeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_PriConnModeCfg_Type.__name__ = "Integer32"
_PriConnModeCfg_Object = MibScalar
priConnModeCfg = _PriConnModeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 11),
    _PriConnModeCfg_Type()
)
priConnModeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnModeCfg.setStatus("current")
_PriConnIpAddress_Type = IpAddress
_PriConnIpAddress_Object = MibScalar
priConnIpAddress = _PriConnIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 12),
    _PriConnIpAddress_Type()
)
priConnIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnIpAddress.setStatus("current")
_PriConnIpMask_Type = IpAddress
_PriConnIpMask_Object = MibScalar
priConnIpMask = _PriConnIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 13),
    _PriConnIpMask_Type()
)
priConnIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnIpMask.setStatus("current")
_PriConnGateway_Type = IpAddress
_PriConnGateway_Object = MibScalar
priConnGateway = _PriConnGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 14),
    _PriConnGateway_Type()
)
priConnGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnGateway.setStatus("current")
_PriConnMasterDns_Type = IpAddress
_PriConnMasterDns_Object = MibScalar
priConnMasterDns = _PriConnMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 15),
    _PriConnMasterDns_Type()
)
priConnMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnMasterDns.setStatus("current")
_PriConnSlaveDns_Type = IpAddress
_PriConnSlaveDns_Object = MibScalar
priConnSlaveDns = _PriConnSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 16),
    _PriConnSlaveDns_Type()
)
priConnSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnSlaveDns.setStatus("current")


class _PriConnPppoeProxy_Type(Integer32):
    """Custom type priConnPppoeProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriConnPppoeProxy_Type.__name__ = "Integer32"
_PriConnPppoeProxy_Object = MibScalar
priConnPppoeProxy = _PriConnPppoeProxy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 17),
    _PriConnPppoeProxy_Type()
)
priConnPppoeProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnPppoeProxy.setStatus("current")
_PriConnPppoeUsername_Type = OctetString
_PriConnPppoeUsername_Object = MibScalar
priConnPppoeUsername = _PriConnPppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 18),
    _PriConnPppoeUsername_Type()
)
priConnPppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnPppoeUsername.setStatus("current")
_PriConnPppoePassword_Type = OctetString
_PriConnPppoePassword_Object = MibScalar
priConnPppoePassword = _PriConnPppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 19),
    _PriConnPppoePassword_Type()
)
priConnPppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnPppoePassword.setStatus("current")
_PriConnPppoeSerName_Type = OctetString
_PriConnPppoeSerName_Object = MibScalar
priConnPppoeSerName = _PriConnPppoeSerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 20),
    _PriConnPppoeSerName_Type()
)
priConnPppoeSerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnPppoeSerName.setStatus("current")


class _PriConnPppoeMode_Type(Integer32):
    """Custom type priConnPppoeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("connecWhenPayload", 1))
    )


_PriConnPppoeMode_Type.__name__ = "Integer32"
_PriConnPppoeMode_Object = MibScalar
priConnPppoeMode = _PriConnPppoeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 21),
    _PriConnPppoeMode_Type()
)
priConnPppoeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnPppoeMode.setStatus("current")


class _PriConnQosEnable_Type(Integer32):
    """Custom type priConnQosEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriConnQosEnable_Type.__name__ = "Integer32"
_PriConnQosEnable_Object = MibScalar
priConnQosEnable = _PriConnQosEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 22),
    _PriConnQosEnable_Type()
)
priConnQosEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnQosEnable.setStatus("current")


class _PriConnVlanMode_Type(Integer32):
    """Custom type priConnVlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_PriConnVlanMode_Type.__name__ = "Integer32"
_PriConnVlanMode_Object = MibScalar
priConnVlanMode = _PriConnVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 23),
    _PriConnVlanMode_Type()
)
priConnVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnVlanMode.setStatus("current")


class _PriConnTranslationEnable_Type(Integer32):
    """Custom type priConnTranslationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriConnTranslationEnable_Type.__name__ = "Integer32"
_PriConnTranslationEnable_Object = MibScalar
priConnTranslationEnable = _PriConnTranslationEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 24),
    _PriConnTranslationEnable_Type()
)
priConnTranslationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnTranslationEnable.setStatus("current")


class _PriConnTranslationVlan_Type(Integer32):
    """Custom type priConnTranslationVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriConnTranslationVlan_Type.__name__ = "Integer32"
_PriConnTranslationVlan_Object = MibScalar
priConnTranslationVlan = _PriConnTranslationVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 25),
    _PriConnTranslationVlan_Type()
)
priConnTranslationVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnTranslationVlan.setStatus("current")


class _PriConnTranslationCos_Type(Integer32):
    """Custom type priConnTranslationCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriConnTranslationCos_Type.__name__ = "Integer32"
_PriConnTranslationCos_Object = MibScalar
priConnTranslationCos = _PriConnTranslationCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 26),
    _PriConnTranslationCos_Type()
)
priConnTranslationCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnTranslationCos.setStatus("current")


class _PriConnQinqEnable_Type(Integer32):
    """Custom type priConnQinqEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriConnQinqEnable_Type.__name__ = "Integer32"
_PriConnQinqEnable_Object = MibScalar
priConnQinqEnable = _PriConnQinqEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 27),
    _PriConnQinqEnable_Type()
)
priConnQinqEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnQinqEnable.setStatus("current")


class _PriConnQinqTpid_Type(Integer32):
    """Custom type priConnQinqTpid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_PriConnQinqTpid_Type.__name__ = "Integer32"
_PriConnQinqTpid_Object = MibScalar
priConnQinqTpid = _PriConnQinqTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 28),
    _PriConnQinqTpid_Type()
)
priConnQinqTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnQinqTpid.setStatus("current")


class _PriConnWanSvlan_Type(Integer32):
    """Custom type priConnWanSvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriConnWanSvlan_Type.__name__ = "Integer32"
_PriConnWanSvlan_Object = MibScalar
priConnWanSvlan = _PriConnWanSvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 29),
    _PriConnWanSvlan_Type()
)
priConnWanSvlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnWanSvlan.setStatus("current")


class _PriConnSvlanCos_Type(Integer32):
    """Custom type priConnSvlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriConnSvlanCos_Type.__name__ = "Integer32"
_PriConnSvlanCos_Object = MibScalar
priConnSvlanCos = _PriConnSvlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 30),
    _PriConnSvlanCos_Type()
)
priConnSvlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnSvlanCos.setStatus("current")


class _PriConnCfgAction_Type(Integer32):
    """Custom type priConnCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_PriConnCfgAction_Type.__name__ = "Integer32"
_PriConnCfgAction_Object = MibScalar
priConnCfgAction = _PriConnCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 31),
    _PriConnCfgAction_Type()
)
priConnCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnCfgAction.setStatus("current")


class _PriConnRouteMtu_Type(Integer32):
    """Custom type priConnRouteMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(576, 1500),
    )


_PriConnRouteMtu_Type.__name__ = "Integer32"
_PriConnRouteMtu_Object = MibScalar
priConnRouteMtu = _PriConnRouteMtu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 3, 32),
    _PriConnRouteMtu_Type()
)
priConnRouteMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnRouteMtu.setStatus("current")
_PriWanConnCommit_ObjectIdentity = ObjectIdentity
priWanConnCommit = _PriWanConnCommit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 4)
)


class _PriConnCommitPon_Type(Integer32):
    """Custom type priConnCommitPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriConnCommitPon_Type.__name__ = "Integer32"
_PriConnCommitPon_Object = MibScalar
priConnCommitPon = _PriConnCommitPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 4, 1),
    _PriConnCommitPon_Type()
)
priConnCommitPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnCommitPon.setStatus("current")


class _PriConnCommitOnu_Type(Integer32):
    """Custom type priConnCommitOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriConnCommitOnu_Type.__name__ = "Integer32"
_PriConnCommitOnu_Object = MibScalar
priConnCommitOnu = _PriConnCommitOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 4, 2),
    _PriConnCommitOnu_Type()
)
priConnCommitOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnCommitOnu.setStatus("current")


class _PriConnCommitAction_Type(Integer32):
    """Custom type priConnCommitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriConnCommitAction_Type.__name__ = "Integer32"
_PriConnCommitAction_Object = MibScalar
priConnCommitAction = _PriConnCommitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 6, 4, 3),
    _PriConnCommitAction_Type()
)
priConnCommitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priConnCommitAction.setStatus("current")
_OnuPriPortIsolate_ObjectIdentity = ObjectIdentity
onuPriPortIsolate = _OnuPriPortIsolate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 7)
)


class _PriPortIsolatePon_Type(Integer32):
    """Custom type priPortIsolatePon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortIsolatePon_Type.__name__ = "Integer32"
_PriPortIsolatePon_Object = MibScalar
priPortIsolatePon = _PriPortIsolatePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 7, 1),
    _PriPortIsolatePon_Type()
)
priPortIsolatePon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolatePon.setStatus("current")


class _PriPortIsolateOnu_Type(Integer32):
    """Custom type priPortIsolateOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortIsolateOnu_Type.__name__ = "Integer32"
_PriPortIsolateOnu_Object = MibScalar
priPortIsolateOnu = _PriPortIsolateOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 7, 2),
    _PriPortIsolateOnu_Type()
)
priPortIsolateOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolateOnu.setStatus("current")


class _PriPortIsolate_Type(Integer32):
    """Custom type priPortIsolate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPortIsolate_Type.__name__ = "Integer32"
_PriPortIsolate_Object = MibScalar
priPortIsolate = _PriPortIsolate_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 7, 3),
    _PriPortIsolate_Type()
)
priPortIsolate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolate.setStatus("current")


class _PriPortIsolateAction_Type(Integer32):
    """Custom type priPortIsolateAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriPortIsolateAction_Type.__name__ = "Integer32"
_PriPortIsolateAction_Object = MibScalar
priPortIsolateAction = _PriPortIsolateAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 7, 4),
    _PriPortIsolateAction_Type()
)
priPortIsolateAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolateAction.setStatus("current")
_OnuPriFactoryReset_ObjectIdentity = ObjectIdentity
onuPriFactoryReset = _OnuPriFactoryReset_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 8)
)


class _PriFactoryResetPon_Type(Integer32):
    """Custom type priFactoryResetPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriFactoryResetPon_Type.__name__ = "Integer32"
_PriFactoryResetPon_Object = MibScalar
priFactoryResetPon = _PriFactoryResetPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 8, 1),
    _PriFactoryResetPon_Type()
)
priFactoryResetPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priFactoryResetPon.setStatus("current")


class _PriFactoryResetOnu_Type(Integer32):
    """Custom type priFactoryResetOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriFactoryResetOnu_Type.__name__ = "Integer32"
_PriFactoryResetOnu_Object = MibScalar
priFactoryResetOnu = _PriFactoryResetOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 8, 2),
    _PriFactoryResetOnu_Type()
)
priFactoryResetOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priFactoryResetOnu.setStatus("current")


class _PriFactoryReset_Type(Integer32):
    """Custom type priFactoryReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PriFactoryReset_Type.__name__ = "Integer32"
_PriFactoryReset_Object = MibScalar
priFactoryReset = _PriFactoryReset_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 8, 3),
    _PriFactoryReset_Type()
)
priFactoryReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priFactoryReset.setStatus("current")
_OnuPriMacClean_ObjectIdentity = ObjectIdentity
onuPriMacClean = _OnuPriMacClean_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 9)
)


class _PriMacCleanPon_Type(Integer32):
    """Custom type priMacCleanPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 816),
    )


_PriMacCleanPon_Type.__name__ = "Integer32"
_PriMacCleanPon_Object = MibScalar
priMacCleanPon = _PriMacCleanPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 9, 1),
    _PriMacCleanPon_Type()
)
priMacCleanPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacCleanPon.setStatus("current")


class _PriMacCleanOnu_Type(Integer32):
    """Custom type priMacCleanOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriMacCleanOnu_Type.__name__ = "Integer32"
_PriMacCleanOnu_Object = MibScalar
priMacCleanOnu = _PriMacCleanOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 9, 2),
    _PriMacCleanOnu_Type()
)
priMacCleanOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacCleanOnu.setStatus("current")


class _PriMacClean_Type(Integer32):
    """Custom type priMacClean based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PriMacClean_Type.__name__ = "Integer32"
_PriMacClean_Object = MibScalar
priMacClean = _PriMacClean_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 9, 3),
    _PriMacClean_Type()
)
priMacClean.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacClean.setStatus("current")
_OnuPriSaveConfig_ObjectIdentity = ObjectIdentity
onuPriSaveConfig = _OnuPriSaveConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 10)
)


class _PriSaveConfigPon_Type(Integer32):
    """Custom type priSaveConfigPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriSaveConfigPon_Type.__name__ = "Integer32"
_PriSaveConfigPon_Object = MibScalar
priSaveConfigPon = _PriSaveConfigPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 10, 1),
    _PriSaveConfigPon_Type()
)
priSaveConfigPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSaveConfigPon.setStatus("current")


class _PriSaveConfigOnu_Type(Integer32):
    """Custom type priSaveConfigOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriSaveConfigOnu_Type.__name__ = "Integer32"
_PriSaveConfigOnu_Object = MibScalar
priSaveConfigOnu = _PriSaveConfigOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 10, 2),
    _PriSaveConfigOnu_Type()
)
priSaveConfigOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSaveConfigOnu.setStatus("current")


class _PriSaveConfig_Type(Integer32):
    """Custom type priSaveConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PriSaveConfig_Type.__name__ = "Integer32"
_PriSaveConfig_Object = MibScalar
priSaveConfig = _PriSaveConfig_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 10, 3),
    _PriSaveConfig_Type()
)
priSaveConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSaveConfig.setStatus("current")
_OnuPriVoipTimer_ObjectIdentity = ObjectIdentity
onuPriVoipTimer = _OnuPriVoipTimer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11)
)


class _OnuPriVoipPon_Type(Integer32):
    """Custom type onuPriVoipPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuPriVoipPon_Type.__name__ = "Integer32"
_OnuPriVoipPon_Object = MibScalar
onuPriVoipPon = _OnuPriVoipPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 1),
    _OnuPriVoipPon_Type()
)
onuPriVoipPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipPon.setStatus("current")


class _OnuPriVoipOnu_Type(Integer32):
    """Custom type onuPriVoipOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriVoipOnu_Type.__name__ = "Integer32"
_OnuPriVoipOnu_Object = MibScalar
onuPriVoipOnu = _OnuPriVoipOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 2),
    _OnuPriVoipOnu_Type()
)
onuPriVoipOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipOnu.setStatus("current")


class _OnuPriVoipWaitTime_Type(Integer32):
    """Custom type onuPriVoipWaitTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_OnuPriVoipWaitTime_Type.__name__ = "Integer32"
_OnuPriVoipWaitTime_Object = MibScalar
onuPriVoipWaitTime = _OnuPriVoipWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 3),
    _OnuPriVoipWaitTime_Type()
)
onuPriVoipWaitTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipWaitTime.setStatus("current")


class _OnuPriVoipStartTimer_Type(Integer32):
    """Custom type onuPriVoipStartTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriVoipStartTimer_Type.__name__ = "Integer32"
_OnuPriVoipStartTimer_Object = MibScalar
onuPriVoipStartTimer = _OnuPriVoipStartTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 4),
    _OnuPriVoipStartTimer_Type()
)
onuPriVoipStartTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipStartTimer.setStatus("current")


class _OnuPriVoipLongTimer_Type(Integer32):
    """Custom type onuPriVoipLongTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriVoipLongTimer_Type.__name__ = "Integer32"
_OnuPriVoipLongTimer_Object = MibScalar
onuPriVoipLongTimer = _OnuPriVoipLongTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 5),
    _OnuPriVoipLongTimer_Type()
)
onuPriVoipLongTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipLongTimer.setStatus("current")


class _OnuPriVoipShortTimer_Type(Integer32):
    """Custom type onuPriVoipShortTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriVoipShortTimer_Type.__name__ = "Integer32"
_OnuPriVoipShortTimer_Object = MibScalar
onuPriVoipShortTimer = _OnuPriVoipShortTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 6),
    _OnuPriVoipShortTimer_Type()
)
onuPriVoipShortTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipShortTimer.setStatus("current")


class _OnuPriVoipDigitmapNotify_Type(Integer32):
    """Custom type onuPriVoipDigitmapNotify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriVoipDigitmapNotify_Type.__name__ = "Integer32"
_OnuPriVoipDigitmapNotify_Object = MibScalar
onuPriVoipDigitmapNotify = _OnuPriVoipDigitmapNotify_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 7),
    _OnuPriVoipDigitmapNotify_Type()
)
onuPriVoipDigitmapNotify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipDigitmapNotify.setStatus("current")


class _OnuPriVoipAction_Type(Integer32):
    """Custom type onuPriVoipAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPriVoipAction_Type.__name__ = "Integer32"
_OnuPriVoipAction_Object = MibScalar
onuPriVoipAction = _OnuPriVoipAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 11, 8),
    _OnuPriVoipAction_Type()
)
onuPriVoipAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriVoipAction.setStatus("current")
_OnuPriDhcpServer_ObjectIdentity = ObjectIdentity
onuPriDhcpServer = _OnuPriDhcpServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12)
)


class _OnuPriDhcpServerPon_Type(Integer32):
    """Custom type onuPriDhcpServerPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuPriDhcpServerPon_Type.__name__ = "Integer32"
_OnuPriDhcpServerPon_Object = MibScalar
onuPriDhcpServerPon = _OnuPriDhcpServerPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 1),
    _OnuPriDhcpServerPon_Type()
)
onuPriDhcpServerPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpServerPon.setStatus("current")


class _OnuPriDhcpServerOnu_Type(Integer32):
    """Custom type onuPriDhcpServerOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriDhcpServerOnu_Type.__name__ = "Integer32"
_OnuPriDhcpServerOnu_Object = MibScalar
onuPriDhcpServerOnu = _OnuPriDhcpServerOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 2),
    _OnuPriDhcpServerOnu_Type()
)
onuPriDhcpServerOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpServerOnu.setStatus("current")
_OnuPriDhcpLanIp_Type = IpAddress
_OnuPriDhcpLanIp_Object = MibScalar
onuPriDhcpLanIp = _OnuPriDhcpLanIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 3),
    _OnuPriDhcpLanIp_Type()
)
onuPriDhcpLanIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpLanIp.setStatus("current")
_OnuPriDhcpLanMask_Type = IpAddress
_OnuPriDhcpLanMask_Object = MibScalar
onuPriDhcpLanMask = _OnuPriDhcpLanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 4),
    _OnuPriDhcpLanMask_Type()
)
onuPriDhcpLanMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpLanMask.setStatus("current")


class _OnuPriDhcpEnable_Type(Integer32):
    """Custom type onuPriDhcpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_OnuPriDhcpEnable_Type.__name__ = "Integer32"
_OnuPriDhcpEnable_Object = MibScalar
onuPriDhcpEnable = _OnuPriDhcpEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 5),
    _OnuPriDhcpEnable_Type()
)
onuPriDhcpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpEnable.setStatus("current")


class _OnuPriDhcpLease_Type(Unsigned32):
    """Custom type onuPriDhcpLease based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OnuPriDhcpLease_Type.__name__ = "Unsigned32"
_OnuPriDhcpLease_Object = MibScalar
onuPriDhcpLease = _OnuPriDhcpLease_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 6),
    _OnuPriDhcpLease_Type()
)
onuPriDhcpLease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpLease.setStatus("current")
_OnuPriDhcpBeginIp_Type = IpAddress
_OnuPriDhcpBeginIp_Object = MibScalar
onuPriDhcpBeginIp = _OnuPriDhcpBeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 7),
    _OnuPriDhcpBeginIp_Type()
)
onuPriDhcpBeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpBeginIp.setStatus("current")
_OnuPriDhcpEndIp_Type = IpAddress
_OnuPriDhcpEndIp_Object = MibScalar
onuPriDhcpEndIp = _OnuPriDhcpEndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 8),
    _OnuPriDhcpEndIp_Type()
)
onuPriDhcpEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpEndIp.setStatus("current")


class _OnuPriDhcpPoolType_Type(Integer32):
    """Custom type onuPriDhcpPoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_OnuPriDhcpPoolType_Type.__name__ = "Integer32"
_OnuPriDhcpPoolType_Object = MibScalar
onuPriDhcpPoolType = _OnuPriDhcpPoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 9),
    _OnuPriDhcpPoolType_Type()
)
onuPriDhcpPoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpPoolType.setStatus("current")
_OnuPriDhcpMasterDns_Type = IpAddress
_OnuPriDhcpMasterDns_Object = MibScalar
onuPriDhcpMasterDns = _OnuPriDhcpMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 10),
    _OnuPriDhcpMasterDns_Type()
)
onuPriDhcpMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpMasterDns.setStatus("current")
_OnuPriDhcpSlaveDns_Type = IpAddress
_OnuPriDhcpSlaveDns_Object = MibScalar
onuPriDhcpSlaveDns = _OnuPriDhcpSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 11),
    _OnuPriDhcpSlaveDns_Type()
)
onuPriDhcpSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpSlaveDns.setStatus("current")
_OnuPriDhcpGateway_Type = IpAddress
_OnuPriDhcpGateway_Object = MibScalar
onuPriDhcpGateway = _OnuPriDhcpGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 12),
    _OnuPriDhcpGateway_Type()
)
onuPriDhcpGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpGateway.setStatus("current")
_OnuPriDhcpRelayIp_Type = IpAddress
_OnuPriDhcpRelayIp_Object = MibScalar
onuPriDhcpRelayIp = _OnuPriDhcpRelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 13),
    _OnuPriDhcpRelayIp_Type()
)
onuPriDhcpRelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpRelayIp.setStatus("current")


class _OnuPriDhcpAction_Type(Integer32):
    """Custom type onuPriDhcpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPriDhcpAction_Type.__name__ = "Integer32"
_OnuPriDhcpAction_Object = MibScalar
onuPriDhcpAction = _OnuPriDhcpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 12, 14),
    _OnuPriDhcpAction_Type()
)
onuPriDhcpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpAction.setStatus("current")
_OnuPriDhcpOption82_ObjectIdentity = ObjectIdentity
onuPriDhcpOption82 = _OnuPriDhcpOption82_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 13)
)


class _OnuPriDhcpOption82Pon_Type(Integer32):
    """Custom type onuPriDhcpOption82Pon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_OnuPriDhcpOption82Pon_Type.__name__ = "Integer32"
_OnuPriDhcpOption82Pon_Object = MibScalar
onuPriDhcpOption82Pon = _OnuPriDhcpOption82Pon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 13, 1),
    _OnuPriDhcpOption82Pon_Type()
)
onuPriDhcpOption82Pon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpOption82Pon.setStatus("current")


class _OnuPriDhcpOption82Onu_Type(Integer32):
    """Custom type onuPriDhcpOption82Onu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriDhcpOption82Onu_Type.__name__ = "Integer32"
_OnuPriDhcpOption82Onu_Object = MibScalar
onuPriDhcpOption82Onu = _OnuPriDhcpOption82Onu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 13, 2),
    _OnuPriDhcpOption82Onu_Type()
)
onuPriDhcpOption82Onu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpOption82Onu.setStatus("current")


class _OnuPriDhcpOption82Enable_Type(Integer32):
    """Custom type onuPriDhcpOption82Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriDhcpOption82Enable_Type.__name__ = "Integer32"
_OnuPriDhcpOption82Enable_Object = MibScalar
onuPriDhcpOption82Enable = _OnuPriDhcpOption82Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 13, 3),
    _OnuPriDhcpOption82Enable_Type()
)
onuPriDhcpOption82Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpOption82Enable.setStatus("current")


class _OnuPriDhcpOption82Action_Type(Integer32):
    """Custom type onuPriDhcpOption82Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPriDhcpOption82Action_Type.__name__ = "Integer32"
_OnuPriDhcpOption82Action_Object = MibScalar
onuPriDhcpOption82Action = _OnuPriDhcpOption82Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 13, 4),
    _OnuPriDhcpOption82Action_Type()
)
onuPriDhcpOption82Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpOption82Action.setStatus("current")
_OnuPriPPPoE_ObjectIdentity = ObjectIdentity
onuPriPPPoE = _OnuPriPPPoE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 14)
)


class _OnuPriPPPoEPon_Type(Integer32):
    """Custom type onuPriPPPoEPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_OnuPriPPPoEPon_Type.__name__ = "Integer32"
_OnuPriPPPoEPon_Object = MibScalar
onuPriPPPoEPon = _OnuPriPPPoEPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 14, 1),
    _OnuPriPPPoEPon_Type()
)
onuPriPPPoEPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriPPPoEPon.setStatus("current")


class _OnuPriPPPoEOnu_Type(Integer32):
    """Custom type onuPriPPPoEOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriPPPoEOnu_Type.__name__ = "Integer32"
_OnuPriPPPoEOnu_Object = MibScalar
onuPriPPPoEOnu = _OnuPriPPPoEOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 14, 2),
    _OnuPriPPPoEOnu_Type()
)
onuPriPPPoEOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriPPPoEOnu.setStatus("current")


class _OnuPriPPPoEEnable_Type(Integer32):
    """Custom type onuPriPPPoEEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriPPPoEEnable_Type.__name__ = "Integer32"
_OnuPriPPPoEEnable_Object = MibScalar
onuPriPPPoEEnable = _OnuPriPPPoEEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 14, 3),
    _OnuPriPPPoEEnable_Type()
)
onuPriPPPoEEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriPPPoEEnable.setStatus("current")


class _OnuPriPPPoEAction_Type(Integer32):
    """Custom type onuPriPPPoEAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPriPPPoEAction_Type.__name__ = "Integer32"
_OnuPriPPPoEAction_Object = MibScalar
onuPriPPPoEAction = _OnuPriPPPoEAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 14, 4),
    _OnuPriPPPoEAction_Type()
)
onuPriPPPoEAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriPPPoEAction.setStatus("current")
_OnuPriDhcpV6_ObjectIdentity = ObjectIdentity
onuPriDhcpV6 = _OnuPriDhcpV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 15)
)


class _OnuPriDhcpV6Pon_Type(Integer32):
    """Custom type onuPriDhcpV6Pon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_OnuPriDhcpV6Pon_Type.__name__ = "Integer32"
_OnuPriDhcpV6Pon_Object = MibScalar
onuPriDhcpV6Pon = _OnuPriDhcpV6Pon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 15, 1),
    _OnuPriDhcpV6Pon_Type()
)
onuPriDhcpV6Pon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpV6Pon.setStatus("current")


class _OnuPriDhcpV6Onu_Type(Integer32):
    """Custom type onuPriDhcpV6Onu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriDhcpV6Onu_Type.__name__ = "Integer32"
_OnuPriDhcpV6Onu_Object = MibScalar
onuPriDhcpV6Onu = _OnuPriDhcpV6Onu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 15, 2),
    _OnuPriDhcpV6Onu_Type()
)
onuPriDhcpV6Onu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpV6Onu.setStatus("current")


class _OnuPriDhcpV6Option18Enable_Type(Integer32):
    """Custom type onuPriDhcpV6Option18Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriDhcpV6Option18Enable_Type.__name__ = "Integer32"
_OnuPriDhcpV6Option18Enable_Object = MibScalar
onuPriDhcpV6Option18Enable = _OnuPriDhcpV6Option18Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 15, 3),
    _OnuPriDhcpV6Option18Enable_Type()
)
onuPriDhcpV6Option18Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpV6Option18Enable.setStatus("current")


class _OnuPriDhcpV6Option37Enable_Type(Integer32):
    """Custom type onuPriDhcpV6Option37Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriDhcpV6Option37Enable_Type.__name__ = "Integer32"
_OnuPriDhcpV6Option37Enable_Object = MibScalar
onuPriDhcpV6Option37Enable = _OnuPriDhcpV6Option37Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 15, 4),
    _OnuPriDhcpV6Option37Enable_Type()
)
onuPriDhcpV6Option37Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpV6Option37Enable.setStatus("current")


class _OnuPriDhcpV6Action_Type(Integer32):
    """Custom type onuPriDhcpV6Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPriDhcpV6Action_Type.__name__ = "Integer32"
_OnuPriDhcpV6Action_Object = MibScalar
onuPriDhcpV6Action = _OnuPriDhcpV6Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 15, 5),
    _OnuPriDhcpV6Action_Type()
)
onuPriDhcpV6Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpV6Action.setStatus("current")
_OnuPriVoipParam_ObjectIdentity = ObjectIdentity
onuPriVoipParam = _OnuPriVoipParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16)
)


class _PriVoipParamPon_Type(Integer32):
    """Custom type priVoipParamPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriVoipParamPon_Type.__name__ = "Integer32"
_PriVoipParamPon_Object = MibScalar
priVoipParamPon = _PriVoipParamPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 1),
    _PriVoipParamPon_Type()
)
priVoipParamPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipParamPon.setStatus("current")


class _PriVoipParamOnu_Type(Integer32):
    """Custom type priVoipParamOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriVoipParamOnu_Type.__name__ = "Integer32"
_PriVoipParamOnu_Object = MibScalar
priVoipParamOnu = _PriVoipParamOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 2),
    _PriVoipParamOnu_Type()
)
priVoipParamOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipParamOnu.setStatus("current")


class _PriIpMode_Type(Integer32):
    """Custom type priIpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dhcp", 2),
          ("pppoe", 3))
    )


_PriIpMode_Type.__name__ = "Integer32"
_PriIpMode_Object = MibScalar
priIpMode = _PriIpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 3),
    _PriIpMode_Type()
)
priIpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIpMode.setStatus("current")
_PriIp_Type = IpAddress
_PriIp_Object = MibScalar
priIp = _PriIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 4),
    _PriIp_Type()
)
priIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIp.setStatus("current")
_PriMask_Type = IpAddress
_PriMask_Object = MibScalar
priMask = _PriMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 5),
    _PriMask_Type()
)
priMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMask.setStatus("current")
_PriGw_Type = IpAddress
_PriGw_Object = MibScalar
priGw = _PriGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 6),
    _PriGw_Type()
)
priGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priGw.setStatus("current")
_PriRtpIp_Type = IpAddress
_PriRtpIp_Object = MibScalar
priRtpIp = _PriRtpIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 7),
    _PriRtpIp_Type()
)
priRtpIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpIp.setStatus("current")
_PriRtpMask_Type = IpAddress
_PriRtpMask_Object = MibScalar
priRtpMask = _PriRtpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 8),
    _PriRtpMask_Type()
)
priRtpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpMask.setStatus("current")
_PriRtpGw_Type = IpAddress
_PriRtpGw_Object = MibScalar
priRtpGw = _PriRtpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 9),
    _PriRtpGw_Type()
)
priRtpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpGw.setStatus("current")
_PriDnsMaster_Type = IpAddress
_PriDnsMaster_Object = MibScalar
priDnsMaster = _PriDnsMaster_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 10),
    _PriDnsMaster_Type()
)
priDnsMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDnsMaster.setStatus("current")
_PriDnsSlave_Type = IpAddress
_PriDnsSlave_Object = MibScalar
priDnsSlave = _PriDnsSlave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 11),
    _PriDnsSlave_Type()
)
priDnsSlave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDnsSlave.setStatus("current")


class _PriDhcpOption60Enable_Type(Integer32):
    """Custom type priDhcpOption60Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpOption60Enable_Type.__name__ = "Integer32"
_PriDhcpOption60Enable_Object = MibScalar
priDhcpOption60Enable = _PriDhcpOption60Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 12),
    _PriDhcpOption60Enable_Type()
)
priDhcpOption60Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpOption60Enable.setStatus("current")
_PriDhcpOption60Base_Type = OctetString
_PriDhcpOption60Base_Object = MibScalar
priDhcpOption60Base = _PriDhcpOption60Base_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 13),
    _PriDhcpOption60Base_Type()
)
priDhcpOption60Base.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpOption60Base.setStatus("current")
_PriDhcpOption60Value_Type = OctetString
_PriDhcpOption60Value_Object = MibScalar
priDhcpOption60Value = _PriDhcpOption60Value_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 14),
    _PriDhcpOption60Value_Type()
)
priDhcpOption60Value.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpOption60Value.setStatus("current")


class _PriPPPoEMode_Type(Integer32):
    """Custom type priPPPoEMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("chap", 1),
          ("pap", 2))
    )


_PriPPPoEMode_Type.__name__ = "Integer32"
_PriPPPoEMode_Object = MibScalar
priPPPoEMode = _PriPPPoEMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 15),
    _PriPPPoEMode_Type()
)
priPPPoEMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPPPoEMode.setStatus("current")
_PriPPPoEUsername_Type = OctetString
_PriPPPoEUsername_Object = MibScalar
priPPPoEUsername = _PriPPPoEUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 16),
    _PriPPPoEUsername_Type()
)
priPPPoEUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPPPoEUsername.setStatus("current")
_PriPPPoEPassword_Type = OctetString
_PriPPPoEPassword_Object = MibScalar
priPPPoEPassword = _PriPPPoEPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 17),
    _PriPPPoEPassword_Type()
)
priPPPoEPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPPPoEPassword.setStatus("current")
_PriSVlanTpid_Type = Integer32
_PriSVlanTpid_Object = MibScalar
priSVlanTpid = _PriSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 18),
    _PriSVlanTpid_Type()
)
priSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSVlanTpid.setStatus("current")


class _PriSVlanId_Type(Integer32):
    """Custom type priSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriSVlanId_Type.__name__ = "Integer32"
_PriSVlanId_Object = MibScalar
priSVlanId = _PriSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 19),
    _PriSVlanId_Type()
)
priSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSVlanId.setStatus("current")


class _PriSVlanCos_Type(Integer32):
    """Custom type priSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriSVlanCos_Type.__name__ = "Integer32"
_PriSVlanCos_Object = MibScalar
priSVlanCos = _PriSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 20),
    _PriSVlanCos_Type()
)
priSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSVlanCos.setStatus("current")
_PriCVlanTpid_Type = Integer32
_PriCVlanTpid_Object = MibScalar
priCVlanTpid = _PriCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 21),
    _PriCVlanTpid_Type()
)
priCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCVlanTpid.setStatus("current")


class _PriCVlanId_Type(Integer32):
    """Custom type priCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriCVlanId_Type.__name__ = "Integer32"
_PriCVlanId_Object = MibScalar
priCVlanId = _PriCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 22),
    _PriCVlanId_Type()
)
priCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCVlanId.setStatus("current")


class _PriCVlanCos_Type(Integer32):
    """Custom type priCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriCVlanCos_Type.__name__ = "Integer32"
_PriCVlanCos_Object = MibScalar
priCVlanCos = _PriCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 23),
    _PriCVlanCos_Type()
)
priCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCVlanCos.setStatus("current")
_PriRtpSVlanTpid_Type = Integer32
_PriRtpSVlanTpid_Object = MibScalar
priRtpSVlanTpid = _PriRtpSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 24),
    _PriRtpSVlanTpid_Type()
)
priRtpSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpSVlanTpid.setStatus("current")


class _PriRtpSVlanId_Type(Integer32):
    """Custom type priRtpSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriRtpSVlanId_Type.__name__ = "Integer32"
_PriRtpSVlanId_Object = MibScalar
priRtpSVlanId = _PriRtpSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 25),
    _PriRtpSVlanId_Type()
)
priRtpSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpSVlanId.setStatus("current")


class _PriRtpSVlanCos_Type(Integer32):
    """Custom type priRtpSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriRtpSVlanCos_Type.__name__ = "Integer32"
_PriRtpSVlanCos_Object = MibScalar
priRtpSVlanCos = _PriRtpSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 26),
    _PriRtpSVlanCos_Type()
)
priRtpSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpSVlanCos.setStatus("current")
_PriRtpCVlanTpid_Type = Integer32
_PriRtpCVlanTpid_Object = MibScalar
priRtpCVlanTpid = _PriRtpCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 27),
    _PriRtpCVlanTpid_Type()
)
priRtpCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpCVlanTpid.setStatus("current")


class _PriRtpCVlanId_Type(Integer32):
    """Custom type priRtpCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriRtpCVlanId_Type.__name__ = "Integer32"
_PriRtpCVlanId_Object = MibScalar
priRtpCVlanId = _PriRtpCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 28),
    _PriRtpCVlanId_Type()
)
priRtpCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpCVlanId.setStatus("current")


class _PriRtpCVlanCos_Type(Integer32):
    """Custom type priRtpCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriRtpCVlanCos_Type.__name__ = "Integer32"
_PriRtpCVlanCos_Object = MibScalar
priRtpCVlanCos = _PriRtpCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 29),
    _PriRtpCVlanCos_Type()
)
priRtpCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRtpCVlanCos.setStatus("current")


class _PriVoipParamAction_Type(Integer32):
    """Custom type priVoipParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriVoipParamAction_Type.__name__ = "Integer32"
_PriVoipParamAction_Object = MibScalar
priVoipParamAction = _PriVoipParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 16, 30),
    _PriVoipParamAction_Type()
)
priVoipParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipParamAction.setStatus("current")
_OnuPriSipParam_ObjectIdentity = ObjectIdentity
onuPriSipParam = _OnuPriSipParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17)
)


class _PriSipParamPon_Type(Integer32):
    """Custom type priSipParamPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriSipParamPon_Type.__name__ = "Integer32"
_PriSipParamPon_Object = MibScalar
priSipParamPon = _PriSipParamPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 1),
    _PriSipParamPon_Type()
)
priSipParamPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSipParamPon.setStatus("current")


class _PriSipParamOnu_Type(Integer32):
    """Custom type priSipParamOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriSipParamOnu_Type.__name__ = "Integer32"
_PriSipParamOnu_Object = MibScalar
priSipParamOnu = _PriSipParamOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 2),
    _PriSipParamOnu_Type()
)
priSipParamOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSipParamOnu.setStatus("current")
_PriProxyServName_Type = OctetString
_PriProxyServName_Object = MibScalar
priProxyServName = _PriProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 3),
    _PriProxyServName_Type()
)
priProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priProxyServName.setStatus("current")


class _PriProxyServPort_Type(Integer32):
    """Custom type priProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriProxyServPort_Type.__name__ = "Integer32"
_PriProxyServPort_Object = MibScalar
priProxyServPort = _PriProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 4),
    _PriProxyServPort_Type()
)
priProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priProxyServPort.setStatus("current")
_PriBakProxyServName_Type = OctetString
_PriBakProxyServName_Object = MibScalar
priBakProxyServName = _PriBakProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 5),
    _PriBakProxyServName_Type()
)
priBakProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priBakProxyServName.setStatus("current")


class _PriBakProxyServPort_Type(Integer32):
    """Custom type priBakProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriBakProxyServPort_Type.__name__ = "Integer32"
_PriBakProxyServPort_Object = MibScalar
priBakProxyServPort = _PriBakProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 6),
    _PriBakProxyServPort_Type()
)
priBakProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priBakProxyServPort.setStatus("current")
_PriRegServName_Type = OctetString
_PriRegServName_Object = MibScalar
priRegServName = _PriRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 7),
    _PriRegServName_Type()
)
priRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRegServName.setStatus("current")


class _PriRegServPort_Type(Integer32):
    """Custom type priRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriRegServPort_Type.__name__ = "Integer32"
_PriRegServPort_Object = MibScalar
priRegServPort = _PriRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 8),
    _PriRegServPort_Type()
)
priRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRegServPort.setStatus("current")
_PriBakRegServName_Type = OctetString
_PriBakRegServName_Object = MibScalar
priBakRegServName = _PriBakRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 9),
    _PriBakRegServName_Type()
)
priBakRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priBakRegServName.setStatus("current")


class _PriBakRegServPort_Type(Integer32):
    """Custom type priBakRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriBakRegServPort_Type.__name__ = "Integer32"
_PriBakRegServPort_Object = MibScalar
priBakRegServPort = _PriBakRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 10),
    _PriBakRegServPort_Type()
)
priBakRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priBakRegServPort.setStatus("current")
_PriOutBndServName_Type = OctetString
_PriOutBndServName_Object = MibScalar
priOutBndServName = _PriOutBndServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 11),
    _PriOutBndServName_Type()
)
priOutBndServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priOutBndServName.setStatus("current")


class _PriOutBndServPort_Type(Integer32):
    """Custom type priOutBndServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriOutBndServPort_Type.__name__ = "Integer32"
_PriOutBndServPort_Object = MibScalar
priOutBndServPort = _PriOutBndServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 12),
    _PriOutBndServPort_Type()
)
priOutBndServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priOutBndServPort.setStatus("current")


class _PriSipParamMgPort_Type(Integer32):
    """Custom type priSipParamMgPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriSipParamMgPort_Type.__name__ = "Integer32"
_PriSipParamMgPort_Object = MibScalar
priSipParamMgPort = _PriSipParamMgPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 13),
    _PriSipParamMgPort_Type()
)
priSipParamMgPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSipParamMgPort.setStatus("current")


class _PriRegInterval_Type(Integer32):
    """Custom type priRegInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_PriRegInterval_Type.__name__ = "Integer32"
_PriRegInterval_Object = MibScalar
priRegInterval = _PriRegInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 14),
    _PriRegInterval_Type()
)
priRegInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priRegInterval.setStatus("current")


class _PriHBeatCfg_Type(Integer32):
    """Custom type priHBeatCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("active", 1),
          ("passive", 2))
    )


_PriHBeatCfg_Type.__name__ = "Integer32"
_PriHBeatCfg_Object = MibScalar
priHBeatCfg = _PriHBeatCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 15),
    _PriHBeatCfg_Type()
)
priHBeatCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priHBeatCfg.setStatus("current")


class _PriHBeatCycle_Type(Integer32):
    """Custom type priHBeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65525),
    )


_PriHBeatCycle_Type.__name__ = "Integer32"
_PriHBeatCycle_Object = MibScalar
priHBeatCycle = _PriHBeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 16),
    _PriHBeatCycle_Type()
)
priHBeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priHBeatCycle.setStatus("current")


class _PriHBeatCount_Type(Integer32):
    """Custom type priHBeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriHBeatCount_Type.__name__ = "Integer32"
_PriHBeatCount_Object = MibScalar
priHBeatCount = _PriHBeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 17),
    _PriHBeatCount_Type()
)
priHBeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priHBeatCount.setStatus("current")


class _PriSipGloParamAction_Type(Integer32):
    """Custom type priSipGloParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriSipGloParamAction_Type.__name__ = "Integer32"
_PriSipGloParamAction_Object = MibScalar
priSipGloParamAction = _PriSipGloParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 17, 18),
    _PriSipGloParamAction_Type()
)
priSipGloParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSipGloParamAction.setStatus("current")
_OnuPriSecurity_ObjectIdentity = ObjectIdentity
onuPriSecurity = _OnuPriSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18)
)
_PriPonID_Type = Unsigned32
_PriPonID_Object = MibScalar
priPonID = _PriPonID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 1),
    _PriPonID_Type()
)
priPonID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPonID.setStatus("current")
_PriOnuID_Type = Unsigned32
_PriOnuID_Object = MibScalar
priOnuID = _PriOnuID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 2),
    _PriOnuID_Type()
)
priOnuID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priOnuID.setStatus("current")
_OnuPriUsername_ObjectIdentity = ObjectIdentity
onuPriUsername = _OnuPriUsername_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3)
)


class _PriAdminCtl_Type(Integer32):
    """Custom type priAdminCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAdminCtl_Type.__name__ = "Integer32"
_PriAdminCtl_Object = MibScalar
priAdminCtl = _PriAdminCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 1),
    _PriAdminCtl_Type()
)
priAdminCtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAdminCtl.setStatus("current")
_PriAdminName_Type = OctetString
_PriAdminName_Object = MibScalar
priAdminName = _PriAdminName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 2),
    _PriAdminName_Type()
)
priAdminName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAdminName.setStatus("current")
_PriAdminPwd_Type = OctetString
_PriAdminPwd_Object = MibScalar
priAdminPwd = _PriAdminPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 3),
    _PriAdminPwd_Type()
)
priAdminPwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAdminPwd.setStatus("current")


class _PriUserCtl_Type(Integer32):
    """Custom type priUserCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriUserCtl_Type.__name__ = "Integer32"
_PriUserCtl_Object = MibScalar
priUserCtl = _PriUserCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 4),
    _PriUserCtl_Type()
)
priUserCtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priUserCtl.setStatus("current")
_PriUserName_Type = OctetString
_PriUserName_Object = MibScalar
priUserName = _PriUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 5),
    _PriUserName_Type()
)
priUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priUserName.setStatus("current")
_PriUserPwd_Type = OctetString
_PriUserPwd_Object = MibScalar
priUserPwd = _PriUserPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 6),
    _PriUserPwd_Type()
)
priUserPwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priUserPwd.setStatus("current")


class _PriUsernameAction_Type(Integer32):
    """Custom type priUsernameAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PriUsernameAction_Type.__name__ = "Integer32"
_PriUsernameAction_Object = MibScalar
priUsernameAction = _PriUsernameAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 3, 7),
    _PriUsernameAction_Type()
)
priUsernameAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priUsernameAction.setStatus("current")
_OnuPriFirewall_ObjectIdentity = ObjectIdentity
onuPriFirewall = _OnuPriFirewall_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 4)
)


class _PriFirewall_Type(Integer32):
    """Custom type priFirewall based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("low", 1),
          ("middle", 2),
          ("high", 3))
    )


_PriFirewall_Type.__name__ = "Integer32"
_PriFirewall_Object = MibScalar
priFirewall = _PriFirewall_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 4, 1),
    _PriFirewall_Type()
)
priFirewall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priFirewall.setStatus("current")
_OnuPriAcl_ObjectIdentity = ObjectIdentity
onuPriAcl = _OnuPriAcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5)
)


class _PriAclProtocol_Type(Integer32):
    """Custom type priAclProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 0),
          ("ftp", 1),
          ("http", 2),
          ("https", 3),
          ("tftp", 4),
          ("ping", 5))
    )


_PriAclProtocol_Type.__name__ = "Integer32"
_PriAclProtocol_Object = MibScalar
priAclProtocol = _PriAclProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 1),
    _PriAclProtocol_Type()
)
priAclProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclProtocol.setStatus("current")


class _PriAclCtl_Type(Integer32):
    """Custom type priAclCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclCtl_Type.__name__ = "Integer32"
_PriAclCtl_Object = MibScalar
priAclCtl = _PriAclCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 2),
    _PriAclCtl_Type()
)
priAclCtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclCtl.setStatus("current")


class _PriAclLanCtl_Type(Integer32):
    """Custom type priAclLanCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclLanCtl_Type.__name__ = "Integer32"
_PriAclLanCtl_Object = MibScalar
priAclLanCtl = _PriAclLanCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 3),
    _PriAclLanCtl_Type()
)
priAclLanCtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclLanCtl.setStatus("current")


class _PriAclWanCtl_Type(Integer32):
    """Custom type priAclWanCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclWanCtl_Type.__name__ = "Integer32"
_PriAclWanCtl_Object = MibScalar
priAclWanCtl = _PriAclWanCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 4),
    _PriAclWanCtl_Type()
)
priAclWanCtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclWanCtl.setStatus("current")


class _PriAclIPv4Ctl_Type(Integer32):
    """Custom type priAclIPv4Ctl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclIPv4Ctl_Type.__name__ = "Integer32"
_PriAclIPv4Ctl_Object = MibScalar
priAclIPv4Ctl = _PriAclIPv4Ctl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 5),
    _PriAclIPv4Ctl_Type()
)
priAclIPv4Ctl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclIPv4Ctl.setStatus("current")
_PriAclIPv4Addr_Type = IpAddress
_PriAclIPv4Addr_Object = MibScalar
priAclIPv4Addr = _PriAclIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 6),
    _PriAclIPv4Addr_Type()
)
priAclIPv4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclIPv4Addr.setStatus("current")
_PriAclIPv4Mask_Type = OctetString
_PriAclIPv4Mask_Object = MibScalar
priAclIPv4Mask = _PriAclIPv4Mask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 7),
    _PriAclIPv4Mask_Type()
)
priAclIPv4Mask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclIPv4Mask.setStatus("current")


class _PriAclIPv6Ctl_Type(Integer32):
    """Custom type priAclIPv6Ctl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclIPv6Ctl_Type.__name__ = "Integer32"
_PriAclIPv6Ctl_Object = MibScalar
priAclIPv6Ctl = _PriAclIPv6Ctl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 8),
    _PriAclIPv6Ctl_Type()
)
priAclIPv6Ctl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclIPv6Ctl.setStatus("current")
_PriAclIPv6Addr_Type = OctetString
_PriAclIPv6Addr_Object = MibScalar
priAclIPv6Addr = _PriAclIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 9),
    _PriAclIPv6Addr_Type()
)
priAclIPv6Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclIPv6Addr.setStatus("current")
_PriAclIPv6Pfx_Type = Unsigned32
_PriAclIPv6Pfx_Object = MibScalar
priAclIPv6Pfx = _PriAclIPv6Pfx_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 10),
    _PriAclIPv6Pfx_Type()
)
priAclIPv6Pfx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclIPv6Pfx.setStatus("current")


class _PriAclPortID_Type(Unsigned32):
    """Custom type priAclPortID based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriAclPortID_Type.__name__ = "Unsigned32"
_PriAclPortID_Object = MibScalar
priAclPortID = _PriAclPortID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 11),
    _PriAclPortID_Type()
)
priAclPortID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclPortID.setStatus("current")


class _PriAclAction_Type(Integer32):
    """Custom type priAclAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("del", 0),
          ("add", 1))
    )


_PriAclAction_Type.__name__ = "Integer32"
_PriAclAction_Object = MibScalar
priAclAction = _PriAclAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 5, 12),
    _PriAclAction_Type()
)
priAclAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclAction.setStatus("current")
_OnuPriAclCommit_ObjectIdentity = ObjectIdentity
onuPriAclCommit = _OnuPriAclCommit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 6)
)


class _PriAclCommit_Type(Integer32):
    """Custom type priAclCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_PriAclCommit_Type.__name__ = "Integer32"
_PriAclCommit_Object = MibScalar
priAclCommit = _PriAclCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 18, 6, 1),
    _PriAclCommit_Type()
)
priAclCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priAclCommit.setStatus("current")
_OnuPriDhcpv6Server_ObjectIdentity = ObjectIdentity
onuPriDhcpv6Server = _OnuPriDhcpv6Server_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19)
)


class _OnuPriDhcpv6ServerPon_Type(Integer32):
    """Custom type onuPriDhcpv6ServerPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuPriDhcpv6ServerPon_Type.__name__ = "Integer32"
_OnuPriDhcpv6ServerPon_Object = MibScalar
onuPriDhcpv6ServerPon = _OnuPriDhcpv6ServerPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 1),
    _OnuPriDhcpv6ServerPon_Type()
)
onuPriDhcpv6ServerPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6ServerPon.setStatus("current")


class _OnuPriDhcpv6ServerOnu_Type(Integer32):
    """Custom type onuPriDhcpv6ServerOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPriDhcpv6ServerOnu_Type.__name__ = "Integer32"
_OnuPriDhcpv6ServerOnu_Object = MibScalar
onuPriDhcpv6ServerOnu = _OnuPriDhcpv6ServerOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 2),
    _OnuPriDhcpv6ServerOnu_Type()
)
onuPriDhcpv6ServerOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6ServerOnu.setStatus("current")
_OnuPriDhcpv6LanIp_Type = OctetString
_OnuPriDhcpv6LanIp_Object = MibScalar
onuPriDhcpv6LanIp = _OnuPriDhcpv6LanIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 3),
    _OnuPriDhcpv6LanIp_Type()
)
onuPriDhcpv6LanIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6LanIp.setStatus("current")


class _OnuPriDhcpv6LanPrefixlen_Type(Integer32):
    """Custom type onuPriDhcpv6LanPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_OnuPriDhcpv6LanPrefixlen_Type.__name__ = "Integer32"
_OnuPriDhcpv6LanPrefixlen_Object = MibScalar
onuPriDhcpv6LanPrefixlen = _OnuPriDhcpv6LanPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 4),
    _OnuPriDhcpv6LanPrefixlen_Type()
)
onuPriDhcpv6LanPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6LanPrefixlen.setStatus("current")


class _OnuPriDhcpv6PrefixMode_Type(Integer32):
    """Custom type onuPriDhcpv6PrefixMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("static", 1))
    )


_OnuPriDhcpv6PrefixMode_Type.__name__ = "Integer32"
_OnuPriDhcpv6PrefixMode_Object = MibScalar
onuPriDhcpv6PrefixMode = _OnuPriDhcpv6PrefixMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 5),
    _OnuPriDhcpv6PrefixMode_Type()
)
onuPriDhcpv6PrefixMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6PrefixMode.setStatus("current")
_OnuPriDhcpv6PrefixModeIp_Type = OctetString
_OnuPriDhcpv6PrefixModeIp_Object = MibScalar
onuPriDhcpv6PrefixModeIp = _OnuPriDhcpv6PrefixModeIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 6),
    _OnuPriDhcpv6PrefixModeIp_Type()
)
onuPriDhcpv6PrefixModeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6PrefixModeIp.setStatus("current")


class _OnuPriDhcpv6Enable_Type(Integer32):
    """Custom type onuPriDhcpv6Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_OnuPriDhcpv6Enable_Type.__name__ = "Integer32"
_OnuPriDhcpv6Enable_Object = MibScalar
onuPriDhcpv6Enable = _OnuPriDhcpv6Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 7),
    _OnuPriDhcpv6Enable_Type()
)
onuPriDhcpv6Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6Enable.setStatus("current")


class _OnuPriDhcpv6Preference_Type(Unsigned32):
    """Custom type onuPriDhcpv6Preference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OnuPriDhcpv6Preference_Type.__name__ = "Unsigned32"
_OnuPriDhcpv6Preference_Object = MibScalar
onuPriDhcpv6Preference = _OnuPriDhcpv6Preference_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 8),
    _OnuPriDhcpv6Preference_Type()
)
onuPriDhcpv6Preference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6Preference.setStatus("current")
_OnuPriDhcpv6BeginIp_Type = OctetString
_OnuPriDhcpv6BeginIp_Object = MibScalar
onuPriDhcpv6BeginIp = _OnuPriDhcpv6BeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 9),
    _OnuPriDhcpv6BeginIp_Type()
)
onuPriDhcpv6BeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6BeginIp.setStatus("current")
_OnuPriDhcpv6EndIp_Type = OctetString
_OnuPriDhcpv6EndIp_Object = MibScalar
onuPriDhcpv6EndIp = _OnuPriDhcpv6EndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 10),
    _OnuPriDhcpv6EndIp_Type()
)
onuPriDhcpv6EndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6EndIp.setStatus("current")


class _OnuPriDhcpv6PoolType_Type(Integer32):
    """Custom type onuPriDhcpv6PoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_OnuPriDhcpv6PoolType_Type.__name__ = "Integer32"
_OnuPriDhcpv6PoolType_Object = MibScalar
onuPriDhcpv6PoolType = _OnuPriDhcpv6PoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 11),
    _OnuPriDhcpv6PoolType_Type()
)
onuPriDhcpv6PoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6PoolType.setStatus("current")
_OnuPriDhcpv6MasterDns_Type = OctetString
_OnuPriDhcpv6MasterDns_Object = MibScalar
onuPriDhcpv6MasterDns = _OnuPriDhcpv6MasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 12),
    _OnuPriDhcpv6MasterDns_Type()
)
onuPriDhcpv6MasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6MasterDns.setStatus("current")
_OnuPriDhcpv6SlaveDns_Type = OctetString
_OnuPriDhcpv6SlaveDns_Object = MibScalar
onuPriDhcpv6SlaveDns = _OnuPriDhcpv6SlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 13),
    _OnuPriDhcpv6SlaveDns_Type()
)
onuPriDhcpv6SlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6SlaveDns.setStatus("current")
_OnuPriDhcpv6Gateway_Type = OctetString
_OnuPriDhcpv6Gateway_Object = MibScalar
onuPriDhcpv6Gateway = _OnuPriDhcpv6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 14),
    _OnuPriDhcpv6Gateway_Type()
)
onuPriDhcpv6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6Gateway.setStatus("current")
_OnuPriDhcpv6RelayIp_Type = OctetString
_OnuPriDhcpv6RelayIp_Object = MibScalar
onuPriDhcpv6RelayIp = _OnuPriDhcpv6RelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 15),
    _OnuPriDhcpv6RelayIp_Type()
)
onuPriDhcpv6RelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6RelayIp.setStatus("current")


class _OnuPriDhcpv6RA_Type(Integer32):
    """Custom type onuPriDhcpv6RA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriDhcpv6RA_Type.__name__ = "Integer32"
_OnuPriDhcpv6RA_Object = MibScalar
onuPriDhcpv6RA = _OnuPriDhcpv6RA_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 16),
    _OnuPriDhcpv6RA_Type()
)
onuPriDhcpv6RA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6RA.setStatus("current")


class _OnuPriDhcpv6RAManage_Type(Integer32):
    """Custom type onuPriDhcpv6RAManage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriDhcpv6RAManage_Type.__name__ = "Integer32"
_OnuPriDhcpv6RAManage_Object = MibScalar
onuPriDhcpv6RAManage = _OnuPriDhcpv6RAManage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 17),
    _OnuPriDhcpv6RAManage_Type()
)
onuPriDhcpv6RAManage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6RAManage.setStatus("current")


class _OnuPriDhcpv6RAOther_Type(Integer32):
    """Custom type onuPriDhcpv6RAOther based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPriDhcpv6RAOther_Type.__name__ = "Integer32"
_OnuPriDhcpv6RAOther_Object = MibScalar
onuPriDhcpv6RAOther = _OnuPriDhcpv6RAOther_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 18),
    _OnuPriDhcpv6RAOther_Type()
)
onuPriDhcpv6RAOther.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6RAOther.setStatus("current")


class _OnuPriDhcpv6RAMaxInterval_Type(Integer32):
    """Custom type onuPriDhcpv6RAMaxInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_OnuPriDhcpv6RAMaxInterval_Type.__name__ = "Integer32"
_OnuPriDhcpv6RAMaxInterval_Object = MibScalar
onuPriDhcpv6RAMaxInterval = _OnuPriDhcpv6RAMaxInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 19),
    _OnuPriDhcpv6RAMaxInterval_Type()
)
onuPriDhcpv6RAMaxInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6RAMaxInterval.setStatus("current")


class _OnuPriDhcpv6RAMinInterval_Type(Integer32):
    """Custom type onuPriDhcpv6RAMinInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_OnuPriDhcpv6RAMinInterval_Type.__name__ = "Integer32"
_OnuPriDhcpv6RAMinInterval_Object = MibScalar
onuPriDhcpv6RAMinInterval = _OnuPriDhcpv6RAMinInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 20),
    _OnuPriDhcpv6RAMinInterval_Type()
)
onuPriDhcpv6RAMinInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6RAMinInterval.setStatus("current")


class _OnuPriDhcpv6Action_Type(Integer32):
    """Custom type onuPriDhcpv6Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPriDhcpv6Action_Type.__name__ = "Integer32"
_OnuPriDhcpv6Action_Object = MibScalar
onuPriDhcpv6Action = _OnuPriDhcpv6Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 21),
    _OnuPriDhcpv6Action_Type()
)
onuPriDhcpv6Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6Action.setStatus("current")


class _OnuPriDhcpv6Valid_Type(Unsigned32):
    """Custom type onuPriDhcpv6Valid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OnuPriDhcpv6Valid_Type.__name__ = "Unsigned32"
_OnuPriDhcpv6Valid_Object = MibScalar
onuPriDhcpv6Valid = _OnuPriDhcpv6Valid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 22),
    _OnuPriDhcpv6Valid_Type()
)
onuPriDhcpv6Valid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6Valid.setStatus("current")


class _OnuPriDhcpv6DnsMode_Type(Integer32):
    """Custom type onuPriDhcpv6DnsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wanconnection", 0),
          ("static", 1),
          ("hgwproxy", 2))
    )


_OnuPriDhcpv6DnsMode_Type.__name__ = "Integer32"
_OnuPriDhcpv6DnsMode_Object = MibScalar
onuPriDhcpv6DnsMode = _OnuPriDhcpv6DnsMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 19, 23),
    _OnuPriDhcpv6DnsMode_Type()
)
onuPriDhcpv6DnsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPriDhcpv6DnsMode.setStatus("current")
_OnuPriWifiSwitch1_ObjectIdentity = ObjectIdentity
onuPriWifiSwitch1 = _OnuPriWifiSwitch1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20)
)


class _PriWifiSwitchPon1_Type(Integer32):
    """Custom type priWifiSwitchPon1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWifiSwitchPon1_Type.__name__ = "Integer32"
_PriWifiSwitchPon1_Object = MibScalar
priWifiSwitchPon1 = _PriWifiSwitchPon1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 1),
    _PriWifiSwitchPon1_Type()
)
priWifiSwitchPon1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchPon1.setStatus("current")


class _PriWifiSwitchOnu1_Type(Integer32):
    """Custom type priWifiSwitchOnu1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWifiSwitchOnu1_Type.__name__ = "Integer32"
_PriWifiSwitchOnu1_Object = MibScalar
priWifiSwitchOnu1 = _PriWifiSwitchOnu1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 2),
    _PriWifiSwitchOnu1_Type()
)
priWifiSwitchOnu1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchOnu1.setStatus("current")


class _PriWifiApModule1_Type(Integer32):
    """Custom type priWifiApModule1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiApModule1_Type.__name__ = "Integer32"
_PriWifiApModule1_Object = MibScalar
priWifiApModule1 = _PriWifiApModule1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 3),
    _PriWifiApModule1_Type()
)
priWifiApModule1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiApModule1.setStatus("current")


class _PriWifiContry1_Type(Integer32):
    """Custom type priWifiContry1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_PriWifiContry1_Type.__name__ = "Integer32"
_PriWifiContry1_Object = MibScalar
priWifiContry1 = _PriWifiContry1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 4),
    _PriWifiContry1_Type()
)
priWifiContry1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiContry1.setStatus("current")


class _PriWifiChannel1_Type(Integer32):
    """Custom type priWifiChannel1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_PriWifiChannel1_Type.__name__ = "Integer32"
_PriWifiChannel1_Object = MibScalar
priWifiChannel1 = _PriWifiChannel1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 5),
    _PriWifiChannel1_Type()
)
priWifiChannel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiChannel1.setStatus("current")


class _PriWifiStandard1_Type(Integer32):
    """Custom type priWifiStandard1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4),
          ("s80211ac", 5),
          ("s80211a", 6),
          ("s80211an", 7),
          ("s80211nac", 8),
          ("s80211anac", 9))
    )


_PriWifiStandard1_Type.__name__ = "Integer32"
_PriWifiStandard1_Object = MibScalar
priWifiStandard1 = _PriWifiStandard1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 6),
    _PriWifiStandard1_Type()
)
priWifiStandard1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiStandard1.setStatus("current")


class _PriWifiPower1_Type(Integer32):
    """Custom type priWifiPower1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_PriWifiPower1_Type.__name__ = "Integer32"
_PriWifiPower1_Object = MibScalar
priWifiPower1 = _PriWifiPower1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 7),
    _PriWifiPower1_Type()
)
priWifiPower1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiPower1.setStatus("current")


class _PriWifiSwitchAction1_Type(Integer32):
    """Custom type priWifiSwitchAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriWifiSwitchAction1_Type.__name__ = "Integer32"
_PriWifiSwitchAction1_Object = MibScalar
priWifiSwitchAction1 = _PriWifiSwitchAction1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 8),
    _PriWifiSwitchAction1_Type()
)
priWifiSwitchAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchAction1.setStatus("current")


class _PriWifiChannelWidth1_Type(Integer32):
    """Custom type priWifiChannelWidth1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s80", 2),
          ("s20_40", 3))
    )


_PriWifiChannelWidth1_Type.__name__ = "Integer32"
_PriWifiChannelWidth1_Object = MibScalar
priWifiChannelWidth1 = _PriWifiChannelWidth1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 9),
    _PriWifiChannelWidth1_Type()
)
priWifiChannelWidth1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiChannelWidth1.setStatus("current")


class _PriWifiEasyMeshStatus_Type(Integer32):
    """Custom type priWifiEasyMeshStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiEasyMeshStatus_Type.__name__ = "Integer32"
_PriWifiEasyMeshStatus_Object = MibScalar
priWifiEasyMeshStatus = _PriWifiEasyMeshStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 20, 10),
    _PriWifiEasyMeshStatus_Type()
)
priWifiEasyMeshStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiEasyMeshStatus.setStatus("current")
_OnuPriWanConnV6_ObjectIdentity = ObjectIdentity
onuPriWanConnV6 = _OnuPriWanConnV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21)
)
_PriV6WanConnAdd_ObjectIdentity = ObjectIdentity
priV6WanConnAdd = _PriV6WanConnAdd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 1)
)


class _PriV6WanAddPon_Type(Integer32):
    """Custom type priV6WanAddPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriV6WanAddPon_Type.__name__ = "Integer32"
_PriV6WanAddPon_Object = MibScalar
priV6WanAddPon = _PriV6WanAddPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 1, 1),
    _PriV6WanAddPon_Type()
)
priV6WanAddPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6WanAddPon.setStatus("current")


class _PriV6WanAddOnu_Type(Integer32):
    """Custom type priV6WanAddOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriV6WanAddOnu_Type.__name__ = "Integer32"
_PriV6WanAddOnu_Object = MibScalar
priV6WanAddOnu = _PriV6WanAddOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 1, 2),
    _PriV6WanAddOnu_Type()
)
priV6WanAddOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6WanAddOnu.setStatus("current")


class _PriV6ConnType_Type(Integer32):
    """Custom type priV6ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_PriV6ConnType_Type.__name__ = "Integer32"
_PriV6ConnType_Object = MibScalar
priV6ConnType = _PriV6ConnType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 1, 3),
    _PriV6ConnType_Type()
)
priV6ConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnType.setStatus("current")


class _PriV6ConnAddAction_Type(Integer32):
    """Custom type priV6ConnAddAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_PriV6ConnAddAction_Type.__name__ = "Integer32"
_PriV6ConnAddAction_Object = MibScalar
priV6ConnAddAction = _PriV6ConnAddAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 1, 4),
    _PriV6ConnAddAction_Type()
)
priV6ConnAddAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnAddAction.setStatus("current")
_PriV6WanConnDelete_ObjectIdentity = ObjectIdentity
priV6WanConnDelete = _PriV6WanConnDelete_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 2)
)


class _PriV6WanDeletePon_Type(Integer32):
    """Custom type priV6WanDeletePon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriV6WanDeletePon_Type.__name__ = "Integer32"
_PriV6WanDeletePon_Object = MibScalar
priV6WanDeletePon = _PriV6WanDeletePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 2, 1),
    _PriV6WanDeletePon_Type()
)
priV6WanDeletePon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6WanDeletePon.setStatus("current")


class _PriV6WanDeleteOnu_Type(Integer32):
    """Custom type priV6WanDeleteOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriV6WanDeleteOnu_Type.__name__ = "Integer32"
_PriV6WanDeleteOnu_Object = MibScalar
priV6WanDeleteOnu = _PriV6WanDeleteOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 2, 2),
    _PriV6WanDeleteOnu_Type()
)
priV6WanDeleteOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6WanDeleteOnu.setStatus("current")


class _PriV6ConnIndexD_Type(Integer32):
    """Custom type priV6ConnIndexD based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriV6ConnIndexD_Type.__name__ = "Integer32"
_PriV6ConnIndexD_Object = MibScalar
priV6ConnIndexD = _PriV6ConnIndexD_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 2, 3),
    _PriV6ConnIndexD_Type()
)
priV6ConnIndexD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIndexD.setStatus("current")


class _PriV6ConnDeleteAction_Type(Integer32):
    """Custom type priV6ConnDeleteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("delete", 1)
    )


_PriV6ConnDeleteAction_Type.__name__ = "Integer32"
_PriV6ConnDeleteAction_Object = MibScalar
priV6ConnDeleteAction = _PriV6ConnDeleteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 2, 4),
    _PriV6ConnDeleteAction_Type()
)
priV6ConnDeleteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDeleteAction.setStatus("current")
_PriV6WanConnCfg_ObjectIdentity = ObjectIdentity
priV6WanConnCfg = _PriV6WanConnCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3)
)


class _PriV6ConnPon_Type(Integer32):
    """Custom type priV6ConnPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriV6ConnPon_Type.__name__ = "Integer32"
_PriV6ConnPon_Object = MibScalar
priV6ConnPon = _PriV6ConnPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 1),
    _PriV6ConnPon_Type()
)
priV6ConnPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPon.setStatus("current")


class _PriV6ConnOnu_Type(Integer32):
    """Custom type priV6ConnOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriV6ConnOnu_Type.__name__ = "Integer32"
_PriV6ConnOnu_Object = MibScalar
priV6ConnOnu = _PriV6ConnOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 2),
    _PriV6ConnOnu_Type()
)
priV6ConnOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnOnu.setStatus("current")


class _PriV6ConnIndex_Type(Integer32):
    """Custom type priV6ConnIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriV6ConnIndex_Type.__name__ = "Integer32"
_PriV6ConnIndex_Object = MibScalar
priV6ConnIndex = _PriV6ConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 3),
    _PriV6ConnIndex_Type()
)
priV6ConnIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIndex.setStatus("current")


class _PriV6ConnBindLan_Type(Integer32):
    """Custom type priV6ConnBindLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_PriV6ConnBindLan_Type.__name__ = "Integer32"
_PriV6ConnBindLan_Object = MibScalar
priV6ConnBindLan = _PriV6ConnBindLan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 4),
    _PriV6ConnBindLan_Type()
)
priV6ConnBindLan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnBindLan.setStatus("current")


class _PriV6ConnBindSsid_Type(Integer32):
    """Custom type priV6ConnBindSsid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriV6ConnBindSsid_Type.__name__ = "Integer32"
_PriV6ConnBindSsid_Object = MibScalar
priV6ConnBindSsid = _PriV6ConnBindSsid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 5),
    _PriV6ConnBindSsid_Type()
)
priV6ConnBindSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnBindSsid.setStatus("current")


class _PriV6WanMode_Type(Integer32):
    """Custom type priV6WanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("voip", 7),
          ("other", 100))
    )


_PriV6WanMode_Type.__name__ = "Integer32"
_PriV6WanMode_Object = MibScalar
priV6WanMode = _PriV6WanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 6),
    _PriV6WanMode_Type()
)
priV6WanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6WanMode.setStatus("current")


class _PriV6ConnTypeCfg_Type(Integer32):
    """Custom type priV6ConnTypeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_PriV6ConnTypeCfg_Type.__name__ = "Integer32"
_PriV6ConnTypeCfg_Object = MibScalar
priV6ConnTypeCfg = _PriV6ConnTypeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 7),
    _PriV6ConnTypeCfg_Type()
)
priV6ConnTypeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTypeCfg.setStatus("current")


class _PriV6ConnVlanId_Type(Integer32):
    """Custom type priV6ConnVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriV6ConnVlanId_Type.__name__ = "Integer32"
_PriV6ConnVlanId_Object = MibScalar
priV6ConnVlanId = _PriV6ConnVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 8),
    _PriV6ConnVlanId_Type()
)
priV6ConnVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnVlanId.setStatus("current")


class _PriV6ConnVlanCos_Type(Integer32):
    """Custom type priV6ConnVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriV6ConnVlanCos_Type.__name__ = "Integer32"
_PriV6ConnVlanCos_Object = MibScalar
priV6ConnVlanCos = _PriV6ConnVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 9),
    _PriV6ConnVlanCos_Type()
)
priV6ConnVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnVlanCos.setStatus("current")


class _PriV6ConnIpProtocol_Type(Integer32):
    """Custom type priV6ConnIpProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 0),
          ("ipv6", 1),
          ("ipv4_ipv6", 2))
    )


_PriV6ConnIpProtocol_Type.__name__ = "Integer32"
_PriV6ConnIpProtocol_Object = MibScalar
priV6ConnIpProtocol = _PriV6ConnIpProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 10),
    _PriV6ConnIpProtocol_Type()
)
priV6ConnIpProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIpProtocol.setStatus("current")


class _PriV6ConnModeCfg_Type(Integer32):
    """Custom type priV6ConnModeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_PriV6ConnModeCfg_Type.__name__ = "Integer32"
_PriV6ConnModeCfg_Object = MibScalar
priV6ConnModeCfg = _PriV6ConnModeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 11),
    _PriV6ConnModeCfg_Type()
)
priV6ConnModeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnModeCfg.setStatus("current")
_PriV6ConnIpAddressIpv4_Type = IpAddress
_PriV6ConnIpAddressIpv4_Object = MibScalar
priV6ConnIpAddressIpv4 = _PriV6ConnIpAddressIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 12),
    _PriV6ConnIpAddressIpv4_Type()
)
priV6ConnIpAddressIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIpAddressIpv4.setStatus("current")
_PriV6ConnIpNetMaskIpv4_Type = IpAddress
_PriV6ConnIpNetMaskIpv4_Object = MibScalar
priV6ConnIpNetMaskIpv4 = _PriV6ConnIpNetMaskIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 13),
    _PriV6ConnIpNetMaskIpv4_Type()
)
priV6ConnIpNetMaskIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIpNetMaskIpv4.setStatus("current")
_PriV6ConnGatewayIpv4_Type = IpAddress
_PriV6ConnGatewayIpv4_Object = MibScalar
priV6ConnGatewayIpv4 = _PriV6ConnGatewayIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 14),
    _PriV6ConnGatewayIpv4_Type()
)
priV6ConnGatewayIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnGatewayIpv4.setStatus("current")


class _PriV6ConnDnsEnableIpv4_Type(Integer32):
    """Custom type priV6ConnDnsEnableIpv4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDnsEnableIpv4_Type.__name__ = "Integer32"
_PriV6ConnDnsEnableIpv4_Object = MibScalar
priV6ConnDnsEnableIpv4 = _PriV6ConnDnsEnableIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 15),
    _PriV6ConnDnsEnableIpv4_Type()
)
priV6ConnDnsEnableIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDnsEnableIpv4.setStatus("current")
_PriV6ConnMasterDnsIpv4_Type = IpAddress
_PriV6ConnMasterDnsIpv4_Object = MibScalar
priV6ConnMasterDnsIpv4 = _PriV6ConnMasterDnsIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 16),
    _PriV6ConnMasterDnsIpv4_Type()
)
priV6ConnMasterDnsIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnMasterDnsIpv4.setStatus("current")
_PriV6ConnSlaveDnsIpv4_Type = IpAddress
_PriV6ConnSlaveDnsIpv4_Object = MibScalar
priV6ConnSlaveDnsIpv4 = _PriV6ConnSlaveDnsIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 17),
    _PriV6ConnSlaveDnsIpv4_Type()
)
priV6ConnSlaveDnsIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSlaveDnsIpv4.setStatus("current")


class _PriV6ConnNatEnable_Type(Integer32):
    """Custom type priV6ConnNatEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnNatEnable_Type.__name__ = "Integer32"
_PriV6ConnNatEnable_Object = MibScalar
priV6ConnNatEnable = _PriV6ConnNatEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 18),
    _PriV6ConnNatEnable_Type()
)
priV6ConnNatEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnNatEnable.setStatus("current")
_PriV6ConnAddressIpv6_Type = OctetString
_PriV6ConnAddressIpv6_Object = MibScalar
priV6ConnAddressIpv6 = _PriV6ConnAddressIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 19),
    _PriV6ConnAddressIpv6_Type()
)
priV6ConnAddressIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnAddressIpv6.setStatus("current")


class _PriV6ConnPrefixLenIpv6_Type(Integer32):
    """Custom type priV6ConnPrefixLenIpv6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_PriV6ConnPrefixLenIpv6_Type.__name__ = "Integer32"
_PriV6ConnPrefixLenIpv6_Object = MibScalar
priV6ConnPrefixLenIpv6 = _PriV6ConnPrefixLenIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 20),
    _PriV6ConnPrefixLenIpv6_Type()
)
priV6ConnPrefixLenIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPrefixLenIpv6.setStatus("current")
_PriV6ConnGatewayIpv6_Type = OctetString
_PriV6ConnGatewayIpv6_Object = MibScalar
priV6ConnGatewayIpv6 = _PriV6ConnGatewayIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 21),
    _PriV6ConnGatewayIpv6_Type()
)
priV6ConnGatewayIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnGatewayIpv6.setStatus("current")


class _PriV6ConnDnsEnableIpv6_Type(Integer32):
    """Custom type priV6ConnDnsEnableIpv6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDnsEnableIpv6_Type.__name__ = "Integer32"
_PriV6ConnDnsEnableIpv6_Object = MibScalar
priV6ConnDnsEnableIpv6 = _PriV6ConnDnsEnableIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 22),
    _PriV6ConnDnsEnableIpv6_Type()
)
priV6ConnDnsEnableIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDnsEnableIpv6.setStatus("current")
_PriV6ConnMasterDnsIpv6_Type = OctetString
_PriV6ConnMasterDnsIpv6_Object = MibScalar
priV6ConnMasterDnsIpv6 = _PriV6ConnMasterDnsIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 23),
    _PriV6ConnMasterDnsIpv6_Type()
)
priV6ConnMasterDnsIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnMasterDnsIpv6.setStatus("current")
_PriV6ConnSlaveDnsIpv6_Type = OctetString
_PriV6ConnSlaveDnsIpv6_Object = MibScalar
priV6ConnSlaveDnsIpv6 = _PriV6ConnSlaveDnsIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 24),
    _PriV6ConnSlaveDnsIpv6_Type()
)
priV6ConnSlaveDnsIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSlaveDnsIpv6.setStatus("current")


class _PriV6ConnSlaac_Type(Integer32):
    """Custom type priV6ConnSlaac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnSlaac_Type.__name__ = "Integer32"
_PriV6ConnSlaac_Object = MibScalar
priV6ConnSlaac = _PriV6ConnSlaac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 25),
    _PriV6ConnSlaac_Type()
)
priV6ConnSlaac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSlaac.setStatus("current")


class _PriV6ConnPppoeProxy_Type(Integer32):
    """Custom type priV6ConnPppoeProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnPppoeProxy_Type.__name__ = "Integer32"
_PriV6ConnPppoeProxy_Object = MibScalar
priV6ConnPppoeProxy = _PriV6ConnPppoeProxy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 26),
    _PriV6ConnPppoeProxy_Type()
)
priV6ConnPppoeProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeProxy.setStatus("current")
_PriV6ConnPppoeUsername_Type = OctetString
_PriV6ConnPppoeUsername_Object = MibScalar
priV6ConnPppoeUsername = _PriV6ConnPppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 27),
    _PriV6ConnPppoeUsername_Type()
)
priV6ConnPppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeUsername.setStatus("current")
_PriV6ConnPppoePassword_Type = OctetString
_PriV6ConnPppoePassword_Object = MibScalar
priV6ConnPppoePassword = _PriV6ConnPppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 28),
    _PriV6ConnPppoePassword_Type()
)
priV6ConnPppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoePassword.setStatus("current")
_PriV6ConnPppoeSerName_Type = OctetString
_PriV6ConnPppoeSerName_Object = MibScalar
priV6ConnPppoeSerName = _PriV6ConnPppoeSerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 29),
    _PriV6ConnPppoeSerName_Type()
)
priV6ConnPppoeSerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeSerName.setStatus("current")


class _PriV6ConnPppoeMode_Type(Integer32):
    """Custom type priV6ConnPppoeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("flowConnect", 1))
    )


_PriV6ConnPppoeMode_Type.__name__ = "Integer32"
_PriV6ConnPppoeMode_Object = MibScalar
priV6ConnPppoeMode = _PriV6ConnPppoeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 30),
    _PriV6ConnPppoeMode_Type()
)
priV6ConnPppoeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeMode.setStatus("current")


class _PriV6ConnDhcpv6ClientAddress_Type(Integer32):
    """Custom type priV6ConnDhcpv6ClientAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDhcpv6ClientAddress_Type.__name__ = "Integer32"
_PriV6ConnDhcpv6ClientAddress_Object = MibScalar
priV6ConnDhcpv6ClientAddress = _PriV6ConnDhcpv6ClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 31),
    _PriV6ConnDhcpv6ClientAddress_Type()
)
priV6ConnDhcpv6ClientAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDhcpv6ClientAddress.setStatus("current")


class _PriV6ConnDhcpv6ClientPrefix_Type(Integer32):
    """Custom type priV6ConnDhcpv6ClientPrefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDhcpv6ClientPrefix_Type.__name__ = "Integer32"
_PriV6ConnDhcpv6ClientPrefix_Object = MibScalar
priV6ConnDhcpv6ClientPrefix = _PriV6ConnDhcpv6ClientPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 32),
    _PriV6ConnDhcpv6ClientPrefix_Type()
)
priV6ConnDhcpv6ClientPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDhcpv6ClientPrefix.setStatus("current")


class _PriV6ConnDsLiteEnable_Type(Integer32):
    """Custom type priV6ConnDsLiteEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDsLiteEnable_Type.__name__ = "Integer32"
_PriV6ConnDsLiteEnable_Object = MibScalar
priV6ConnDsLiteEnable = _PriV6ConnDsLiteEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 33),
    _PriV6ConnDsLiteEnable_Type()
)
priV6ConnDsLiteEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteEnable.setStatus("current")


class _PriV6ConnDsLiteAftrMode_Type(Integer32):
    """Custom type priV6ConnDsLiteAftrMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dhcpv6", 0),
          ("manual", 1))
    )


_PriV6ConnDsLiteAftrMode_Type.__name__ = "Integer32"
_PriV6ConnDsLiteAftrMode_Object = MibScalar
priV6ConnDsLiteAftrMode = _PriV6ConnDsLiteAftrMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 34),
    _PriV6ConnDsLiteAftrMode_Type()
)
priV6ConnDsLiteAftrMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteAftrMode.setStatus("current")


class _PriV6ConnDsLiteAddressType_Type(Integer32):
    """Custom type priV6ConnDsLiteAddressType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ipv6", 0),
          ("dns", 1))
    )


_PriV6ConnDsLiteAddressType_Type.__name__ = "Integer32"
_PriV6ConnDsLiteAddressType_Object = MibScalar
priV6ConnDsLiteAddressType = _PriV6ConnDsLiteAddressType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 35),
    _PriV6ConnDsLiteAddressType_Type()
)
priV6ConnDsLiteAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteAddressType.setStatus("current")
_PriV6ConnDsLiteAddress_Type = OctetString
_PriV6ConnDsLiteAddress_Object = MibScalar
priV6ConnDsLiteAddress = _PriV6ConnDsLiteAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 36),
    _PriV6ConnDsLiteAddress_Type()
)
priV6ConnDsLiteAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteAddress.setStatus("current")


class _PriV6ConnQosEnable_Type(Integer32):
    """Custom type priV6ConnQosEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnQosEnable_Type.__name__ = "Integer32"
_PriV6ConnQosEnable_Object = MibScalar
priV6ConnQosEnable = _PriV6ConnQosEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 37),
    _PriV6ConnQosEnable_Type()
)
priV6ConnQosEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnQosEnable.setStatus("current")


class _PriV6ConnVlanMode_Type(Integer32):
    """Custom type priV6ConnVlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_PriV6ConnVlanMode_Type.__name__ = "Integer32"
_PriV6ConnVlanMode_Object = MibScalar
priV6ConnVlanMode = _PriV6ConnVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 38),
    _PriV6ConnVlanMode_Type()
)
priV6ConnVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnVlanMode.setStatus("current")


class _PriV6ConnTranslationEnable_Type(Integer32):
    """Custom type priV6ConnTranslationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnTranslationEnable_Type.__name__ = "Integer32"
_PriV6ConnTranslationEnable_Object = MibScalar
priV6ConnTranslationEnable = _PriV6ConnTranslationEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 39),
    _PriV6ConnTranslationEnable_Type()
)
priV6ConnTranslationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTranslationEnable.setStatus("current")


class _PriV6ConnTranslationVlan_Type(Integer32):
    """Custom type priV6ConnTranslationVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_PriV6ConnTranslationVlan_Type.__name__ = "Integer32"
_PriV6ConnTranslationVlan_Object = MibScalar
priV6ConnTranslationVlan = _PriV6ConnTranslationVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 40),
    _PriV6ConnTranslationVlan_Type()
)
priV6ConnTranslationVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTranslationVlan.setStatus("current")


class _PriV6ConnTranslationCos_Type(Integer32):
    """Custom type priV6ConnTranslationCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriV6ConnTranslationCos_Type.__name__ = "Integer32"
_PriV6ConnTranslationCos_Object = MibScalar
priV6ConnTranslationCos = _PriV6ConnTranslationCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 41),
    _PriV6ConnTranslationCos_Type()
)
priV6ConnTranslationCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTranslationCos.setStatus("current")


class _PriV6ConnQinqEnable_Type(Integer32):
    """Custom type priV6ConnQinqEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnQinqEnable_Type.__name__ = "Integer32"
_PriV6ConnQinqEnable_Object = MibScalar
priV6ConnQinqEnable = _PriV6ConnQinqEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 42),
    _PriV6ConnQinqEnable_Type()
)
priV6ConnQinqEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnQinqEnable.setStatus("current")


class _PriV6ConnQinqTpid_Type(Integer32):
    """Custom type priV6ConnQinqTpid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_PriV6ConnQinqTpid_Type.__name__ = "Integer32"
_PriV6ConnQinqTpid_Object = MibScalar
priV6ConnQinqTpid = _PriV6ConnQinqTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 43),
    _PriV6ConnQinqTpid_Type()
)
priV6ConnQinqTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnQinqTpid.setStatus("current")


class _PriV6ConnSvlanId_Type(Integer32):
    """Custom type priV6ConnSvlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_PriV6ConnSvlanId_Type.__name__ = "Integer32"
_PriV6ConnSvlanId_Object = MibScalar
priV6ConnSvlanId = _PriV6ConnSvlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 44),
    _PriV6ConnSvlanId_Type()
)
priV6ConnSvlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSvlanId.setStatus("current")


class _PriV6ConnSvlanCos_Type(Integer32):
    """Custom type priV6ConnSvlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriV6ConnSvlanCos_Type.__name__ = "Integer32"
_PriV6ConnSvlanCos_Object = MibScalar
priV6ConnSvlanCos = _PriV6ConnSvlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 45),
    _PriV6ConnSvlanCos_Type()
)
priV6ConnSvlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSvlanCos.setStatus("current")


class _PriV6ConnRouteMtu_Type(Integer32):
    """Custom type priV6ConnRouteMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(576, 1500),
    )


_PriV6ConnRouteMtu_Type.__name__ = "Integer32"
_PriV6ConnRouteMtu_Object = MibScalar
priV6ConnRouteMtu = _PriV6ConnRouteMtu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 46),
    _PriV6ConnRouteMtu_Type()
)
priV6ConnRouteMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnRouteMtu.setStatus("current")


class _PriV6ConnCfgAction_Type(Integer32):
    """Custom type priV6ConnCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_PriV6ConnCfgAction_Type.__name__ = "Integer32"
_PriV6ConnCfgAction_Object = MibScalar
priV6ConnCfgAction = _PriV6ConnCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 3, 47),
    _PriV6ConnCfgAction_Type()
)
priV6ConnCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnCfgAction.setStatus("current")
_PriV6WanConnCommit_ObjectIdentity = ObjectIdentity
priV6WanConnCommit = _PriV6WanConnCommit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 4)
)


class _PriV6ConnCommitPon_Type(Integer32):
    """Custom type priV6ConnCommitPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriV6ConnCommitPon_Type.__name__ = "Integer32"
_PriV6ConnCommitPon_Object = MibScalar
priV6ConnCommitPon = _PriV6ConnCommitPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 4, 1),
    _PriV6ConnCommitPon_Type()
)
priV6ConnCommitPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnCommitPon.setStatus("current")


class _PriV6ConnCommitOnu_Type(Integer32):
    """Custom type priV6ConnCommitOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriV6ConnCommitOnu_Type.__name__ = "Integer32"
_PriV6ConnCommitOnu_Object = MibScalar
priV6ConnCommitOnu = _PriV6ConnCommitOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 4, 2),
    _PriV6ConnCommitOnu_Type()
)
priV6ConnCommitOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnCommitOnu.setStatus("current")


class _PriV6ConnCommitAction_Type(Integer32):
    """Custom type priV6ConnCommitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriV6ConnCommitAction_Type.__name__ = "Integer32"
_PriV6ConnCommitAction_Object = MibScalar
priV6ConnCommitAction = _PriV6ConnCommitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 21, 4, 3),
    _PriV6ConnCommitAction_Type()
)
priV6ConnCommitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnCommitAction.setStatus("current")
_OnuPriTr069_ObjectIdentity = ObjectIdentity
onuPriTr069 = _OnuPriTr069_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22)
)
_OnuPriTr069Manage_ObjectIdentity = ObjectIdentity
onuPriTr069Manage = _OnuPriTr069Manage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1)
)


class _PriMngPonID_Type(Integer32):
    """Custom type priMngPonID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriMngPonID_Type.__name__ = "Integer32"
_PriMngPonID_Object = MibScalar
priMngPonID = _PriMngPonID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 1),
    _PriMngPonID_Type()
)
priMngPonID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngPonID.setStatus("current")


class _PriMngOnuID_Type(Integer32):
    """Custom type priMngOnuID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriMngOnuID_Type.__name__ = "Integer32"
_PriMngOnuID_Object = MibScalar
priMngOnuID = _PriMngOnuID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 2),
    _PriMngOnuID_Type()
)
priMngOnuID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngOnuID.setStatus("current")


class _PriMngStatus_Type(Integer32):
    """Custom type priMngStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriMngStatus_Type.__name__ = "Integer32"
_PriMngStatus_Object = MibScalar
priMngStatus = _PriMngStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 3),
    _PriMngStatus_Type()
)
priMngStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngStatus.setStatus("current")


class _PriMngAcsAddress_Type(OctetString):
    """Custom type priMngAcsAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_PriMngAcsAddress_Type.__name__ = "OctetString"
_PriMngAcsAddress_Object = MibScalar
priMngAcsAddress = _PriMngAcsAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 4),
    _PriMngAcsAddress_Type()
)
priMngAcsAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngAcsAddress.setStatus("current")


class _PriMngAcsUsername_Type(OctetString):
    """Custom type priMngAcsUsername based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_PriMngAcsUsername_Type.__name__ = "OctetString"
_PriMngAcsUsername_Object = MibScalar
priMngAcsUsername = _PriMngAcsUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 5),
    _PriMngAcsUsername_Type()
)
priMngAcsUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngAcsUsername.setStatus("current")


class _PriMngAcsPassword_Type(OctetString):
    """Custom type priMngAcsPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_PriMngAcsPassword_Type.__name__ = "OctetString"
_PriMngAcsPassword_Object = MibScalar
priMngAcsPassword = _PriMngAcsPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 6),
    _PriMngAcsPassword_Type()
)
priMngAcsPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngAcsPassword.setStatus("current")


class _PriMngCertificateEn_Type(Integer32):
    """Custom type priMngCertificateEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriMngCertificateEn_Type.__name__ = "Integer32"
_PriMngCertificateEn_Object = MibScalar
priMngCertificateEn = _PriMngCertificateEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 7),
    _PriMngCertificateEn_Type()
)
priMngCertificateEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngCertificateEn.setStatus("current")


class _PriMngInformEn_Type(Integer32):
    """Custom type priMngInformEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriMngInformEn_Type.__name__ = "Integer32"
_PriMngInformEn_Object = MibScalar
priMngInformEn = _PriMngInformEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 8),
    _PriMngInformEn_Type()
)
priMngInformEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngInformEn.setStatus("current")


class _PriMngInformIntervalTime_Type(Unsigned32):
    """Custom type priMngInformIntervalTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PriMngInformIntervalTime_Type.__name__ = "Unsigned32"
_PriMngInformIntervalTime_Object = MibScalar
priMngInformIntervalTime = _PriMngInformIntervalTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 9),
    _PriMngInformIntervalTime_Type()
)
priMngInformIntervalTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngInformIntervalTime.setStatus("current")


class _PriMngRevConnUsername_Type(OctetString):
    """Custom type priMngRevConnUsername based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_PriMngRevConnUsername_Type.__name__ = "OctetString"
_PriMngRevConnUsername_Object = MibScalar
priMngRevConnUsername = _PriMngRevConnUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 10),
    _PriMngRevConnUsername_Type()
)
priMngRevConnUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngRevConnUsername.setStatus("current")


class _PriMngRevConnPassword_Type(OctetString):
    """Custom type priMngRevConnPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_PriMngRevConnPassword_Type.__name__ = "OctetString"
_PriMngRevConnPassword_Object = MibScalar
priMngRevConnPassword = _PriMngRevConnPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 11),
    _PriMngRevConnPassword_Type()
)
priMngRevConnPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngRevConnPassword.setStatus("current")


class _PriMngAction_Type(Integer32):
    """Custom type priMngAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_PriMngAction_Type.__name__ = "Integer32"
_PriMngAction_Object = MibScalar
priMngAction = _PriMngAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 1, 12),
    _PriMngAction_Type()
)
priMngAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMngAction.setStatus("current")
_OnuPriTr069Stun_ObjectIdentity = ObjectIdentity
onuPriTr069Stun = _OnuPriTr069Stun_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2)
)


class _PriStunPonID_Type(Integer32):
    """Custom type priStunPonID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriStunPonID_Type.__name__ = "Integer32"
_PriStunPonID_Object = MibScalar
priStunPonID = _PriStunPonID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 1),
    _PriStunPonID_Type()
)
priStunPonID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunPonID.setStatus("current")


class _PriStunOnuID_Type(Integer32):
    """Custom type priStunOnuID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriStunOnuID_Type.__name__ = "Integer32"
_PriStunOnuID_Object = MibScalar
priStunOnuID = _PriStunOnuID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 2),
    _PriStunOnuID_Type()
)
priStunOnuID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunOnuID.setStatus("current")


class _PriStunStatus_Type(Integer32):
    """Custom type priStunStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriStunStatus_Type.__name__ = "Integer32"
_PriStunStatus_Object = MibScalar
priStunStatus = _PriStunStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 3),
    _PriStunStatus_Type()
)
priStunStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunStatus.setStatus("current")


class _PriStunAddress_Type(OctetString):
    """Custom type priStunAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_PriStunAddress_Type.__name__ = "OctetString"
_PriStunAddress_Object = MibScalar
priStunAddress = _PriStunAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 4),
    _PriStunAddress_Type()
)
priStunAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunAddress.setStatus("current")


class _PriStunPort_Type(Integer32):
    """Custom type priStunPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriStunPort_Type.__name__ = "Integer32"
_PriStunPort_Object = MibScalar
priStunPort = _PriStunPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 5),
    _PriStunPort_Type()
)
priStunPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunPort.setStatus("current")


class _PriStunUsername_Type(OctetString):
    """Custom type priStunUsername based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_PriStunUsername_Type.__name__ = "OctetString"
_PriStunUsername_Object = MibScalar
priStunUsername = _PriStunUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 6),
    _PriStunUsername_Type()
)
priStunUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunUsername.setStatus("current")


class _PriStunPassword_Type(OctetString):
    """Custom type priStunPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_PriStunPassword_Type.__name__ = "OctetString"
_PriStunPassword_Object = MibScalar
priStunPassword = _PriStunPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 7),
    _PriStunPassword_Type()
)
priStunPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunPassword.setStatus("current")


class _PriStunAction_Type(Integer32):
    """Custom type priStunAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("submit", 1)
    )


_PriStunAction_Type.__name__ = "Integer32"
_PriStunAction_Object = MibScalar
priStunAction = _PriStunAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 1, 22, 2, 8),
    _PriStunAction_Type()
)
priStunAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priStunAction.setStatus("current")
_OnuPriGlobalInfo_ObjectIdentity = ObjectIdentity
onuPriGlobalInfo = _OnuPriGlobalInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2)
)
_PriIgmpAdminTable_Object = MibTable
priIgmpAdminTable = _PriIgmpAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 1)
)
if mibBuilder.loadTexts:
    priIgmpAdminTable.setStatus("current")
_PriIgmpAdminEntry_Object = MibTableRow
priIgmpAdminEntry = _PriIgmpAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 1, 1)
)
priIgmpAdminEntry.setIndexNames(
    (0, "V1600D", "priIgmpAdminPonS"),
    (0, "V1600D", "priIgmpAdminOnuS"),
)
if mibBuilder.loadTexts:
    priIgmpAdminEntry.setStatus("current")


class _PriIgmpAdminPonS_Type(Integer32):
    """Custom type priIgmpAdminPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriIgmpAdminPonS_Type.__name__ = "Integer32"
_PriIgmpAdminPonS_Object = MibTableColumn
priIgmpAdminPonS = _PriIgmpAdminPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 1, 1, 1),
    _PriIgmpAdminPonS_Type()
)
priIgmpAdminPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdminPonS.setStatus("current")


class _PriIgmpAdminOnuS_Type(Integer32):
    """Custom type priIgmpAdminOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriIgmpAdminOnuS_Type.__name__ = "Integer32"
_PriIgmpAdminOnuS_Object = MibTableColumn
priIgmpAdminOnuS = _PriIgmpAdminOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 1, 1, 2),
    _PriIgmpAdminOnuS_Type()
)
priIgmpAdminOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdminOnuS.setStatus("current")


class _PriIgmpAdminEnableS_Type(Integer32):
    """Custom type priIgmpAdminEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriIgmpAdminEnableS_Type.__name__ = "Integer32"
_PriIgmpAdminEnableS_Object = MibTableColumn
priIgmpAdminEnableS = _PriIgmpAdminEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 1, 1, 3),
    _PriIgmpAdminEnableS_Type()
)
priIgmpAdminEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priIgmpAdminEnableS.setStatus("current")
_PriCatvStatusTable_Object = MibTable
priCatvStatusTable = _PriCatvStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 2)
)
if mibBuilder.loadTexts:
    priCatvStatusTable.setStatus("current")
_PriCatvStatusEntry_Object = MibTableRow
priCatvStatusEntry = _PriCatvStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 2, 1)
)
priCatvStatusEntry.setIndexNames(
    (0, "V1600D", "priCatvStatusPonS"),
    (0, "V1600D", "priCatvSatusOnuS"),
)
if mibBuilder.loadTexts:
    priCatvStatusEntry.setStatus("current")


class _PriCatvStatusPonS_Type(Integer32):
    """Custom type priCatvStatusPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriCatvStatusPonS_Type.__name__ = "Integer32"
_PriCatvStatusPonS_Object = MibTableColumn
priCatvStatusPonS = _PriCatvStatusPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 2, 1, 1),
    _PriCatvStatusPonS_Type()
)
priCatvStatusPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvStatusPonS.setStatus("current")


class _PriCatvSatusOnuS_Type(Integer32):
    """Custom type priCatvSatusOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriCatvSatusOnuS_Type.__name__ = "Integer32"
_PriCatvSatusOnuS_Object = MibTableColumn
priCatvSatusOnuS = _PriCatvSatusOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 2, 1, 2),
    _PriCatvSatusOnuS_Type()
)
priCatvSatusOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvSatusOnuS.setStatus("current")


class _PriCatvStatusS_Type(Integer32):
    """Custom type priCatvStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriCatvStatusS_Type.__name__ = "Integer32"
_PriCatvStatusS_Object = MibTableColumn
priCatvStatusS = _PriCatvStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 2, 1, 3),
    _PriCatvStatusS_Type()
)
priCatvStatusS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCatvStatusS.setStatus("current")
_PriCtcoamSkipTable_Object = MibTable
priCtcoamSkipTable = _PriCtcoamSkipTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 3)
)
if mibBuilder.loadTexts:
    priCtcoamSkipTable.setStatus("current")
_PriCtcoamSkipEntry_Object = MibTableRow
priCtcoamSkipEntry = _PriCtcoamSkipEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 3, 1)
)
priCtcoamSkipEntry.setIndexNames(
    (0, "V1600D", "priCtcoamSkipPonS"),
    (0, "V1600D", "priCtcOamSkipOnuS"),
)
if mibBuilder.loadTexts:
    priCtcoamSkipEntry.setStatus("current")


class _PriCtcoamSkipPonS_Type(Integer32):
    """Custom type priCtcoamSkipPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriCtcoamSkipPonS_Type.__name__ = "Integer32"
_PriCtcoamSkipPonS_Object = MibTableColumn
priCtcoamSkipPonS = _PriCtcoamSkipPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 3, 1, 1),
    _PriCtcoamSkipPonS_Type()
)
priCtcoamSkipPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcoamSkipPonS.setStatus("current")


class _PriCtcOamSkipOnuS_Type(Integer32):
    """Custom type priCtcOamSkipOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriCtcOamSkipOnuS_Type.__name__ = "Integer32"
_PriCtcOamSkipOnuS_Object = MibTableColumn
priCtcOamSkipOnuS = _PriCtcOamSkipOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 3, 1, 2),
    _PriCtcOamSkipOnuS_Type()
)
priCtcOamSkipOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcOamSkipOnuS.setStatus("current")


class _PriCtcoamSkipS_Type(Integer32):
    """Custom type priCtcoamSkipS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriCtcoamSkipS_Type.__name__ = "Integer32"
_PriCtcoamSkipS_Object = MibTableColumn
priCtcoamSkipS = _PriCtcoamSkipS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 3, 1, 3),
    _PriCtcoamSkipS_Type()
)
priCtcoamSkipS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priCtcoamSkipS.setStatus("current")
_PriWifiSwichTable_Object = MibTable
priWifiSwichTable = _PriWifiSwichTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4)
)
if mibBuilder.loadTexts:
    priWifiSwichTable.setStatus("current")
_PriWifiSwichEntry_Object = MibTableRow
priWifiSwichEntry = _PriWifiSwichEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1)
)
priWifiSwichEntry.setIndexNames(
    (0, "V1600D", "priWifiSwichPonS"),
    (0, "V1600D", "priWifiSwichOnuS"),
)
if mibBuilder.loadTexts:
    priWifiSwichEntry.setStatus("current")


class _PriWifiSwichPonS_Type(Integer32):
    """Custom type priWifiSwichPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWifiSwichPonS_Type.__name__ = "Integer32"
_PriWifiSwichPonS_Object = MibTableColumn
priWifiSwichPonS = _PriWifiSwichPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 1),
    _PriWifiSwichPonS_Type()
)
priWifiSwichPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichPonS.setStatus("current")


class _PriWifiSwichOnuS_Type(Integer32):
    """Custom type priWifiSwichOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWifiSwichOnuS_Type.__name__ = "Integer32"
_PriWifiSwichOnuS_Object = MibTableColumn
priWifiSwichOnuS = _PriWifiSwichOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 2),
    _PriWifiSwichOnuS_Type()
)
priWifiSwichOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichOnuS.setStatus("current")


class _PriWifiSwichAPModuleS_Type(Integer32):
    """Custom type priWifiSwichAPModuleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiSwichAPModuleS_Type.__name__ = "Integer32"
_PriWifiSwichAPModuleS_Object = MibTableColumn
priWifiSwichAPModuleS = _PriWifiSwichAPModuleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 3),
    _PriWifiSwichAPModuleS_Type()
)
priWifiSwichAPModuleS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichAPModuleS.setStatus("current")


class _PriWifiSwichCountry_Type(Integer32):
    """Custom type priWifiSwichCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_PriWifiSwichCountry_Type.__name__ = "Integer32"
_PriWifiSwichCountry_Object = MibTableColumn
priWifiSwichCountry = _PriWifiSwichCountry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 4),
    _PriWifiSwichCountry_Type()
)
priWifiSwichCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichCountry.setStatus("current")


class _PriWifiSwichChannelS_Type(Integer32):
    """Custom type priWifiSwichChannelS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_PriWifiSwichChannelS_Type.__name__ = "Integer32"
_PriWifiSwichChannelS_Object = MibTableColumn
priWifiSwichChannelS = _PriWifiSwichChannelS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 5),
    _PriWifiSwichChannelS_Type()
)
priWifiSwichChannelS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichChannelS.setStatus("current")


class _PriWifiSwichStandardS_Type(Integer32):
    """Custom type priWifiSwichStandardS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4))
    )


_PriWifiSwichStandardS_Type.__name__ = "Integer32"
_PriWifiSwichStandardS_Object = MibTableColumn
priWifiSwichStandardS = _PriWifiSwichStandardS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 6),
    _PriWifiSwichStandardS_Type()
)
priWifiSwichStandardS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichStandardS.setStatus("current")


class _PriWifiSwitchPower_Type(Integer32):
    """Custom type priWifiSwitchPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_PriWifiSwitchPower_Type.__name__ = "Integer32"
_PriWifiSwitchPower_Object = MibTableColumn
priWifiSwitchPower = _PriWifiSwitchPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 7),
    _PriWifiSwitchPower_Type()
)
priWifiSwitchPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchPower.setStatus("current")


class _PriWifiSwichChannelWidth_Type(Integer32):
    """Custom type priWifiSwichChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s20_40", 3))
    )


_PriWifiSwichChannelWidth_Type.__name__ = "Integer32"
_PriWifiSwichChannelWidth_Object = MibTableColumn
priWifiSwichChannelWidth = _PriWifiSwichChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 4, 1, 8),
    _PriWifiSwichChannelWidth_Type()
)
priWifiSwichChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwichChannelWidth.setStatus("current")
_PriWifiSsidTable_Object = MibTable
priWifiSsidTable = _PriWifiSsidTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5)
)
if mibBuilder.loadTexts:
    priWifiSsidTable.setStatus("current")
_PriWifiSsidEntry_Object = MibTableRow
priWifiSsidEntry = _PriWifiSsidEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1)
)
priWifiSsidEntry.setIndexNames(
    (0, "V1600D", "priWifiSsidPonS"),
    (0, "V1600D", "priWifiSsidOnuS"),
    (0, "V1600D", "priWifiSsidIdS"),
)
if mibBuilder.loadTexts:
    priWifiSsidEntry.setStatus("current")


class _PriWifiSsidPonS_Type(Integer32):
    """Custom type priWifiSsidPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWifiSsidPonS_Type.__name__ = "Integer32"
_PriWifiSsidPonS_Object = MibTableColumn
priWifiSsidPonS = _PriWifiSsidPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 1),
    _PriWifiSsidPonS_Type()
)
priWifiSsidPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidPonS.setStatus("current")


class _PriWifiSsidOnuS_Type(Integer32):
    """Custom type priWifiSsidOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWifiSsidOnuS_Type.__name__ = "Integer32"
_PriWifiSsidOnuS_Object = MibTableColumn
priWifiSsidOnuS = _PriWifiSsidOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 2),
    _PriWifiSsidOnuS_Type()
)
priWifiSsidOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidOnuS.setStatus("current")


class _PriWifiSsidIdS_Type(Integer32):
    """Custom type priWifiSsidIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_PriWifiSsidIdS_Type.__name__ = "Integer32"
_PriWifiSsidIdS_Object = MibTableColumn
priWifiSsidIdS = _PriWifiSsidIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 3),
    _PriWifiSsidIdS_Type()
)
priWifiSsidIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidIdS.setStatus("current")
_PriWifiSsidNameS_Type = OctetString
_PriWifiSsidNameS_Object = MibTableColumn
priWifiSsidNameS = _PriWifiSsidNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 4),
    _PriWifiSsidNameS_Type()
)
priWifiSsidNameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidNameS.setStatus("current")


class _PriWifiSsidEnableS_Type(Integer32):
    """Custom type priWifiSsidEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiSsidEnableS_Type.__name__ = "Integer32"
_PriWifiSsidEnableS_Object = MibTableColumn
priWifiSsidEnableS = _PriWifiSsidEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 5),
    _PriWifiSsidEnableS_Type()
)
priWifiSsidEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidEnableS.setStatus("current")


class _PriWifiSsidHideS_Type(Integer32):
    """Custom type priWifiSsidHideS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiSsidHideS_Type.__name__ = "Integer32"
_PriWifiSsidHideS_Object = MibTableColumn
priWifiSsidHideS = _PriWifiSsidHideS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 6),
    _PriWifiSsidHideS_Type()
)
priWifiSsidHideS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidHideS.setStatus("current")


class _PriWifiSsidAuthMode_Type(Integer32):
    """Custom type priWifiSsidAuthMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("open", 1),
          ("shared", 2),
          ("wepauto", 3),
          ("wpapsk", 4),
          ("wpa", 5),
          ("wpa2psk", 6),
          ("wpa2", 7),
          ("wpa_wpa2", 8),
          ("wpapsk_wpa2psk", 9))
    )


_PriWifiSsidAuthMode_Type.__name__ = "Integer32"
_PriWifiSsidAuthMode_Object = MibTableColumn
priWifiSsidAuthMode = _PriWifiSsidAuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 7),
    _PriWifiSsidAuthMode_Type()
)
priWifiSsidAuthMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidAuthMode.setStatus("current")


class _PriWifiSsidEncryTpeS_Type(Integer32):
    """Custom type priWifiSsidEncryTpeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("wep", 2),
          ("tkip", 3),
          ("aes", 4),
          ("tkipaes", 5))
    )


_PriWifiSsidEncryTpeS_Type.__name__ = "Integer32"
_PriWifiSsidEncryTpeS_Object = MibTableColumn
priWifiSsidEncryTpeS = _PriWifiSsidEncryTpeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 8),
    _PriWifiSsidEncryTpeS_Type()
)
priWifiSsidEncryTpeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSsidEncryTpeS.setStatus("current")
_PriSsidPreshareKeyS_Type = OctetString
_PriSsidPreshareKeyS_Object = MibTableColumn
priSsidPreshareKeyS = _PriSsidPreshareKeyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 9),
    _PriSsidPreshareKeyS_Type()
)
priSsidPreshareKeyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidPreshareKeyS.setStatus("current")


class _PriSsidWpaRekeyIntervalS_Type(Integer32):
    """Custom type priSsidWpaRekeyIntervalS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4194303),
    )


_PriSsidWpaRekeyIntervalS_Type.__name__ = "Integer32"
_PriSsidWpaRekeyIntervalS_Object = MibTableColumn
priSsidWpaRekeyIntervalS = _PriSsidWpaRekeyIntervalS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 10),
    _PriSsidWpaRekeyIntervalS_Type()
)
priSsidWpaRekeyIntervalS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWpaRekeyIntervalS.setStatus("current")


class _PriSsidRadiusServIpTypeS_Type(Integer32):
    """Custom type priSsidRadiusServIpTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("ipv4", 1),
          ("ipv6", 2),
          ("ipv4z", 3),
          ("ipv6z", 4),
          ("dns", 16))
    )


_PriSsidRadiusServIpTypeS_Type.__name__ = "Integer32"
_PriSsidRadiusServIpTypeS_Object = MibTableColumn
priSsidRadiusServIpTypeS = _PriSsidRadiusServIpTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 11),
    _PriSsidRadiusServIpTypeS_Type()
)
priSsidRadiusServIpTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusServIpTypeS.setStatus("current")
_PriSsidRadiusServIp_Type = OctetString
_PriSsidRadiusServIp_Object = MibTableColumn
priSsidRadiusServIp = _PriSsidRadiusServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 12),
    _PriSsidRadiusServIp_Type()
)
priSsidRadiusServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusServIp.setStatus("current")


class _PriSsidRadiusServIpPrefixLenS_Type(Integer32):
    """Custom type priSsidRadiusServIpPrefixLenS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PriSsidRadiusServIpPrefixLenS_Type.__name__ = "Integer32"
_PriSsidRadiusServIpPrefixLenS_Object = MibTableColumn
priSsidRadiusServIpPrefixLenS = _PriSsidRadiusServIpPrefixLenS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 13),
    _PriSsidRadiusServIpPrefixLenS_Type()
)
priSsidRadiusServIpPrefixLenS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusServIpPrefixLenS.setStatus("current")


class _PriSsidRadiusPortS_Type(Integer32):
    """Custom type priSsidRadiusPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriSsidRadiusPortS_Type.__name__ = "Integer32"
_PriSsidRadiusPortS_Object = MibTableColumn
priSsidRadiusPortS = _PriSsidRadiusPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 14),
    _PriSsidRadiusPortS_Type()
)
priSsidRadiusPortS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusPortS.setStatus("current")


class _PriSsidRadiusKeyS_Type(OctetString):
    """Custom type priSsidRadiusKeyS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_PriSsidRadiusKeyS_Type.__name__ = "OctetString"
_PriSsidRadiusKeyS_Object = MibTableColumn
priSsidRadiusKeyS = _PriSsidRadiusKeyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 15),
    _PriSsidRadiusKeyS_Type()
)
priSsidRadiusKeyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidRadiusKeyS.setStatus("current")


class _PriSsidWepEncryptionLevelS_Type(Integer32):
    """Custom type priSsidWepEncryptionLevelS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("s64bit", 1),
          ("s128bit", 2))
    )


_PriSsidWepEncryptionLevelS_Type.__name__ = "Integer32"
_PriSsidWepEncryptionLevelS_Object = MibTableColumn
priSsidWepEncryptionLevelS = _PriSsidWepEncryptionLevelS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 16),
    _PriSsidWepEncryptionLevelS_Type()
)
priSsidWepEncryptionLevelS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepEncryptionLevelS.setStatus("current")


class _PriSsidWepKeyIndexS_Type(Integer32):
    """Custom type priSsidWepKeyIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_PriSsidWepKeyIndexS_Type.__name__ = "Integer32"
_PriSsidWepKeyIndexS_Object = MibTableColumn
priSsidWepKeyIndexS = _PriSsidWepKeyIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 17),
    _PriSsidWepKeyIndexS_Type()
)
priSsidWepKeyIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKeyIndexS.setStatus("current")
_PriSsidWepKey1S_Type = OctetString
_PriSsidWepKey1S_Object = MibTableColumn
priSsidWepKey1S = _PriSsidWepKey1S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 18),
    _PriSsidWepKey1S_Type()
)
priSsidWepKey1S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey1S.setStatus("current")
_PriSsidWepKey2S_Type = OctetString
_PriSsidWepKey2S_Object = MibTableColumn
priSsidWepKey2S = _PriSsidWepKey2S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 19),
    _PriSsidWepKey2S_Type()
)
priSsidWepKey2S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey2S.setStatus("current")
_PriSsidWepKey3S_Type = OctetString
_PriSsidWepKey3S_Object = MibTableColumn
priSsidWepKey3S = _PriSsidWepKey3S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 20),
    _PriSsidWepKey3S_Type()
)
priSsidWepKey3S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey3S.setStatus("current")
_PriSsidWepKey4S_Type = OctetString
_PriSsidWepKey4S_Object = MibTableColumn
priSsidWepKey4S = _PriSsidWepKey4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 5, 1, 21),
    _PriSsidWepKey4S_Type()
)
priSsidWepKey4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priSsidWepKey4S.setStatus("current")
_PriWanConnTable_Object = MibTable
priWanConnTable = _PriWanConnTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6)
)
if mibBuilder.loadTexts:
    priWanConnTable.setStatus("current")
_PriWanConnEntry_Object = MibTableRow
priWanConnEntry = _PriWanConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1)
)
priWanConnEntry.setIndexNames(
    (0, "V1600D", "priWanConnPonS"),
    (0, "V1600D", "priWanConnOnuS"),
    (0, "V1600D", "priWanConnIndexS"),
)
if mibBuilder.loadTexts:
    priWanConnEntry.setStatus("current")


class _PriWanConnPonS_Type(Integer32):
    """Custom type priWanConnPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWanConnPonS_Type.__name__ = "Integer32"
_PriWanConnPonS_Object = MibTableColumn
priWanConnPonS = _PriWanConnPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 1),
    _PriWanConnPonS_Type()
)
priWanConnPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnPonS.setStatus("current")


class _PriWanConnOnuS_Type(Integer32):
    """Custom type priWanConnOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWanConnOnuS_Type.__name__ = "Integer32"
_PriWanConnOnuS_Object = MibTableColumn
priWanConnOnuS = _PriWanConnOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 2),
    _PriWanConnOnuS_Type()
)
priWanConnOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnOnuS.setStatus("current")


class _PriWanConnIndexS_Type(Integer32):
    """Custom type priWanConnIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriWanConnIndexS_Type.__name__ = "Integer32"
_PriWanConnIndexS_Object = MibTableColumn
priWanConnIndexS = _PriWanConnIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 3),
    _PriWanConnIndexS_Type()
)
priWanConnIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnIndexS.setStatus("current")


class _PriWanConnBindLanS_Type(Integer32):
    """Custom type priWanConnBindLanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_PriWanConnBindLanS_Type.__name__ = "Integer32"
_PriWanConnBindLanS_Object = MibTableColumn
priWanConnBindLanS = _PriWanConnBindLanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 4),
    _PriWanConnBindLanS_Type()
)
priWanConnBindLanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnBindLanS.setStatus("current")


class _PriWanConnBindSsidS_Type(Integer32):
    """Custom type priWanConnBindSsidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_PriWanConnBindSsidS_Type.__name__ = "Integer32"
_PriWanConnBindSsidS_Object = MibTableColumn
priWanConnBindSsidS = _PriWanConnBindSsidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 5),
    _PriWanConnBindSsidS_Type()
)
priWanConnBindSsidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnBindSsidS.setStatus("current")


class _PriWanModeS_Type(Integer32):
    """Custom type priWanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("other", 100))
    )


_PriWanModeS_Type.__name__ = "Integer32"
_PriWanModeS_Object = MibTableColumn
priWanModeS = _PriWanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 6),
    _PriWanModeS_Type()
)
priWanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanModeS.setStatus("current")


class _PriWanConnTypeS_Type(Integer32):
    """Custom type priWanConnTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_PriWanConnTypeS_Type.__name__ = "Integer32"
_PriWanConnTypeS_Object = MibTableColumn
priWanConnTypeS = _PriWanConnTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 7),
    _PriWanConnTypeS_Type()
)
priWanConnTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnTypeS.setStatus("current")


class _PriWanConnVlanIdS_Type(Integer32):
    """Custom type priWanConnVlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriWanConnVlanIdS_Type.__name__ = "Integer32"
_PriWanConnVlanIdS_Object = MibTableColumn
priWanConnVlanIdS = _PriWanConnVlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 8),
    _PriWanConnVlanIdS_Type()
)
priWanConnVlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnVlanIdS.setStatus("current")


class _PriWanConnVlanCosS_Type(Integer32):
    """Custom type priWanConnVlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriWanConnVlanCosS_Type.__name__ = "Integer32"
_PriWanConnVlanCosS_Object = MibTableColumn
priWanConnVlanCosS = _PriWanConnVlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 9),
    _PriWanConnVlanCosS_Type()
)
priWanConnVlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnVlanCosS.setStatus("current")


class _PriWanConnNatEnableS_Type(Integer32):
    """Custom type priWanConnNatEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWanConnNatEnableS_Type.__name__ = "Integer32"
_PriWanConnNatEnableS_Object = MibTableColumn
priWanConnNatEnableS = _PriWanConnNatEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 10),
    _PriWanConnNatEnableS_Type()
)
priWanConnNatEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnNatEnableS.setStatus("current")


class _PriWanConnModeS_Type(Integer32):
    """Custom type priWanConnModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_PriWanConnModeS_Type.__name__ = "Integer32"
_PriWanConnModeS_Object = MibTableColumn
priWanConnModeS = _PriWanConnModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 11),
    _PriWanConnModeS_Type()
)
priWanConnModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnModeS.setStatus("current")
_PriWanConnIpAddressS_Type = IpAddress
_PriWanConnIpAddressS_Object = MibTableColumn
priWanConnIpAddressS = _PriWanConnIpAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 12),
    _PriWanConnIpAddressS_Type()
)
priWanConnIpAddressS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnIpAddressS.setStatus("current")
_PriWanConnIpMaskS_Type = IpAddress
_PriWanConnIpMaskS_Object = MibTableColumn
priWanConnIpMaskS = _PriWanConnIpMaskS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 13),
    _PriWanConnIpMaskS_Type()
)
priWanConnIpMaskS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnIpMaskS.setStatus("current")
_PriWanConnGatewayS_Type = IpAddress
_PriWanConnGatewayS_Object = MibTableColumn
priWanConnGatewayS = _PriWanConnGatewayS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 14),
    _PriWanConnGatewayS_Type()
)
priWanConnGatewayS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnGatewayS.setStatus("current")
_PriWanConnMasterDns_Type = IpAddress
_PriWanConnMasterDns_Object = MibTableColumn
priWanConnMasterDns = _PriWanConnMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 15),
    _PriWanConnMasterDns_Type()
)
priWanConnMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnMasterDns.setStatus("current")
_PriWanConnSlaveDns_Type = IpAddress
_PriWanConnSlaveDns_Object = MibTableColumn
priWanConnSlaveDns = _PriWanConnSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 16),
    _PriWanConnSlaveDns_Type()
)
priWanConnSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnSlaveDns.setStatus("current")


class _PriWanConnPppoeProxyS_Type(Integer32):
    """Custom type priWanConnPppoeProxyS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWanConnPppoeProxyS_Type.__name__ = "Integer32"
_PriWanConnPppoeProxyS_Object = MibTableColumn
priWanConnPppoeProxyS = _PriWanConnPppoeProxyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 17),
    _PriWanConnPppoeProxyS_Type()
)
priWanConnPppoeProxyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnPppoeProxyS.setStatus("current")
_PriWanConnPppoeUsernameS_Type = OctetString
_PriWanConnPppoeUsernameS_Object = MibTableColumn
priWanConnPppoeUsernameS = _PriWanConnPppoeUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 18),
    _PriWanConnPppoeUsernameS_Type()
)
priWanConnPppoeUsernameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnPppoeUsernameS.setStatus("current")
_PriWanConnPppoePasswordS_Type = OctetString
_PriWanConnPppoePasswordS_Object = MibTableColumn
priWanConnPppoePasswordS = _PriWanConnPppoePasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 19),
    _PriWanConnPppoePasswordS_Type()
)
priWanConnPppoePasswordS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnPppoePasswordS.setStatus("current")
_PriWanConnPppoeSerName_Type = OctetString
_PriWanConnPppoeSerName_Object = MibTableColumn
priWanConnPppoeSerName = _PriWanConnPppoeSerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 20),
    _PriWanConnPppoeSerName_Type()
)
priWanConnPppoeSerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnPppoeSerName.setStatus("current")


class _PriWanConnPppoeModeS_Type(Integer32):
    """Custom type priWanConnPppoeModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("connectWhenPayload", 1))
    )


_PriWanConnPppoeModeS_Type.__name__ = "Integer32"
_PriWanConnPppoeModeS_Object = MibTableColumn
priWanConnPppoeModeS = _PriWanConnPppoeModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 21),
    _PriWanConnPppoeModeS_Type()
)
priWanConnPppoeModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnPppoeModeS.setStatus("current")


class _PriWanConnQosEnableS_Type(Integer32):
    """Custom type priWanConnQosEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWanConnQosEnableS_Type.__name__ = "Integer32"
_PriWanConnQosEnableS_Object = MibTableColumn
priWanConnQosEnableS = _PriWanConnQosEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 22),
    _PriWanConnQosEnableS_Type()
)
priWanConnQosEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnQosEnableS.setStatus("current")


class _PriWanConnVlanModeS_Type(Integer32):
    """Custom type priWanConnVlanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_PriWanConnVlanModeS_Type.__name__ = "Integer32"
_PriWanConnVlanModeS_Object = MibTableColumn
priWanConnVlanModeS = _PriWanConnVlanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 23),
    _PriWanConnVlanModeS_Type()
)
priWanConnVlanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnVlanModeS.setStatus("current")


class _PriWanConnTranslationEnableS_Type(Integer32):
    """Custom type priWanConnTranslationEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWanConnTranslationEnableS_Type.__name__ = "Integer32"
_PriWanConnTranslationEnableS_Object = MibTableColumn
priWanConnTranslationEnableS = _PriWanConnTranslationEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 24),
    _PriWanConnTranslationEnableS_Type()
)
priWanConnTranslationEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnTranslationEnableS.setStatus("current")


class _PriWanConnTranslationVlanS_Type(Integer32):
    """Custom type priWanConnTranslationVlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriWanConnTranslationVlanS_Type.__name__ = "Integer32"
_PriWanConnTranslationVlanS_Object = MibTableColumn
priWanConnTranslationVlanS = _PriWanConnTranslationVlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 25),
    _PriWanConnTranslationVlanS_Type()
)
priWanConnTranslationVlanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnTranslationVlanS.setStatus("current")


class _PriWanConnTranslationCosS_Type(Integer32):
    """Custom type priWanConnTranslationCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriWanConnTranslationCosS_Type.__name__ = "Integer32"
_PriWanConnTranslationCosS_Object = MibTableColumn
priWanConnTranslationCosS = _PriWanConnTranslationCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 26),
    _PriWanConnTranslationCosS_Type()
)
priWanConnTranslationCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnTranslationCosS.setStatus("current")


class _PriWanConnQinqEnableS_Type(Integer32):
    """Custom type priWanConnQinqEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWanConnQinqEnableS_Type.__name__ = "Integer32"
_PriWanConnQinqEnableS_Object = MibTableColumn
priWanConnQinqEnableS = _PriWanConnQinqEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 27),
    _PriWanConnQinqEnableS_Type()
)
priWanConnQinqEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnQinqEnableS.setStatus("current")


class _PriWanConnQinqTpidS_Type(Integer32):
    """Custom type priWanConnQinqTpidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_PriWanConnQinqTpidS_Type.__name__ = "Integer32"
_PriWanConnQinqTpidS_Object = MibTableColumn
priWanConnQinqTpidS = _PriWanConnQinqTpidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 28),
    _PriWanConnQinqTpidS_Type()
)
priWanConnQinqTpidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnQinqTpidS.setStatus("current")


class _PriWanConnSvlanIdS_Type(Integer32):
    """Custom type priWanConnSvlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriWanConnSvlanIdS_Type.__name__ = "Integer32"
_PriWanConnSvlanIdS_Object = MibTableColumn
priWanConnSvlanIdS = _PriWanConnSvlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 29),
    _PriWanConnSvlanIdS_Type()
)
priWanConnSvlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnSvlanIdS.setStatus("current")


class _PriWanConnSvlanCosS_Type(Integer32):
    """Custom type priWanConnSvlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriWanConnSvlanCosS_Type.__name__ = "Integer32"
_PriWanConnSvlanCosS_Object = MibTableColumn
priWanConnSvlanCosS = _PriWanConnSvlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 30),
    _PriWanConnSvlanCosS_Type()
)
priWanConnSvlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnSvlanCosS.setStatus("current")
_PriWanConnName_Type = OctetString
_PriWanConnName_Object = MibTableColumn
priWanConnName = _PriWanConnName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 31),
    _PriWanConnName_Type()
)
priWanConnName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnName.setStatus("current")


class _PriWanConnStatus_Type(Integer32):
    """Custom type priWanConnStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disconnected", 0),
          ("connected", 1))
    )


_PriWanConnStatus_Type.__name__ = "Integer32"
_PriWanConnStatus_Object = MibTableColumn
priWanConnStatus = _PriWanConnStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 32),
    _PriWanConnStatus_Type()
)
priWanConnStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnStatus.setStatus("current")
_PriWanConnMacAddr_Type = OctetString
_PriWanConnMacAddr_Object = MibTableColumn
priWanConnMacAddr = _PriWanConnMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 33),
    _PriWanConnMacAddr_Type()
)
priWanConnMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnMacAddr.setStatus("current")


class _PriWanConnRouteMtuS_Type(Integer32):
    """Custom type priWanConnRouteMtuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(576, 1500),
    )


_PriWanConnRouteMtuS_Type.__name__ = "Integer32"
_PriWanConnRouteMtuS_Object = MibTableColumn
priWanConnRouteMtuS = _PriWanConnRouteMtuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 6, 1, 34),
    _PriWanConnRouteMtuS_Type()
)
priWanConnRouteMtuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnRouteMtuS.setStatus("current")
_PriPortIsolateTable_Object = MibTable
priPortIsolateTable = _PriPortIsolateTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 7)
)
if mibBuilder.loadTexts:
    priPortIsolateTable.setStatus("current")
_PriPortIsolateEntry_Object = MibTableRow
priPortIsolateEntry = _PriPortIsolateEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 7, 1)
)
priPortIsolateEntry.setIndexNames(
    (0, "V1600D", "priPortIsolatePonS"),
    (0, "V1600D", "priPortIsolateOnuS"),
)
if mibBuilder.loadTexts:
    priPortIsolateEntry.setStatus("current")


class _PriPortIsolatePonS_Type(Integer32):
    """Custom type priPortIsolatePonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortIsolatePonS_Type.__name__ = "Integer32"
_PriPortIsolatePonS_Object = MibTableColumn
priPortIsolatePonS = _PriPortIsolatePonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 7, 1, 1),
    _PriPortIsolatePonS_Type()
)
priPortIsolatePonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolatePonS.setStatus("current")


class _PriPortIsolateOnuS_Type(Integer32):
    """Custom type priPortIsolateOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortIsolateOnuS_Type.__name__ = "Integer32"
_PriPortIsolateOnuS_Object = MibTableColumn
priPortIsolateOnuS = _PriPortIsolateOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 7, 1, 2),
    _PriPortIsolateOnuS_Type()
)
priPortIsolateOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolateOnuS.setStatus("current")


class _PriPortIsolateS_Type(Integer32):
    """Custom type priPortIsolateS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPortIsolateS_Type.__name__ = "Integer32"
_PriPortIsolateS_Object = MibTableColumn
priPortIsolateS = _PriPortIsolateS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 7, 1, 3),
    _PriPortIsolateS_Type()
)
priPortIsolateS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortIsolateS.setStatus("current")
_PriVoipTimerTable_Object = MibTable
priVoipTimerTable = _PriVoipTimerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8)
)
if mibBuilder.loadTexts:
    priVoipTimerTable.setStatus("current")
_PriVoipTimerEntry_Object = MibTableRow
priVoipTimerEntry = _PriVoipTimerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1)
)
priVoipTimerEntry.setIndexNames(
    (0, "V1600D", "priVoipTimerPon"),
    (0, "V1600D", "priVoipTimerOnu"),
)
if mibBuilder.loadTexts:
    priVoipTimerEntry.setStatus("current")


class _PriVoipTimerPon_Type(Integer32):
    """Custom type priVoipTimerPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriVoipTimerPon_Type.__name__ = "Integer32"
_PriVoipTimerPon_Object = MibTableColumn
priVoipTimerPon = _PriVoipTimerPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 1),
    _PriVoipTimerPon_Type()
)
priVoipTimerPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerPon.setStatus("current")


class _PriVoipTimerOnu_Type(Integer32):
    """Custom type priVoipTimerOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriVoipTimerOnu_Type.__name__ = "Integer32"
_PriVoipTimerOnu_Object = MibTableColumn
priVoipTimerOnu = _PriVoipTimerOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 2),
    _PriVoipTimerOnu_Type()
)
priVoipTimerOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerOnu.setStatus("current")


class _PriVoipTimerWaitTimer_Type(Integer32):
    """Custom type priVoipTimerWaitTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_PriVoipTimerWaitTimer_Type.__name__ = "Integer32"
_PriVoipTimerWaitTimer_Object = MibTableColumn
priVoipTimerWaitTimer = _PriVoipTimerWaitTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 3),
    _PriVoipTimerWaitTimer_Type()
)
priVoipTimerWaitTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerWaitTimer.setStatus("current")


class _PriVoipTimerStartTimer_Type(Integer32):
    """Custom type priVoipTimerStartTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriVoipTimerStartTimer_Type.__name__ = "Integer32"
_PriVoipTimerStartTimer_Object = MibTableColumn
priVoipTimerStartTimer = _PriVoipTimerStartTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 4),
    _PriVoipTimerStartTimer_Type()
)
priVoipTimerStartTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerStartTimer.setStatus("current")


class _PriVoipTimerLongTimer_Type(Integer32):
    """Custom type priVoipTimerLongTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriVoipTimerLongTimer_Type.__name__ = "Integer32"
_PriVoipTimerLongTimer_Object = MibTableColumn
priVoipTimerLongTimer = _PriVoipTimerLongTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 5),
    _PriVoipTimerLongTimer_Type()
)
priVoipTimerLongTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerLongTimer.setStatus("current")


class _PriVoipTimerShortTimer_Type(Integer32):
    """Custom type priVoipTimerShortTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriVoipTimerShortTimer_Type.__name__ = "Integer32"
_PriVoipTimerShortTimer_Object = MibTableColumn
priVoipTimerShortTimer = _PriVoipTimerShortTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 6),
    _PriVoipTimerShortTimer_Type()
)
priVoipTimerShortTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerShortTimer.setStatus("current")


class _PriVoipTimerDigitNotify_Type(Integer32):
    """Custom type priVoipTimerDigitNotify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriVoipTimerDigitNotify_Type.__name__ = "Integer32"
_PriVoipTimerDigitNotify_Object = MibTableColumn
priVoipTimerDigitNotify = _PriVoipTimerDigitNotify_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 8, 1, 7),
    _PriVoipTimerDigitNotify_Type()
)
priVoipTimerDigitNotify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVoipTimerDigitNotify.setStatus("current")
_PriDhcpServerTable_Object = MibTable
priDhcpServerTable = _PriDhcpServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9)
)
if mibBuilder.loadTexts:
    priDhcpServerTable.setStatus("current")
_PriDhcpServerEntry_Object = MibTableRow
priDhcpServerEntry = _PriDhcpServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1)
)
priDhcpServerEntry.setIndexNames(
    (0, "V1600D", "priDhcpServerPon"),
    (0, "V1600D", "priDhcpServerOnu"),
)
if mibBuilder.loadTexts:
    priDhcpServerEntry.setStatus("current")
_PriDhcpServerPon_Type = Integer32
_PriDhcpServerPon_Object = MibTableColumn
priDhcpServerPon = _PriDhcpServerPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 1),
    _PriDhcpServerPon_Type()
)
priDhcpServerPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpServerPon.setStatus("current")
_PriDhcpServerOnu_Type = Integer32
_PriDhcpServerOnu_Object = MibTableColumn
priDhcpServerOnu = _PriDhcpServerOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 2),
    _PriDhcpServerOnu_Type()
)
priDhcpServerOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpServerOnu.setStatus("current")
_PriDhcpLanIp_Type = IpAddress
_PriDhcpLanIp_Object = MibTableColumn
priDhcpLanIp = _PriDhcpLanIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 3),
    _PriDhcpLanIp_Type()
)
priDhcpLanIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpLanIp.setStatus("current")
_PriDhcpLanMask_Type = IpAddress
_PriDhcpLanMask_Object = MibTableColumn
priDhcpLanMask = _PriDhcpLanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 4),
    _PriDhcpLanMask_Type()
)
priDhcpLanMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpLanMask.setStatus("current")


class _PriDhcpEnable_Type(Integer32):
    """Custom type priDhcpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_PriDhcpEnable_Type.__name__ = "Integer32"
_PriDhcpEnable_Object = MibTableColumn
priDhcpEnable = _PriDhcpEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 5),
    _PriDhcpEnable_Type()
)
priDhcpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpEnable.setStatus("current")
_PriDhcpLease_Type = Unsigned32
_PriDhcpLease_Object = MibTableColumn
priDhcpLease = _PriDhcpLease_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 6),
    _PriDhcpLease_Type()
)
priDhcpLease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpLease.setStatus("current")
_PriDhcpBeginIp_Type = IpAddress
_PriDhcpBeginIp_Object = MibTableColumn
priDhcpBeginIp = _PriDhcpBeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 7),
    _PriDhcpBeginIp_Type()
)
priDhcpBeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpBeginIp.setStatus("current")
_PriDhcpEndIp_Type = IpAddress
_PriDhcpEndIp_Object = MibTableColumn
priDhcpEndIp = _PriDhcpEndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 8),
    _PriDhcpEndIp_Type()
)
priDhcpEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpEndIp.setStatus("current")


class _PriDhcpPoolType_Type(Integer32):
    """Custom type priDhcpPoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_PriDhcpPoolType_Type.__name__ = "Integer32"
_PriDhcpPoolType_Object = MibTableColumn
priDhcpPoolType = _PriDhcpPoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 9),
    _PriDhcpPoolType_Type()
)
priDhcpPoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpPoolType.setStatus("current")
_PriDhcpMasterDns_Type = IpAddress
_PriDhcpMasterDns_Object = MibTableColumn
priDhcpMasterDns = _PriDhcpMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 10),
    _PriDhcpMasterDns_Type()
)
priDhcpMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpMasterDns.setStatus("current")
_PriDhcpSlaveDns_Type = IpAddress
_PriDhcpSlaveDns_Object = MibTableColumn
priDhcpSlaveDns = _PriDhcpSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 11),
    _PriDhcpSlaveDns_Type()
)
priDhcpSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpSlaveDns.setStatus("current")
_PriDhcpGateway_Type = IpAddress
_PriDhcpGateway_Object = MibTableColumn
priDhcpGateway = _PriDhcpGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 12),
    _PriDhcpGateway_Type()
)
priDhcpGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpGateway.setStatus("current")
_PriDhcpRelayIp_Type = IpAddress
_PriDhcpRelayIp_Object = MibTableColumn
priDhcpRelayIp = _PriDhcpRelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 9, 1, 13),
    _PriDhcpRelayIp_Type()
)
priDhcpRelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpRelayIp.setStatus("current")
_PriDhcpOption82Table_Object = MibTable
priDhcpOption82Table = _PriDhcpOption82Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 10)
)
if mibBuilder.loadTexts:
    priDhcpOption82Table.setStatus("current")
_PriDhcpOption82Entry_Object = MibTableRow
priDhcpOption82Entry = _PriDhcpOption82Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 10, 1)
)
priDhcpOption82Entry.setIndexNames(
    (0, "V1600D", "priDhcpOption82Pon"),
    (0, "V1600D", "priDhcpOption82Onu"),
)
if mibBuilder.loadTexts:
    priDhcpOption82Entry.setStatus("current")


class _PriDhcpOption82Pon_Type(Integer32):
    """Custom type priDhcpOption82Pon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriDhcpOption82Pon_Type.__name__ = "Integer32"
_PriDhcpOption82Pon_Object = MibTableColumn
priDhcpOption82Pon = _PriDhcpOption82Pon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 10, 1, 1),
    _PriDhcpOption82Pon_Type()
)
priDhcpOption82Pon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpOption82Pon.setStatus("current")


class _PriDhcpOption82Onu_Type(Integer32):
    """Custom type priDhcpOption82Onu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriDhcpOption82Onu_Type.__name__ = "Integer32"
_PriDhcpOption82Onu_Object = MibTableColumn
priDhcpOption82Onu = _PriDhcpOption82Onu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 10, 1, 2),
    _PriDhcpOption82Onu_Type()
)
priDhcpOption82Onu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpOption82Onu.setStatus("current")


class _PriDhcpOption82Enable_Type(Integer32):
    """Custom type priDhcpOption82Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpOption82Enable_Type.__name__ = "Integer32"
_PriDhcpOption82Enable_Object = MibTableColumn
priDhcpOption82Enable = _PriDhcpOption82Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 10, 1, 3),
    _PriDhcpOption82Enable_Type()
)
priDhcpOption82Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpOption82Enable.setStatus("current")
_PriPPPoETable_Object = MibTable
priPPPoETable = _PriPPPoETable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 11)
)
if mibBuilder.loadTexts:
    priPPPoETable.setStatus("current")
_PriPPPoEEntry_Object = MibTableRow
priPPPoEEntry = _PriPPPoEEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 11, 1)
)
priPPPoEEntry.setIndexNames(
    (0, "V1600D", "priPPPoEPon"),
    (0, "V1600D", "priPPPoEOnu"),
)
if mibBuilder.loadTexts:
    priPPPoEEntry.setStatus("current")


class _PriPPPoEPon_Type(Integer32):
    """Custom type priPPPoEPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriPPPoEPon_Type.__name__ = "Integer32"
_PriPPPoEPon_Object = MibTableColumn
priPPPoEPon = _PriPPPoEPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 11, 1, 1),
    _PriPPPoEPon_Type()
)
priPPPoEPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPPPoEPon.setStatus("current")


class _PriPPPoEOnu_Type(Integer32):
    """Custom type priPPPoEOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPPPoEOnu_Type.__name__ = "Integer32"
_PriPPPoEOnu_Object = MibTableColumn
priPPPoEOnu = _PriPPPoEOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 11, 1, 2),
    _PriPPPoEOnu_Type()
)
priPPPoEOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPPPoEOnu.setStatus("current")


class _PriPPPoEEnable_Type(Integer32):
    """Custom type priPPPoEEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPPPoEEnable_Type.__name__ = "Integer32"
_PriPPPoEEnable_Object = MibTableColumn
priPPPoEEnable = _PriPPPoEEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 11, 1, 3),
    _PriPPPoEEnable_Type()
)
priPPPoEEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPPPoEEnable.setStatus("current")
_PriDhcpV6Table_Object = MibTable
priDhcpV6Table = _PriDhcpV6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 12)
)
if mibBuilder.loadTexts:
    priDhcpV6Table.setStatus("current")
_PriDhcpV6Entry_Object = MibTableRow
priDhcpV6Entry = _PriDhcpV6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 12, 1)
)
priDhcpV6Entry.setIndexNames(
    (0, "V1600D", "priDhcpV6Pon"),
    (0, "V1600D", "priDhcpV6Onu"),
)
if mibBuilder.loadTexts:
    priDhcpV6Entry.setStatus("current")


class _PriDhcpV6Pon_Type(Integer32):
    """Custom type priDhcpV6Pon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriDhcpV6Pon_Type.__name__ = "Integer32"
_PriDhcpV6Pon_Object = MibTableColumn
priDhcpV6Pon = _PriDhcpV6Pon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 12, 1, 1),
    _PriDhcpV6Pon_Type()
)
priDhcpV6Pon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpV6Pon.setStatus("current")


class _PriDhcpV6Onu_Type(Integer32):
    """Custom type priDhcpV6Onu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriDhcpV6Onu_Type.__name__ = "Integer32"
_PriDhcpV6Onu_Object = MibTableColumn
priDhcpV6Onu = _PriDhcpV6Onu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 12, 1, 2),
    _PriDhcpV6Onu_Type()
)
priDhcpV6Onu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpV6Onu.setStatus("current")


class _PriDhcpV6Option18Enable_Type(Integer32):
    """Custom type priDhcpV6Option18Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpV6Option18Enable_Type.__name__ = "Integer32"
_PriDhcpV6Option18Enable_Object = MibTableColumn
priDhcpV6Option18Enable = _PriDhcpV6Option18Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 12, 1, 3),
    _PriDhcpV6Option18Enable_Type()
)
priDhcpV6Option18Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpV6Option18Enable.setStatus("current")


class _PriDhcpV6Option37Enable_Type(Integer32):
    """Custom type priDhcpV6Option37Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpV6Option37Enable_Type.__name__ = "Integer32"
_PriDhcpV6Option37Enable_Object = MibTableColumn
priDhcpV6Option37Enable = _PriDhcpV6Option37Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 12, 1, 4),
    _PriDhcpV6Option37Enable_Type()
)
priDhcpV6Option37Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpV6Option37Enable.setStatus("current")
_PriVoipParamTable_Object = MibTable
priVoipParamTable = _PriVoipParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13)
)
if mibBuilder.loadTexts:
    priVoipParamTable.setStatus("current")
_PriVoipParamEntry_Object = MibTableRow
priVoipParamEntry = _PriVoipParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1)
)
priVoipParamEntry.setIndexNames(
    (0, "V1600D", "voipPTPon"),
    (0, "V1600D", "voipPTOnu"),
)
if mibBuilder.loadTexts:
    priVoipParamEntry.setStatus("current")


class _VoipPTPon_Type(Integer32):
    """Custom type voipPTPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_VoipPTPon_Type.__name__ = "Integer32"
_VoipPTPon_Object = MibTableColumn
voipPTPon = _VoipPTPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 1),
    _VoipPTPon_Type()
)
voipPTPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTPon.setStatus("current")


class _VoipPTOnu_Type(Integer32):
    """Custom type voipPTOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VoipPTOnu_Type.__name__ = "Integer32"
_VoipPTOnu_Object = MibTableColumn
voipPTOnu = _VoipPTOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 2),
    _VoipPTOnu_Type()
)
voipPTOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTOnu.setStatus("current")


class _VoipPTIpMode_Type(Integer32):
    """Custom type voipPTIpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dhcp", 2),
          ("pppoe", 3))
    )


_VoipPTIpMode_Type.__name__ = "Integer32"
_VoipPTIpMode_Object = MibTableColumn
voipPTIpMode = _VoipPTIpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 3),
    _VoipPTIpMode_Type()
)
voipPTIpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTIpMode.setStatus("current")
_VoipPTIp_Type = IpAddress
_VoipPTIp_Object = MibTableColumn
voipPTIp = _VoipPTIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 4),
    _VoipPTIp_Type()
)
voipPTIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTIp.setStatus("current")
_VoipPTMask_Type = IpAddress
_VoipPTMask_Object = MibTableColumn
voipPTMask = _VoipPTMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 5),
    _VoipPTMask_Type()
)
voipPTMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTMask.setStatus("current")
_VoipPTGw_Type = IpAddress
_VoipPTGw_Object = MibTableColumn
voipPTGw = _VoipPTGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 6),
    _VoipPTGw_Type()
)
voipPTGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTGw.setStatus("current")
_VoipPTRtpIp_Type = IpAddress
_VoipPTRtpIp_Object = MibTableColumn
voipPTRtpIp = _VoipPTRtpIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 7),
    _VoipPTRtpIp_Type()
)
voipPTRtpIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpIp.setStatus("current")
_VoipPTRtpMask_Type = IpAddress
_VoipPTRtpMask_Object = MibTableColumn
voipPTRtpMask = _VoipPTRtpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 8),
    _VoipPTRtpMask_Type()
)
voipPTRtpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpMask.setStatus("current")
_VoipPTRtpGw_Type = IpAddress
_VoipPTRtpGw_Object = MibTableColumn
voipPTRtpGw = _VoipPTRtpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 9),
    _VoipPTRtpGw_Type()
)
voipPTRtpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpGw.setStatus("current")
_VoipPTDnsMaster_Type = IpAddress
_VoipPTDnsMaster_Object = MibTableColumn
voipPTDnsMaster = _VoipPTDnsMaster_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 10),
    _VoipPTDnsMaster_Type()
)
voipPTDnsMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTDnsMaster.setStatus("current")
_VoipPTDnsSlave_Type = IpAddress
_VoipPTDnsSlave_Object = MibTableColumn
voipPTDnsSlave = _VoipPTDnsSlave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 11),
    _VoipPTDnsSlave_Type()
)
voipPTDnsSlave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTDnsSlave.setStatus("current")


class _VoipPTDhcpOption60Enable_Type(Integer32):
    """Custom type voipPTDhcpOption60Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VoipPTDhcpOption60Enable_Type.__name__ = "Integer32"
_VoipPTDhcpOption60Enable_Object = MibTableColumn
voipPTDhcpOption60Enable = _VoipPTDhcpOption60Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 12),
    _VoipPTDhcpOption60Enable_Type()
)
voipPTDhcpOption60Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTDhcpOption60Enable.setStatus("current")
_VoipPTDhcpOption60Base_Type = OctetString
_VoipPTDhcpOption60Base_Object = MibTableColumn
voipPTDhcpOption60Base = _VoipPTDhcpOption60Base_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 13),
    _VoipPTDhcpOption60Base_Type()
)
voipPTDhcpOption60Base.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTDhcpOption60Base.setStatus("current")
_VoipPTDhcpOption60Value_Type = OctetString
_VoipPTDhcpOption60Value_Object = MibTableColumn
voipPTDhcpOption60Value = _VoipPTDhcpOption60Value_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 14),
    _VoipPTDhcpOption60Value_Type()
)
voipPTDhcpOption60Value.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTDhcpOption60Value.setStatus("current")


class _VoipPTPPPoEMode_Type(Integer32):
    """Custom type voipPTPPPoEMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("chap", 2),
          ("pap", 3))
    )


_VoipPTPPPoEMode_Type.__name__ = "Integer32"
_VoipPTPPPoEMode_Object = MibTableColumn
voipPTPPPoEMode = _VoipPTPPPoEMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 15),
    _VoipPTPPPoEMode_Type()
)
voipPTPPPoEMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTPPPoEMode.setStatus("current")
_VoipPTPPPoEUsername_Type = OctetString
_VoipPTPPPoEUsername_Object = MibTableColumn
voipPTPPPoEUsername = _VoipPTPPPoEUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 16),
    _VoipPTPPPoEUsername_Type()
)
voipPTPPPoEUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTPPPoEUsername.setStatus("current")
_VoipPTPPPoEPassword_Type = OctetString
_VoipPTPPPoEPassword_Object = MibTableColumn
voipPTPPPoEPassword = _VoipPTPPPoEPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 17),
    _VoipPTPPPoEPassword_Type()
)
voipPTPPPoEPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTPPPoEPassword.setStatus("current")
_VoipPTSVlanTpid_Type = Integer32
_VoipPTSVlanTpid_Object = MibTableColumn
voipPTSVlanTpid = _VoipPTSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 18),
    _VoipPTSVlanTpid_Type()
)
voipPTSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTSVlanTpid.setStatus("current")


class _VoipPTSVlanId_Type(Integer32):
    """Custom type voipPTSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipPTSVlanId_Type.__name__ = "Integer32"
_VoipPTSVlanId_Object = MibTableColumn
voipPTSVlanId = _VoipPTSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 19),
    _VoipPTSVlanId_Type()
)
voipPTSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTSVlanId.setStatus("current")


class _VoipPTSVlanCos_Type(Integer32):
    """Custom type voipPTSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipPTSVlanCos_Type.__name__ = "Integer32"
_VoipPTSVlanCos_Object = MibTableColumn
voipPTSVlanCos = _VoipPTSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 20),
    _VoipPTSVlanCos_Type()
)
voipPTSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTSVlanCos.setStatus("current")
_VoipPTCVlanTpid_Type = Integer32
_VoipPTCVlanTpid_Object = MibTableColumn
voipPTCVlanTpid = _VoipPTCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 21),
    _VoipPTCVlanTpid_Type()
)
voipPTCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTCVlanTpid.setStatus("current")


class _VoipPTCVlanId_Type(Integer32):
    """Custom type voipPTCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipPTCVlanId_Type.__name__ = "Integer32"
_VoipPTCVlanId_Object = MibTableColumn
voipPTCVlanId = _VoipPTCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 22),
    _VoipPTCVlanId_Type()
)
voipPTCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTCVlanId.setStatus("current")


class _VoipPTCVlanCos_Type(Integer32):
    """Custom type voipPTCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipPTCVlanCos_Type.__name__ = "Integer32"
_VoipPTCVlanCos_Object = MibTableColumn
voipPTCVlanCos = _VoipPTCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 23),
    _VoipPTCVlanCos_Type()
)
voipPTCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTCVlanCos.setStatus("current")
_VoipPTRtpSVlanTpid_Type = Integer32
_VoipPTRtpSVlanTpid_Object = MibTableColumn
voipPTRtpSVlanTpid = _VoipPTRtpSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 24),
    _VoipPTRtpSVlanTpid_Type()
)
voipPTRtpSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpSVlanTpid.setStatus("current")


class _VoipPTRtpSVlanId_Type(Integer32):
    """Custom type voipPTRtpSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipPTRtpSVlanId_Type.__name__ = "Integer32"
_VoipPTRtpSVlanId_Object = MibTableColumn
voipPTRtpSVlanId = _VoipPTRtpSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 25),
    _VoipPTRtpSVlanId_Type()
)
voipPTRtpSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpSVlanId.setStatus("current")


class _VoipPTRtpSVlanCos_Type(Integer32):
    """Custom type voipPTRtpSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipPTRtpSVlanCos_Type.__name__ = "Integer32"
_VoipPTRtpSVlanCos_Object = MibTableColumn
voipPTRtpSVlanCos = _VoipPTRtpSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 26),
    _VoipPTRtpSVlanCos_Type()
)
voipPTRtpSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpSVlanCos.setStatus("current")
_VoipPTRtpCVlanTpid_Type = Integer32
_VoipPTRtpCVlanTpid_Object = MibTableColumn
voipPTRtpCVlanTpid = _VoipPTRtpCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 27),
    _VoipPTRtpCVlanTpid_Type()
)
voipPTRtpCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpCVlanTpid.setStatus("current")


class _VoipPTRtpCVlanId_Type(Integer32):
    """Custom type voipPTRtpCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipPTRtpCVlanId_Type.__name__ = "Integer32"
_VoipPTRtpCVlanId_Object = MibTableColumn
voipPTRtpCVlanId = _VoipPTRtpCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 28),
    _VoipPTRtpCVlanId_Type()
)
voipPTRtpCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpCVlanId.setStatus("current")


class _VoipPTRtpCVlanCos_Type(Integer32):
    """Custom type voipPTRtpCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipPTRtpCVlanCos_Type.__name__ = "Integer32"
_VoipPTRtpCVlanCos_Object = MibTableColumn
voipPTRtpCVlanCos = _VoipPTRtpCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 13, 1, 29),
    _VoipPTRtpCVlanCos_Type()
)
voipPTRtpCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPTRtpCVlanCos.setStatus("current")
_PriSipParamTable_Object = MibTable
priSipParamTable = _PriSipParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14)
)
if mibBuilder.loadTexts:
    priSipParamTable.setStatus("current")
_PriSipParamEntry_Object = MibTableRow
priSipParamEntry = _PriSipParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1)
)
priSipParamEntry.setIndexNames(
    (0, "V1600D", "sipPTPon"),
    (0, "V1600D", "sipPTOnu"),
)
if mibBuilder.loadTexts:
    priSipParamEntry.setStatus("current")


class _SipPTPon_Type(Integer32):
    """Custom type sipPTPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_SipPTPon_Type.__name__ = "Integer32"
_SipPTPon_Object = MibTableColumn
sipPTPon = _SipPTPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 1),
    _SipPTPon_Type()
)
sipPTPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTPon.setStatus("current")


class _SipPTOnu_Type(Integer32):
    """Custom type sipPTOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipPTOnu_Type.__name__ = "Integer32"
_SipPTOnu_Object = MibTableColumn
sipPTOnu = _SipPTOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 2),
    _SipPTOnu_Type()
)
sipPTOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTOnu.setStatus("current")
_SipPTProxyServName_Type = OctetString
_SipPTProxyServName_Object = MibTableColumn
sipPTProxyServName = _SipPTProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 3),
    _SipPTProxyServName_Type()
)
sipPTProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTProxyServName.setStatus("current")


class _SipPTProxyServPort_Type(Integer32):
    """Custom type sipPTProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipPTProxyServPort_Type.__name__ = "Integer32"
_SipPTProxyServPort_Object = MibTableColumn
sipPTProxyServPort = _SipPTProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 4),
    _SipPTProxyServPort_Type()
)
sipPTProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTProxyServPort.setStatus("current")
_SipPTBakProxyServName_Type = OctetString
_SipPTBakProxyServName_Object = MibTableColumn
sipPTBakProxyServName = _SipPTBakProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 5),
    _SipPTBakProxyServName_Type()
)
sipPTBakProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTBakProxyServName.setStatus("current")


class _SipPTBakProxyServPort_Type(Integer32):
    """Custom type sipPTBakProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipPTBakProxyServPort_Type.__name__ = "Integer32"
_SipPTBakProxyServPort_Object = MibTableColumn
sipPTBakProxyServPort = _SipPTBakProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 6),
    _SipPTBakProxyServPort_Type()
)
sipPTBakProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTBakProxyServPort.setStatus("current")
_SipPTRegServName_Type = OctetString
_SipPTRegServName_Object = MibTableColumn
sipPTRegServName = _SipPTRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 7),
    _SipPTRegServName_Type()
)
sipPTRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTRegServName.setStatus("current")


class _SipPTRegServPort_Type(Integer32):
    """Custom type sipPTRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipPTRegServPort_Type.__name__ = "Integer32"
_SipPTRegServPort_Object = MibTableColumn
sipPTRegServPort = _SipPTRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 8),
    _SipPTRegServPort_Type()
)
sipPTRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTRegServPort.setStatus("current")
_SipPTBakRegServName_Type = OctetString
_SipPTBakRegServName_Object = MibTableColumn
sipPTBakRegServName = _SipPTBakRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 9),
    _SipPTBakRegServName_Type()
)
sipPTBakRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTBakRegServName.setStatus("current")


class _SipPTBakRegServPort_Type(Integer32):
    """Custom type sipPTBakRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipPTBakRegServPort_Type.__name__ = "Integer32"
_SipPTBakRegServPort_Object = MibTableColumn
sipPTBakRegServPort = _SipPTBakRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 10),
    _SipPTBakRegServPort_Type()
)
sipPTBakRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTBakRegServPort.setStatus("current")
_SipPTOutBndServName_Type = OctetString
_SipPTOutBndServName_Object = MibTableColumn
sipPTOutBndServName = _SipPTOutBndServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 11),
    _SipPTOutBndServName_Type()
)
sipPTOutBndServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTOutBndServName.setStatus("current")


class _SipPTOutBndServPort_Type(Integer32):
    """Custom type sipPTOutBndServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipPTOutBndServPort_Type.__name__ = "Integer32"
_SipPTOutBndServPort_Object = MibTableColumn
sipPTOutBndServPort = _SipPTOutBndServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 12),
    _SipPTOutBndServPort_Type()
)
sipPTOutBndServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTOutBndServPort.setStatus("current")


class _SipPTMgPort_Type(Integer32):
    """Custom type sipPTMgPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipPTMgPort_Type.__name__ = "Integer32"
_SipPTMgPort_Object = MibTableColumn
sipPTMgPort = _SipPTMgPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 13),
    _SipPTMgPort_Type()
)
sipPTMgPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTMgPort.setStatus("current")
_ActiveSipProxyServer_Type = OctetString
_ActiveSipProxyServer_Object = MibTableColumn
activeSipProxyServer = _ActiveSipProxyServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 14),
    _ActiveSipProxyServer_Type()
)
activeSipProxyServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    activeSipProxyServer.setStatus("current")


class _SipPTRegInterValue_Type(Integer32):
    """Custom type sipPTRegInterValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_SipPTRegInterValue_Type.__name__ = "Integer32"
_SipPTRegInterValue_Object = MibTableColumn
sipPTRegInterValue = _SipPTRegInterValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 15),
    _SipPTRegInterValue_Type()
)
sipPTRegInterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTRegInterValue.setStatus("current")


class _SipPTHBeatCfg_Type(Integer32):
    """Custom type sipPTHBeatCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("active", 1),
          ("passive", 2))
    )


_SipPTHBeatCfg_Type.__name__ = "Integer32"
_SipPTHBeatCfg_Object = MibTableColumn
sipPTHBeatCfg = _SipPTHBeatCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 16),
    _SipPTHBeatCfg_Type()
)
sipPTHBeatCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTHBeatCfg.setStatus("current")


class _SipPTHBeatCycle_Type(Integer32):
    """Custom type sipPTHBeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65525),
    )


_SipPTHBeatCycle_Type.__name__ = "Integer32"
_SipPTHBeatCycle_Object = MibTableColumn
sipPTHBeatCycle = _SipPTHBeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 17),
    _SipPTHBeatCycle_Type()
)
sipPTHBeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTHBeatCycle.setStatus("current")


class _SipPTHBeatCount_Type(Integer32):
    """Custom type sipPTHBeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipPTHBeatCount_Type.__name__ = "Integer32"
_SipPTHBeatCount_Object = MibTableColumn
sipPTHBeatCount = _SipPTHBeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 14, 1, 18),
    _SipPTHBeatCount_Type()
)
sipPTHBeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipPTHBeatCount.setStatus("current")
_PriUsernameTable_Object = MibTable
priUsernameTable = _PriUsernameTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15)
)
if mibBuilder.loadTexts:
    priUsernameTable.setStatus("current")
_PriUsernameEntry_Object = MibTableRow
priUsernameEntry = _PriUsernameEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1)
)
priUsernameEntry.setIndexNames(
    (0, "V1600D", "usernamePon"),
    (0, "V1600D", "usernameOnu"),
)
if mibBuilder.loadTexts:
    priUsernameEntry.setStatus("current")
_UsernamePon_Type = Unsigned32
_UsernamePon_Object = MibTableColumn
usernamePon = _UsernamePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 1),
    _UsernamePon_Type()
)
usernamePon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usernamePon.setStatus("current")
_UsernameOnu_Type = Unsigned32
_UsernameOnu_Object = MibTableColumn
usernameOnu = _UsernameOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 2),
    _UsernameOnu_Type()
)
usernameOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usernameOnu.setStatus("current")


class _PriUsernameAdminCtl_Type(Integer32):
    """Custom type priUsernameAdminCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriUsernameAdminCtl_Type.__name__ = "Integer32"
_PriUsernameAdminCtl_Object = MibTableColumn
priUsernameAdminCtl = _PriUsernameAdminCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 3),
    _PriUsernameAdminCtl_Type()
)
priUsernameAdminCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priUsernameAdminCtl.setStatus("current")
_PriUsernameAdminName_Type = OctetString
_PriUsernameAdminName_Object = MibTableColumn
priUsernameAdminName = _PriUsernameAdminName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 4),
    _PriUsernameAdminName_Type()
)
priUsernameAdminName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priUsernameAdminName.setStatus("current")
_PriUsernameAdminPwd_Type = OctetString
_PriUsernameAdminPwd_Object = MibTableColumn
priUsernameAdminPwd = _PriUsernameAdminPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 5),
    _PriUsernameAdminPwd_Type()
)
priUsernameAdminPwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priUsernameAdminPwd.setStatus("current")


class _PriUsernameUserCtl_Type(Integer32):
    """Custom type priUsernameUserCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriUsernameUserCtl_Type.__name__ = "Integer32"
_PriUsernameUserCtl_Object = MibTableColumn
priUsernameUserCtl = _PriUsernameUserCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 6),
    _PriUsernameUserCtl_Type()
)
priUsernameUserCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priUsernameUserCtl.setStatus("current")
_PriUsernameUserName_Type = OctetString
_PriUsernameUserName_Object = MibTableColumn
priUsernameUserName = _PriUsernameUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 7),
    _PriUsernameUserName_Type()
)
priUsernameUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priUsernameUserName.setStatus("current")
_PriUsernameUserPwd_Type = OctetString
_PriUsernameUserPwd_Object = MibTableColumn
priUsernameUserPwd = _PriUsernameUserPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 15, 1, 8),
    _PriUsernameUserPwd_Type()
)
priUsernameUserPwd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priUsernameUserPwd.setStatus("current")
_PriFirewallTable_Object = MibTable
priFirewallTable = _PriFirewallTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 16)
)
if mibBuilder.loadTexts:
    priFirewallTable.setStatus("current")
_PriFirewallEntry_Object = MibTableRow
priFirewallEntry = _PriFirewallEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 16, 1)
)
priFirewallEntry.setIndexNames(
    (0, "V1600D", "priFirewallPon"),
    (0, "V1600D", "priFirewallOnu"),
)
if mibBuilder.loadTexts:
    priFirewallEntry.setStatus("current")
_PriFirewallPon_Type = Unsigned32
_PriFirewallPon_Object = MibTableColumn
priFirewallPon = _PriFirewallPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 16, 1, 1),
    _PriFirewallPon_Type()
)
priFirewallPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priFirewallPon.setStatus("current")
_PriFirewallOnu_Type = Unsigned32
_PriFirewallOnu_Object = MibTableColumn
priFirewallOnu = _PriFirewallOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 16, 1, 2),
    _PriFirewallOnu_Type()
)
priFirewallOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priFirewallOnu.setStatus("current")


class _PriFirewallLevel_Type(Integer32):
    """Custom type priFirewallLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("low", 1),
          ("middle", 2),
          ("high", 3))
    )


_PriFirewallLevel_Type.__name__ = "Integer32"
_PriFirewallLevel_Object = MibTableColumn
priFirewallLevel = _PriFirewallLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 16, 1, 3),
    _PriFirewallLevel_Type()
)
priFirewallLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priFirewallLevel.setStatus("current")
_PriAclTable_Object = MibTable
priAclTable = _PriAclTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17)
)
if mibBuilder.loadTexts:
    priAclTable.setStatus("current")
_PriAclEntry_Object = MibTableRow
priAclEntry = _PriAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1)
)
priAclEntry.setIndexNames(
    (0, "V1600D", "priAclPon"),
    (0, "V1600D", "priAclOnu"),
    (0, "V1600D", "priAclProtocolType"),
)
if mibBuilder.loadTexts:
    priAclEntry.setStatus("current")
_PriAclPon_Type = Unsigned32
_PriAclPon_Object = MibTableColumn
priAclPon = _PriAclPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 1),
    _PriAclPon_Type()
)
priAclPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclPon.setStatus("current")
_PriAclOnu_Type = Unsigned32
_PriAclOnu_Object = MibTableColumn
priAclOnu = _PriAclOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 2),
    _PriAclOnu_Type()
)
priAclOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclOnu.setStatus("current")


class _PriAclProtocolType_Type(Integer32):
    """Custom type priAclProtocolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 0),
          ("ftp", 1),
          ("http", 2),
          ("https", 3),
          ("tftp", 4),
          ("ping", 5))
    )


_PriAclProtocolType_Type.__name__ = "Integer32"
_PriAclProtocolType_Object = MibTableColumn
priAclProtocolType = _PriAclProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 3),
    _PriAclProtocolType_Type()
)
priAclProtocolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclProtocolType.setStatus("current")


class _PriAclControl_Type(Integer32):
    """Custom type priAclControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclControl_Type.__name__ = "Integer32"
_PriAclControl_Object = MibTableColumn
priAclControl = _PriAclControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 4),
    _PriAclControl_Type()
)
priAclControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclControl.setStatus("current")


class _PriAclLanControl_Type(Integer32):
    """Custom type priAclLanControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclLanControl_Type.__name__ = "Integer32"
_PriAclLanControl_Object = MibTableColumn
priAclLanControl = _PriAclLanControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 5),
    _PriAclLanControl_Type()
)
priAclLanControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclLanControl.setStatus("current")


class _PriAclWanControl_Type(Integer32):
    """Custom type priAclWanControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclWanControl_Type.__name__ = "Integer32"
_PriAclWanControl_Object = MibTableColumn
priAclWanControl = _PriAclWanControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 6),
    _PriAclWanControl_Type()
)
priAclWanControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclWanControl.setStatus("current")


class _PriAclIpv4Control_Type(Integer32):
    """Custom type priAclIpv4Control based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclIpv4Control_Type.__name__ = "Integer32"
_PriAclIpv4Control_Object = MibTableColumn
priAclIpv4Control = _PriAclIpv4Control_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 7),
    _PriAclIpv4Control_Type()
)
priAclIpv4Control.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclIpv4Control.setStatus("current")
_PriAclIPv4Address_Type = IpAddress
_PriAclIPv4Address_Object = MibTableColumn
priAclIPv4Address = _PriAclIPv4Address_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 8),
    _PriAclIPv4Address_Type()
)
priAclIPv4Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclIPv4Address.setStatus("current")
_PriAclIPv4MaskAddr_Type = IpAddress
_PriAclIPv4MaskAddr_Object = MibTableColumn
priAclIPv4MaskAddr = _PriAclIPv4MaskAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 9),
    _PriAclIPv4MaskAddr_Type()
)
priAclIPv4MaskAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclIPv4MaskAddr.setStatus("current")


class _PriAclIpv6Control_Type(Integer32):
    """Custom type priAclIpv6Control based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriAclIpv6Control_Type.__name__ = "Integer32"
_PriAclIpv6Control_Object = MibTableColumn
priAclIpv6Control = _PriAclIpv6Control_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 10),
    _PriAclIpv6Control_Type()
)
priAclIpv6Control.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclIpv6Control.setStatus("current")
_PriAclIPv6Address_Type = OctetString
_PriAclIPv6Address_Object = MibTableColumn
priAclIPv6Address = _PriAclIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 11),
    _PriAclIPv6Address_Type()
)
priAclIPv6Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclIPv6Address.setStatus("current")
_PriAclPort_Type = Unsigned32
_PriAclPort_Object = MibTableColumn
priAclPort = _PriAclPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 17, 1, 12),
    _PriAclPort_Type()
)
priAclPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priAclPort.setStatus("current")
_PriDhcpv6ServerTable_Object = MibTable
priDhcpv6ServerTable = _PriDhcpv6ServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18)
)
if mibBuilder.loadTexts:
    priDhcpv6ServerTable.setStatus("current")
_PriDhcpv6ServerEntry_Object = MibTableRow
priDhcpv6ServerEntry = _PriDhcpv6ServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1)
)
priDhcpv6ServerEntry.setIndexNames(
    (0, "V1600D", "priDhcpv6ServerPon"),
    (0, "V1600D", "priDhcpv6ServerOnu"),
)
if mibBuilder.loadTexts:
    priDhcpv6ServerEntry.setStatus("current")
_PriDhcpv6ServerPon_Type = Integer32
_PriDhcpv6ServerPon_Object = MibTableColumn
priDhcpv6ServerPon = _PriDhcpv6ServerPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 1),
    _PriDhcpv6ServerPon_Type()
)
priDhcpv6ServerPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6ServerPon.setStatus("current")
_PriDhcpv6ServerOnu_Type = Integer32
_PriDhcpv6ServerOnu_Object = MibTableColumn
priDhcpv6ServerOnu = _PriDhcpv6ServerOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 2),
    _PriDhcpv6ServerOnu_Type()
)
priDhcpv6ServerOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6ServerOnu.setStatus("current")
_PriDhcpv6LanIp_Type = OctetString
_PriDhcpv6LanIp_Object = MibTableColumn
priDhcpv6LanIp = _PriDhcpv6LanIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 3),
    _PriDhcpv6LanIp_Type()
)
priDhcpv6LanIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6LanIp.setStatus("current")
_PriDhcpv6LanPrefixlen_Type = Integer32
_PriDhcpv6LanPrefixlen_Object = MibTableColumn
priDhcpv6LanPrefixlen = _PriDhcpv6LanPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 4),
    _PriDhcpv6LanPrefixlen_Type()
)
priDhcpv6LanPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6LanPrefixlen.setStatus("current")


class _PriDhcpv6PrefixMode_Type(Integer32):
    """Custom type priDhcpv6PrefixMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("static", 1))
    )


_PriDhcpv6PrefixMode_Type.__name__ = "Integer32"
_PriDhcpv6PrefixMode_Object = MibTableColumn
priDhcpv6PrefixMode = _PriDhcpv6PrefixMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 5),
    _PriDhcpv6PrefixMode_Type()
)
priDhcpv6PrefixMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6PrefixMode.setStatus("current")
_PriDhcpv6PrefixModeIp_Type = OctetString
_PriDhcpv6PrefixModeIp_Object = MibTableColumn
priDhcpv6PrefixModeIp = _PriDhcpv6PrefixModeIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 6),
    _PriDhcpv6PrefixModeIp_Type()
)
priDhcpv6PrefixModeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6PrefixModeIp.setStatus("current")


class _PriDhcpv6Enable_Type(Integer32):
    """Custom type priDhcpv6Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_PriDhcpv6Enable_Type.__name__ = "Integer32"
_PriDhcpv6Enable_Object = MibTableColumn
priDhcpv6Enable = _PriDhcpv6Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 7),
    _PriDhcpv6Enable_Type()
)
priDhcpv6Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6Enable.setStatus("current")
_PriDhcpv6Preference_Type = Unsigned32
_PriDhcpv6Preference_Object = MibTableColumn
priDhcpv6Preference = _PriDhcpv6Preference_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 8),
    _PriDhcpv6Preference_Type()
)
priDhcpv6Preference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6Preference.setStatus("current")
_PriDhcpv6BeginIp_Type = OctetString
_PriDhcpv6BeginIp_Object = MibTableColumn
priDhcpv6BeginIp = _PriDhcpv6BeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 9),
    _PriDhcpv6BeginIp_Type()
)
priDhcpv6BeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6BeginIp.setStatus("current")
_PriDhcpv6EndIp_Type = OctetString
_PriDhcpv6EndIp_Object = MibTableColumn
priDhcpv6EndIp = _PriDhcpv6EndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 10),
    _PriDhcpv6EndIp_Type()
)
priDhcpv6EndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6EndIp.setStatus("current")


class _PriDhcpv6PoolType_Type(Integer32):
    """Custom type priDhcpv6PoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_PriDhcpv6PoolType_Type.__name__ = "Integer32"
_PriDhcpv6PoolType_Object = MibTableColumn
priDhcpv6PoolType = _PriDhcpv6PoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 11),
    _PriDhcpv6PoolType_Type()
)
priDhcpv6PoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6PoolType.setStatus("current")
_PriDhcpv6MasterDns_Type = OctetString
_PriDhcpv6MasterDns_Object = MibTableColumn
priDhcpv6MasterDns = _PriDhcpv6MasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 12),
    _PriDhcpv6MasterDns_Type()
)
priDhcpv6MasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6MasterDns.setStatus("current")
_PriDhcpv6SlaveDns_Type = OctetString
_PriDhcpv6SlaveDns_Object = MibTableColumn
priDhcpv6SlaveDns = _PriDhcpv6SlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 13),
    _PriDhcpv6SlaveDns_Type()
)
priDhcpv6SlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6SlaveDns.setStatus("current")
_PriDhcpv6Gateway_Type = OctetString
_PriDhcpv6Gateway_Object = MibTableColumn
priDhcpv6Gateway = _PriDhcpv6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 14),
    _PriDhcpv6Gateway_Type()
)
priDhcpv6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6Gateway.setStatus("current")
_PriDhcpv6RelayIp_Type = OctetString
_PriDhcpv6RelayIp_Object = MibTableColumn
priDhcpv6RelayIp = _PriDhcpv6RelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 15),
    _PriDhcpv6RelayIp_Type()
)
priDhcpv6RelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6RelayIp.setStatus("current")


class _PriDhcpv6RA_Type(Integer32):
    """Custom type priDhcpv6RA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpv6RA_Type.__name__ = "Integer32"
_PriDhcpv6RA_Object = MibTableColumn
priDhcpv6RA = _PriDhcpv6RA_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 16),
    _PriDhcpv6RA_Type()
)
priDhcpv6RA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6RA.setStatus("current")


class _PriDhcpv6RAManage_Type(Integer32):
    """Custom type priDhcpv6RAManage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpv6RAManage_Type.__name__ = "Integer32"
_PriDhcpv6RAManage_Object = MibTableColumn
priDhcpv6RAManage = _PriDhcpv6RAManage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 17),
    _PriDhcpv6RAManage_Type()
)
priDhcpv6RAManage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6RAManage.setStatus("current")


class _PriDhcpv6RAOther_Type(Integer32):
    """Custom type priDhcpv6RAOther based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriDhcpv6RAOther_Type.__name__ = "Integer32"
_PriDhcpv6RAOther_Object = MibTableColumn
priDhcpv6RAOther = _PriDhcpv6RAOther_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 18),
    _PriDhcpv6RAOther_Type()
)
priDhcpv6RAOther.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6RAOther.setStatus("current")
_PriDhcpv6RAMaxInterval_Type = Integer32
_PriDhcpv6RAMaxInterval_Object = MibTableColumn
priDhcpv6RAMaxInterval = _PriDhcpv6RAMaxInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 19),
    _PriDhcpv6RAMaxInterval_Type()
)
priDhcpv6RAMaxInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6RAMaxInterval.setStatus("current")
_PriDhcpv6RAMinInterval_Type = Integer32
_PriDhcpv6RAMinInterval_Object = MibTableColumn
priDhcpv6RAMinInterval = _PriDhcpv6RAMinInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 20),
    _PriDhcpv6RAMinInterval_Type()
)
priDhcpv6RAMinInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6RAMinInterval.setStatus("current")
_PriDhcpv6Valid_Type = Unsigned32
_PriDhcpv6Valid_Object = MibTableColumn
priDhcpv6Valid = _PriDhcpv6Valid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 21),
    _PriDhcpv6Valid_Type()
)
priDhcpv6Valid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6Valid.setStatus("current")


class _PriDhcpv6DnsMode_Type(Integer32):
    """Custom type priDhcpv6DnsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wanconnection", 0),
          ("static", 1),
          ("hgwproxy", 2))
    )


_PriDhcpv6DnsMode_Type.__name__ = "Integer32"
_PriDhcpv6DnsMode_Object = MibTableColumn
priDhcpv6DnsMode = _PriDhcpv6DnsMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 18, 1, 22),
    _PriDhcpv6DnsMode_Type()
)
priDhcpv6DnsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDhcpv6DnsMode.setStatus("current")
_PriWifiSwitchTable_Object = MibTable
priWifiSwitchTable = _PriWifiSwitchTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19)
)
if mibBuilder.loadTexts:
    priWifiSwitchTable.setStatus("current")
_PriWifiSwitchEntry_Object = MibTableRow
priWifiSwitchEntry = _PriWifiSwitchEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1)
)
priWifiSwitchEntry.setIndexNames(
    (0, "V1600D", "priWifiSwitchPonS"),
    (0, "V1600D", "priWifiSwitchOnuS"),
)
if mibBuilder.loadTexts:
    priWifiSwitchEntry.setStatus("current")


class _PriWifiSwitchPonS_Type(Integer32):
    """Custom type priWifiSwitchPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriWifiSwitchPonS_Type.__name__ = "Integer32"
_PriWifiSwitchPonS_Object = MibTableColumn
priWifiSwitchPonS = _PriWifiSwitchPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 1),
    _PriWifiSwitchPonS_Type()
)
priWifiSwitchPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchPonS.setStatus("current")


class _PriWifiSwitchOnuS_Type(Integer32):
    """Custom type priWifiSwitchOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriWifiSwitchOnuS_Type.__name__ = "Integer32"
_PriWifiSwitchOnuS_Object = MibTableColumn
priWifiSwitchOnuS = _PriWifiSwitchOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 2),
    _PriWifiSwitchOnuS_Type()
)
priWifiSwitchOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchOnuS.setStatus("current")


class _PriWifiSwitchAPModuleS_Type(Integer32):
    """Custom type priWifiSwitchAPModuleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiSwitchAPModuleS_Type.__name__ = "Integer32"
_PriWifiSwitchAPModuleS_Object = MibTableColumn
priWifiSwitchAPModuleS = _PriWifiSwitchAPModuleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 3),
    _PriWifiSwitchAPModuleS_Type()
)
priWifiSwitchAPModuleS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchAPModuleS.setStatus("current")


class _PriWifiSwitchCountry_Type(Integer32):
    """Custom type priWifiSwitchCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_PriWifiSwitchCountry_Type.__name__ = "Integer32"
_PriWifiSwitchCountry_Object = MibTableColumn
priWifiSwitchCountry = _PriWifiSwitchCountry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 4),
    _PriWifiSwitchCountry_Type()
)
priWifiSwitchCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchCountry.setStatus("current")


class _PriWifiSwitchChannelS_Type(Integer32):
    """Custom type priWifiSwitchChannelS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_PriWifiSwitchChannelS_Type.__name__ = "Integer32"
_PriWifiSwitchChannelS_Object = MibTableColumn
priWifiSwitchChannelS = _PriWifiSwitchChannelS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 5),
    _PriWifiSwitchChannelS_Type()
)
priWifiSwitchChannelS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchChannelS.setStatus("current")


class _PriWifiSwitchStandardS_Type(Integer32):
    """Custom type priWifiSwitchStandardS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4),
          ("s80211ac", 5),
          ("s80211a", 6),
          ("s80211an", 7),
          ("s80211nac", 8),
          ("s80211anac", 9))
    )


_PriWifiSwitchStandardS_Type.__name__ = "Integer32"
_PriWifiSwitchStandardS_Object = MibTableColumn
priWifiSwitchStandardS = _PriWifiSwitchStandardS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 6),
    _PriWifiSwitchStandardS_Type()
)
priWifiSwitchStandardS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchStandardS.setStatus("current")


class _PriWifiSwitchPower1_Type(Integer32):
    """Custom type priWifiSwitchPower1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_PriWifiSwitchPower1_Type.__name__ = "Integer32"
_PriWifiSwitchPower1_Object = MibTableColumn
priWifiSwitchPower1 = _PriWifiSwitchPower1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 7),
    _PriWifiSwitchPower1_Type()
)
priWifiSwitchPower1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchPower1.setStatus("current")


class _PriWifiSwitchChannelWidth_Type(Integer32):
    """Custom type priWifiSwitchChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s80", 2),
          ("s20_40", 3))
    )


_PriWifiSwitchChannelWidth_Type.__name__ = "Integer32"
_PriWifiSwitchChannelWidth_Object = MibTableColumn
priWifiSwitchChannelWidth = _PriWifiSwitchChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 8),
    _PriWifiSwitchChannelWidth_Type()
)
priWifiSwitchChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchChannelWidth.setStatus("current")


class _PriWifiSwitchEasyMeshStatus_Type(Integer32):
    """Custom type priWifiSwitchEasyMeshStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriWifiSwitchEasyMeshStatus_Type.__name__ = "Integer32"
_PriWifiSwitchEasyMeshStatus_Object = MibTableColumn
priWifiSwitchEasyMeshStatus = _PriWifiSwitchEasyMeshStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 19, 1, 9),
    _PriWifiSwitchEasyMeshStatus_Type()
)
priWifiSwitchEasyMeshStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWifiSwitchEasyMeshStatus.setStatus("current")
_PriWanConnV6Table_Object = MibTable
priWanConnV6Table = _PriWanConnV6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20)
)
if mibBuilder.loadTexts:
    priWanConnV6Table.setStatus("current")
_PriWanConnV6Entry_Object = MibTableRow
priWanConnV6Entry = _PriWanConnV6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1)
)
priWanConnV6Entry.setIndexNames(
    (0, "V1600D", "priV6ConnPonS"),
    (0, "V1600D", "priV6ConnOnuS"),
    (0, "V1600D", "priV6ConnIndexS"),
)
if mibBuilder.loadTexts:
    priWanConnV6Entry.setStatus("current")


class _PriV6ConnPonS_Type(Integer32):
    """Custom type priV6ConnPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriV6ConnPonS_Type.__name__ = "Integer32"
_PriV6ConnPonS_Object = MibTableColumn
priV6ConnPonS = _PriV6ConnPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 1),
    _PriV6ConnPonS_Type()
)
priV6ConnPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPonS.setStatus("current")


class _PriV6ConnOnuS_Type(Integer32):
    """Custom type priV6ConnOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriV6ConnOnuS_Type.__name__ = "Integer32"
_PriV6ConnOnuS_Object = MibTableColumn
priV6ConnOnuS = _PriV6ConnOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 2),
    _PriV6ConnOnuS_Type()
)
priV6ConnOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnOnuS.setStatus("current")


class _PriV6ConnIndexS_Type(Integer32):
    """Custom type priV6ConnIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_PriV6ConnIndexS_Type.__name__ = "Integer32"
_PriV6ConnIndexS_Object = MibTableColumn
priV6ConnIndexS = _PriV6ConnIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 3),
    _PriV6ConnIndexS_Type()
)
priV6ConnIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIndexS.setStatus("current")


class _PriV6ConnBindLanS_Type(Integer32):
    """Custom type priV6ConnBindLanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_PriV6ConnBindLanS_Type.__name__ = "Integer32"
_PriV6ConnBindLanS_Object = MibTableColumn
priV6ConnBindLanS = _PriV6ConnBindLanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 4),
    _PriV6ConnBindLanS_Type()
)
priV6ConnBindLanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnBindLanS.setStatus("current")


class _PriV6ConnBindSsidS_Type(Integer32):
    """Custom type priV6ConnBindSsidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriV6ConnBindSsidS_Type.__name__ = "Integer32"
_PriV6ConnBindSsidS_Object = MibTableColumn
priV6ConnBindSsidS = _PriV6ConnBindSsidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 5),
    _PriV6ConnBindSsidS_Type()
)
priV6ConnBindSsidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnBindSsidS.setStatus("current")


class _PriV6WanModeS_Type(Integer32):
    """Custom type priV6WanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("voip", 7),
          ("other", 100))
    )


_PriV6WanModeS_Type.__name__ = "Integer32"
_PriV6WanModeS_Object = MibTableColumn
priV6WanModeS = _PriV6WanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 6),
    _PriV6WanModeS_Type()
)
priV6WanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6WanModeS.setStatus("current")


class _PriV6ConnTypeS_Type(Integer32):
    """Custom type priV6ConnTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_PriV6ConnTypeS_Type.__name__ = "Integer32"
_PriV6ConnTypeS_Object = MibTableColumn
priV6ConnTypeS = _PriV6ConnTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 7),
    _PriV6ConnTypeS_Type()
)
priV6ConnTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTypeS.setStatus("current")


class _PriV6ConnVlanIdS_Type(Integer32):
    """Custom type priV6ConnVlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_PriV6ConnVlanIdS_Type.__name__ = "Integer32"
_PriV6ConnVlanIdS_Object = MibTableColumn
priV6ConnVlanIdS = _PriV6ConnVlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 8),
    _PriV6ConnVlanIdS_Type()
)
priV6ConnVlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnVlanIdS.setStatus("current")


class _PriV6ConnVlanCosS_Type(Integer32):
    """Custom type priV6ConnVlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriV6ConnVlanCosS_Type.__name__ = "Integer32"
_PriV6ConnVlanCosS_Object = MibTableColumn
priV6ConnVlanCosS = _PriV6ConnVlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 9),
    _PriV6ConnVlanCosS_Type()
)
priV6ConnVlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnVlanCosS.setStatus("current")


class _PriV6ConnIpProtocolS_Type(Integer32):
    """Custom type priV6ConnIpProtocolS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 0),
          ("ipv6", 1),
          ("ipv4_ipv6", 2))
    )


_PriV6ConnIpProtocolS_Type.__name__ = "Integer32"
_PriV6ConnIpProtocolS_Object = MibTableColumn
priV6ConnIpProtocolS = _PriV6ConnIpProtocolS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 10),
    _PriV6ConnIpProtocolS_Type()
)
priV6ConnIpProtocolS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIpProtocolS.setStatus("current")


class _PriV6wanConnModeS_Type(Integer32):
    """Custom type priV6wanConnModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_PriV6wanConnModeS_Type.__name__ = "Integer32"
_PriV6wanConnModeS_Object = MibTableColumn
priV6wanConnModeS = _PriV6wanConnModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 11),
    _PriV6wanConnModeS_Type()
)
priV6wanConnModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6wanConnModeS.setStatus("current")
_PriV6ConnIpAddressIpv4S_Type = IpAddress
_PriV6ConnIpAddressIpv4S_Object = MibTableColumn
priV6ConnIpAddressIpv4S = _PriV6ConnIpAddressIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 12),
    _PriV6ConnIpAddressIpv4S_Type()
)
priV6ConnIpAddressIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIpAddressIpv4S.setStatus("current")
_PriV6ConnIpNetMaskIpv4S_Type = IpAddress
_PriV6ConnIpNetMaskIpv4S_Object = MibTableColumn
priV6ConnIpNetMaskIpv4S = _PriV6ConnIpNetMaskIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 13),
    _PriV6ConnIpNetMaskIpv4S_Type()
)
priV6ConnIpNetMaskIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnIpNetMaskIpv4S.setStatus("current")
_PriV6ConnGatewayIpv4S_Type = IpAddress
_PriV6ConnGatewayIpv4S_Object = MibTableColumn
priV6ConnGatewayIpv4S = _PriV6ConnGatewayIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 14),
    _PriV6ConnGatewayIpv4S_Type()
)
priV6ConnGatewayIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnGatewayIpv4S.setStatus("current")


class _PriV6ConnDnsEnableIpv4S_Type(Integer32):
    """Custom type priV6ConnDnsEnableIpv4S based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDnsEnableIpv4S_Type.__name__ = "Integer32"
_PriV6ConnDnsEnableIpv4S_Object = MibTableColumn
priV6ConnDnsEnableIpv4S = _PriV6ConnDnsEnableIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 15),
    _PriV6ConnDnsEnableIpv4S_Type()
)
priV6ConnDnsEnableIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDnsEnableIpv4S.setStatus("current")
_PriV6ConnMasterDnsIpv4S_Type = IpAddress
_PriV6ConnMasterDnsIpv4S_Object = MibTableColumn
priV6ConnMasterDnsIpv4S = _PriV6ConnMasterDnsIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 16),
    _PriV6ConnMasterDnsIpv4S_Type()
)
priV6ConnMasterDnsIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnMasterDnsIpv4S.setStatus("current")
_PriV6ConnSlaveDnsIpv4S_Type = IpAddress
_PriV6ConnSlaveDnsIpv4S_Object = MibTableColumn
priV6ConnSlaveDnsIpv4S = _PriV6ConnSlaveDnsIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 17),
    _PriV6ConnSlaveDnsIpv4S_Type()
)
priV6ConnSlaveDnsIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSlaveDnsIpv4S.setStatus("current")


class _PriV6ConnNatEnableS_Type(Integer32):
    """Custom type priV6ConnNatEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnNatEnableS_Type.__name__ = "Integer32"
_PriV6ConnNatEnableS_Object = MibTableColumn
priV6ConnNatEnableS = _PriV6ConnNatEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 18),
    _PriV6ConnNatEnableS_Type()
)
priV6ConnNatEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnNatEnableS.setStatus("current")
_PriV6ConnAddressIpv6S_Type = OctetString
_PriV6ConnAddressIpv6S_Object = MibTableColumn
priV6ConnAddressIpv6S = _PriV6ConnAddressIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 19),
    _PriV6ConnAddressIpv6S_Type()
)
priV6ConnAddressIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnAddressIpv6S.setStatus("current")


class _PriV6ConnPrefixLenIpv6S_Type(Integer32):
    """Custom type priV6ConnPrefixLenIpv6S based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_PriV6ConnPrefixLenIpv6S_Type.__name__ = "Integer32"
_PriV6ConnPrefixLenIpv6S_Object = MibTableColumn
priV6ConnPrefixLenIpv6S = _PriV6ConnPrefixLenIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 20),
    _PriV6ConnPrefixLenIpv6S_Type()
)
priV6ConnPrefixLenIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPrefixLenIpv6S.setStatus("current")
_PriV6ConnGatewayIpv6S_Type = OctetString
_PriV6ConnGatewayIpv6S_Object = MibTableColumn
priV6ConnGatewayIpv6S = _PriV6ConnGatewayIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 21),
    _PriV6ConnGatewayIpv6S_Type()
)
priV6ConnGatewayIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnGatewayIpv6S.setStatus("current")


class _PriV6ConnDnsEnableIpv6S_Type(Integer32):
    """Custom type priV6ConnDnsEnableIpv6S based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDnsEnableIpv6S_Type.__name__ = "Integer32"
_PriV6ConnDnsEnableIpv6S_Object = MibTableColumn
priV6ConnDnsEnableIpv6S = _PriV6ConnDnsEnableIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 22),
    _PriV6ConnDnsEnableIpv6S_Type()
)
priV6ConnDnsEnableIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDnsEnableIpv6S.setStatus("current")
_PriV6ConnMsaterDnsIpv6S_Type = OctetString
_PriV6ConnMsaterDnsIpv6S_Object = MibTableColumn
priV6ConnMsaterDnsIpv6S = _PriV6ConnMsaterDnsIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 23),
    _PriV6ConnMsaterDnsIpv6S_Type()
)
priV6ConnMsaterDnsIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnMsaterDnsIpv6S.setStatus("current")
_PriV6ConnSlaveDnsIpv6S_Type = OctetString
_PriV6ConnSlaveDnsIpv6S_Object = MibTableColumn
priV6ConnSlaveDnsIpv6S = _PriV6ConnSlaveDnsIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 24),
    _PriV6ConnSlaveDnsIpv6S_Type()
)
priV6ConnSlaveDnsIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSlaveDnsIpv6S.setStatus("current")


class _PriV6ConnSlaacS_Type(Integer32):
    """Custom type priV6ConnSlaacS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnSlaacS_Type.__name__ = "Integer32"
_PriV6ConnSlaacS_Object = MibTableColumn
priV6ConnSlaacS = _PriV6ConnSlaacS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 25),
    _PriV6ConnSlaacS_Type()
)
priV6ConnSlaacS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSlaacS.setStatus("current")


class _PriV6ConnPppoeProxyS_Type(Integer32):
    """Custom type priV6ConnPppoeProxyS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnPppoeProxyS_Type.__name__ = "Integer32"
_PriV6ConnPppoeProxyS_Object = MibTableColumn
priV6ConnPppoeProxyS = _PriV6ConnPppoeProxyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 26),
    _PriV6ConnPppoeProxyS_Type()
)
priV6ConnPppoeProxyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeProxyS.setStatus("current")
_PriV6ConnPppoeUsernameS_Type = OctetString
_PriV6ConnPppoeUsernameS_Object = MibTableColumn
priV6ConnPppoeUsernameS = _PriV6ConnPppoeUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 27),
    _PriV6ConnPppoeUsernameS_Type()
)
priV6ConnPppoeUsernameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeUsernameS.setStatus("current")
_PriV6ConnPppoePasswordS_Type = OctetString
_PriV6ConnPppoePasswordS_Object = MibTableColumn
priV6ConnPppoePasswordS = _PriV6ConnPppoePasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 28),
    _PriV6ConnPppoePasswordS_Type()
)
priV6ConnPppoePasswordS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoePasswordS.setStatus("current")
_PriV6ConnPppoeSerNameS_Type = OctetString
_PriV6ConnPppoeSerNameS_Object = MibTableColumn
priV6ConnPppoeSerNameS = _PriV6ConnPppoeSerNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 29),
    _PriV6ConnPppoeSerNameS_Type()
)
priV6ConnPppoeSerNameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeSerNameS.setStatus("current")


class _PriV6ConnPppoeModeS_Type(Integer32):
    """Custom type priV6ConnPppoeModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("flowConnect", 1))
    )


_PriV6ConnPppoeModeS_Type.__name__ = "Integer32"
_PriV6ConnPppoeModeS_Object = MibTableColumn
priV6ConnPppoeModeS = _PriV6ConnPppoeModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 30),
    _PriV6ConnPppoeModeS_Type()
)
priV6ConnPppoeModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnPppoeModeS.setStatus("current")


class _PriV6ConnDhcpv6ClientAddressS_Type(Integer32):
    """Custom type priV6ConnDhcpv6ClientAddressS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDhcpv6ClientAddressS_Type.__name__ = "Integer32"
_PriV6ConnDhcpv6ClientAddressS_Object = MibTableColumn
priV6ConnDhcpv6ClientAddressS = _PriV6ConnDhcpv6ClientAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 31),
    _PriV6ConnDhcpv6ClientAddressS_Type()
)
priV6ConnDhcpv6ClientAddressS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDhcpv6ClientAddressS.setStatus("current")


class _PriV6ConnDhcpv6ClientPrefixS_Type(Integer32):
    """Custom type priV6ConnDhcpv6ClientPrefixS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDhcpv6ClientPrefixS_Type.__name__ = "Integer32"
_PriV6ConnDhcpv6ClientPrefixS_Object = MibTableColumn
priV6ConnDhcpv6ClientPrefixS = _PriV6ConnDhcpv6ClientPrefixS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 32),
    _PriV6ConnDhcpv6ClientPrefixS_Type()
)
priV6ConnDhcpv6ClientPrefixS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDhcpv6ClientPrefixS.setStatus("current")


class _PriV6ConnDsLiteEnableS_Type(Integer32):
    """Custom type priV6ConnDsLiteEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnDsLiteEnableS_Type.__name__ = "Integer32"
_PriV6ConnDsLiteEnableS_Object = MibTableColumn
priV6ConnDsLiteEnableS = _PriV6ConnDsLiteEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 33),
    _PriV6ConnDsLiteEnableS_Type()
)
priV6ConnDsLiteEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteEnableS.setStatus("current")


class _PriV6ConnDsLiteAftrModeS_Type(Integer32):
    """Custom type priV6ConnDsLiteAftrModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dhcpv6", 0),
          ("manual", 1))
    )


_PriV6ConnDsLiteAftrModeS_Type.__name__ = "Integer32"
_PriV6ConnDsLiteAftrModeS_Object = MibTableColumn
priV6ConnDsLiteAftrModeS = _PriV6ConnDsLiteAftrModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 34),
    _PriV6ConnDsLiteAftrModeS_Type()
)
priV6ConnDsLiteAftrModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteAftrModeS.setStatus("current")


class _PriV6ConnDsLiteAddressTypeS_Type(Integer32):
    """Custom type priV6ConnDsLiteAddressTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ipv6", 0),
          ("dns", 1))
    )


_PriV6ConnDsLiteAddressTypeS_Type.__name__ = "Integer32"
_PriV6ConnDsLiteAddressTypeS_Object = MibTableColumn
priV6ConnDsLiteAddressTypeS = _PriV6ConnDsLiteAddressTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 35),
    _PriV6ConnDsLiteAddressTypeS_Type()
)
priV6ConnDsLiteAddressTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteAddressTypeS.setStatus("current")
_PriV6ConnDsLiteAddressS_Type = OctetString
_PriV6ConnDsLiteAddressS_Object = MibTableColumn
priV6ConnDsLiteAddressS = _PriV6ConnDsLiteAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 36),
    _PriV6ConnDsLiteAddressS_Type()
)
priV6ConnDsLiteAddressS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnDsLiteAddressS.setStatus("current")


class _Priv6ConnQosEnableS_Type(Integer32):
    """Custom type priv6ConnQosEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Priv6ConnQosEnableS_Type.__name__ = "Integer32"
_Priv6ConnQosEnableS_Object = MibTableColumn
priv6ConnQosEnableS = _Priv6ConnQosEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 37),
    _Priv6ConnQosEnableS_Type()
)
priv6ConnQosEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priv6ConnQosEnableS.setStatus("current")


class _PriV6ConnVlanModeS_Type(Integer32):
    """Custom type priV6ConnVlanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_PriV6ConnVlanModeS_Type.__name__ = "Integer32"
_PriV6ConnVlanModeS_Object = MibTableColumn
priV6ConnVlanModeS = _PriV6ConnVlanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 38),
    _PriV6ConnVlanModeS_Type()
)
priV6ConnVlanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnVlanModeS.setStatus("current")


class _PriV6ConnTranslationEnableS_Type(Integer32):
    """Custom type priV6ConnTranslationEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnTranslationEnableS_Type.__name__ = "Integer32"
_PriV6ConnTranslationEnableS_Object = MibTableColumn
priV6ConnTranslationEnableS = _PriV6ConnTranslationEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 39),
    _PriV6ConnTranslationEnableS_Type()
)
priV6ConnTranslationEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTranslationEnableS.setStatus("current")


class _PriV6ConnTranslationVlanS_Type(Integer32):
    """Custom type priV6ConnTranslationVlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_PriV6ConnTranslationVlanS_Type.__name__ = "Integer32"
_PriV6ConnTranslationVlanS_Object = MibTableColumn
priV6ConnTranslationVlanS = _PriV6ConnTranslationVlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 40),
    _PriV6ConnTranslationVlanS_Type()
)
priV6ConnTranslationVlanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTranslationVlanS.setStatus("current")


class _PriV6ConnTranslationCosS_Type(Integer32):
    """Custom type priV6ConnTranslationCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriV6ConnTranslationCosS_Type.__name__ = "Integer32"
_PriV6ConnTranslationCosS_Object = MibTableColumn
priV6ConnTranslationCosS = _PriV6ConnTranslationCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 41),
    _PriV6ConnTranslationCosS_Type()
)
priV6ConnTranslationCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnTranslationCosS.setStatus("current")


class _PriV6ConnQinqEnableS_Type(Integer32):
    """Custom type priV6ConnQinqEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriV6ConnQinqEnableS_Type.__name__ = "Integer32"
_PriV6ConnQinqEnableS_Object = MibTableColumn
priV6ConnQinqEnableS = _PriV6ConnQinqEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 42),
    _PriV6ConnQinqEnableS_Type()
)
priV6ConnQinqEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnQinqEnableS.setStatus("current")


class _PriV6ConnQinqTpidS_Type(Integer32):
    """Custom type priV6ConnQinqTpidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_PriV6ConnQinqTpidS_Type.__name__ = "Integer32"
_PriV6ConnQinqTpidS_Object = MibTableColumn
priV6ConnQinqTpidS = _PriV6ConnQinqTpidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 43),
    _PriV6ConnQinqTpidS_Type()
)
priV6ConnQinqTpidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnQinqTpidS.setStatus("current")


class _PriV6ConnSvlanIdS_Type(Integer32):
    """Custom type priV6ConnSvlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_PriV6ConnSvlanIdS_Type.__name__ = "Integer32"
_PriV6ConnSvlanIdS_Object = MibTableColumn
priV6ConnSvlanIdS = _PriV6ConnSvlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 44),
    _PriV6ConnSvlanIdS_Type()
)
priV6ConnSvlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSvlanIdS.setStatus("current")


class _PriV6ConnSvlanCosS_Type(Integer32):
    """Custom type priV6ConnSvlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PriV6ConnSvlanCosS_Type.__name__ = "Integer32"
_PriV6ConnSvlanCosS_Object = MibTableColumn
priV6ConnSvlanCosS = _PriV6ConnSvlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 45),
    _PriV6ConnSvlanCosS_Type()
)
priV6ConnSvlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnSvlanCosS.setStatus("current")


class _PriV6ConnRouteMtuS_Type(Integer32):
    """Custom type priV6ConnRouteMtuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(576, 1500),
    )


_PriV6ConnRouteMtuS_Type.__name__ = "Integer32"
_PriV6ConnRouteMtuS_Object = MibTableColumn
priV6ConnRouteMtuS = _PriV6ConnRouteMtuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 46),
    _PriV6ConnRouteMtuS_Type()
)
priV6ConnRouteMtuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnRouteMtuS.setStatus("current")
_Priv6ConnNameS_Type = OctetString
_Priv6ConnNameS_Object = MibTableColumn
priv6ConnNameS = _Priv6ConnNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 47),
    _Priv6ConnNameS_Type()
)
priv6ConnNameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priv6ConnNameS.setStatus("current")


class _PriV6ConnStatusS_Type(Integer32):
    """Custom type priV6ConnStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disconnected", 0),
          ("connected", 1))
    )


_PriV6ConnStatusS_Type.__name__ = "Integer32"
_PriV6ConnStatusS_Object = MibTableColumn
priV6ConnStatusS = _PriV6ConnStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 48),
    _PriV6ConnStatusS_Type()
)
priV6ConnStatusS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnStatusS.setStatus("current")
_PriV6ConnMacAddrS_Type = OctetString
_PriV6ConnMacAddrS_Object = MibTableColumn
priV6ConnMacAddrS = _PriV6ConnMacAddrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 20, 1, 49),
    _PriV6ConnMacAddrS_Type()
)
priV6ConnMacAddrS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priV6ConnMacAddrS.setStatus("current")
_PriTr069ManageTable_Object = MibTable
priTr069ManageTable = _PriTr069ManageTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21)
)
if mibBuilder.loadTexts:
    priTr069ManageTable.setStatus("current")
_PriTr069ManageEntry_Object = MibTableRow
priTr069ManageEntry = _PriTr069ManageEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1)
)
priTr069ManageEntry.setIndexNames(
    (0, "V1600D", "priMngPon"),
    (0, "V1600D", "priMngOnu"),
)
if mibBuilder.loadTexts:
    priTr069ManageEntry.setStatus("current")


class _PriMngPon_Type(Integer32):
    """Custom type priMngPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriMngPon_Type.__name__ = "Integer32"
_PriMngPon_Object = MibTableColumn
priMngPon = _PriMngPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 1),
    _PriMngPon_Type()
)
priMngPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngPon.setStatus("current")


class _PriMngOnu_Type(Integer32):
    """Custom type priMngOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriMngOnu_Type.__name__ = "Integer32"
_PriMngOnu_Object = MibTableColumn
priMngOnu = _PriMngOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 2),
    _PriMngOnu_Type()
)
priMngOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngOnu.setStatus("current")
_PriMngAcsAddressS_Type = OctetString
_PriMngAcsAddressS_Object = MibTableColumn
priMngAcsAddressS = _PriMngAcsAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 3),
    _PriMngAcsAddressS_Type()
)
priMngAcsAddressS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngAcsAddressS.setStatus("current")
_PriMngAcsUsernameS_Type = OctetString
_PriMngAcsUsernameS_Object = MibTableColumn
priMngAcsUsernameS = _PriMngAcsUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 4),
    _PriMngAcsUsernameS_Type()
)
priMngAcsUsernameS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngAcsUsernameS.setStatus("current")
_PriMngAcsPasswordS_Type = OctetString
_PriMngAcsPasswordS_Object = MibTableColumn
priMngAcsPasswordS = _PriMngAcsPasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 5),
    _PriMngAcsPasswordS_Type()
)
priMngAcsPasswordS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngAcsPasswordS.setStatus("current")


class _PriMngCertificateEnS_Type(Integer32):
    """Custom type priMngCertificateEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriMngCertificateEnS_Type.__name__ = "Integer32"
_PriMngCertificateEnS_Object = MibTableColumn
priMngCertificateEnS = _PriMngCertificateEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 6),
    _PriMngCertificateEnS_Type()
)
priMngCertificateEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngCertificateEnS.setStatus("current")


class _PriMngInformEnS_Type(Integer32):
    """Custom type priMngInformEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriMngInformEnS_Type.__name__ = "Integer32"
_PriMngInformEnS_Object = MibTableColumn
priMngInformEnS = _PriMngInformEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 7),
    _PriMngInformEnS_Type()
)
priMngInformEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngInformEnS.setStatus("current")


class _PriMngInformIntervalTimeS_Type(Unsigned32):
    """Custom type priMngInformIntervalTimeS based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PriMngInformIntervalTimeS_Type.__name__ = "Unsigned32"
_PriMngInformIntervalTimeS_Object = MibTableColumn
priMngInformIntervalTimeS = _PriMngInformIntervalTimeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 8),
    _PriMngInformIntervalTimeS_Type()
)
priMngInformIntervalTimeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngInformIntervalTimeS.setStatus("current")
_PriMngRevConnUsernameS_Type = OctetString
_PriMngRevConnUsernameS_Object = MibTableColumn
priMngRevConnUsernameS = _PriMngRevConnUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 9),
    _PriMngRevConnUsernameS_Type()
)
priMngRevConnUsernameS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngRevConnUsernameS.setStatus("current")
_PriMngRevConnPasswordS_Type = OctetString
_PriMngRevConnPasswordS_Object = MibTableColumn
priMngRevConnPasswordS = _PriMngRevConnPasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 10),
    _PriMngRevConnPasswordS_Type()
)
priMngRevConnPasswordS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngRevConnPasswordS.setStatus("current")


class _PriMngStatusS_Type(Integer32):
    """Custom type priMngStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriMngStatusS_Type.__name__ = "Integer32"
_PriMngStatusS_Object = MibTableColumn
priMngStatusS = _PriMngStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 21, 1, 11),
    _PriMngStatusS_Type()
)
priMngStatusS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priMngStatusS.setStatus("current")
_PriTr069StunTable_Object = MibTable
priTr069StunTable = _PriTr069StunTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22)
)
if mibBuilder.loadTexts:
    priTr069StunTable.setStatus("current")
_PriTr069StunEntry_Object = MibTableRow
priTr069StunEntry = _PriTr069StunEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1)
)
priTr069StunEntry.setIndexNames(
    (0, "V1600D", "priStunPon"),
    (0, "V1600D", "priStunOnu"),
)
if mibBuilder.loadTexts:
    priTr069StunEntry.setStatus("current")


class _PriStunPon_Type(Integer32):
    """Custom type priStunPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriStunPon_Type.__name__ = "Integer32"
_PriStunPon_Object = MibTableColumn
priStunPon = _PriStunPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 1),
    _PriStunPon_Type()
)
priStunPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunPon.setStatus("current")


class _PriStunOnu_Type(Integer32):
    """Custom type priStunOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriStunOnu_Type.__name__ = "Integer32"
_PriStunOnu_Object = MibTableColumn
priStunOnu = _PriStunOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 2),
    _PriStunOnu_Type()
)
priStunOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunOnu.setStatus("current")
_PriStunAddressS_Type = OctetString
_PriStunAddressS_Object = MibTableColumn
priStunAddressS = _PriStunAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 3),
    _PriStunAddressS_Type()
)
priStunAddressS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunAddressS.setStatus("current")


class _PriStunPortS_Type(Integer32):
    """Custom type priStunPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriStunPortS_Type.__name__ = "Integer32"
_PriStunPortS_Object = MibTableColumn
priStunPortS = _PriStunPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 4),
    _PriStunPortS_Type()
)
priStunPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunPortS.setStatus("current")
_PriStunUsernameS_Type = OctetString
_PriStunUsernameS_Object = MibTableColumn
priStunUsernameS = _PriStunUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 5),
    _PriStunUsernameS_Type()
)
priStunUsernameS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunUsernameS.setStatus("current")
_PriStunPasswordS_Type = OctetString
_PriStunPasswordS_Object = MibTableColumn
priStunPasswordS = _PriStunPasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 6),
    _PriStunPasswordS_Type()
)
priStunPasswordS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunPasswordS.setStatus("current")


class _PriStunStatusS_Type(Integer32):
    """Custom type priStunStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriStunStatusS_Type.__name__ = "Integer32"
_PriStunStatusS_Object = MibTableColumn
priStunStatusS = _PriStunStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 22, 1, 7),
    _PriStunStatusS_Type()
)
priStunStatusS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    priStunStatusS.setStatus("current")
_PriWanConnCfgTable_Object = MibTable
priWanConnCfgTable = _PriWanConnCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 23)
)
if mibBuilder.loadTexts:
    priWanConnCfgTable.setStatus("current")
_PriWanConnCfgEntry_Object = MibTableRow
priWanConnCfgEntry = _PriWanConnCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 23, 1)
)
priWanConnCfgEntry.setIndexNames(
    (0, "V1600D", "priWanConnCfgPon"),
    (0, "V1600D", "priWanConnCfgOnu"),
)
if mibBuilder.loadTexts:
    priWanConnCfgEntry.setStatus("current")
_PriWanConnCfgPon_Type = Integer32
_PriWanConnCfgPon_Object = MibTableColumn
priWanConnCfgPon = _PriWanConnCfgPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 23, 1, 1),
    _PriWanConnCfgPon_Type()
)
priWanConnCfgPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnCfgPon.setStatus("current")
_PriWanConnCfgOnu_Type = Integer32
_PriWanConnCfgOnu_Object = MibTableColumn
priWanConnCfgOnu = _PriWanConnCfgOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 23, 1, 2),
    _PriWanConnCfgOnu_Type()
)
priWanConnCfgOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnCfgOnu.setStatus("current")
_PriWanConnCfgNum_Type = Integer32
_PriWanConnCfgNum_Object = MibTableColumn
priWanConnCfgNum = _PriWanConnCfgNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 23, 1, 3),
    _PriWanConnCfgNum_Type()
)
priWanConnCfgNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnCfgNum.setStatus("current")
_PriWanConnCfgV6Table_Object = MibTable
priWanConnCfgV6Table = _PriWanConnCfgV6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 24)
)
if mibBuilder.loadTexts:
    priWanConnCfgV6Table.setStatus("current")
_PriWanConnCfgV6Entry_Object = MibTableRow
priWanConnCfgV6Entry = _PriWanConnCfgV6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 24, 1)
)
priWanConnCfgV6Entry.setIndexNames(
    (0, "V1600D", "priWanConnCfgV6Pon"),
    (0, "V1600D", "priWanConnCfgV6Onu"),
)
if mibBuilder.loadTexts:
    priWanConnCfgV6Entry.setStatus("current")
_PriWanConnCfgV6Pon_Type = Integer32
_PriWanConnCfgV6Pon_Object = MibTableColumn
priWanConnCfgV6Pon = _PriWanConnCfgV6Pon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 24, 1, 1),
    _PriWanConnCfgV6Pon_Type()
)
priWanConnCfgV6Pon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnCfgV6Pon.setStatus("current")
_PriWanConnCfgV6Onu_Type = Integer32
_PriWanConnCfgV6Onu_Object = MibTableColumn
priWanConnCfgV6Onu = _PriWanConnCfgV6Onu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 24, 1, 2),
    _PriWanConnCfgV6Onu_Type()
)
priWanConnCfgV6Onu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnCfgV6Onu.setStatus("current")
_PriWanConnCfgV6Num_Type = Integer32
_PriWanConnCfgV6Num_Object = MibTableColumn
priWanConnCfgV6Num = _PriWanConnCfgV6Num_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 3, 2, 24, 1, 3),
    _PriWanConnCfgV6Num_Type()
)
priWanConnCfgV6Num.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priWanConnCfgV6Num.setStatus("current")
_OnuPriPort_ObjectIdentity = ObjectIdentity
onuPriPort = _OnuPriPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4)
)
_OnuPriPortCfg_ObjectIdentity = ObjectIdentity
onuPriPortCfg = _OnuPriPortCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1)
)
_OnuPriPortMacLimit_ObjectIdentity = ObjectIdentity
onuPriPortMacLimit = _OnuPriPortMacLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 1)
)


class _PriMacLimitPon_Type(Integer32):
    """Custom type priMacLimitPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriMacLimitPon_Type.__name__ = "Integer32"
_PriMacLimitPon_Object = MibScalar
priMacLimitPon = _PriMacLimitPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 1, 1),
    _PriMacLimitPon_Type()
)
priMacLimitPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacLimitPon.setStatus("current")


class _PriMacLimitOnu_Type(Integer32):
    """Custom type priMacLimitOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriMacLimitOnu_Type.__name__ = "Integer32"
_PriMacLimitOnu_Object = MibScalar
priMacLimitOnu = _PriMacLimitOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 1, 2),
    _PriMacLimitOnu_Type()
)
priMacLimitOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacLimitOnu.setStatus("current")


class _PriMacLimitEthNo_Type(Integer32):
    """Custom type priMacLimitEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriMacLimitEthNo_Type.__name__ = "Integer32"
_PriMacLimitEthNo_Object = MibScalar
priMacLimitEthNo = _PriMacLimitEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 1, 3),
    _PriMacLimitEthNo_Type()
)
priMacLimitEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacLimitEthNo.setStatus("current")


class _PriMacLimit_Type(Integer32):
    """Custom type priMacLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriMacLimit_Type.__name__ = "Integer32"
_PriMacLimit_Object = MibScalar
priMacLimit = _PriMacLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 1, 4),
    _PriMacLimit_Type()
)
priMacLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacLimit.setStatus("current")


class _PriMacLimitAction_Type(Integer32):
    """Custom type priMacLimitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PriMacLimitAction_Type.__name__ = "Integer32"
_PriMacLimitAction_Object = MibScalar
priMacLimitAction = _PriMacLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 1, 5),
    _PriMacLimitAction_Type()
)
priMacLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priMacLimitAction.setStatus("current")
_OnuPriPortPkgSuppress_ObjectIdentity = ObjectIdentity
onuPriPortPkgSuppress = _OnuPriPortPkgSuppress_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2)
)


class _PriPkgSuppressPon_Type(Integer32):
    """Custom type priPkgSuppressPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPkgSuppressPon_Type.__name__ = "Integer32"
_PriPkgSuppressPon_Object = MibScalar
priPkgSuppressPon = _PriPkgSuppressPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 1),
    _PriPkgSuppressPon_Type()
)
priPkgSuppressPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgSuppressPon.setStatus("current")


class _PriPkgSuppressOnu_Type(Integer32):
    """Custom type priPkgSuppressOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPkgSuppressOnu_Type.__name__ = "Integer32"
_PriPkgSuppressOnu_Object = MibScalar
priPkgSuppressOnu = _PriPkgSuppressOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 2),
    _PriPkgSuppressOnu_Type()
)
priPkgSuppressOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgSuppressOnu.setStatus("current")


class _PriPkgSuppressEthNo_Type(Integer32):
    """Custom type priPkgSuppressEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPkgSuppressEthNo_Type.__name__ = "Integer32"
_PriPkgSuppressEthNo_Object = MibScalar
priPkgSuppressEthNo = _PriPkgSuppressEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 3),
    _PriPkgSuppressEthNo_Type()
)
priPkgSuppressEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgSuppressEthNo.setStatus("current")


class _PriPkgBroadcast_Type(Integer32):
    """Custom type priPkgBroadcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PriPkgBroadcast_Type.__name__ = "Integer32"
_PriPkgBroadcast_Object = MibScalar
priPkgBroadcast = _PriPkgBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 4),
    _PriPkgBroadcast_Type()
)
priPkgBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgBroadcast.setStatus("current")


class _PriPkgMulticast_Type(Integer32):
    """Custom type priPkgMulticast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PriPkgMulticast_Type.__name__ = "Integer32"
_PriPkgMulticast_Object = MibScalar
priPkgMulticast = _PriPkgMulticast_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 5),
    _PriPkgMulticast_Type()
)
priPkgMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgMulticast.setStatus("current")


class _PriPkgUnknown_Type(Integer32):
    """Custom type priPkgUnknown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PriPkgUnknown_Type.__name__ = "Integer32"
_PriPkgUnknown_Object = MibScalar
priPkgUnknown = _PriPkgUnknown_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 6),
    _PriPkgUnknown_Type()
)
priPkgUnknown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgUnknown.setStatus("current")


class _PriPkgSuppressAction_Type(Integer32):
    """Custom type priPkgSuppressAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PriPkgSuppressAction_Type.__name__ = "Integer32"
_PriPkgSuppressAction_Object = MibScalar
priPkgSuppressAction = _PriPkgSuppressAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 2, 7),
    _PriPkgSuppressAction_Type()
)
priPkgSuppressAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPkgSuppressAction.setStatus("current")
_OnuPriPortModeControl_ObjectIdentity = ObjectIdentity
onuPriPortModeControl = _OnuPriPortModeControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 3)
)


class _PriModeControlPon_Type(Integer32):
    """Custom type priModeControlPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriModeControlPon_Type.__name__ = "Integer32"
_PriModeControlPon_Object = MibScalar
priModeControlPon = _PriModeControlPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 3, 1),
    _PriModeControlPon_Type()
)
priModeControlPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priModeControlPon.setStatus("current")


class _PriModeControlOnu_Type(Integer32):
    """Custom type priModeControlOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriModeControlOnu_Type.__name__ = "Integer32"
_PriModeControlOnu_Object = MibScalar
priModeControlOnu = _PriModeControlOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 3, 2),
    _PriModeControlOnu_Type()
)
priModeControlOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priModeControlOnu.setStatus("current")


class _PriModeControlEthNo_Type(Integer32):
    """Custom type priModeControlEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriModeControlEthNo_Type.__name__ = "Integer32"
_PriModeControlEthNo_Object = MibScalar
priModeControlEthNo = _PriModeControlEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 3, 3),
    _PriModeControlEthNo_Type()
)
priModeControlEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priModeControlEthNo.setStatus("current")


class _PriModeControl_Type(Integer32):
    """Custom type priModeControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("s10hd", 1),
          ("s10fd", 2),
          ("s100hd", 3),
          ("s100fd", 4),
          ("s1000hd", 5),
          ("s1000fd", 6),
          ("s10000fd", 7))
    )


_PriModeControl_Type.__name__ = "Integer32"
_PriModeControl_Object = MibScalar
priModeControl = _PriModeControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 3, 4),
    _PriModeControl_Type()
)
priModeControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priModeControl.setStatus("current")


class _PriModeControlAction_Type(Integer32):
    """Custom type priModeControlAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PriModeControlAction_Type.__name__ = "Integer32"
_PriModeControlAction_Object = MibScalar
priModeControlAction = _PriModeControlAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 3, 5),
    _PriModeControlAction_Type()
)
priModeControlAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priModeControlAction.setStatus("current")
_OnuPriPotsParameter_ObjectIdentity = ObjectIdentity
onuPriPotsParameter = _OnuPriPotsParameter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4)
)


class _PriPotsParameterPon_Type(Integer32):
    """Custom type priPotsParameterPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPotsParameterPon_Type.__name__ = "Integer32"
_PriPotsParameterPon_Object = MibScalar
priPotsParameterPon = _PriPotsParameterPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 1),
    _PriPotsParameterPon_Type()
)
priPotsParameterPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsParameterPon.setStatus("current")


class _PriPotsParameterOnu_Type(Integer32):
    """Custom type priPotsParameterOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPotsParameterOnu_Type.__name__ = "Integer32"
_PriPotsParameterOnu_Object = MibScalar
priPotsParameterOnu = _PriPotsParameterOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 2),
    _PriPotsParameterOnu_Type()
)
priPotsParameterOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsParameterOnu.setStatus("current")


class _PriPotsParameterPotsNo_Type(Integer32):
    """Custom type priPotsParameterPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPotsParameterPotsNo_Type.__name__ = "Integer32"
_PriPotsParameterPotsNo_Object = MibScalar
priPotsParameterPotsNo = _PriPotsParameterPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 3),
    _PriPotsParameterPotsNo_Type()
)
priPotsParameterPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsParameterPotsNo.setStatus("current")


class _PriPotsParameterVar_Type(Integer32):
    """Custom type priPotsParameterVar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPotsParameterVar_Type.__name__ = "Integer32"
_PriPotsParameterVar_Object = MibScalar
priPotsParameterVar = _PriPotsParameterVar_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 4),
    _PriPotsParameterVar_Type()
)
priPotsParameterVar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsParameterVar.setStatus("current")


class _PriPotsParameterEchoCancle_Type(Integer32):
    """Custom type priPotsParameterEchoCancle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPotsParameterEchoCancle_Type.__name__ = "Integer32"
_PriPotsParameterEchoCancle_Object = MibScalar
priPotsParameterEchoCancle = _PriPotsParameterEchoCancle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 5),
    _PriPotsParameterEchoCancle_Type()
)
priPotsParameterEchoCancle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsParameterEchoCancle.setStatus("current")


class _PriPotsPtInutGain_Type(Integer32):
    """Custom type priPotsPtInutGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PriPotsPtInutGain_Type.__name__ = "Integer32"
_PriPotsPtInutGain_Object = MibScalar
priPotsPtInutGain = _PriPotsPtInutGain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 6),
    _PriPotsPtInutGain_Type()
)
priPotsPtInutGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtInutGain.setStatus("current")


class _PriPotsPtOutputGain_Type(Integer32):
    """Custom type priPotsPtOutputGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PriPotsPtOutputGain_Type.__name__ = "Integer32"
_PriPotsPtOutputGain_Object = MibScalar
priPotsPtOutputGain = _PriPotsPtOutputGain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 7),
    _PriPotsPtOutputGain_Type()
)
priPotsPtOutputGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtOutputGain.setStatus("current")


class _PriPotsPtDtmfMode_Type(Integer32):
    """Custom type priPotsPtDtmfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 0),
          ("rfc2833", 1),
          ("rfc2833_redundancy", 2),
          ("outband", 3))
    )


_PriPotsPtDtmfMode_Type.__name__ = "Integer32"
_PriPotsPtDtmfMode_Object = MibScalar
priPotsPtDtmfMode = _PriPotsPtDtmfMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 8),
    _PriPotsPtDtmfMode_Type()
)
priPotsPtDtmfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtDtmfMode.setStatus("current")


class _PriPotsPtAction_Type(Integer32):
    """Custom type priPotsPtAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PriPotsPtAction_Type.__name__ = "Integer32"
_PriPotsPtAction_Object = MibScalar
priPotsPtAction = _PriPotsPtAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 4, 9),
    _PriPotsPtAction_Type()
)
priPotsPtAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtAction.setStatus("current")
_OnuPriPotsAction_ObjectIdentity = ObjectIdentity
onuPriPotsAction = _OnuPriPotsAction_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 5)
)


class _PriPotsActionPon_Type(Integer32):
    """Custom type priPotsActionPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPotsActionPon_Type.__name__ = "Integer32"
_PriPotsActionPon_Object = MibScalar
priPotsActionPon = _PriPotsActionPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 5, 1),
    _PriPotsActionPon_Type()
)
priPotsActionPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsActionPon.setStatus("current")


class _PriPotsActionOnu_Type(Integer32):
    """Custom type priPotsActionOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPotsActionOnu_Type.__name__ = "Integer32"
_PriPotsActionOnu_Object = MibScalar
priPotsActionOnu = _PriPotsActionOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 5, 2),
    _PriPotsActionOnu_Type()
)
priPotsActionOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsActionOnu.setStatus("current")


class _PriPotsActionPotsNo_Type(Integer32):
    """Custom type priPotsActionPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPotsActionPotsNo_Type.__name__ = "Integer32"
_PriPotsActionPotsNo_Object = MibScalar
priPotsActionPotsNo = _PriPotsActionPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 5, 3),
    _PriPotsActionPotsNo_Type()
)
priPotsActionPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsActionPotsNo.setStatus("current")


class _PriPotsActionRegister_Type(Integer32):
    """Custom type priPotsActionRegister based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unregister", 0),
          ("register", 1))
    )


_PriPotsActionRegister_Type.__name__ = "Integer32"
_PriPotsActionRegister_Object = MibScalar
priPotsActionRegister = _PriPotsActionRegister_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 5, 4),
    _PriPotsActionRegister_Type()
)
priPotsActionRegister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsActionRegister.setStatus("current")


class _PriPotsActionAction_Type(Integer32):
    """Custom type priPotsActionAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PriPotsActionAction_Type.__name__ = "Integer32"
_PriPotsActionAction_Object = MibScalar
priPotsActionAction = _PriPotsActionAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 1, 5, 5),
    _PriPotsActionAction_Type()
)
priPotsActionAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsActionAction.setStatus("current")
_OnuPriPortInfo_ObjectIdentity = ObjectIdentity
onuPriPortInfo = _OnuPriPortInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2)
)
_PriPortMacLimitTable_Object = MibTable
priPortMacLimitTable = _PriPortMacLimitTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 1)
)
if mibBuilder.loadTexts:
    priPortMacLimitTable.setStatus("current")
_PriPortMacLimitEntry_Object = MibTableRow
priPortMacLimitEntry = _PriPortMacLimitEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 1, 1)
)
priPortMacLimitEntry.setIndexNames(
    (0, "V1600D", "priPortMacLimitPonS"),
    (0, "V1600D", "priPortMacLimitOnuS"),
    (0, "V1600D", "priPortMacLimitEthNoS"),
)
if mibBuilder.loadTexts:
    priPortMacLimitEntry.setStatus("current")


class _PriPortMacLimitPonS_Type(Integer32):
    """Custom type priPortMacLimitPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortMacLimitPonS_Type.__name__ = "Integer32"
_PriPortMacLimitPonS_Object = MibTableColumn
priPortMacLimitPonS = _PriPortMacLimitPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 1, 1, 1),
    _PriPortMacLimitPonS_Type()
)
priPortMacLimitPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacLimitPonS.setStatus("current")


class _PriPortMacLimitOnuS_Type(Integer32):
    """Custom type priPortMacLimitOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortMacLimitOnuS_Type.__name__ = "Integer32"
_PriPortMacLimitOnuS_Object = MibTableColumn
priPortMacLimitOnuS = _PriPortMacLimitOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 1, 1, 2),
    _PriPortMacLimitOnuS_Type()
)
priPortMacLimitOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacLimitOnuS.setStatus("current")


class _PriPortMacLimitEthNoS_Type(Integer32):
    """Custom type priPortMacLimitEthNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPortMacLimitEthNoS_Type.__name__ = "Integer32"
_PriPortMacLimitEthNoS_Object = MibTableColumn
priPortMacLimitEthNoS = _PriPortMacLimitEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 1, 1, 3),
    _PriPortMacLimitEthNoS_Type()
)
priPortMacLimitEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacLimitEthNoS.setStatus("current")


class _PriPortMacLimitS_Type(Integer32):
    """Custom type priPortMacLimitS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PriPortMacLimitS_Type.__name__ = "Integer32"
_PriPortMacLimitS_Object = MibTableColumn
priPortMacLimitS = _PriPortMacLimitS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 1, 1, 4),
    _PriPortMacLimitS_Type()
)
priPortMacLimitS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacLimitS.setStatus("current")
_PriPortPkgSuppressTable_Object = MibTable
priPortPkgSuppressTable = _PriPortPkgSuppressTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2)
)
if mibBuilder.loadTexts:
    priPortPkgSuppressTable.setStatus("current")
_PriPortPkgSuppressEntry_Object = MibTableRow
priPortPkgSuppressEntry = _PriPortPkgSuppressEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1)
)
priPortPkgSuppressEntry.setIndexNames(
    (0, "V1600D", "priPortPkgSuppressPonS"),
    (0, "V1600D", "priPortPkgSuppressOnuS"),
    (0, "V1600D", "priPortPkgSuppressEthNoS"),
)
if mibBuilder.loadTexts:
    priPortPkgSuppressEntry.setStatus("current")


class _PriPortPkgSuppressPonS_Type(Integer32):
    """Custom type priPortPkgSuppressPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortPkgSuppressPonS_Type.__name__ = "Integer32"
_PriPortPkgSuppressPonS_Object = MibTableColumn
priPortPkgSuppressPonS = _PriPortPkgSuppressPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1, 1),
    _PriPortPkgSuppressPonS_Type()
)
priPortPkgSuppressPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPkgSuppressPonS.setStatus("current")


class _PriPortPkgSuppressOnuS_Type(Integer32):
    """Custom type priPortPkgSuppressOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortPkgSuppressOnuS_Type.__name__ = "Integer32"
_PriPortPkgSuppressOnuS_Object = MibTableColumn
priPortPkgSuppressOnuS = _PriPortPkgSuppressOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1, 2),
    _PriPortPkgSuppressOnuS_Type()
)
priPortPkgSuppressOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPkgSuppressOnuS.setStatus("current")


class _PriPortPkgSuppressEthNoS_Type(Integer32):
    """Custom type priPortPkgSuppressEthNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPortPkgSuppressEthNoS_Type.__name__ = "Integer32"
_PriPortPkgSuppressEthNoS_Object = MibTableColumn
priPortPkgSuppressEthNoS = _PriPortPkgSuppressEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1, 3),
    _PriPortPkgSuppressEthNoS_Type()
)
priPortPkgSuppressEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPkgSuppressEthNoS.setStatus("current")


class _PriPortPkgSuppressBroadcastS_Type(Integer32):
    """Custom type priPortPkgSuppressBroadcastS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PriPortPkgSuppressBroadcastS_Type.__name__ = "Integer32"
_PriPortPkgSuppressBroadcastS_Object = MibTableColumn
priPortPkgSuppressBroadcastS = _PriPortPkgSuppressBroadcastS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1, 4),
    _PriPortPkgSuppressBroadcastS_Type()
)
priPortPkgSuppressBroadcastS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPkgSuppressBroadcastS.setStatus("current")


class _PriPortPkgSuppressMulticastS_Type(Integer32):
    """Custom type priPortPkgSuppressMulticastS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PriPortPkgSuppressMulticastS_Type.__name__ = "Integer32"
_PriPortPkgSuppressMulticastS_Object = MibTableColumn
priPortPkgSuppressMulticastS = _PriPortPkgSuppressMulticastS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1, 5),
    _PriPortPkgSuppressMulticastS_Type()
)
priPortPkgSuppressMulticastS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPkgSuppressMulticastS.setStatus("current")


class _PriPortPkgSuppressUnkownS_Type(Integer32):
    """Custom type priPortPkgSuppressUnkownS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PriPortPkgSuppressUnkownS_Type.__name__ = "Integer32"
_PriPortPkgSuppressUnkownS_Object = MibTableColumn
priPortPkgSuppressUnkownS = _PriPortPkgSuppressUnkownS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 2, 1, 6),
    _PriPortPkgSuppressUnkownS_Type()
)
priPortPkgSuppressUnkownS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPkgSuppressUnkownS.setStatus("current")
_PriPortModeControlTable_Object = MibTable
priPortModeControlTable = _PriPortModeControlTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 3)
)
if mibBuilder.loadTexts:
    priPortModeControlTable.setStatus("current")
_PriPortModeControlEntry_Object = MibTableRow
priPortModeControlEntry = _PriPortModeControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 3, 1)
)
priPortModeControlEntry.setIndexNames(
    (0, "V1600D", "priPortModeControlPonS"),
    (0, "V1600D", "priPortModeControlOnuS"),
    (0, "V1600D", "priPortModeControlEthNoS"),
)
if mibBuilder.loadTexts:
    priPortModeControlEntry.setStatus("current")


class _PriPortModeControlPonS_Type(Integer32):
    """Custom type priPortModeControlPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortModeControlPonS_Type.__name__ = "Integer32"
_PriPortModeControlPonS_Object = MibTableColumn
priPortModeControlPonS = _PriPortModeControlPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 3, 1, 1),
    _PriPortModeControlPonS_Type()
)
priPortModeControlPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeControlPonS.setStatus("current")


class _PriPortModeControlOnuS_Type(Integer32):
    """Custom type priPortModeControlOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortModeControlOnuS_Type.__name__ = "Integer32"
_PriPortModeControlOnuS_Object = MibTableColumn
priPortModeControlOnuS = _PriPortModeControlOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 3, 1, 2),
    _PriPortModeControlOnuS_Type()
)
priPortModeControlOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeControlOnuS.setStatus("current")
_PriPortModeControlEthNoS_Type = Integer32
_PriPortModeControlEthNoS_Object = MibTableColumn
priPortModeControlEthNoS = _PriPortModeControlEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 3, 1, 3),
    _PriPortModeControlEthNoS_Type()
)
priPortModeControlEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeControlEthNoS.setStatus("current")


class _PriPortModeControlS_Type(Integer32):
    """Custom type priPortModeControlS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("s10hd", 1),
          ("s10fd", 2),
          ("s100hd", 3),
          ("s100fd", 4),
          ("s1000hd", 5),
          ("s1000fd", 6),
          ("s10000fd", 7))
    )


_PriPortModeControlS_Type.__name__ = "Integer32"
_PriPortModeControlS_Object = MibTableColumn
priPortModeControlS = _PriPortModeControlS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 3, 1, 4),
    _PriPortModeControlS_Type()
)
priPortModeControlS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeControlS.setStatus("current")
_PriPortModeStatusTable_Object = MibTable
priPortModeStatusTable = _PriPortModeStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 4)
)
if mibBuilder.loadTexts:
    priPortModeStatusTable.setStatus("current")
_PriPortModeStatusEntry_Object = MibTableRow
priPortModeStatusEntry = _PriPortModeStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 4, 1)
)
priPortModeStatusEntry.setIndexNames(
    (0, "V1600D", "priPortModeStatusPonS"),
    (0, "V1600D", "priPortModeStatusOnuS"),
    (0, "V1600D", "priPortModeStatusEthNoS"),
)
if mibBuilder.loadTexts:
    priPortModeStatusEntry.setStatus("current")


class _PriPortModeStatusPonS_Type(Integer32):
    """Custom type priPortModeStatusPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortModeStatusPonS_Type.__name__ = "Integer32"
_PriPortModeStatusPonS_Object = MibTableColumn
priPortModeStatusPonS = _PriPortModeStatusPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 4, 1, 1),
    _PriPortModeStatusPonS_Type()
)
priPortModeStatusPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeStatusPonS.setStatus("current")


class _PriPortModeStatusOnuS_Type(Integer32):
    """Custom type priPortModeStatusOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortModeStatusOnuS_Type.__name__ = "Integer32"
_PriPortModeStatusOnuS_Object = MibTableColumn
priPortModeStatusOnuS = _PriPortModeStatusOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 4, 1, 2),
    _PriPortModeStatusOnuS_Type()
)
priPortModeStatusOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeStatusOnuS.setStatus("current")
_PriPortModeStatusEthNoS_Type = Integer32
_PriPortModeStatusEthNoS_Object = MibTableColumn
priPortModeStatusEthNoS = _PriPortModeStatusEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 4, 1, 3),
    _PriPortModeStatusEthNoS_Type()
)
priPortModeStatusEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeStatusEthNoS.setStatus("current")


class _PriPortModeStatusS_Type(Integer32):
    """Custom type priPortModeStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("s10hd", 1),
          ("s10fd", 2),
          ("s100hd", 3),
          ("s100fd", 4),
          ("s1000hd", 5),
          ("s1000fd", 6),
          ("s10000fd", 7))
    )


_PriPortModeStatusS_Type.__name__ = "Integer32"
_PriPortModeStatusS_Object = MibTableColumn
priPortModeStatusS = _PriPortModeStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 4, 1, 4),
    _PriPortModeStatusS_Type()
)
priPortModeStatusS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortModeStatusS.setStatus("current")
_PriPotsParameterTable_Object = MibTable
priPotsParameterTable = _PriPotsParameterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5)
)
if mibBuilder.loadTexts:
    priPotsParameterTable.setStatus("current")
_PriPotsParameterEntry_Object = MibTableRow
priPotsParameterEntry = _PriPotsParameterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1)
)
priPotsParameterEntry.setIndexNames(
    (0, "V1600D", "priPortPtPonS"),
    (0, "V1600D", "priPortPtOnuS"),
    (0, "V1600D", "priPortPtPotsNoS"),
)
if mibBuilder.loadTexts:
    priPotsParameterEntry.setStatus("current")


class _PriPortPtPonS_Type(Integer32):
    """Custom type priPortPtPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PriPortPtPonS_Type.__name__ = "Integer32"
_PriPortPtPonS_Object = MibTableColumn
priPortPtPonS = _PriPortPtPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 1),
    _PriPortPtPonS_Type()
)
priPortPtPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPtPonS.setStatus("current")


class _PriPortPtOnuS_Type(Integer32):
    """Custom type priPortPtOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PriPortPtOnuS_Type.__name__ = "Integer32"
_PriPortPtOnuS_Object = MibTableColumn
priPortPtOnuS = _PriPortPtOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 2),
    _PriPortPtOnuS_Type()
)
priPortPtOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPtOnuS.setStatus("current")


class _PriPortPtPotsNoS_Type(Integer32):
    """Custom type priPortPtPotsNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPortPtPotsNoS_Type.__name__ = "Integer32"
_PriPortPtPotsNoS_Object = MibTableColumn
priPortPtPotsNoS = _PriPortPtPotsNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 3),
    _PriPortPtPotsNoS_Type()
)
priPortPtPotsNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPtPotsNoS.setStatus("current")


class _PriPortPtVarS_Type(Integer32):
    """Custom type priPortPtVarS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPortPtVarS_Type.__name__ = "Integer32"
_PriPortPtVarS_Object = MibTableColumn
priPortPtVarS = _PriPortPtVarS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 4),
    _PriPortPtVarS_Type()
)
priPortPtVarS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPtVarS.setStatus("current")


class _PriPortPtEchoCancleS_Type(Integer32):
    """Custom type priPortPtEchoCancleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriPortPtEchoCancleS_Type.__name__ = "Integer32"
_PriPortPtEchoCancleS_Object = MibTableColumn
priPortPtEchoCancleS = _PriPortPtEchoCancleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 5),
    _PriPortPtEchoCancleS_Type()
)
priPortPtEchoCancleS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortPtEchoCancleS.setStatus("current")


class _PriPotsPtInputGainS_Type(Integer32):
    """Custom type priPotsPtInputGainS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PriPotsPtInputGainS_Type.__name__ = "Integer32"
_PriPotsPtInputGainS_Object = MibTableColumn
priPotsPtInputGainS = _PriPotsPtInputGainS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 6),
    _PriPotsPtInputGainS_Type()
)
priPotsPtInputGainS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtInputGainS.setStatus("current")


class _PriPotsPtOutputGainS_Type(Integer32):
    """Custom type priPotsPtOutputGainS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PriPotsPtOutputGainS_Type.__name__ = "Integer32"
_PriPotsPtOutputGainS_Object = MibTableColumn
priPotsPtOutputGainS = _PriPotsPtOutputGainS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 7),
    _PriPotsPtOutputGainS_Type()
)
priPotsPtOutputGainS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtOutputGainS.setStatus("current")


class _PriPotsPtDtmfModeS_Type(Integer32):
    """Custom type priPotsPtDtmfModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 0),
          ("rfc2833", 1),
          ("rfc2833_redundancy", 2),
          ("outband", 3))
    )


_PriPotsPtDtmfModeS_Type.__name__ = "Integer32"
_PriPotsPtDtmfModeS_Object = MibTableColumn
priPotsPtDtmfModeS = _PriPotsPtDtmfModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 5, 1, 8),
    _PriPotsPtDtmfModeS_Type()
)
priPotsPtDtmfModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtDtmfModeS.setStatus("current")
_PriPortMacTable_Object = MibTable
priPortMacTable = _PriPortMacTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6)
)
if mibBuilder.loadTexts:
    priPortMacTable.setStatus("current")
_PriPortMacEntry_Object = MibTableRow
priPortMacEntry = _PriPortMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1)
)
priPortMacEntry.setIndexNames(
    (0, "V1600D", "priPortMacPonS"),
    (0, "V1600D", "priPortMacOnuS"),
    (0, "V1600D", "priPortMacEthNoS"),
    (0, "V1600D", "priPortMacIndex"),
)
if mibBuilder.loadTexts:
    priPortMacEntry.setStatus("current")
_PriPortMacPonS_Type = Integer32
_PriPortMacPonS_Object = MibTableColumn
priPortMacPonS = _PriPortMacPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 1),
    _PriPortMacPonS_Type()
)
priPortMacPonS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacPonS.setStatus("current")
_PriPortMacOnuS_Type = Integer32
_PriPortMacOnuS_Object = MibTableColumn
priPortMacOnuS = _PriPortMacOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 2),
    _PriPortMacOnuS_Type()
)
priPortMacOnuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacOnuS.setStatus("current")
_PriPortMacEthNoS_Type = Integer32
_PriPortMacEthNoS_Object = MibTableColumn
priPortMacEthNoS = _PriPortMacEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 3),
    _PriPortMacEthNoS_Type()
)
priPortMacEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacEthNoS.setStatus("current")
_PriPortMacIndex_Type = Integer32
_PriPortMacIndex_Object = MibTableColumn
priPortMacIndex = _PriPortMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 4),
    _PriPortMacIndex_Type()
)
priPortMacIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacIndex.setStatus("current")
_LearningMacNumber_Type = Integer32
_LearningMacNumber_Object = MibTableColumn
learningMacNumber = _LearningMacNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 5),
    _LearningMacNumber_Type()
)
learningMacNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    learningMacNumber.setStatus("current")
_ReportMacNumber_Type = Integer32
_ReportMacNumber_Object = MibTableColumn
reportMacNumber = _ReportMacNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 6),
    _ReportMacNumber_Type()
)
reportMacNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    reportMacNumber.setStatus("current")
_PriPortMacAddr_Type = OctetString
_PriPortMacAddr_Object = MibTableColumn
priPortMacAddr = _PriPortMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 7),
    _PriPortMacAddr_Type()
)
priPortMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacAddr.setStatus("current")
_PriPortMacVlan_Type = Integer32
_PriPortMacVlan_Object = MibTableColumn
priPortMacVlan = _PriPortMacVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 4, 2, 6, 1, 8),
    _PriPortMacVlan_Type()
)
priPortMacVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPortMacVlan.setStatus("current")
_OnuPort_ObjectIdentity = ObjectIdentity
onuPort = _OnuPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5)
)
_OnuPortInfo_ObjectIdentity = ObjectIdentity
onuPortInfo = _OnuPortInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1)
)
_OnuPortInfoCfg_ObjectIdentity = ObjectIdentity
onuPortInfoCfg = _OnuPortInfoCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 1)
)


class _InfoPonNo_Type(Integer32):
    """Custom type infoPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_InfoPonNo_Type.__name__ = "Integer32"
_InfoPonNo_Object = MibScalar
infoPonNo = _InfoPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 1, 1),
    _InfoPonNo_Type()
)
infoPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    infoPonNo.setStatus("current")


class _InfoOnuNo_Type(Integer32):
    """Custom type infoOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_InfoOnuNo_Type.__name__ = "Integer32"
_InfoOnuNo_Object = MibScalar
infoOnuNo = _InfoOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 1, 2),
    _InfoOnuNo_Type()
)
infoOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    infoOnuNo.setStatus("current")


class _InfoPortNo_Type(Integer32):
    """Custom type infoPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_InfoPortNo_Type.__name__ = "Integer32"
_InfoPortNo_Object = MibScalar
infoPortNo = _InfoPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 1, 3),
    _InfoPortNo_Type()
)
infoPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    infoPortNo.setStatus("current")


class _InfoAction_Type(Integer32):
    """Custom type infoAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_InfoAction_Type.__name__ = "Integer32"
_InfoAction_Object = MibScalar
infoAction = _InfoAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 1, 4),
    _InfoAction_Type()
)
infoAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    infoAction.setStatus("current")
_OnuPortInfoDisplay_ObjectIdentity = ObjectIdentity
onuPortInfoDisplay = _OnuPortInfoDisplay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2)
)
_DisplayPortNo_Type = Integer32
_DisplayPortNo_Object = MibScalar
displayPortNo = _DisplayPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 1),
    _DisplayPortNo_Type()
)
displayPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    displayPortNo.setStatus("current")


class _LinkState_Type(Integer32):
    """Custom type linkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_LinkState_Type.__name__ = "Integer32"
_LinkState_Object = MibScalar
linkState = _LinkState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 2),
    _LinkState_Type()
)
linkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkState.setStatus("current")


class _FlowControl_Type(Integer32):
    """Custom type flowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_FlowControl_Type.__name__ = "Integer32"
_FlowControl_Object = MibScalar
flowControl = _FlowControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 3),
    _FlowControl_Type()
)
flowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    flowControl.setStatus("current")


class _PolicyState_Type(Integer32):
    """Custom type policyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PolicyState_Type.__name__ = "Integer32"
_PolicyState_Object = MibScalar
policyState = _PolicyState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 4),
    _PolicyState_Type()
)
policyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    policyState.setStatus("current")


class _PolicyCir_Type(Integer32):
    """Custom type policyCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_PolicyCir_Type.__name__ = "Integer32"
_PolicyCir_Object = MibScalar
policyCir = _PolicyCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 5),
    _PolicyCir_Type()
)
policyCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    policyCir.setStatus("current")


class _PolicyCbs_Type(Integer32):
    """Custom type policyCbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10240),
    )


_PolicyCbs_Type.__name__ = "Integer32"
_PolicyCbs_Object = MibScalar
policyCbs = _PolicyCbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 6),
    _PolicyCbs_Type()
)
policyCbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    policyCbs.setStatus("current")


class _PolicyEbs_Type(Integer32):
    """Custom type policyEbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10240),
    )


_PolicyEbs_Type.__name__ = "Integer32"
_PolicyEbs_Object = MibScalar
policyEbs = _PolicyEbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 7),
    _PolicyEbs_Type()
)
policyEbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    policyEbs.setStatus("current")


class _RateLimitState_Type(Integer32):
    """Custom type rateLimitState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_RateLimitState_Type.__name__ = "Integer32"
_RateLimitState_Object = MibScalar
rateLimitState = _RateLimitState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 8),
    _RateLimitState_Type()
)
rateLimitState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rateLimitState.setStatus("current")


class _RateLimitCir_Type(Integer32):
    """Custom type rateLimitCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_RateLimitCir_Type.__name__ = "Integer32"
_RateLimitCir_Object = MibScalar
rateLimitCir = _RateLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 9),
    _RateLimitCir_Type()
)
rateLimitCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rateLimitCir.setStatus("current")


class _RateLimitPir_Type(Integer32):
    """Custom type rateLimitPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_RateLimitPir_Type.__name__ = "Integer32"
_RateLimitPir_Object = MibScalar
rateLimitPir = _RateLimitPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 2, 10),
    _RateLimitPir_Type()
)
rateLimitPir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rateLimitPir.setStatus("current")
_OnuPortAdminTable_Object = MibTable
onuPortAdminTable = _OnuPortAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 3)
)
if mibBuilder.loadTexts:
    onuPortAdminTable.setStatus("current")
_OnuPortAdminEntry_Object = MibTableRow
onuPortAdminEntry = _OnuPortAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 3, 1)
)
onuPortAdminEntry.setIndexNames(
    (0, "V1600D", "onuPortAdminPonIndex"),
    (0, "V1600D", "onuPortAdminOnuIndex"),
    (0, "V1600D", "onuPortAdminPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortAdminEntry.setStatus("current")
_OnuPortAdminPonIndex_Type = Integer32
_OnuPortAdminPonIndex_Object = MibTableColumn
onuPortAdminPonIndex = _OnuPortAdminPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 3, 1, 1),
    _OnuPortAdminPonIndex_Type()
)
onuPortAdminPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAdminPonIndex.setStatus("current")
_OnuPortAdminOnuIndex_Type = Integer32
_OnuPortAdminOnuIndex_Object = MibTableColumn
onuPortAdminOnuIndex = _OnuPortAdminOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 3, 1, 2),
    _OnuPortAdminOnuIndex_Type()
)
onuPortAdminOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAdminOnuIndex.setStatus("current")
_OnuPortAdminPortIndex_Type = Integer32
_OnuPortAdminPortIndex_Object = MibTableColumn
onuPortAdminPortIndex = _OnuPortAdminPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 3, 1, 3),
    _OnuPortAdminPortIndex_Type()
)
onuPortAdminPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAdminPortIndex.setStatus("current")


class _OnuPortAdminVal_Type(Integer32):
    """Custom type onuPortAdminVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortAdminVal_Type.__name__ = "Integer32"
_OnuPortAdminVal_Object = MibTableColumn
onuPortAdminVal = _OnuPortAdminVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 3, 1, 4),
    _OnuPortAdminVal_Type()
)
onuPortAdminVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAdminVal.setStatus("current")
_OnuPortAutoNegTable_Object = MibTable
onuPortAutoNegTable = _OnuPortAutoNegTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 4)
)
if mibBuilder.loadTexts:
    onuPortAutoNegTable.setStatus("current")
_OnuPortAutoNegEntry_Object = MibTableRow
onuPortAutoNegEntry = _OnuPortAutoNegEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 4, 1)
)
onuPortAutoNegEntry.setIndexNames(
    (0, "V1600D", "onuPortAutoNegPonIndex"),
    (0, "V1600D", "onuPortAutoNegOnuIndex"),
    (0, "V1600D", "onuPortAutoNegPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortAutoNegEntry.setStatus("current")
_OnuPortAutoNegPonIndex_Type = Integer32
_OnuPortAutoNegPonIndex_Object = MibTableColumn
onuPortAutoNegPonIndex = _OnuPortAutoNegPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 4, 1, 1),
    _OnuPortAutoNegPonIndex_Type()
)
onuPortAutoNegPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAutoNegPonIndex.setStatus("current")
_OnuPortAutoNegOnuIndex_Type = Integer32
_OnuPortAutoNegOnuIndex_Object = MibTableColumn
onuPortAutoNegOnuIndex = _OnuPortAutoNegOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 4, 1, 2),
    _OnuPortAutoNegOnuIndex_Type()
)
onuPortAutoNegOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAutoNegOnuIndex.setStatus("current")
_OnuPortAutoNegPortIndex_Type = Integer32
_OnuPortAutoNegPortIndex_Object = MibTableColumn
onuPortAutoNegPortIndex = _OnuPortAutoNegPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 4, 1, 3),
    _OnuPortAutoNegPortIndex_Type()
)
onuPortAutoNegPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAutoNegPortIndex.setStatus("current")


class _OnuPortAutoNegVal_Type(Integer32):
    """Custom type onuPortAutoNegVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortAutoNegVal_Type.__name__ = "Integer32"
_OnuPortAutoNegVal_Object = MibTableColumn
onuPortAutoNegVal = _OnuPortAutoNegVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 4, 1, 4),
    _OnuPortAutoNegVal_Type()
)
onuPortAutoNegVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortAutoNegVal.setStatus("current")
_OnuPortFcTable_Object = MibTable
onuPortFcTable = _OnuPortFcTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 5)
)
if mibBuilder.loadTexts:
    onuPortFcTable.setStatus("current")
_OnuPortFcEntry_Object = MibTableRow
onuPortFcEntry = _OnuPortFcEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 5, 1)
)
onuPortFcEntry.setIndexNames(
    (0, "V1600D", "onuPortFcPonIndex"),
    (0, "V1600D", "onuPortFcOnuIndex"),
    (0, "V1600D", "onuPortFcPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortFcEntry.setStatus("current")
_OnuPortFcPonIndex_Type = Integer32
_OnuPortFcPonIndex_Object = MibTableColumn
onuPortFcPonIndex = _OnuPortFcPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 5, 1, 1),
    _OnuPortFcPonIndex_Type()
)
onuPortFcPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortFcPonIndex.setStatus("current")
_OnuPortFcOnuIndex_Type = Integer32
_OnuPortFcOnuIndex_Object = MibTableColumn
onuPortFcOnuIndex = _OnuPortFcOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 5, 1, 2),
    _OnuPortFcOnuIndex_Type()
)
onuPortFcOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortFcOnuIndex.setStatus("current")
_OnuPortFcPortIndex_Type = Integer32
_OnuPortFcPortIndex_Object = MibTableColumn
onuPortFcPortIndex = _OnuPortFcPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 5, 1, 3),
    _OnuPortFcPortIndex_Type()
)
onuPortFcPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortFcPortIndex.setStatus("current")


class _OnuPortFcVal_Type(Integer32):
    """Custom type onuPortFcVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortFcVal_Type.__name__ = "Integer32"
_OnuPortFcVal_Object = MibTableColumn
onuPortFcVal = _OnuPortFcVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 5, 1, 4),
    _OnuPortFcVal_Type()
)
onuPortFcVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortFcVal.setStatus("current")
_PortLoopdetectTable_Object = MibTable
portLoopdetectTable = _PortLoopdetectTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 6)
)
if mibBuilder.loadTexts:
    portLoopdetectTable.setStatus("current")
_PortLoopdetectEntry_Object = MibTableRow
portLoopdetectEntry = _PortLoopdetectEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 6, 1)
)
portLoopdetectEntry.setIndexNames(
    (0, "V1600D", "portLoopdetectPonIndex"),
    (0, "V1600D", "portLoopdetectOnuIndex"),
    (0, "V1600D", "portLoopdetectPortIndex"),
)
if mibBuilder.loadTexts:
    portLoopdetectEntry.setStatus("current")
_PortLoopdetectPonIndex_Type = Integer32
_PortLoopdetectPonIndex_Object = MibTableColumn
portLoopdetectPonIndex = _PortLoopdetectPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 6, 1, 1),
    _PortLoopdetectPonIndex_Type()
)
portLoopdetectPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portLoopdetectPonIndex.setStatus("current")
_PortLoopdetectOnuIndex_Type = Integer32
_PortLoopdetectOnuIndex_Object = MibTableColumn
portLoopdetectOnuIndex = _PortLoopdetectOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 6, 1, 2),
    _PortLoopdetectOnuIndex_Type()
)
portLoopdetectOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portLoopdetectOnuIndex.setStatus("current")
_PortLoopdetectPortIndex_Type = Integer32
_PortLoopdetectPortIndex_Object = MibTableColumn
portLoopdetectPortIndex = _PortLoopdetectPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 6, 1, 3),
    _PortLoopdetectPortIndex_Type()
)
portLoopdetectPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portLoopdetectPortIndex.setStatus("current")


class _PortLoopdetectVal_Type(Integer32):
    """Custom type portLoopdetectVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortLoopdetectVal_Type.__name__ = "Integer32"
_PortLoopdetectVal_Object = MibTableColumn
portLoopdetectVal = _PortLoopdetectVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 6, 1, 4),
    _PortLoopdetectVal_Type()
)
portLoopdetectVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portLoopdetectVal.setStatus("current")
_OnuPortUpstreamLimitTable_Object = MibTable
onuPortUpstreamLimitTable = _OnuPortUpstreamLimitTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7)
)
if mibBuilder.loadTexts:
    onuPortUpstreamLimitTable.setStatus("current")
_OnuPortUpstreamLimitEntry_Object = MibTableRow
onuPortUpstreamLimitEntry = _OnuPortUpstreamLimitEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1)
)
onuPortUpstreamLimitEntry.setIndexNames(
    (0, "V1600D", "onuPortUpstreamLimitPonIndex"),
    (0, "V1600D", "onuPortUpstreamLimitOnuIndex"),
    (0, "V1600D", "onuPortUpstreamLimitPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortUpstreamLimitEntry.setStatus("current")
_OnuPortUpstreamLimitPonIndex_Type = Integer32
_OnuPortUpstreamLimitPonIndex_Object = MibTableColumn
onuPortUpstreamLimitPonIndex = _OnuPortUpstreamLimitPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1, 1),
    _OnuPortUpstreamLimitPonIndex_Type()
)
onuPortUpstreamLimitPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpstreamLimitPonIndex.setStatus("current")
_OnuPortUpstreamLimitOnuIndex_Type = Integer32
_OnuPortUpstreamLimitOnuIndex_Object = MibTableColumn
onuPortUpstreamLimitOnuIndex = _OnuPortUpstreamLimitOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1, 2),
    _OnuPortUpstreamLimitOnuIndex_Type()
)
onuPortUpstreamLimitOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpstreamLimitOnuIndex.setStatus("current")
_OnuPortUpstreamLimitPortIndex_Type = Integer32
_OnuPortUpstreamLimitPortIndex_Object = MibTableColumn
onuPortUpstreamLimitPortIndex = _OnuPortUpstreamLimitPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1, 3),
    _OnuPortUpstreamLimitPortIndex_Type()
)
onuPortUpstreamLimitPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpstreamLimitPortIndex.setStatus("current")
_OnuPortUpstreamLimitCir_Type = Integer32
_OnuPortUpstreamLimitCir_Object = MibTableColumn
onuPortUpstreamLimitCir = _OnuPortUpstreamLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1, 4),
    _OnuPortUpstreamLimitCir_Type()
)
onuPortUpstreamLimitCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpstreamLimitCir.setStatus("current")
_OnuPortUpstreamLimitCbs_Type = Integer32
_OnuPortUpstreamLimitCbs_Object = MibTableColumn
onuPortUpstreamLimitCbs = _OnuPortUpstreamLimitCbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1, 5),
    _OnuPortUpstreamLimitCbs_Type()
)
onuPortUpstreamLimitCbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpstreamLimitCbs.setStatus("current")
_OnuPortUpstreamLimitEbs_Type = Integer32
_OnuPortUpstreamLimitEbs_Object = MibTableColumn
onuPortUpstreamLimitEbs = _OnuPortUpstreamLimitEbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 7, 1, 6),
    _OnuPortUpstreamLimitEbs_Type()
)
onuPortUpstreamLimitEbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpstreamLimitEbs.setStatus("current")
_OnuPortDownstreamLimitTable_Object = MibTable
onuPortDownstreamLimitTable = _OnuPortDownstreamLimitTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8)
)
if mibBuilder.loadTexts:
    onuPortDownstreamLimitTable.setStatus("current")
_OnuPortDownstreamLimitEntry_Object = MibTableRow
onuPortDownstreamLimitEntry = _OnuPortDownstreamLimitEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8, 1)
)
onuPortDownstreamLimitEntry.setIndexNames(
    (0, "V1600D", "onuPortDownstreamLimitPonIndex"),
    (0, "V1600D", "onuPortDownstreamLimitOnuIndex"),
    (0, "V1600D", "onuPortDownstreamLimitPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortDownstreamLimitEntry.setStatus("current")
_OnuPortDownstreamLimitPonIndex_Type = Integer32
_OnuPortDownstreamLimitPonIndex_Object = MibTableColumn
onuPortDownstreamLimitPonIndex = _OnuPortDownstreamLimitPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8, 1, 1),
    _OnuPortDownstreamLimitPonIndex_Type()
)
onuPortDownstreamLimitPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownstreamLimitPonIndex.setStatus("current")
_OnuPortDownstreamLimitOnuIndex_Type = Integer32
_OnuPortDownstreamLimitOnuIndex_Object = MibTableColumn
onuPortDownstreamLimitOnuIndex = _OnuPortDownstreamLimitOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8, 1, 2),
    _OnuPortDownstreamLimitOnuIndex_Type()
)
onuPortDownstreamLimitOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownstreamLimitOnuIndex.setStatus("current")
_OnuPortDownstreamLimitPortIndex_Type = Integer32
_OnuPortDownstreamLimitPortIndex_Object = MibTableColumn
onuPortDownstreamLimitPortIndex = _OnuPortDownstreamLimitPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8, 1, 3),
    _OnuPortDownstreamLimitPortIndex_Type()
)
onuPortDownstreamLimitPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownstreamLimitPortIndex.setStatus("current")
_OnuPortDownstreamLimitCir_Type = Integer32
_OnuPortDownstreamLimitCir_Object = MibTableColumn
onuPortDownstreamLimitCir = _OnuPortDownstreamLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8, 1, 4),
    _OnuPortDownstreamLimitCir_Type()
)
onuPortDownstreamLimitCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownstreamLimitCir.setStatus("current")
_OnuPortDownstreamLimitPir_Type = Integer32
_OnuPortDownstreamLimitPir_Object = MibTableColumn
onuPortDownstreamLimitPir = _OnuPortDownstreamLimitPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 8, 1, 5),
    _OnuPortDownstreamLimitPir_Type()
)
onuPortDownstreamLimitPir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownstreamLimitPir.setStatus("current")
_OnuPortLinkstateTable_Object = MibTable
onuPortLinkstateTable = _OnuPortLinkstateTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 9)
)
if mibBuilder.loadTexts:
    onuPortLinkstateTable.setStatus("current")
_OnuPortLinkstateEntry_Object = MibTableRow
onuPortLinkstateEntry = _OnuPortLinkstateEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 9, 1)
)
onuPortLinkstateEntry.setIndexNames(
    (0, "V1600D", "onuPortLinkstatePonIndex"),
    (0, "V1600D", "onuPortLinkstateOnuIndex"),
    (0, "V1600D", "onuPortLinkstatePortIndex"),
)
if mibBuilder.loadTexts:
    onuPortLinkstateEntry.setStatus("current")
_OnuPortLinkstatePonIndex_Type = Integer32
_OnuPortLinkstatePonIndex_Object = MibTableColumn
onuPortLinkstatePonIndex = _OnuPortLinkstatePonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 9, 1, 1),
    _OnuPortLinkstatePonIndex_Type()
)
onuPortLinkstatePonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortLinkstatePonIndex.setStatus("current")
_OnuPortLinkstateOnuIndex_Type = Integer32
_OnuPortLinkstateOnuIndex_Object = MibTableColumn
onuPortLinkstateOnuIndex = _OnuPortLinkstateOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 9, 1, 2),
    _OnuPortLinkstateOnuIndex_Type()
)
onuPortLinkstateOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortLinkstateOnuIndex.setStatus("current")
_OnuPortLinkstatePortIndex_Type = Integer32
_OnuPortLinkstatePortIndex_Object = MibTableColumn
onuPortLinkstatePortIndex = _OnuPortLinkstatePortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 9, 1, 3),
    _OnuPortLinkstatePortIndex_Type()
)
onuPortLinkstatePortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortLinkstatePortIndex.setStatus("current")


class _OnuPortLinkstateVal_Type(Integer32):
    """Custom type onuPortLinkstateVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_OnuPortLinkstateVal_Type.__name__ = "Integer32"
_OnuPortLinkstateVal_Object = MibTableColumn
onuPortLinkstateVal = _OnuPortLinkstateVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 9, 1, 4),
    _OnuPortLinkstateVal_Type()
)
onuPortLinkstateVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortLinkstateVal.setStatus("current")
_OnuVlanPortTable_Object = MibTable
onuVlanPortTable = _OnuVlanPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10)
)
if mibBuilder.loadTexts:
    onuVlanPortTable.setStatus("current")
_OnuVlanPortEntry_Object = MibTableRow
onuVlanPortEntry = _OnuVlanPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1)
)
onuVlanPortEntry.setIndexNames(
    (0, "V1600D", "onuVlanPonIndex"),
    (0, "V1600D", "onuVlanOnuIndex"),
    (0, "V1600D", "onuVlanPortIndex"),
)
if mibBuilder.loadTexts:
    onuVlanPortEntry.setStatus("current")
_OnuVlanPonIndex_Type = Integer32
_OnuVlanPonIndex_Object = MibTableColumn
onuVlanPonIndex = _OnuVlanPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 1),
    _OnuVlanPonIndex_Type()
)
onuVlanPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanPonIndex.setStatus("current")
_OnuVlanOnuIndex_Type = Integer32
_OnuVlanOnuIndex_Object = MibTableColumn
onuVlanOnuIndex = _OnuVlanOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 2),
    _OnuVlanOnuIndex_Type()
)
onuVlanOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanOnuIndex.setStatus("current")
_OnuVlanPortIndex_Type = Integer32
_OnuVlanPortIndex_Object = MibTableColumn
onuVlanPortIndex = _OnuVlanPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 3),
    _OnuVlanPortIndex_Type()
)
onuVlanPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanPortIndex.setStatus("current")


class _OnuVlanPortMode_Type(Integer32):
    """Custom type onuVlanPortMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 0),
          ("tag", 1),
          ("translation", 2),
          ("aggregation", 3),
          ("trunk", 4))
    )


_OnuVlanPortMode_Type.__name__ = "Integer32"
_OnuVlanPortMode_Object = MibTableColumn
onuVlanPortMode = _OnuVlanPortMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 4),
    _OnuVlanPortMode_Type()
)
onuVlanPortMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanPortMode.setStatus("current")
_OnuVlanPortPvid_Type = Integer32
_OnuVlanPortPvid_Object = MibTableColumn
onuVlanPortPvid = _OnuVlanPortPvid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 5),
    _OnuVlanPortPvid_Type()
)
onuVlanPortPvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanPortPvid.setStatus("current")
_OnuVlanPortVlan_Type = OctetString
_OnuVlanPortVlan_Object = MibTableColumn
onuVlanPortVlan = _OnuVlanPortVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 6),
    _OnuVlanPortVlan_Type()
)
onuVlanPortVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanPortVlan.setStatus("current")
_OnuVlanPortPri_Type = Integer32
_OnuVlanPortPri_Object = MibTableColumn
onuVlanPortPri = _OnuVlanPortPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 10, 1, 7),
    _OnuVlanPortPri_Type()
)
onuVlanPortPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuVlanPortPri.setStatus("current")
_OnuPortStatEnTable_Object = MibTable
onuPortStatEnTable = _OnuPortStatEnTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11)
)
if mibBuilder.loadTexts:
    onuPortStatEnTable.setStatus("current")
_OnuPortStatEnEntry_Object = MibTableRow
onuPortStatEnEntry = _OnuPortStatEnEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11, 1)
)
onuPortStatEnEntry.setIndexNames(
    (0, "V1600D", "onuPortStatEnPonIndex"),
    (0, "V1600D", "onuPortStatEnOnuIndex"),
    (0, "V1600D", "onuPortStatEnPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortStatEnEntry.setStatus("current")
_OnuPortStatEnPonIndex_Type = Integer32
_OnuPortStatEnPonIndex_Object = MibTableColumn
onuPortStatEnPonIndex = _OnuPortStatEnPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11, 1, 1),
    _OnuPortStatEnPonIndex_Type()
)
onuPortStatEnPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatEnPonIndex.setStatus("current")
_OnuPortStatEnOnuIndex_Type = Integer32
_OnuPortStatEnOnuIndex_Object = MibTableColumn
onuPortStatEnOnuIndex = _OnuPortStatEnOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11, 1, 2),
    _OnuPortStatEnOnuIndex_Type()
)
onuPortStatEnOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatEnOnuIndex.setStatus("current")
_OnuPortStatEnPortIndex_Type = Integer32
_OnuPortStatEnPortIndex_Object = MibTableColumn
onuPortStatEnPortIndex = _OnuPortStatEnPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11, 1, 3),
    _OnuPortStatEnPortIndex_Type()
)
onuPortStatEnPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatEnPortIndex.setStatus("current")


class _OnuPortStatEn_Type(Integer32):
    """Custom type onuPortStatEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortStatEn_Type.__name__ = "Integer32"
_OnuPortStatEn_Object = MibTableColumn
onuPortStatEn = _OnuPortStatEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11, 1, 4),
    _OnuPortStatEn_Type()
)
onuPortStatEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatEn.setStatus("current")
_OnuPortStatEnPeriod_Type = Integer32
_OnuPortStatEnPeriod_Object = MibTableColumn
onuPortStatEnPeriod = _OnuPortStatEnPeriod_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 11, 1, 5),
    _OnuPortStatEnPeriod_Type()
)
onuPortStatEnPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatEnPeriod.setStatus("current")
_OnuPortStatTable_Object = MibTable
onuPortStatTable = _OnuPortStatTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12)
)
if mibBuilder.loadTexts:
    onuPortStatTable.setStatus("current")
_OnuPortStatEntry_Object = MibTableRow
onuPortStatEntry = _OnuPortStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1)
)
onuPortStatEntry.setIndexNames(
    (0, "V1600D", "onuPortStatPonIndex"),
    (0, "V1600D", "onuPortStatOnuIndex"),
    (0, "V1600D", "onuPortStatPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortStatEntry.setStatus("current")
_OnuPortStatPonIndex_Type = Integer32
_OnuPortStatPonIndex_Object = MibTableColumn
onuPortStatPonIndex = _OnuPortStatPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 1),
    _OnuPortStatPonIndex_Type()
)
onuPortStatPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatPonIndex.setStatus("current")
_OnuPortStatOnuIndex_Type = Integer32
_OnuPortStatOnuIndex_Object = MibTableColumn
onuPortStatOnuIndex = _OnuPortStatOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 2),
    _OnuPortStatOnuIndex_Type()
)
onuPortStatOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatOnuIndex.setStatus("current")
_OnuPortStatPortIndex_Type = Integer32
_OnuPortStatPortIndex_Object = MibTableColumn
onuPortStatPortIndex = _OnuPortStatPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 3),
    _OnuPortStatPortIndex_Type()
)
onuPortStatPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatPortIndex.setStatus("current")
_StatDnDropEvents_Type = Counter32
_StatDnDropEvents_Object = MibTableColumn
statDnDropEvents = _StatDnDropEvents_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 4),
    _StatDnDropEvents_Type()
)
statDnDropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnDropEvents.setStatus("current")
_StatUpDropEvents_Type = Counter32
_StatUpDropEvents_Object = MibTableColumn
statUpDropEvents = _StatUpDropEvents_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 5),
    _StatUpDropEvents_Type()
)
statUpDropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpDropEvents.setStatus("current")
_StatDnOctets_Type = Counter32
_StatDnOctets_Object = MibTableColumn
statDnOctets = _StatDnOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 6),
    _StatDnOctets_Type()
)
statDnOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnOctets.setStatus("current")
_StatUpOctets_Type = Counter32
_StatUpOctets_Object = MibTableColumn
statUpOctets = _StatUpOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 7),
    _StatUpOctets_Type()
)
statUpOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpOctets.setStatus("current")
_StatDnFrames_Type = Counter32
_StatDnFrames_Object = MibTableColumn
statDnFrames = _StatDnFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 8),
    _StatDnFrames_Type()
)
statDnFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnFrames.setStatus("current")
_StatUpFrames_Type = Counter32
_StatUpFrames_Object = MibTableColumn
statUpFrames = _StatUpFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 9),
    _StatUpFrames_Type()
)
statUpFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpFrames.setStatus("current")
_StatDnBcFrames_Type = Counter32
_StatDnBcFrames_Object = MibTableColumn
statDnBcFrames = _StatDnBcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 10),
    _StatDnBcFrames_Type()
)
statDnBcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnBcFrames.setStatus("current")
_StatUpBcFrames_Type = Counter32
_StatUpBcFrames_Object = MibTableColumn
statUpBcFrames = _StatUpBcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 11),
    _StatUpBcFrames_Type()
)
statUpBcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpBcFrames.setStatus("current")
_StatDnMcFrames_Type = Counter32
_StatDnMcFrames_Object = MibTableColumn
statDnMcFrames = _StatDnMcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 12),
    _StatDnMcFrames_Type()
)
statDnMcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnMcFrames.setStatus("current")
_StatUpMcFrames_Type = Counter32
_StatUpMcFrames_Object = MibTableColumn
statUpMcFrames = _StatUpMcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 13),
    _StatUpMcFrames_Type()
)
statUpMcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpMcFrames.setStatus("current")
_StatDnCrcErrFrames_Type = Counter32
_StatDnCrcErrFrames_Object = MibTableColumn
statDnCrcErrFrames = _StatDnCrcErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 14),
    _StatDnCrcErrFrames_Type()
)
statDnCrcErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnCrcErrFrames.setStatus("current")
_StatUpCrcErrFrames_Type = Counter32
_StatUpCrcErrFrames_Object = MibTableColumn
statUpCrcErrFrames = _StatUpCrcErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 15),
    _StatUpCrcErrFrames_Type()
)
statUpCrcErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpCrcErrFrames.setStatus("current")
_StatDnUndersizeFrames_Type = Counter32
_StatDnUndersizeFrames_Object = MibTableColumn
statDnUndersizeFrames = _StatDnUndersizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 16),
    _StatDnUndersizeFrames_Type()
)
statDnUndersizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnUndersizeFrames.setStatus("current")
_StatUpUndersizeFrames_Type = Counter32
_StatUpUndersizeFrames_Object = MibTableColumn
statUpUndersizeFrames = _StatUpUndersizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 17),
    _StatUpUndersizeFrames_Type()
)
statUpUndersizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpUndersizeFrames.setStatus("current")
_StatDnOversizeFrames_Type = Counter32
_StatDnOversizeFrames_Object = MibTableColumn
statDnOversizeFrames = _StatDnOversizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 18),
    _StatDnOversizeFrames_Type()
)
statDnOversizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnOversizeFrames.setStatus("current")
_StatUpOversizeFrames_Type = Counter32
_StatUpOversizeFrames_Object = MibTableColumn
statUpOversizeFrames = _StatUpOversizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 19),
    _StatUpOversizeFrames_Type()
)
statUpOversizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpOversizeFrames.setStatus("current")
_StatDnFragments_Type = Counter32
_StatDnFragments_Object = MibTableColumn
statDnFragments = _StatDnFragments_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 20),
    _StatDnFragments_Type()
)
statDnFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnFragments.setStatus("current")
_StatUpFragments_Type = Counter32
_StatUpFragments_Object = MibTableColumn
statUpFragments = _StatUpFragments_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 21),
    _StatUpFragments_Type()
)
statUpFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpFragments.setStatus("current")
_StatDnJabbers_Type = Counter32
_StatDnJabbers_Object = MibTableColumn
statDnJabbers = _StatDnJabbers_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 22),
    _StatDnJabbers_Type()
)
statDnJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnJabbers.setStatus("current")
_StatUpJabbers_Type = Counter32
_StatUpJabbers_Object = MibTableColumn
statUpJabbers = _StatUpJabbers_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 23),
    _StatUpJabbers_Type()
)
statUpJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpJabbers.setStatus("current")
_StatDn64OctetsFrames_Type = Counter32
_StatDn64OctetsFrames_Object = MibTableColumn
statDn64OctetsFrames = _StatDn64OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 24),
    _StatDn64OctetsFrames_Type()
)
statDn64OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDn64OctetsFrames.setStatus("current")
_StatDn65to127OctetsFrames_Type = Counter32
_StatDn65to127OctetsFrames_Object = MibTableColumn
statDn65to127OctetsFrames = _StatDn65to127OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 25),
    _StatDn65to127OctetsFrames_Type()
)
statDn65to127OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDn65to127OctetsFrames.setStatus("current")
_StatDn128to255OctetsFrames_Type = Counter32
_StatDn128to255OctetsFrames_Object = MibTableColumn
statDn128to255OctetsFrames = _StatDn128to255OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 26),
    _StatDn128to255OctetsFrames_Type()
)
statDn128to255OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDn128to255OctetsFrames.setStatus("current")
_StatDn256to511OctetsFrames_Type = Counter32
_StatDn256to511OctetsFrames_Object = MibTableColumn
statDn256to511OctetsFrames = _StatDn256to511OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 27),
    _StatDn256to511OctetsFrames_Type()
)
statDn256to511OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDn256to511OctetsFrames.setStatus("current")
_StatDn512to1023OctetsFrames_Type = Counter32
_StatDn512to1023OctetsFrames_Object = MibTableColumn
statDn512to1023OctetsFrames = _StatDn512to1023OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 28),
    _StatDn512to1023OctetsFrames_Type()
)
statDn512to1023OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDn512to1023OctetsFrames.setStatus("current")
_StatDn1024to1518OctetsFrames_Type = Counter32
_StatDn1024to1518OctetsFrames_Object = MibTableColumn
statDn1024to1518OctetsFrames = _StatDn1024to1518OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 29),
    _StatDn1024to1518OctetsFrames_Type()
)
statDn1024to1518OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDn1024to1518OctetsFrames.setStatus("current")
_StatUp64OctetsFrames_Type = Counter32
_StatUp64OctetsFrames_Object = MibTableColumn
statUp64OctetsFrames = _StatUp64OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 30),
    _StatUp64OctetsFrames_Type()
)
statUp64OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUp64OctetsFrames.setStatus("current")
_StatUp65to127OctetsFrames_Type = Counter32
_StatUp65to127OctetsFrames_Object = MibTableColumn
statUp65to127OctetsFrames = _StatUp65to127OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 31),
    _StatUp65to127OctetsFrames_Type()
)
statUp65to127OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUp65to127OctetsFrames.setStatus("current")
_StatUp128to255OctetsFrames_Type = Counter32
_StatUp128to255OctetsFrames_Object = MibTableColumn
statUp128to255OctetsFrames = _StatUp128to255OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 32),
    _StatUp128to255OctetsFrames_Type()
)
statUp128to255OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUp128to255OctetsFrames.setStatus("current")
_StatUp256to511OctetsFrames_Type = Counter32
_StatUp256to511OctetsFrames_Object = MibTableColumn
statUp256to511OctetsFrames = _StatUp256to511OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 33),
    _StatUp256to511OctetsFrames_Type()
)
statUp256to511OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUp256to511OctetsFrames.setStatus("current")
_StatUp512to1023OctetsFrames_Type = Counter32
_StatUp512to1023OctetsFrames_Object = MibTableColumn
statUp512to1023OctetsFrames = _StatUp512to1023OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 34),
    _StatUp512to1023OctetsFrames_Type()
)
statUp512to1023OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUp512to1023OctetsFrames.setStatus("current")
_StatUp1024to1518OctetsFrames_Type = Counter32
_StatUp1024to1518OctetsFrames_Object = MibTableColumn
statUp1024to1518OctetsFrames = _StatUp1024to1518OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 35),
    _StatUp1024to1518OctetsFrames_Type()
)
statUp1024to1518OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUp1024to1518OctetsFrames.setStatus("current")
_StatDnDiscardFrames_Type = Counter32
_StatDnDiscardFrames_Object = MibTableColumn
statDnDiscardFrames = _StatDnDiscardFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 36),
    _StatDnDiscardFrames_Type()
)
statDnDiscardFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnDiscardFrames.setStatus("current")
_StatUpDiscardFrames_Type = Counter32
_StatUpDiscardFrames_Object = MibTableColumn
statUpDiscardFrames = _StatUpDiscardFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 37),
    _StatUpDiscardFrames_Type()
)
statUpDiscardFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpDiscardFrames.setStatus("current")
_StatDnErrFrames_Type = Counter32
_StatDnErrFrames_Object = MibTableColumn
statDnErrFrames = _StatDnErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 38),
    _StatDnErrFrames_Type()
)
statDnErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statDnErrFrames.setStatus("current")
_StatUpErrFrames_Type = Counter32
_StatUpErrFrames_Object = MibTableColumn
statUpErrFrames = _StatUpErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 39),
    _StatUpErrFrames_Type()
)
statUpErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statUpErrFrames.setStatus("current")
_StatStatusChangeTimes_Type = Counter32
_StatStatusChangeTimes_Object = MibTableColumn
statStatusChangeTimes = _StatStatusChangeTimes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 12, 1, 40),
    _StatStatusChangeTimes_Type()
)
statStatusChangeTimes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statStatusChangeTimes.setStatus("current")
_OnuPortBasicTable_Object = MibTable
onuPortBasicTable = _OnuPortBasicTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13)
)
if mibBuilder.loadTexts:
    onuPortBasicTable.setStatus("current")
_OnuPortBasicEntry_Object = MibTableRow
onuPortBasicEntry = _OnuPortBasicEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1)
)
onuPortBasicEntry.setIndexNames(
    (0, "V1600D", "onuPortBasicPonIndex"),
    (0, "V1600D", "onuPortBasicOnuIndex"),
    (0, "V1600D", "onuPortBasicPortIndex"),
)
if mibBuilder.loadTexts:
    onuPortBasicEntry.setStatus("current")
_OnuPortBasicPonIndex_Type = Integer32
_OnuPortBasicPonIndex_Object = MibTableColumn
onuPortBasicPonIndex = _OnuPortBasicPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 1),
    _OnuPortBasicPonIndex_Type()
)
onuPortBasicPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicPonIndex.setStatus("current")
_OnuPortBasicOnuIndex_Type = Integer32
_OnuPortBasicOnuIndex_Object = MibTableColumn
onuPortBasicOnuIndex = _OnuPortBasicOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 2),
    _OnuPortBasicOnuIndex_Type()
)
onuPortBasicOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicOnuIndex.setStatus("current")
_OnuPortBasicPortIndex_Type = Integer32
_OnuPortBasicPortIndex_Object = MibTableColumn
onuPortBasicPortIndex = _OnuPortBasicPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 3),
    _OnuPortBasicPortIndex_Type()
)
onuPortBasicPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicPortIndex.setStatus("current")


class _OnuPortBasicLinkStatus_Type(Integer32):
    """Custom type onuPortBasicLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_OnuPortBasicLinkStatus_Type.__name__ = "Integer32"
_OnuPortBasicLinkStatus_Object = MibTableColumn
onuPortBasicLinkStatus = _OnuPortBasicLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 4),
    _OnuPortBasicLinkStatus_Type()
)
onuPortBasicLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicLinkStatus.setStatus("current")


class _OnuPortBasicAdminStatus_Type(Integer32):
    """Custom type onuPortBasicAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortBasicAdminStatus_Type.__name__ = "Integer32"
_OnuPortBasicAdminStatus_Object = MibTableColumn
onuPortBasicAdminStatus = _OnuPortBasicAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 5),
    _OnuPortBasicAdminStatus_Type()
)
onuPortBasicAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicAdminStatus.setStatus("current")


class _OnuPortBasicAutoNgt_Type(Integer32):
    """Custom type onuPortBasicAutoNgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortBasicAutoNgt_Type.__name__ = "Integer32"
_OnuPortBasicAutoNgt_Object = MibTableColumn
onuPortBasicAutoNgt = _OnuPortBasicAutoNgt_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 6),
    _OnuPortBasicAutoNgt_Type()
)
onuPortBasicAutoNgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicAutoNgt.setStatus("current")


class _OnuPortBasicFlowCtl_Type(Integer32):
    """Custom type onuPortBasicFlowCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortBasicFlowCtl_Type.__name__ = "Integer32"
_OnuPortBasicFlowCtl_Object = MibTableColumn
onuPortBasicFlowCtl = _OnuPortBasicFlowCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 7),
    _OnuPortBasicFlowCtl_Type()
)
onuPortBasicFlowCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicFlowCtl.setStatus("current")


class _OnuPortBasicLoopback_Type(Integer32):
    """Custom type onuPortBasicLoopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortBasicLoopback_Type.__name__ = "Integer32"
_OnuPortBasicLoopback_Object = MibTableColumn
onuPortBasicLoopback = _OnuPortBasicLoopback_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 8),
    _OnuPortBasicLoopback_Type()
)
onuPortBasicLoopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicLoopback.setStatus("current")


class _OnuPortBasicPolicyState_Type(Integer32):
    """Custom type onuPortBasicPolicyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortBasicPolicyState_Type.__name__ = "Integer32"
_OnuPortBasicPolicyState_Object = MibTableColumn
onuPortBasicPolicyState = _OnuPortBasicPolicyState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 9),
    _OnuPortBasicPolicyState_Type()
)
onuPortBasicPolicyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicPolicyState.setStatus("current")
_OnuPortBasicPolicyCir_Type = Integer32
_OnuPortBasicPolicyCir_Object = MibTableColumn
onuPortBasicPolicyCir = _OnuPortBasicPolicyCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 10),
    _OnuPortBasicPolicyCir_Type()
)
onuPortBasicPolicyCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicPolicyCir.setStatus("current")
_OnuPortBasicPolicyCbs_Type = Integer32
_OnuPortBasicPolicyCbs_Object = MibTableColumn
onuPortBasicPolicyCbs = _OnuPortBasicPolicyCbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 11),
    _OnuPortBasicPolicyCbs_Type()
)
onuPortBasicPolicyCbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicPolicyCbs.setStatus("current")
_OnuPortBasicPolicyEbs_Type = Integer32
_OnuPortBasicPolicyEbs_Object = MibTableColumn
onuPortBasicPolicyEbs = _OnuPortBasicPolicyEbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 12),
    _OnuPortBasicPolicyEbs_Type()
)
onuPortBasicPolicyEbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicPolicyEbs.setStatus("current")


class _OnuPortBasicRateState_Type(Integer32):
    """Custom type onuPortBasicRateState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortBasicRateState_Type.__name__ = "Integer32"
_OnuPortBasicRateState_Object = MibTableColumn
onuPortBasicRateState = _OnuPortBasicRateState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 13),
    _OnuPortBasicRateState_Type()
)
onuPortBasicRateState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicRateState.setStatus("current")
_OnuPortBasicRateCir_Type = Integer32
_OnuPortBasicRateCir_Object = MibTableColumn
onuPortBasicRateCir = _OnuPortBasicRateCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 14),
    _OnuPortBasicRateCir_Type()
)
onuPortBasicRateCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicRateCir.setStatus("current")
_OnuPortBasicRatePir_Type = Integer32
_OnuPortBasicRatePir_Object = MibTableColumn
onuPortBasicRatePir = _OnuPortBasicRatePir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 13, 1, 15),
    _OnuPortBasicRatePir_Type()
)
onuPortBasicRatePir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortBasicRatePir.setStatus("current")
_OnuPortDisLoopTable_Object = MibTable
onuPortDisLoopTable = _OnuPortDisLoopTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 14)
)
if mibBuilder.loadTexts:
    onuPortDisLoopTable.setStatus("current")
_OnuPortDisLoopEntry_Object = MibTableRow
onuPortDisLoopEntry = _OnuPortDisLoopEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 14, 1)
)
onuPortDisLoopEntry.setIndexNames(
    (0, "V1600D", "onuPortDisLoopPon"),
    (0, "V1600D", "onuPortDisLoopOnu"),
    (0, "V1600D", "onuPortDisLoopPort"),
)
if mibBuilder.loadTexts:
    onuPortDisLoopEntry.setStatus("current")


class _OnuPortDisLoopPon_Type(Integer32):
    """Custom type onuPortDisLoopPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuPortDisLoopPon_Type.__name__ = "Integer32"
_OnuPortDisLoopPon_Object = MibTableColumn
onuPortDisLoopPon = _OnuPortDisLoopPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 14, 1, 1),
    _OnuPortDisLoopPon_Type()
)
onuPortDisLoopPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortDisLoopPon.setStatus("current")


class _OnuPortDisLoopOnu_Type(Integer32):
    """Custom type onuPortDisLoopOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuPortDisLoopOnu_Type.__name__ = "Integer32"
_OnuPortDisLoopOnu_Object = MibTableColumn
onuPortDisLoopOnu = _OnuPortDisLoopOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 14, 1, 2),
    _OnuPortDisLoopOnu_Type()
)
onuPortDisLoopOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortDisLoopOnu.setStatus("current")
_OnuPortDisLoopPort_Type = Integer32
_OnuPortDisLoopPort_Object = MibTableColumn
onuPortDisLoopPort = _OnuPortDisLoopPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 14, 1, 3),
    _OnuPortDisLoopPort_Type()
)
onuPortDisLoopPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortDisLoopPort.setStatus("current")


class _OnuPortDisLoopEn_Type(Integer32):
    """Custom type onuPortDisLoopEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortDisLoopEn_Type.__name__ = "Integer32"
_OnuPortDisLoopEn_Object = MibTableColumn
onuPortDisLoopEn = _OnuPortDisLoopEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 1, 14, 1, 4),
    _OnuPortDisLoopEn_Type()
)
onuPortDisLoopEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDisLoopEn.setStatus("current")
_OnuPortCfg_ObjectIdentity = ObjectIdentity
onuPortCfg = _OnuPortCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2)
)
_OnuPortAdminCfg_ObjectIdentity = ObjectIdentity
onuPortAdminCfg = _OnuPortAdminCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 1)
)


class _PortAdminPonNo_Type(Integer32):
    """Custom type portAdminPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PortAdminPonNo_Type.__name__ = "Integer32"
_PortAdminPonNo_Object = MibScalar
portAdminPonNo = _PortAdminPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 1, 1),
    _PortAdminPonNo_Type()
)
portAdminPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAdminPonNo.setStatus("current")


class _PortAdminOnuNo_Type(Integer32):
    """Custom type portAdminOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PortAdminOnuNo_Type.__name__ = "Integer32"
_PortAdminOnuNo_Object = MibScalar
portAdminOnuNo = _PortAdminOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 1, 2),
    _PortAdminOnuNo_Type()
)
portAdminOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAdminOnuNo.setStatus("current")


class _PortAdminPortNo_Type(Integer32):
    """Custom type portAdminPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortAdminPortNo_Type.__name__ = "Integer32"
_PortAdminPortNo_Object = MibScalar
portAdminPortNo = _PortAdminPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 1, 3),
    _PortAdminPortNo_Type()
)
portAdminPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAdminPortNo.setStatus("current")


class _PortAdmin_Type(Integer32):
    """Custom type portAdmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortAdmin_Type.__name__ = "Integer32"
_PortAdmin_Object = MibScalar
portAdmin = _PortAdmin_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 1, 4),
    _PortAdmin_Type()
)
portAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAdmin.setStatus("current")
_OnuPortAutoNegCfg_ObjectIdentity = ObjectIdentity
onuPortAutoNegCfg = _OnuPortAutoNegCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 2)
)


class _AutoNegPonNo_Type(Integer32):
    """Custom type autoNegPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_AutoNegPonNo_Type.__name__ = "Integer32"
_AutoNegPonNo_Object = MibScalar
autoNegPonNo = _AutoNegPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 2, 1),
    _AutoNegPonNo_Type()
)
autoNegPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegPonNo.setStatus("current")


class _AutoNegOnuNo_Type(Integer32):
    """Custom type autoNegOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AutoNegOnuNo_Type.__name__ = "Integer32"
_AutoNegOnuNo_Object = MibScalar
autoNegOnuNo = _AutoNegOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 2, 2),
    _AutoNegOnuNo_Type()
)
autoNegOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegOnuNo.setStatus("current")


class _AutoNegPortNo_Type(Integer32):
    """Custom type autoNegPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AutoNegPortNo_Type.__name__ = "Integer32"
_AutoNegPortNo_Object = MibScalar
autoNegPortNo = _AutoNegPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 2, 3),
    _AutoNegPortNo_Type()
)
autoNegPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegPortNo.setStatus("current")


class _PortAutoNeg_Type(Integer32):
    """Custom type portAutoNeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortAutoNeg_Type.__name__ = "Integer32"
_PortAutoNeg_Object = MibScalar
portAutoNeg = _PortAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 2, 4),
    _PortAutoNeg_Type()
)
portAutoNeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAutoNeg.setStatus("current")
_OnuPortAutoNegRstCfg_ObjectIdentity = ObjectIdentity
onuPortAutoNegRstCfg = _OnuPortAutoNegRstCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 3)
)


class _AutoNegRstPonNo_Type(Integer32):
    """Custom type autoNegRstPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_AutoNegRstPonNo_Type.__name__ = "Integer32"
_AutoNegRstPonNo_Object = MibScalar
autoNegRstPonNo = _AutoNegRstPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 3, 1),
    _AutoNegRstPonNo_Type()
)
autoNegRstPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegRstPonNo.setStatus("current")


class _AutoNegRstOnuNo_Type(Integer32):
    """Custom type autoNegRstOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AutoNegRstOnuNo_Type.__name__ = "Integer32"
_AutoNegRstOnuNo_Object = MibScalar
autoNegRstOnuNo = _AutoNegRstOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 3, 2),
    _AutoNegRstOnuNo_Type()
)
autoNegRstOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegRstOnuNo.setStatus("current")


class _AutoNegRstPortNo_Type(Integer32):
    """Custom type autoNegRstPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AutoNegRstPortNo_Type.__name__ = "Integer32"
_AutoNegRstPortNo_Object = MibScalar
autoNegRstPortNo = _AutoNegRstPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 3, 3),
    _AutoNegRstPortNo_Type()
)
autoNegRstPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegRstPortNo.setStatus("current")


class _PortAutoNegRestart_Type(Integer32):
    """Custom type portAutoNegRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_PortAutoNegRestart_Type.__name__ = "Integer32"
_PortAutoNegRestart_Object = MibScalar
portAutoNegRestart = _PortAutoNegRestart_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 3, 4),
    _PortAutoNegRestart_Type()
)
portAutoNegRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAutoNegRestart.setStatus("current")
_OnuPortFcCfg_ObjectIdentity = ObjectIdentity
onuPortFcCfg = _OnuPortFcCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 4)
)


class _FcPonNo_Type(Integer32):
    """Custom type fcPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_FcPonNo_Type.__name__ = "Integer32"
_FcPonNo_Object = MibScalar
fcPonNo = _FcPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 4, 1),
    _FcPonNo_Type()
)
fcPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fcPonNo.setStatus("current")


class _FcOnuNo_Type(Integer32):
    """Custom type fcOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_FcOnuNo_Type.__name__ = "Integer32"
_FcOnuNo_Object = MibScalar
fcOnuNo = _FcOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 4, 2),
    _FcOnuNo_Type()
)
fcOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fcOnuNo.setStatus("current")


class _FcPortNo_Type(Integer32):
    """Custom type fcPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_FcPortNo_Type.__name__ = "Integer32"
_FcPortNo_Object = MibScalar
fcPortNo = _FcPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 4, 3),
    _FcPortNo_Type()
)
fcPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fcPortNo.setStatus("current")


class _PortFlowControl_Type(Integer32):
    """Custom type portFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortFlowControl_Type.__name__ = "Integer32"
_PortFlowControl_Object = MibScalar
portFlowControl = _PortFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 4, 4),
    _PortFlowControl_Type()
)
portFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portFlowControl.setStatus("current")
_PortLoopdetectCfg_ObjectIdentity = ObjectIdentity
portLoopdetectCfg = _PortLoopdetectCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 5)
)


class _LoopPonNo_Type(Integer32):
    """Custom type loopPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LoopPonNo_Type.__name__ = "Integer32"
_LoopPonNo_Object = MibScalar
loopPonNo = _LoopPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 5, 1),
    _LoopPonNo_Type()
)
loopPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopPonNo.setStatus("current")


class _LoopOnuNo_Type(Integer32):
    """Custom type loopOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LoopOnuNo_Type.__name__ = "Integer32"
_LoopOnuNo_Object = MibScalar
loopOnuNo = _LoopOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 5, 2),
    _LoopOnuNo_Type()
)
loopOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopOnuNo.setStatus("current")


class _LoopPortNo_Type(Integer32):
    """Custom type loopPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LoopPortNo_Type.__name__ = "Integer32"
_LoopPortNo_Object = MibScalar
loopPortNo = _LoopPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 5, 3),
    _LoopPortNo_Type()
)
loopPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopPortNo.setStatus("current")


class _PortLoopdetect_Type(Integer32):
    """Custom type portLoopdetect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortLoopdetect_Type.__name__ = "Integer32"
_PortLoopdetect_Object = MibScalar
portLoopdetect = _PortLoopdetect_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 5, 4),
    _PortLoopdetect_Type()
)
portLoopdetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portLoopdetect.setStatus("current")
_PortDisLoopCfg_ObjectIdentity = ObjectIdentity
portDisLoopCfg = _PortDisLoopCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 6)
)


class _DisLoopPonNo_Type(Integer32):
    """Custom type disLoopPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DisLoopPonNo_Type.__name__ = "Integer32"
_DisLoopPonNo_Object = MibScalar
disLoopPonNo = _DisLoopPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 6, 1),
    _DisLoopPonNo_Type()
)
disLoopPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    disLoopPonNo.setStatus("current")


class _DisLoopOnuNo_Type(Integer32):
    """Custom type disLoopOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DisLoopOnuNo_Type.__name__ = "Integer32"
_DisLoopOnuNo_Object = MibScalar
disLoopOnuNo = _DisLoopOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 6, 2),
    _DisLoopOnuNo_Type()
)
disLoopOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    disLoopOnuNo.setStatus("current")


class _DisLoopPortNo_Type(Integer32):
    """Custom type disLoopPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DisLoopPortNo_Type.__name__ = "Integer32"
_DisLoopPortNo_Object = MibScalar
disLoopPortNo = _DisLoopPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 6, 3),
    _DisLoopPortNo_Type()
)
disLoopPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    disLoopPortNo.setStatus("current")


class _PortDisableLoopEn_Type(Integer32):
    """Custom type portDisableLoopEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortDisableLoopEn_Type.__name__ = "Integer32"
_PortDisableLoopEn_Object = MibScalar
portDisableLoopEn = _PortDisableLoopEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 6, 4),
    _PortDisableLoopEn_Type()
)
portDisableLoopEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portDisableLoopEn.setStatus("current")
_OnuPortUpstreamLimit_ObjectIdentity = ObjectIdentity
onuPortUpstreamLimit = _OnuPortUpstreamLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8)
)


class _UpLimitPonNo_Type(Integer32):
    """Custom type upLimitPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UpLimitPonNo_Type.__name__ = "Integer32"
_UpLimitPonNo_Object = MibScalar
upLimitPonNo = _UpLimitPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 1),
    _UpLimitPonNo_Type()
)
upLimitPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitPonNo.setStatus("current")


class _UpLimitOnuNo_Type(Integer32):
    """Custom type upLimitOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_UpLimitOnuNo_Type.__name__ = "Integer32"
_UpLimitOnuNo_Object = MibScalar
upLimitOnuNo = _UpLimitOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 2),
    _UpLimitOnuNo_Type()
)
upLimitOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitOnuNo.setStatus("current")


class _UpLimitPortNo_Type(Integer32):
    """Custom type upLimitPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_UpLimitPortNo_Type.__name__ = "Integer32"
_UpLimitPortNo_Object = MibScalar
upLimitPortNo = _UpLimitPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 3),
    _UpLimitPortNo_Type()
)
upLimitPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitPortNo.setStatus("current")


class _UpLimitCir_Type(Integer32):
    """Custom type upLimitCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_UpLimitCir_Type.__name__ = "Integer32"
_UpLimitCir_Object = MibScalar
upLimitCir = _UpLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 4),
    _UpLimitCir_Type()
)
upLimitCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitCir.setStatus("current")


class _UpLimitCbs_Type(Integer32):
    """Custom type upLimitCbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10240),
    )


_UpLimitCbs_Type.__name__ = "Integer32"
_UpLimitCbs_Object = MibScalar
upLimitCbs = _UpLimitCbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 5),
    _UpLimitCbs_Type()
)
upLimitCbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitCbs.setStatus("current")


class _UpLimitEbs_Type(Integer32):
    """Custom type upLimitEbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10240),
    )


_UpLimitEbs_Type.__name__ = "Integer32"
_UpLimitEbs_Object = MibScalar
upLimitEbs = _UpLimitEbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 6),
    _UpLimitEbs_Type()
)
upLimitEbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitEbs.setStatus("current")


class _UpLimitAction_Type(Integer32):
    """Custom type upLimitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_UpLimitAction_Type.__name__ = "Integer32"
_UpLimitAction_Object = MibScalar
upLimitAction = _UpLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 8, 7),
    _UpLimitAction_Type()
)
upLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitAction.setStatus("current")
_OnuPortDownstreamLimit_ObjectIdentity = ObjectIdentity
onuPortDownstreamLimit = _OnuPortDownstreamLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9)
)


class _DownLimitPonNo_Type(Integer32):
    """Custom type downLimitPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DownLimitPonNo_Type.__name__ = "Integer32"
_DownLimitPonNo_Object = MibScalar
downLimitPonNo = _DownLimitPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9, 1),
    _DownLimitPonNo_Type()
)
downLimitPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitPonNo.setStatus("current")


class _DownLimitOnuNo_Type(Integer32):
    """Custom type downLimitOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DownLimitOnuNo_Type.__name__ = "Integer32"
_DownLimitOnuNo_Object = MibScalar
downLimitOnuNo = _DownLimitOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9, 2),
    _DownLimitOnuNo_Type()
)
downLimitOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitOnuNo.setStatus("current")


class _DownLimitPortNo_Type(Integer32):
    """Custom type downLimitPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DownLimitPortNo_Type.__name__ = "Integer32"
_DownLimitPortNo_Object = MibScalar
downLimitPortNo = _DownLimitPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9, 3),
    _DownLimitPortNo_Type()
)
downLimitPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitPortNo.setStatus("current")


class _DownLimitCir_Type(Integer32):
    """Custom type downLimitCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_DownLimitCir_Type.__name__ = "Integer32"
_DownLimitCir_Object = MibScalar
downLimitCir = _DownLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9, 4),
    _DownLimitCir_Type()
)
downLimitCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitCir.setStatus("current")


class _DownLimitPir_Type(Integer32):
    """Custom type downLimitPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_DownLimitPir_Type.__name__ = "Integer32"
_DownLimitPir_Object = MibScalar
downLimitPir = _DownLimitPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9, 5),
    _DownLimitPir_Type()
)
downLimitPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitPir.setStatus("current")


class _DownLimitAction_Type(Integer32):
    """Custom type downLimitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_DownLimitAction_Type.__name__ = "Integer32"
_DownLimitAction_Object = MibScalar
downLimitAction = _DownLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 9, 6),
    _DownLimitAction_Type()
)
downLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitAction.setStatus("current")
_OnuPortVlan_ObjectIdentity = ObjectIdentity
onuPortVlan = _OnuPortVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10)
)
_OnuPortVlanMode_ObjectIdentity = ObjectIdentity
onuPortVlanMode = _OnuPortVlanMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 1)
)


class _VlanModePonNo_Type(Integer32):
    """Custom type vlanModePonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_VlanModePonNo_Type.__name__ = "Integer32"
_VlanModePonNo_Object = MibScalar
vlanModePonNo = _VlanModePonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 1, 1),
    _VlanModePonNo_Type()
)
vlanModePonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanModePonNo.setStatus("current")


class _VlanModeOnuNo_Type(Integer32):
    """Custom type vlanModeOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VlanModeOnuNo_Type.__name__ = "Integer32"
_VlanModeOnuNo_Object = MibScalar
vlanModeOnuNo = _VlanModeOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 1, 2),
    _VlanModeOnuNo_Type()
)
vlanModeOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanModeOnuNo.setStatus("current")


class _VlanModePortNo_Type(Integer32):
    """Custom type vlanModePortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanModePortNo_Type.__name__ = "Integer32"
_VlanModePortNo_Object = MibScalar
vlanModePortNo = _VlanModePortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 1, 3),
    _VlanModePortNo_Type()
)
vlanModePortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanModePortNo.setStatus("current")


class _VlanMode_Type(Integer32):
    """Custom type vlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 1),
          ("tag", 2),
          ("translation", 3),
          ("aggregation", 4),
          ("trunk", 5))
    )


_VlanMode_Type.__name__ = "Integer32"
_VlanMode_Object = MibScalar
vlanMode = _VlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 1, 4),
    _VlanMode_Type()
)
vlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanMode.setStatus("current")
_OnuPortVlanPvid_ObjectIdentity = ObjectIdentity
onuPortVlanPvid = _OnuPortVlanPvid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2)
)


class _PortPvidPonNo_Type(Integer32):
    """Custom type portPvidPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_PortPvidPonNo_Type.__name__ = "Integer32"
_PortPvidPonNo_Object = MibScalar
portPvidPonNo = _PortPvidPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2, 1),
    _PortPvidPonNo_Type()
)
portPvidPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPvidPonNo.setStatus("current")


class _PortPvidOnuNo_Type(Integer32):
    """Custom type portPvidOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PortPvidOnuNo_Type.__name__ = "Integer32"
_PortPvidOnuNo_Object = MibScalar
portPvidOnuNo = _PortPvidOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2, 2),
    _PortPvidOnuNo_Type()
)
portPvidOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPvidOnuNo.setStatus("current")


class _PortPvidPortNo_Type(Integer32):
    """Custom type portPvidPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortPvidPortNo_Type.__name__ = "Integer32"
_PortPvidPortNo_Object = MibScalar
portPvidPortNo = _PortPvidPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2, 3),
    _PortPvidPortNo_Type()
)
portPvidPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPvidPortNo.setStatus("current")


class _PortPvidValue_Type(Integer32):
    """Custom type portPvidValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_PortPvidValue_Type.__name__ = "Integer32"
_PortPvidValue_Object = MibScalar
portPvidValue = _PortPvidValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2, 4),
    _PortPvidValue_Type()
)
portPvidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPvidValue.setStatus("current")


class _PortPriValue_Type(Integer32):
    """Custom type portPriValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PortPriValue_Type.__name__ = "Integer32"
_PortPriValue_Object = MibScalar
portPriValue = _PortPriValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2, 5),
    _PortPriValue_Type()
)
portPriValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPriValue.setStatus("current")


class _PvidAction_Type(Integer32):
    """Custom type pvidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_PvidAction_Type.__name__ = "Integer32"
_PvidAction_Object = MibScalar
pvidAction = _PvidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 2, 6),
    _PvidAction_Type()
)
pvidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pvidAction.setStatus("current")
_OnuPortVlanTranslate_ObjectIdentity = ObjectIdentity
onuPortVlanTranslate = _OnuPortVlanTranslate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3)
)


class _TranslatePonNo_Type(Integer32):
    """Custom type translatePonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_TranslatePonNo_Type.__name__ = "Integer32"
_TranslatePonNo_Object = MibScalar
translatePonNo = _TranslatePonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3, 1),
    _TranslatePonNo_Type()
)
translatePonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    translatePonNo.setStatus("current")


class _TranslateOnuNo_Type(Integer32):
    """Custom type translateOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_TranslateOnuNo_Type.__name__ = "Integer32"
_TranslateOnuNo_Object = MibScalar
translateOnuNo = _TranslateOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3, 2),
    _TranslateOnuNo_Type()
)
translateOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    translateOnuNo.setStatus("current")


class _TranslatePortNo_Type(Integer32):
    """Custom type translatePortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TranslatePortNo_Type.__name__ = "Integer32"
_TranslatePortNo_Object = MibScalar
translatePortNo = _TranslatePortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3, 3),
    _TranslatePortNo_Type()
)
translatePortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    translatePortNo.setStatus("current")


class _TranslateOldVlan_Type(Integer32):
    """Custom type translateOldVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_TranslateOldVlan_Type.__name__ = "Integer32"
_TranslateOldVlan_Object = MibScalar
translateOldVlan = _TranslateOldVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3, 4),
    _TranslateOldVlan_Type()
)
translateOldVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    translateOldVlan.setStatus("current")


class _TranslateNewVlan_Type(Integer32):
    """Custom type translateNewVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_TranslateNewVlan_Type.__name__ = "Integer32"
_TranslateNewVlan_Object = MibScalar
translateNewVlan = _TranslateNewVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3, 5),
    _TranslateNewVlan_Type()
)
translateNewVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    translateNewVlan.setStatus("current")


class _TranslateAction_Type(Integer32):
    """Custom type translateAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("add", 2),
          ("delete", 3))
    )


_TranslateAction_Type.__name__ = "Integer32"
_TranslateAction_Object = MibScalar
translateAction = _TranslateAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 3, 6),
    _TranslateAction_Type()
)
translateAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    translateAction.setStatus("current")
_OnuPortVlanTransTable_Object = MibTable
onuPortVlanTransTable = _OnuPortVlanTransTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4)
)
if mibBuilder.loadTexts:
    onuPortVlanTransTable.setStatus("current")
_OnuPortVlanTransEntry_Object = MibTableRow
onuPortVlanTransEntry = _OnuPortVlanTransEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1)
)
onuPortVlanTransEntry.setIndexNames(
    (0, "V1600D", "vlanTransItem"),
)
if mibBuilder.loadTexts:
    onuPortVlanTransEntry.setStatus("current")
_VlanTransItem_Type = Integer32
_VlanTransItem_Object = MibTableColumn
vlanTransItem = _VlanTransItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1, 1),
    _VlanTransItem_Type()
)
vlanTransItem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransItem.setStatus("current")


class _VlanTransPonNo_Type(Integer32):
    """Custom type vlanTransPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_VlanTransPonNo_Type.__name__ = "Integer32"
_VlanTransPonNo_Object = MibTableColumn
vlanTransPonNo = _VlanTransPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1, 2),
    _VlanTransPonNo_Type()
)
vlanTransPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransPonNo.setStatus("current")


class _VlanTransOnuNo_Type(Integer32):
    """Custom type vlanTransOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VlanTransOnuNo_Type.__name__ = "Integer32"
_VlanTransOnuNo_Object = MibTableColumn
vlanTransOnuNo = _VlanTransOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1, 3),
    _VlanTransOnuNo_Type()
)
vlanTransOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransOnuNo.setStatus("current")


class _VlanTransPortNo_Type(Integer32):
    """Custom type vlanTransPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VlanTransPortNo_Type.__name__ = "Integer32"
_VlanTransPortNo_Object = MibTableColumn
vlanTransPortNo = _VlanTransPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1, 4),
    _VlanTransPortNo_Type()
)
vlanTransPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransPortNo.setStatus("current")


class _VlanTransOldVlan_Type(Integer32):
    """Custom type vlanTransOldVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_VlanTransOldVlan_Type.__name__ = "Integer32"
_VlanTransOldVlan_Object = MibTableColumn
vlanTransOldVlan = _VlanTransOldVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1, 5),
    _VlanTransOldVlan_Type()
)
vlanTransOldVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransOldVlan.setStatus("current")


class _VlanTransNewVlan_Type(Integer32):
    """Custom type vlanTransNewVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_VlanTransNewVlan_Type.__name__ = "Integer32"
_VlanTransNewVlan_Object = MibTableColumn
vlanTransNewVlan = _VlanTransNewVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 4, 1, 6),
    _VlanTransNewVlan_Type()
)
vlanTransNewVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransNewVlan.setStatus("current")
_OnuPortVlanTrunk_ObjectIdentity = ObjectIdentity
onuPortVlanTrunk = _OnuPortVlanTrunk_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 5)
)


class _TrunkPonNo_Type(Integer32):
    """Custom type trunkPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_TrunkPonNo_Type.__name__ = "Integer32"
_TrunkPonNo_Object = MibScalar
trunkPonNo = _TrunkPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 5, 1),
    _TrunkPonNo_Type()
)
trunkPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trunkPonNo.setStatus("current")


class _TrunkOnuNo_Type(Integer32):
    """Custom type trunkOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_TrunkOnuNo_Type.__name__ = "Integer32"
_TrunkOnuNo_Object = MibScalar
trunkOnuNo = _TrunkOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 5, 2),
    _TrunkOnuNo_Type()
)
trunkOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trunkOnuNo.setStatus("current")


class _TrunkPortNo_Type(Integer32):
    """Custom type trunkPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TrunkPortNo_Type.__name__ = "Integer32"
_TrunkPortNo_Object = MibScalar
trunkPortNo = _TrunkPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 5, 3),
    _TrunkPortNo_Type()
)
trunkPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trunkPortNo.setStatus("current")


class _TrunkPortVid_Type(Integer32):
    """Custom type trunkPortVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_TrunkPortVid_Type.__name__ = "Integer32"
_TrunkPortVid_Object = MibScalar
trunkPortVid = _TrunkPortVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 5, 4),
    _TrunkPortVid_Type()
)
trunkPortVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trunkPortVid.setStatus("current")


class _TrunkPortVidAction_Type(Integer32):
    """Custom type trunkPortVidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("add", 2),
          ("delete", 3))
    )


_TrunkPortVidAction_Type.__name__ = "Integer32"
_TrunkPortVidAction_Object = MibScalar
trunkPortVidAction = _TrunkPortVidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 5, 5),
    _TrunkPortVidAction_Type()
)
trunkPortVidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trunkPortVidAction.setStatus("current")
_OnuPortVlanTrunkTable_Object = MibTable
onuPortVlanTrunkTable = _OnuPortVlanTrunkTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6)
)
if mibBuilder.loadTexts:
    onuPortVlanTrunkTable.setStatus("current")
_OnuPortVlanTrunkEntry_Object = MibTableRow
onuPortVlanTrunkEntry = _OnuPortVlanTrunkEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6, 1)
)
onuPortVlanTrunkEntry.setIndexNames(
    (0, "V1600D", "vlanTrunkItem"),
)
if mibBuilder.loadTexts:
    onuPortVlanTrunkEntry.setStatus("current")
_VlanTrunkItem_Type = Integer32
_VlanTrunkItem_Object = MibTableColumn
vlanTrunkItem = _VlanTrunkItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6, 1, 1),
    _VlanTrunkItem_Type()
)
vlanTrunkItem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTrunkItem.setStatus("current")


class _VlanTrunkPonNo_Type(Integer32):
    """Custom type vlanTrunkPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_VlanTrunkPonNo_Type.__name__ = "Integer32"
_VlanTrunkPonNo_Object = MibTableColumn
vlanTrunkPonNo = _VlanTrunkPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6, 1, 2),
    _VlanTrunkPonNo_Type()
)
vlanTrunkPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTrunkPonNo.setStatus("current")


class _VlanTrunkOnuNo_Type(Integer32):
    """Custom type vlanTrunkOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VlanTrunkOnuNo_Type.__name__ = "Integer32"
_VlanTrunkOnuNo_Object = MibTableColumn
vlanTrunkOnuNo = _VlanTrunkOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6, 1, 3),
    _VlanTrunkOnuNo_Type()
)
vlanTrunkOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTrunkOnuNo.setStatus("current")


class _VlanTrunkPortNo_Type(Integer32):
    """Custom type vlanTrunkPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanTrunkPortNo_Type.__name__ = "Integer32"
_VlanTrunkPortNo_Object = MibTableColumn
vlanTrunkPortNo = _VlanTrunkPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6, 1, 4),
    _VlanTrunkPortNo_Type()
)
vlanTrunkPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTrunkPortNo.setStatus("current")


class _VlanTrunkVid_Type(Integer32):
    """Custom type vlanTrunkVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_VlanTrunkVid_Type.__name__ = "Integer32"
_VlanTrunkVid_Object = MibTableColumn
vlanTrunkVid = _VlanTrunkVid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 6, 1, 5),
    _VlanTrunkVid_Type()
)
vlanTrunkVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTrunkVid.setStatus("current")
_OnuPortVlanAgg_ObjectIdentity = ObjectIdentity
onuPortVlanAgg = _OnuPortVlanAgg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7)
)


class _OnuVlanAggPonNo_Type(Integer32):
    """Custom type onuVlanAggPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OnuVlanAggPonNo_Type.__name__ = "Integer32"
_OnuVlanAggPonNo_Object = MibScalar
onuVlanAggPonNo = _OnuVlanAggPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 1),
    _OnuVlanAggPonNo_Type()
)
onuVlanAggPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVlanAggPonNo.setStatus("current")


class _OnuVlanAggOnuNo_Type(Integer32):
    """Custom type onuVlanAggOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuVlanAggOnuNo_Type.__name__ = "Integer32"
_OnuVlanAggOnuNo_Object = MibScalar
onuVlanAggOnuNo = _OnuVlanAggOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 2),
    _OnuVlanAggOnuNo_Type()
)
onuVlanAggOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVlanAggOnuNo.setStatus("current")


class _OnuVlanAggPortNo_Type(Integer32):
    """Custom type onuVlanAggPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OnuVlanAggPortNo_Type.__name__ = "Integer32"
_OnuVlanAggPortNo_Object = MibScalar
onuVlanAggPortNo = _OnuVlanAggPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 3),
    _OnuVlanAggPortNo_Type()
)
onuVlanAggPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVlanAggPortNo.setStatus("current")


class _OnuAggNewVlan_Type(Integer32):
    """Custom type onuAggNewVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_OnuAggNewVlan_Type.__name__ = "Integer32"
_OnuAggNewVlan_Object = MibScalar
onuAggNewVlan = _OnuAggNewVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 4),
    _OnuAggNewVlan_Type()
)
onuAggNewVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggNewVlan.setStatus("current")


class _OnuAggOldVlan1_Type(Integer32):
    """Custom type onuAggOldVlan1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan1_Type.__name__ = "Integer32"
_OnuAggOldVlan1_Object = MibScalar
onuAggOldVlan1 = _OnuAggOldVlan1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 5),
    _OnuAggOldVlan1_Type()
)
onuAggOldVlan1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan1.setStatus("current")


class _OnuAggOldVlan2_Type(Integer32):
    """Custom type onuAggOldVlan2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan2_Type.__name__ = "Integer32"
_OnuAggOldVlan2_Object = MibScalar
onuAggOldVlan2 = _OnuAggOldVlan2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 6),
    _OnuAggOldVlan2_Type()
)
onuAggOldVlan2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan2.setStatus("current")


class _OnuAggOldVlan3_Type(Integer32):
    """Custom type onuAggOldVlan3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan3_Type.__name__ = "Integer32"
_OnuAggOldVlan3_Object = MibScalar
onuAggOldVlan3 = _OnuAggOldVlan3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 7),
    _OnuAggOldVlan3_Type()
)
onuAggOldVlan3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan3.setStatus("current")


class _OnuAggOldVlan4_Type(Integer32):
    """Custom type onuAggOldVlan4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan4_Type.__name__ = "Integer32"
_OnuAggOldVlan4_Object = MibScalar
onuAggOldVlan4 = _OnuAggOldVlan4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 8),
    _OnuAggOldVlan4_Type()
)
onuAggOldVlan4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan4.setStatus("current")


class _OnuAggOldVlan5_Type(Integer32):
    """Custom type onuAggOldVlan5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan5_Type.__name__ = "Integer32"
_OnuAggOldVlan5_Object = MibScalar
onuAggOldVlan5 = _OnuAggOldVlan5_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 9),
    _OnuAggOldVlan5_Type()
)
onuAggOldVlan5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan5.setStatus("current")


class _OnuAggOldVlan6_Type(Integer32):
    """Custom type onuAggOldVlan6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan6_Type.__name__ = "Integer32"
_OnuAggOldVlan6_Object = MibScalar
onuAggOldVlan6 = _OnuAggOldVlan6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 10),
    _OnuAggOldVlan6_Type()
)
onuAggOldVlan6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan6.setStatus("current")


class _OnuAggOldVlan7_Type(Integer32):
    """Custom type onuAggOldVlan7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan7_Type.__name__ = "Integer32"
_OnuAggOldVlan7_Object = MibScalar
onuAggOldVlan7 = _OnuAggOldVlan7_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 11),
    _OnuAggOldVlan7_Type()
)
onuAggOldVlan7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan7.setStatus("current")


class _OnuAggOldVlan8_Type(Integer32):
    """Custom type onuAggOldVlan8 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuAggOldVlan8_Type.__name__ = "Integer32"
_OnuAggOldVlan8_Object = MibScalar
onuAggOldVlan8 = _OnuAggOldVlan8_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 12),
    _OnuAggOldVlan8_Type()
)
onuAggOldVlan8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggOldVlan8.setStatus("current")


class _OnuAggAction_Type(Integer32):
    """Custom type onuAggAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("add", 2),
          ("del", 3))
    )


_OnuAggAction_Type.__name__ = "Integer32"
_OnuAggAction_Object = MibScalar
onuAggAction = _OnuAggAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 10, 7, 13),
    _OnuAggAction_Type()
)
onuAggAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAggAction.setStatus("current")
_OnuPortClassifyCfg_ObjectIdentity = ObjectIdentity
onuPortClassifyCfg = _OnuPortClassifyCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11)
)


class _ClassPonNo_Type(Integer32):
    """Custom type classPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ClassPonNo_Type.__name__ = "Integer32"
_ClassPonNo_Object = MibScalar
classPonNo = _ClassPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 1),
    _ClassPonNo_Type()
)
classPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classPonNo.setStatus("current")


class _ClassOnuNo_Type(Integer32):
    """Custom type classOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ClassOnuNo_Type.__name__ = "Integer32"
_ClassOnuNo_Object = MibScalar
classOnuNo = _ClassOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 2),
    _ClassOnuNo_Type()
)
classOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classOnuNo.setStatus("current")


class _ClassPortNo_Type(Integer32):
    """Custom type classPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ClassPortNo_Type.__name__ = "Integer32"
_ClassPortNo_Object = MibScalar
classPortNo = _ClassPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 3),
    _ClassPortNo_Type()
)
classPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classPortNo.setStatus("current")


class _ClassPrecedence_Type(Integer32):
    """Custom type classPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_ClassPrecedence_Type.__name__ = "Integer32"
_ClassPrecedence_Object = MibScalar
classPrecedence = _ClassPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 4),
    _ClassPrecedence_Type()
)
classPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classPrecedence.setStatus("current")


class _ClassPri_Type(Integer32):
    """Custom type classPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ClassPri_Type.__name__ = "Integer32"
_ClassPri_Object = MibScalar
classPri = _ClassPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 5),
    _ClassPri_Type()
)
classPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classPri.setStatus("current")


class _DstMacEqualSel_Type(Integer32):
    """Custom type dstMacEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_DstMacEqualSel_Type.__name__ = "Integer32"
_DstMacEqualSel_Object = MibScalar
dstMacEqualSel = _DstMacEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 6),
    _DstMacEqualSel_Type()
)
dstMacEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dstMacEqualSel.setStatus("current")
_DstMacValue_Type = OctetString
_DstMacValue_Object = MibScalar
dstMacValue = _DstMacValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 7),
    _DstMacValue_Type()
)
dstMacValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dstMacValue.setStatus("current")


class _SrcMacEqualSel_Type(Integer32):
    """Custom type srcMacEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_SrcMacEqualSel_Type.__name__ = "Integer32"
_SrcMacEqualSel_Object = MibScalar
srcMacEqualSel = _SrcMacEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 8),
    _SrcMacEqualSel_Type()
)
srcMacEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcMacEqualSel.setStatus("current")
_SrcMacValue_Type = OctetString
_SrcMacValue_Object = MibScalar
srcMacValue = _SrcMacValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 9),
    _SrcMacValue_Type()
)
srcMacValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcMacValue.setStatus("current")


class _VlanEqualSel_Type(Integer32):
    """Custom type vlanEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_VlanEqualSel_Type.__name__ = "Integer32"
_VlanEqualSel_Object = MibScalar
vlanEqualSel = _VlanEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 10),
    _VlanEqualSel_Type()
)
vlanEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanEqualSel.setStatus("current")


class _VlanValue_Type(Integer32):
    """Custom type vlanValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_VlanValue_Type.__name__ = "Integer32"
_VlanValue_Object = MibScalar
vlanValue = _VlanValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 11),
    _VlanValue_Type()
)
vlanValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanValue.setStatus("current")


class _CosEqualSel_Type(Integer32):
    """Custom type cosEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CosEqualSel_Type.__name__ = "Integer32"
_CosEqualSel_Object = MibScalar
cosEqualSel = _CosEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 12),
    _CosEqualSel_Type()
)
cosEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cosEqualSel.setStatus("current")


class _CosValue_Type(Integer32):
    """Custom type cosValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CosValue_Type.__name__ = "Integer32"
_CosValue_Object = MibScalar
cosValue = _CosValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 13),
    _CosValue_Type()
)
cosValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cosValue.setStatus("current")


class _EthTypeEqualSel_Type(Integer32):
    """Custom type ethTypeEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_EthTypeEqualSel_Type.__name__ = "Integer32"
_EthTypeEqualSel_Object = MibScalar
ethTypeEqualSel = _EthTypeEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 14),
    _EthTypeEqualSel_Type()
)
ethTypeEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethTypeEqualSel.setStatus("current")
_EthTypeValue_Type = OctetString
_EthTypeValue_Object = MibScalar
ethTypeValue = _EthTypeValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 15),
    _EthTypeValue_Type()
)
ethTypeValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethTypeValue.setStatus("current")


class _SrcIpEqualSel_Type(Integer32):
    """Custom type srcIpEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_SrcIpEqualSel_Type.__name__ = "Integer32"
_SrcIpEqualSel_Object = MibScalar
srcIpEqualSel = _SrcIpEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 16),
    _SrcIpEqualSel_Type()
)
srcIpEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcIpEqualSel.setStatus("current")
_SrcIpValue_Type = IpAddress
_SrcIpValue_Object = MibScalar
srcIpValue = _SrcIpValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 17),
    _SrcIpValue_Type()
)
srcIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcIpValue.setStatus("current")


class _DestIpEqualSel_Type(Integer32):
    """Custom type destIpEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_DestIpEqualSel_Type.__name__ = "Integer32"
_DestIpEqualSel_Object = MibScalar
destIpEqualSel = _DestIpEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 18),
    _DestIpEqualSel_Type()
)
destIpEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    destIpEqualSel.setStatus("current")
_DestIpValue_Type = IpAddress
_DestIpValue_Object = MibScalar
destIpValue = _DestIpValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 19),
    _DestIpValue_Type()
)
destIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    destIpValue.setStatus("current")


class _ProtocolEqualSel_Type(Integer32):
    """Custom type protocolEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_ProtocolEqualSel_Type.__name__ = "Integer32"
_ProtocolEqualSel_Object = MibScalar
protocolEqualSel = _ProtocolEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 20),
    _ProtocolEqualSel_Type()
)
protocolEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protocolEqualSel.setStatus("current")


class _ProtocolValue_Type(Integer32):
    """Custom type protocolValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ProtocolValue_Type.__name__ = "Integer32"
_ProtocolValue_Object = MibScalar
protocolValue = _ProtocolValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 21),
    _ProtocolValue_Type()
)
protocolValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protocolValue.setStatus("current")


class _TosDscpEuqalSel_Type(Integer32):
    """Custom type tosDscpEuqalSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_TosDscpEuqalSel_Type.__name__ = "Integer32"
_TosDscpEuqalSel_Object = MibScalar
tosDscpEuqalSel = _TosDscpEuqalSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 22),
    _TosDscpEuqalSel_Type()
)
tosDscpEuqalSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tosDscpEuqalSel.setStatus("current")


class _TosDscpValue_Type(Integer32):
    """Custom type tosDscpValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TosDscpValue_Type.__name__ = "Integer32"
_TosDscpValue_Object = MibScalar
tosDscpValue = _TosDscpValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 23),
    _TosDscpValue_Type()
)
tosDscpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tosDscpValue.setStatus("current")


class _SrcPortEqualSel_Type(Integer32):
    """Custom type srcPortEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_SrcPortEqualSel_Type.__name__ = "Integer32"
_SrcPortEqualSel_Object = MibScalar
srcPortEqualSel = _SrcPortEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 24),
    _SrcPortEqualSel_Type()
)
srcPortEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcPortEqualSel.setStatus("current")


class _SrcPortValue_Type(Integer32):
    """Custom type srcPortValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SrcPortValue_Type.__name__ = "Integer32"
_SrcPortValue_Object = MibScalar
srcPortValue = _SrcPortValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 25),
    _SrcPortValue_Type()
)
srcPortValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srcPortValue.setStatus("current")


class _DestPortEqualSel_Type(Integer32):
    """Custom type destPortEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_DestPortEqualSel_Type.__name__ = "Integer32"
_DestPortEqualSel_Object = MibScalar
destPortEqualSel = _DestPortEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 26),
    _DestPortEqualSel_Type()
)
destPortEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    destPortEqualSel.setStatus("current")


class _DestPortValue_Type(Integer32):
    """Custom type destPortValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_DestPortValue_Type.__name__ = "Integer32"
_DestPortValue_Object = MibScalar
destPortValue = _DestPortValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 27),
    _DestPortValue_Type()
)
destPortValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    destPortValue.setStatus("current")


class _ClassAction_Type(Integer32):
    """Custom type classAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_ClassAction_Type.__name__ = "Integer32"
_ClassAction_Object = MibScalar
classAction = _ClassAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 28),
    _ClassAction_Type()
)
classAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classAction.setStatus("current")


class _ClassQueue_Type(Integer32):
    """Custom type classQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ClassQueue_Type.__name__ = "Integer32"
_ClassQueue_Object = MibScalar
classQueue = _ClassQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 11, 29),
    _ClassQueue_Type()
)
classQueue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classQueue.setStatus("current")
_OnuPortClassifyDel_ObjectIdentity = ObjectIdentity
onuPortClassifyDel = _OnuPortClassifyDel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 12)
)


class _ClassDelPonNo_Type(Integer32):
    """Custom type classDelPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ClassDelPonNo_Type.__name__ = "Integer32"
_ClassDelPonNo_Object = MibScalar
classDelPonNo = _ClassDelPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 12, 1),
    _ClassDelPonNo_Type()
)
classDelPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classDelPonNo.setStatus("current")


class _ClassDelOnuNo_Type(Integer32):
    """Custom type classDelOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ClassDelOnuNo_Type.__name__ = "Integer32"
_ClassDelOnuNo_Object = MibScalar
classDelOnuNo = _ClassDelOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 12, 2),
    _ClassDelOnuNo_Type()
)
classDelOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classDelOnuNo.setStatus("current")


class _ClassDelPortNo_Type(Integer32):
    """Custom type classDelPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ClassDelPortNo_Type.__name__ = "Integer32"
_ClassDelPortNo_Object = MibScalar
classDelPortNo = _ClassDelPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 12, 3),
    _ClassDelPortNo_Type()
)
classDelPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classDelPortNo.setStatus("current")


class _ClassDelPrecedence_Type(Integer32):
    """Custom type classDelPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_ClassDelPrecedence_Type.__name__ = "Integer32"
_ClassDelPrecedence_Object = MibScalar
classDelPrecedence = _ClassDelPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 12, 4),
    _ClassDelPrecedence_Type()
)
classDelPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classDelPrecedence.setStatus("current")


class _ClassDelAction_Type(Integer32):
    """Custom type classDelAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 1),
          ("cleanAll", 2))
    )


_ClassDelAction_Type.__name__ = "Integer32"
_ClassDelAction_Object = MibScalar
classDelAction = _ClassDelAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 12, 5),
    _ClassDelAction_Type()
)
classDelAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    classDelAction.setStatus("current")
_OnuPortClassifyTable_Object = MibTable
onuPortClassifyTable = _OnuPortClassifyTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13)
)
if mibBuilder.loadTexts:
    onuPortClassifyTable.setStatus("current")
_OnuPortClassifyEntry_Object = MibTableRow
onuPortClassifyEntry = _OnuPortClassifyEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1)
)
onuPortClassifyEntry.setIndexNames(
    (0, "V1600D", "classifyItem"),
)
if mibBuilder.loadTexts:
    onuPortClassifyEntry.setStatus("current")
_ClassifyItem_Type = Integer32
_ClassifyItem_Object = MibTableColumn
classifyItem = _ClassifyItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 1),
    _ClassifyItem_Type()
)
classifyItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyItem.setStatus("current")


class _ClassifyPonNo_Type(Integer32):
    """Custom type classifyPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ClassifyPonNo_Type.__name__ = "Integer32"
_ClassifyPonNo_Object = MibTableColumn
classifyPonNo = _ClassifyPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 2),
    _ClassifyPonNo_Type()
)
classifyPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyPonNo.setStatus("current")


class _ClassifyOnuNo_Type(Integer32):
    """Custom type classifyOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ClassifyOnuNo_Type.__name__ = "Integer32"
_ClassifyOnuNo_Object = MibTableColumn
classifyOnuNo = _ClassifyOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 3),
    _ClassifyOnuNo_Type()
)
classifyOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyOnuNo.setStatus("current")


class _ClassifyPortNo_Type(Integer32):
    """Custom type classifyPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ClassifyPortNo_Type.__name__ = "Integer32"
_ClassifyPortNo_Object = MibTableColumn
classifyPortNo = _ClassifyPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 4),
    _ClassifyPortNo_Type()
)
classifyPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyPortNo.setStatus("current")


class _ClassifyPrecedence_Type(Integer32):
    """Custom type classifyPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_ClassifyPrecedence_Type.__name__ = "Integer32"
_ClassifyPrecedence_Object = MibTableColumn
classifyPrecedence = _ClassifyPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 5),
    _ClassifyPrecedence_Type()
)
classifyPrecedence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyPrecedence.setStatus("current")


class _ClassifyPri_Type(Integer32):
    """Custom type classifyPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ClassifyPri_Type.__name__ = "Integer32"
_ClassifyPri_Object = MibTableColumn
classifyPri = _ClassifyPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 6),
    _ClassifyPri_Type()
)
classifyPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyPri.setStatus("current")


class _DstMacEqual_Type(Integer32):
    """Custom type dstMacEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_DstMacEqual_Type.__name__ = "Integer32"
_DstMacEqual_Object = MibTableColumn
dstMacEqual = _DstMacEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 7),
    _DstMacEqual_Type()
)
dstMacEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dstMacEqual.setStatus("current")
_DstMacVal_Type = OctetString
_DstMacVal_Object = MibTableColumn
dstMacVal = _DstMacVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 8),
    _DstMacVal_Type()
)
dstMacVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dstMacVal.setStatus("current")


class _SrcMacEqual_Type(Integer32):
    """Custom type srcMacEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_SrcMacEqual_Type.__name__ = "Integer32"
_SrcMacEqual_Object = MibTableColumn
srcMacEqual = _SrcMacEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 9),
    _SrcMacEqual_Type()
)
srcMacEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srcMacEqual.setStatus("current")
_SrcMacVal_Type = OctetString
_SrcMacVal_Object = MibTableColumn
srcMacVal = _SrcMacVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 10),
    _SrcMacVal_Type()
)
srcMacVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srcMacVal.setStatus("current")


class _VlanEqual_Type(Integer32):
    """Custom type vlanEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_VlanEqual_Type.__name__ = "Integer32"
_VlanEqual_Object = MibTableColumn
vlanEqual = _VlanEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 11),
    _VlanEqual_Type()
)
vlanEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanEqual.setStatus("current")


class _VlanVal_Type(Integer32):
    """Custom type vlanVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_VlanVal_Type.__name__ = "Integer32"
_VlanVal_Object = MibTableColumn
vlanVal = _VlanVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 12),
    _VlanVal_Type()
)
vlanVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanVal.setStatus("current")


class _CosEqual_Type(Integer32):
    """Custom type cosEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CosEqual_Type.__name__ = "Integer32"
_CosEqual_Object = MibTableColumn
cosEqual = _CosEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 13),
    _CosEqual_Type()
)
cosEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cosEqual.setStatus("current")


class _CosVal_Type(Integer32):
    """Custom type cosVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_CosVal_Type.__name__ = "Integer32"
_CosVal_Object = MibTableColumn
cosVal = _CosVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 14),
    _CosVal_Type()
)
cosVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cosVal.setStatus("current")


class _EthTypeEqual_Type(Integer32):
    """Custom type ethTypeEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_EthTypeEqual_Type.__name__ = "Integer32"
_EthTypeEqual_Object = MibTableColumn
ethTypeEqual = _EthTypeEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 15),
    _EthTypeEqual_Type()
)
ethTypeEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethTypeEqual.setStatus("current")
_EthTypeVal_Type = OctetString
_EthTypeVal_Object = MibTableColumn
ethTypeVal = _EthTypeVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 16),
    _EthTypeVal_Type()
)
ethTypeVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethTypeVal.setStatus("current")


class _SrcIpEqual_Type(Integer32):
    """Custom type srcIpEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_SrcIpEqual_Type.__name__ = "Integer32"
_SrcIpEqual_Object = MibTableColumn
srcIpEqual = _SrcIpEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 17),
    _SrcIpEqual_Type()
)
srcIpEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srcIpEqual.setStatus("current")
_SrcIpVal_Type = IpAddress
_SrcIpVal_Object = MibTableColumn
srcIpVal = _SrcIpVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 18),
    _SrcIpVal_Type()
)
srcIpVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srcIpVal.setStatus("current")


class _DestIpEqual_Type(Integer32):
    """Custom type destIpEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_DestIpEqual_Type.__name__ = "Integer32"
_DestIpEqual_Object = MibTableColumn
destIpEqual = _DestIpEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 19),
    _DestIpEqual_Type()
)
destIpEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    destIpEqual.setStatus("current")
_DestIpVal_Type = IpAddress
_DestIpVal_Object = MibTableColumn
destIpVal = _DestIpVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 20),
    _DestIpVal_Type()
)
destIpVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    destIpVal.setStatus("current")


class _ProtocolEqual_Type(Integer32):
    """Custom type protocolEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_ProtocolEqual_Type.__name__ = "Integer32"
_ProtocolEqual_Object = MibTableColumn
protocolEqual = _ProtocolEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 21),
    _ProtocolEqual_Type()
)
protocolEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protocolEqual.setStatus("current")


class _ProtocolVal_Type(Integer32):
    """Custom type protocolVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_ProtocolVal_Type.__name__ = "Integer32"
_ProtocolVal_Object = MibTableColumn
protocolVal = _ProtocolVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 22),
    _ProtocolVal_Type()
)
protocolVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protocolVal.setStatus("current")


class _TosDscpEuqal_Type(Integer32):
    """Custom type tosDscpEuqal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_TosDscpEuqal_Type.__name__ = "Integer32"
_TosDscpEuqal_Object = MibTableColumn
tosDscpEuqal = _TosDscpEuqal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 23),
    _TosDscpEuqal_Type()
)
tosDscpEuqal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tosDscpEuqal.setStatus("current")


class _TosDscpVal_Type(Integer32):
    """Custom type tosDscpVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_TosDscpVal_Type.__name__ = "Integer32"
_TosDscpVal_Object = MibTableColumn
tosDscpVal = _TosDscpVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 24),
    _TosDscpVal_Type()
)
tosDscpVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tosDscpVal.setStatus("current")


class _SrcPortEqual_Type(Integer32):
    """Custom type srcPortEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_SrcPortEqual_Type.__name__ = "Integer32"
_SrcPortEqual_Object = MibTableColumn
srcPortEqual = _SrcPortEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 25),
    _SrcPortEqual_Type()
)
srcPortEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srcPortEqual.setStatus("current")


class _SrcPortVal_Type(Integer32):
    """Custom type srcPortVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_SrcPortVal_Type.__name__ = "Integer32"
_SrcPortVal_Object = MibTableColumn
srcPortVal = _SrcPortVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 26),
    _SrcPortVal_Type()
)
srcPortVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srcPortVal.setStatus("current")


class _DestPortEqual_Type(Integer32):
    """Custom type destPortEqual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_DestPortEqual_Type.__name__ = "Integer32"
_DestPortEqual_Object = MibTableColumn
destPortEqual = _DestPortEqual_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 27),
    _DestPortEqual_Type()
)
destPortEqual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    destPortEqual.setStatus("current")


class _DestPortVal_Type(Integer32):
    """Custom type destPortVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_DestPortVal_Type.__name__ = "Integer32"
_DestPortVal_Object = MibTableColumn
destPortVal = _DestPortVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 28),
    _DestPortVal_Type()
)
destPortVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    destPortVal.setStatus("current")


class _ClassifyQueue_Type(Integer32):
    """Custom type classifyQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ClassifyQueue_Type.__name__ = "Integer32"
_ClassifyQueue_Object = MibTableColumn
classifyQueue = _ClassifyQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 13, 1, 29),
    _ClassifyQueue_Type()
)
classifyQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    classifyQueue.setStatus("current")
_OnuPortIgmpCfg_ObjectIdentity = ObjectIdentity
onuPortIgmpCfg = _OnuPortIgmpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14)
)
_McVlanCfg_ObjectIdentity = ObjectIdentity
mcVlanCfg = _McVlanCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 1)
)


class _McVlanPonNo_Type(Integer32):
    """Custom type mcVlanPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_McVlanPonNo_Type.__name__ = "Integer32"
_McVlanPonNo_Object = MibScalar
mcVlanPonNo = _McVlanPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 1, 1),
    _McVlanPonNo_Type()
)
mcVlanPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanPonNo.setStatus("current")


class _McVlanOnuNo_Type(Integer32):
    """Custom type mcVlanOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_McVlanOnuNo_Type.__name__ = "Integer32"
_McVlanOnuNo_Object = MibScalar
mcVlanOnuNo = _McVlanOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 1, 2),
    _McVlanOnuNo_Type()
)
mcVlanOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanOnuNo.setStatus("current")


class _McVlanPortNo_Type(Integer32):
    """Custom type mcVlanPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_McVlanPortNo_Type.__name__ = "Integer32"
_McVlanPortNo_Object = MibScalar
mcVlanPortNo = _McVlanPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 1, 3),
    _McVlanPortNo_Type()
)
mcVlanPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanPortNo.setStatus("current")


class _McVlanVal_Type(Integer32):
    """Custom type mcVlanVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_McVlanVal_Type.__name__ = "Integer32"
_McVlanVal_Object = MibScalar
mcVlanVal = _McVlanVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 1, 4),
    _McVlanVal_Type()
)
mcVlanVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanVal.setStatus("current")


class _McVlanAction_Type(Integer32):
    """Custom type mcVlanAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("clear", 3))
    )


_McVlanAction_Type.__name__ = "Integer32"
_McVlanAction_Object = MibScalar
mcVlanAction = _McVlanAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 1, 5),
    _McVlanAction_Type()
)
mcVlanAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanAction.setStatus("current")
_McVlanTable_Object = MibTable
mcVlanTable = _McVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2)
)
if mibBuilder.loadTexts:
    mcVlanTable.setStatus("current")
_McVlanEntry_Object = MibTableRow
mcVlanEntry = _McVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2, 1)
)
mcVlanEntry.setIndexNames(
    (0, "V1600D", "mVlanItem"),
)
if mibBuilder.loadTexts:
    mcVlanEntry.setStatus("current")
_MVlanItem_Type = Integer32
_MVlanItem_Object = MibTableColumn
mVlanItem = _MVlanItem_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2, 1, 1),
    _MVlanItem_Type()
)
mVlanItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanItem.setStatus("current")


class _MVlanPonNo_Type(Integer32):
    """Custom type mVlanPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MVlanPonNo_Type.__name__ = "Integer32"
_MVlanPonNo_Object = MibTableColumn
mVlanPonNo = _MVlanPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2, 1, 2),
    _MVlanPonNo_Type()
)
mVlanPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanPonNo.setStatus("current")


class _MVlanOnuNo_Type(Integer32):
    """Custom type mVlanOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MVlanOnuNo_Type.__name__ = "Integer32"
_MVlanOnuNo_Object = MibTableColumn
mVlanOnuNo = _MVlanOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2, 1, 3),
    _MVlanOnuNo_Type()
)
mVlanOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanOnuNo.setStatus("current")


class _MVlanPortNo_Type(Integer32):
    """Custom type mVlanPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MVlanPortNo_Type.__name__ = "Integer32"
_MVlanPortNo_Object = MibTableColumn
mVlanPortNo = _MVlanPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2, 1, 4),
    _MVlanPortNo_Type()
)
mVlanPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanPortNo.setStatus("current")


class _MVlanVal_Type(Integer32):
    """Custom type mVlanVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_MVlanVal_Type.__name__ = "Integer32"
_MVlanVal_Object = MibTableColumn
mVlanVal = _MVlanVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 2, 1, 5),
    _MVlanVal_Type()
)
mVlanVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanVal.setStatus("current")
_McMaxGroupCfg_ObjectIdentity = ObjectIdentity
mcMaxGroupCfg = _McMaxGroupCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 3)
)


class _MaxgrpPonNo_Type(Integer32):
    """Custom type maxgrpPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MaxgrpPonNo_Type.__name__ = "Integer32"
_MaxgrpPonNo_Object = MibScalar
maxgrpPonNo = _MaxgrpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 3, 1),
    _MaxgrpPonNo_Type()
)
maxgrpPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxgrpPonNo.setStatus("current")


class _MaxgrpOnuNo_Type(Integer32):
    """Custom type maxgrpOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MaxgrpOnuNo_Type.__name__ = "Integer32"
_MaxgrpOnuNo_Object = MibScalar
maxgrpOnuNo = _MaxgrpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 3, 2),
    _MaxgrpOnuNo_Type()
)
maxgrpOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxgrpOnuNo.setStatus("current")


class _MaxgrpPortNo_Type(Integer32):
    """Custom type maxgrpPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_MaxgrpPortNo_Type.__name__ = "Integer32"
_MaxgrpPortNo_Object = MibScalar
maxgrpPortNo = _MaxgrpPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 3, 3),
    _MaxgrpPortNo_Type()
)
maxgrpPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxgrpPortNo.setStatus("current")


class _MaxgrpVal_Type(Integer32):
    """Custom type maxgrpVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MaxgrpVal_Type.__name__ = "Integer32"
_MaxgrpVal_Object = MibScalar
maxgrpVal = _MaxgrpVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 3, 4),
    _MaxgrpVal_Type()
)
maxgrpVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxgrpVal.setStatus("current")
_McTagstrip_ObjectIdentity = ObjectIdentity
mcTagstrip = _McTagstrip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4)
)


class _TagstripPonNo_Type(Integer32):
    """Custom type tagstripPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_TagstripPonNo_Type.__name__ = "Integer32"
_TagstripPonNo_Object = MibScalar
tagstripPonNo = _TagstripPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 1),
    _TagstripPonNo_Type()
)
tagstripPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripPonNo.setStatus("current")


class _TagstripOnuNo_Type(Integer32):
    """Custom type tagstripOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_TagstripOnuNo_Type.__name__ = "Integer32"
_TagstripOnuNo_Object = MibScalar
tagstripOnuNo = _TagstripOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 2),
    _TagstripOnuNo_Type()
)
tagstripOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripOnuNo.setStatus("current")


class _TagstripPortNo_Type(Integer32):
    """Custom type tagstripPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TagstripPortNo_Type.__name__ = "Integer32"
_TagstripPortNo_Object = MibScalar
tagstripPortNo = _TagstripPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 3),
    _TagstripPortNo_Type()
)
tagstripPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripPortNo.setStatus("current")


class _TagstripGroupVlan0_Type(Integer32):
    """Custom type tagstripGroupVlan0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan0_Type.__name__ = "Integer32"
_TagstripGroupVlan0_Object = MibScalar
tagstripGroupVlan0 = _TagstripGroupVlan0_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 4),
    _TagstripGroupVlan0_Type()
)
tagstripGroupVlan0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan0.setStatus("current")


class _TagstripUserVlan0_Type(Integer32):
    """Custom type tagstripUserVlan0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan0_Type.__name__ = "Integer32"
_TagstripUserVlan0_Object = MibScalar
tagstripUserVlan0 = _TagstripUserVlan0_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 5),
    _TagstripUserVlan0_Type()
)
tagstripUserVlan0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan0.setStatus("current")


class _TagstripGroupVlan1_Type(Integer32):
    """Custom type tagstripGroupVlan1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan1_Type.__name__ = "Integer32"
_TagstripGroupVlan1_Object = MibScalar
tagstripGroupVlan1 = _TagstripGroupVlan1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 6),
    _TagstripGroupVlan1_Type()
)
tagstripGroupVlan1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan1.setStatus("current")


class _TagstripUserVlan1_Type(Integer32):
    """Custom type tagstripUserVlan1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan1_Type.__name__ = "Integer32"
_TagstripUserVlan1_Object = MibScalar
tagstripUserVlan1 = _TagstripUserVlan1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 7),
    _TagstripUserVlan1_Type()
)
tagstripUserVlan1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan1.setStatus("current")


class _TagstripGroupVlan2_Type(Integer32):
    """Custom type tagstripGroupVlan2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan2_Type.__name__ = "Integer32"
_TagstripGroupVlan2_Object = MibScalar
tagstripGroupVlan2 = _TagstripGroupVlan2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 8),
    _TagstripGroupVlan2_Type()
)
tagstripGroupVlan2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan2.setStatus("current")


class _TagstripUserVlan2_Type(Integer32):
    """Custom type tagstripUserVlan2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan2_Type.__name__ = "Integer32"
_TagstripUserVlan2_Object = MibScalar
tagstripUserVlan2 = _TagstripUserVlan2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 9),
    _TagstripUserVlan2_Type()
)
tagstripUserVlan2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan2.setStatus("current")


class _TagstripGroupVlan3_Type(Integer32):
    """Custom type tagstripGroupVlan3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan3_Type.__name__ = "Integer32"
_TagstripGroupVlan3_Object = MibScalar
tagstripGroupVlan3 = _TagstripGroupVlan3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 10),
    _TagstripGroupVlan3_Type()
)
tagstripGroupVlan3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan3.setStatus("current")


class _TagstripUserVlan3_Type(Integer32):
    """Custom type tagstripUserVlan3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan3_Type.__name__ = "Integer32"
_TagstripUserVlan3_Object = MibScalar
tagstripUserVlan3 = _TagstripUserVlan3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 11),
    _TagstripUserVlan3_Type()
)
tagstripUserVlan3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan3.setStatus("current")


class _TagstripGroupVlan4_Type(Integer32):
    """Custom type tagstripGroupVlan4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan4_Type.__name__ = "Integer32"
_TagstripGroupVlan4_Object = MibScalar
tagstripGroupVlan4 = _TagstripGroupVlan4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 12),
    _TagstripGroupVlan4_Type()
)
tagstripGroupVlan4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan4.setStatus("current")


class _TagstripUserVlan4_Type(Integer32):
    """Custom type tagstripUserVlan4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan4_Type.__name__ = "Integer32"
_TagstripUserVlan4_Object = MibScalar
tagstripUserVlan4 = _TagstripUserVlan4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 13),
    _TagstripUserVlan4_Type()
)
tagstripUserVlan4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan4.setStatus("current")


class _TagstripGroupVlan5_Type(Integer32):
    """Custom type tagstripGroupVlan5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan5_Type.__name__ = "Integer32"
_TagstripGroupVlan5_Object = MibScalar
tagstripGroupVlan5 = _TagstripGroupVlan5_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 14),
    _TagstripGroupVlan5_Type()
)
tagstripGroupVlan5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan5.setStatus("current")


class _TagstripUserVlan5_Type(Integer32):
    """Custom type tagstripUserVlan5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan5_Type.__name__ = "Integer32"
_TagstripUserVlan5_Object = MibScalar
tagstripUserVlan5 = _TagstripUserVlan5_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 15),
    _TagstripUserVlan5_Type()
)
tagstripUserVlan5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan5.setStatus("current")


class _TagstripGroupVlan6_Type(Integer32):
    """Custom type tagstripGroupVlan6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan6_Type.__name__ = "Integer32"
_TagstripGroupVlan6_Object = MibScalar
tagstripGroupVlan6 = _TagstripGroupVlan6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 16),
    _TagstripGroupVlan6_Type()
)
tagstripGroupVlan6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan6.setStatus("current")


class _TagstripUserVlan6_Type(Integer32):
    """Custom type tagstripUserVlan6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan6_Type.__name__ = "Integer32"
_TagstripUserVlan6_Object = MibScalar
tagstripUserVlan6 = _TagstripUserVlan6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 17),
    _TagstripUserVlan6_Type()
)
tagstripUserVlan6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan6.setStatus("current")


class _TagstripGroupVlan7_Type(Integer32):
    """Custom type tagstripGroupVlan7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripGroupVlan7_Type.__name__ = "Integer32"
_TagstripGroupVlan7_Object = MibScalar
tagstripGroupVlan7 = _TagstripGroupVlan7_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 18),
    _TagstripGroupVlan7_Type()
)
tagstripGroupVlan7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripGroupVlan7.setStatus("current")


class _TagstripUserVlan7_Type(Integer32):
    """Custom type tagstripUserVlan7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_TagstripUserVlan7_Type.__name__ = "Integer32"
_TagstripUserVlan7_Object = MibScalar
tagstripUserVlan7 = _TagstripUserVlan7_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 19),
    _TagstripUserVlan7_Type()
)
tagstripUserVlan7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripUserVlan7.setStatus("current")


class _TagstripMode_Type(Integer32):
    """Custom type tagstripMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("tagStrip", 2))
    )


_TagstripMode_Type.__name__ = "Integer32"
_TagstripMode_Object = MibScalar
tagstripMode = _TagstripMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 4, 20),
    _TagstripMode_Type()
)
tagstripMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripMode.setStatus("current")
_McVlanTagStripTable_Object = MibTable
mcVlanTagStripTable = _McVlanTagStripTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5)
)
if mibBuilder.loadTexts:
    mcVlanTagStripTable.setStatus("current")
_McVlanTagStripEntry_Object = MibTableRow
mcVlanTagStripEntry = _McVlanTagStripEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5, 1)
)
mcVlanTagStripEntry.setIndexNames(
    (0, "V1600D", "mVlanTagsPonNo"),
    (0, "V1600D", "mVlanTagsOnuNo"),
    (0, "V1600D", "mVlanTagsPortNo"),
)
if mibBuilder.loadTexts:
    mcVlanTagStripEntry.setStatus("current")


class _MVlanTagsPonNo_Type(Integer32):
    """Custom type mVlanTagsPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MVlanTagsPonNo_Type.__name__ = "Integer32"
_MVlanTagsPonNo_Object = MibTableColumn
mVlanTagsPonNo = _MVlanTagsPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5, 1, 1),
    _MVlanTagsPonNo_Type()
)
mVlanTagsPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanTagsPonNo.setStatus("current")


class _MVlanTagsOnuNo_Type(Integer32):
    """Custom type mVlanTagsOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MVlanTagsOnuNo_Type.__name__ = "Integer32"
_MVlanTagsOnuNo_Object = MibTableColumn
mVlanTagsOnuNo = _MVlanTagsOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5, 1, 2),
    _MVlanTagsOnuNo_Type()
)
mVlanTagsOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanTagsOnuNo.setStatus("current")


class _MVlanTagsPortNo_Type(Integer32):
    """Custom type mVlanTagsPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_MVlanTagsPortNo_Type.__name__ = "Integer32"
_MVlanTagsPortNo_Object = MibTableColumn
mVlanTagsPortNo = _MVlanTagsPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5, 1, 3),
    _MVlanTagsPortNo_Type()
)
mVlanTagsPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanTagsPortNo.setStatus("current")


class _MVlanTagsMode_Type(Integer32):
    """Custom type mVlanTagsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no_strip", 0),
          ("strip", 1),
          ("vlanTrans", 2))
    )


_MVlanTagsMode_Type.__name__ = "Integer32"
_MVlanTagsMode_Object = MibTableColumn
mVlanTagsMode = _MVlanTagsMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5, 1, 4),
    _MVlanTagsMode_Type()
)
mVlanTagsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanTagsMode.setStatus("current")
_MVlanTagsVlanTrans_Type = OctetString
_MVlanTagsVlanTrans_Object = MibTableColumn
mVlanTagsVlanTrans = _MVlanTagsVlanTrans_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 5, 1, 5),
    _MVlanTagsVlanTrans_Type()
)
mVlanTagsVlanTrans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mVlanTagsVlanTrans.setStatus("current")
_McMaxGroupTable_Object = MibTable
mcMaxGroupTable = _McMaxGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 6)
)
if mibBuilder.loadTexts:
    mcMaxGroupTable.setStatus("current")
_McMaxGroupEntry_Object = MibTableRow
mcMaxGroupEntry = _McMaxGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 6, 1)
)
mcMaxGroupEntry.setIndexNames(
    (0, "V1600D", "mcMaxGrpPonNo"),
    (0, "V1600D", "mcMaxGrpOnuNo"),
    (0, "V1600D", "mcMaxGrpPortNo"),
)
if mibBuilder.loadTexts:
    mcMaxGroupEntry.setStatus("current")
_McMaxGrpPonNo_Type = Integer32
_McMaxGrpPonNo_Object = MibTableColumn
mcMaxGrpPonNo = _McMaxGrpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 6, 1, 1),
    _McMaxGrpPonNo_Type()
)
mcMaxGrpPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcMaxGrpPonNo.setStatus("current")
_McMaxGrpOnuNo_Type = Integer32
_McMaxGrpOnuNo_Object = MibTableColumn
mcMaxGrpOnuNo = _McMaxGrpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 6, 1, 2),
    _McMaxGrpOnuNo_Type()
)
mcMaxGrpOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcMaxGrpOnuNo.setStatus("current")
_McMaxGrpPortNo_Type = Integer32
_McMaxGrpPortNo_Object = MibTableColumn
mcMaxGrpPortNo = _McMaxGrpPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 6, 1, 3),
    _McMaxGrpPortNo_Type()
)
mcMaxGrpPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcMaxGrpPortNo.setStatus("current")
_McMaxGrpVal_Type = Integer32
_McMaxGrpVal_Object = MibTableColumn
mcMaxGrpVal = _McMaxGrpVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 14, 6, 1, 4),
    _McMaxGrpVal_Type()
)
mcMaxGrpVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcMaxGrpVal.setStatus("current")
_OnuPortStatOnOff_ObjectIdentity = ObjectIdentity
onuPortStatOnOff = _OnuPortStatOnOff_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15)
)


class _StatOnOffPonNo_Type(Integer32):
    """Custom type statOnOffPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_StatOnOffPonNo_Type.__name__ = "Integer32"
_StatOnOffPonNo_Object = MibScalar
statOnOffPonNo = _StatOnOffPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15, 1),
    _StatOnOffPonNo_Type()
)
statOnOffPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statOnOffPonNo.setStatus("current")


class _StatOnOffOnuNo_Type(Integer32):
    """Custom type statOnOffOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StatOnOffOnuNo_Type.__name__ = "Integer32"
_StatOnOffOnuNo_Object = MibScalar
statOnOffOnuNo = _StatOnOffOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15, 2),
    _StatOnOffOnuNo_Type()
)
statOnOffOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statOnOffOnuNo.setStatus("current")


class _StatOnOffEthNo_Type(Integer32):
    """Custom type statOnOffEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_StatOnOffEthNo_Type.__name__ = "Integer32"
_StatOnOffEthNo_Object = MibScalar
statOnOffEthNo = _StatOnOffEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15, 3),
    _StatOnOffEthNo_Type()
)
statOnOffEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statOnOffEthNo.setStatus("current")


class _MonitorStatus_Type(Integer32):
    """Custom type monitorStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MonitorStatus_Type.__name__ = "Integer32"
_MonitorStatus_Object = MibScalar
monitorStatus = _MonitorStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15, 4),
    _MonitorStatus_Type()
)
monitorStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    monitorStatus.setStatus("current")


class _StatisticCycle_Type(Integer32):
    """Custom type statisticCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StatisticCycle_Type.__name__ = "Integer32"
_StatisticCycle_Object = MibScalar
statisticCycle = _StatisticCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15, 5),
    _StatisticCycle_Type()
)
statisticCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statisticCycle.setStatus("current")


class _StatOnOffAction_Type(Integer32):
    """Custom type statOnOffAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_StatOnOffAction_Type.__name__ = "Integer32"
_StatOnOffAction_Object = MibScalar
statOnOffAction = _StatOnOffAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 15, 6),
    _StatOnOffAction_Type()
)
statOnOffAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statOnOffAction.setStatus("current")
_OnuPortStat_ObjectIdentity = ObjectIdentity
onuPortStat = _OnuPortStat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16)
)
_OnuPortStatClr_ObjectIdentity = ObjectIdentity
onuPortStatClr = _OnuPortStatClr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 1)
)


class _ClrStatPonNo_Type(Integer32):
    """Custom type clrStatPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ClrStatPonNo_Type.__name__ = "Integer32"
_ClrStatPonNo_Object = MibScalar
clrStatPonNo = _ClrStatPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 1, 1),
    _ClrStatPonNo_Type()
)
clrStatPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clrStatPonNo.setStatus("current")


class _ClrStatOnuNo_Type(Integer32):
    """Custom type clrStatOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ClrStatOnuNo_Type.__name__ = "Integer32"
_ClrStatOnuNo_Object = MibScalar
clrStatOnuNo = _ClrStatOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 1, 2),
    _ClrStatOnuNo_Type()
)
clrStatOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clrStatOnuNo.setStatus("current")


class _ClrStatPortNo_Type(Integer32):
    """Custom type clrStatPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ClrStatPortNo_Type.__name__ = "Integer32"
_ClrStatPortNo_Object = MibScalar
clrStatPortNo = _ClrStatPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 1, 3),
    _ClrStatPortNo_Type()
)
clrStatPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clrStatPortNo.setStatus("current")


class _ClrStatAction_Type(Integer32):
    """Custom type clrStatAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )


_ClrStatAction_Type.__name__ = "Integer32"
_ClrStatAction_Object = MibScalar
clrStatAction = _ClrStatAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 1, 4),
    _ClrStatAction_Type()
)
clrStatAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clrStatAction.setStatus("current")
_OnuPortStatQueryMode_ObjectIdentity = ObjectIdentity
onuPortStatQueryMode = _OnuPortStatQueryMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 2)
)


class _QueryPonNo_Type(Integer32):
    """Custom type queryPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_QueryPonNo_Type.__name__ = "Integer32"
_QueryPonNo_Object = MibScalar
queryPonNo = _QueryPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 2, 1),
    _QueryPonNo_Type()
)
queryPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryPonNo.setStatus("current")


class _QueryOnuNo_Type(Integer32):
    """Custom type queryOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QueryOnuNo_Type.__name__ = "Integer32"
_QueryOnuNo_Object = MibScalar
queryOnuNo = _QueryOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 2, 2),
    _QueryOnuNo_Type()
)
queryOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryOnuNo.setStatus("current")


class _QueryPortNo_Type(Integer32):
    """Custom type queryPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_QueryPortNo_Type.__name__ = "Integer32"
_QueryPortNo_Object = MibScalar
queryPortNo = _QueryPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 2, 3),
    _QueryPortNo_Type()
)
queryPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryPortNo.setStatus("current")


class _QueryMode_Type(Integer32):
    """Custom type queryMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("monitor_current", 1),
          ("monitor_history", 2))
    )


_QueryMode_Type.__name__ = "Integer32"
_QueryMode_Object = MibScalar
queryMode = _QueryMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 2, 4),
    _QueryMode_Type()
)
queryMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryMode.setStatus("current")


class _QueryAction_Type(Integer32):
    """Custom type queryAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_QueryAction_Type.__name__ = "Integer32"
_QueryAction_Object = MibScalar
queryAction = _QueryAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 2, 5),
    _QueryAction_Type()
)
queryAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queryAction.setStatus("current")
_OnuPortStatDisplay_ObjectIdentity = ObjectIdentity
onuPortStatDisplay = _OnuPortStatDisplay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3)
)
_StatDisplayPortNo_Type = Integer32
_StatDisplayPortNo_Object = MibScalar
statDisplayPortNo = _StatDisplayPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 1),
    _StatDisplayPortNo_Type()
)
statDisplayPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    statDisplayPortNo.setStatus("current")
_DnDropEvents_Type = Counter32
_DnDropEvents_Object = MibScalar
dnDropEvents = _DnDropEvents_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 2),
    _DnDropEvents_Type()
)
dnDropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnDropEvents.setStatus("current")
_UpDropEvents_Type = Counter32
_UpDropEvents_Object = MibScalar
upDropEvents = _UpDropEvents_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 3),
    _UpDropEvents_Type()
)
upDropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upDropEvents.setStatus("current")
_DnOctets_Type = Counter32
_DnOctets_Object = MibScalar
dnOctets = _DnOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 4),
    _DnOctets_Type()
)
dnOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnOctets.setStatus("current")
_UpOctets_Type = Counter32
_UpOctets_Object = MibScalar
upOctets = _UpOctets_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 5),
    _UpOctets_Type()
)
upOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upOctets.setStatus("current")
_DnFrames_Type = Counter32
_DnFrames_Object = MibScalar
dnFrames = _DnFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 6),
    _DnFrames_Type()
)
dnFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnFrames.setStatus("current")
_UpFrames_Type = Counter32
_UpFrames_Object = MibScalar
upFrames = _UpFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 7),
    _UpFrames_Type()
)
upFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upFrames.setStatus("current")
_DnBcFrames_Type = Counter32
_DnBcFrames_Object = MibScalar
dnBcFrames = _DnBcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 8),
    _DnBcFrames_Type()
)
dnBcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnBcFrames.setStatus("current")
_UpBcFrames_Type = Counter32
_UpBcFrames_Object = MibScalar
upBcFrames = _UpBcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 9),
    _UpBcFrames_Type()
)
upBcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upBcFrames.setStatus("current")
_DnMcFrames_Type = Counter32
_DnMcFrames_Object = MibScalar
dnMcFrames = _DnMcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 10),
    _DnMcFrames_Type()
)
dnMcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnMcFrames.setStatus("current")
_UpMcFrames_Type = Counter32
_UpMcFrames_Object = MibScalar
upMcFrames = _UpMcFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 11),
    _UpMcFrames_Type()
)
upMcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upMcFrames.setStatus("current")
_DnCrcErrFrames_Type = Counter32
_DnCrcErrFrames_Object = MibScalar
dnCrcErrFrames = _DnCrcErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 12),
    _DnCrcErrFrames_Type()
)
dnCrcErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnCrcErrFrames.setStatus("current")
_UpCrcErrFrames_Type = Counter32
_UpCrcErrFrames_Object = MibScalar
upCrcErrFrames = _UpCrcErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 13),
    _UpCrcErrFrames_Type()
)
upCrcErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upCrcErrFrames.setStatus("current")
_DnUndersizeFrames_Type = Counter32
_DnUndersizeFrames_Object = MibScalar
dnUndersizeFrames = _DnUndersizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 14),
    _DnUndersizeFrames_Type()
)
dnUndersizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnUndersizeFrames.setStatus("current")
_UpUndersizeFrames_Type = Counter32
_UpUndersizeFrames_Object = MibScalar
upUndersizeFrames = _UpUndersizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 15),
    _UpUndersizeFrames_Type()
)
upUndersizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upUndersizeFrames.setStatus("current")
_DnOversizeFrames_Type = Counter32
_DnOversizeFrames_Object = MibScalar
dnOversizeFrames = _DnOversizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 16),
    _DnOversizeFrames_Type()
)
dnOversizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnOversizeFrames.setStatus("current")
_UpOversizeFrames_Type = Counter32
_UpOversizeFrames_Object = MibScalar
upOversizeFrames = _UpOversizeFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 17),
    _UpOversizeFrames_Type()
)
upOversizeFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upOversizeFrames.setStatus("current")
_DnFragments_Type = Counter32
_DnFragments_Object = MibScalar
dnFragments = _DnFragments_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 18),
    _DnFragments_Type()
)
dnFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnFragments.setStatus("current")
_UpFragments_Type = Counter32
_UpFragments_Object = MibScalar
upFragments = _UpFragments_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 19),
    _UpFragments_Type()
)
upFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upFragments.setStatus("current")
_DnJabbers_Type = Counter32
_DnJabbers_Object = MibScalar
dnJabbers = _DnJabbers_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 20),
    _DnJabbers_Type()
)
dnJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnJabbers.setStatus("current")
_UpJabbers_Type = Counter32
_UpJabbers_Object = MibScalar
upJabbers = _UpJabbers_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 21),
    _UpJabbers_Type()
)
upJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upJabbers.setStatus("current")
_Dn64OctetsFrames_Type = Counter32
_Dn64OctetsFrames_Object = MibScalar
dn64OctetsFrames = _Dn64OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 22),
    _Dn64OctetsFrames_Type()
)
dn64OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dn64OctetsFrames.setStatus("current")
_Dn65to127OctetsFrames_Type = Counter32
_Dn65to127OctetsFrames_Object = MibScalar
dn65to127OctetsFrames = _Dn65to127OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 23),
    _Dn65to127OctetsFrames_Type()
)
dn65to127OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dn65to127OctetsFrames.setStatus("current")
_Dn128to255OctetsFrames_Type = Counter32
_Dn128to255OctetsFrames_Object = MibScalar
dn128to255OctetsFrames = _Dn128to255OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 24),
    _Dn128to255OctetsFrames_Type()
)
dn128to255OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dn128to255OctetsFrames.setStatus("current")
_Dn256to511OctetsFrames_Type = Counter32
_Dn256to511OctetsFrames_Object = MibScalar
dn256to511OctetsFrames = _Dn256to511OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 25),
    _Dn256to511OctetsFrames_Type()
)
dn256to511OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dn256to511OctetsFrames.setStatus("current")
_Dn512to1023OctetsFrames_Type = Counter32
_Dn512to1023OctetsFrames_Object = MibScalar
dn512to1023OctetsFrames = _Dn512to1023OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 26),
    _Dn512to1023OctetsFrames_Type()
)
dn512to1023OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dn512to1023OctetsFrames.setStatus("current")
_Dn1024to1518OctetsFrames_Type = Counter32
_Dn1024to1518OctetsFrames_Object = MibScalar
dn1024to1518OctetsFrames = _Dn1024to1518OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 27),
    _Dn1024to1518OctetsFrames_Type()
)
dn1024to1518OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dn1024to1518OctetsFrames.setStatus("current")
_Up64OctetsFrames_Type = Counter32
_Up64OctetsFrames_Object = MibScalar
up64OctetsFrames = _Up64OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 28),
    _Up64OctetsFrames_Type()
)
up64OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    up64OctetsFrames.setStatus("current")
_Up65to127OctetsFrames_Type = Counter32
_Up65to127OctetsFrames_Object = MibScalar
up65to127OctetsFrames = _Up65to127OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 29),
    _Up65to127OctetsFrames_Type()
)
up65to127OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    up65to127OctetsFrames.setStatus("current")
_Up128to255OctetsFrames_Type = Counter32
_Up128to255OctetsFrames_Object = MibScalar
up128to255OctetsFrames = _Up128to255OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 30),
    _Up128to255OctetsFrames_Type()
)
up128to255OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    up128to255OctetsFrames.setStatus("current")
_Up256to511OctetsFrames_Type = Counter32
_Up256to511OctetsFrames_Object = MibScalar
up256to511OctetsFrames = _Up256to511OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 31),
    _Up256to511OctetsFrames_Type()
)
up256to511OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    up256to511OctetsFrames.setStatus("current")
_Up512to1023OctetsFrames_Type = Counter32
_Up512to1023OctetsFrames_Object = MibScalar
up512to1023OctetsFrames = _Up512to1023OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 32),
    _Up512to1023OctetsFrames_Type()
)
up512to1023OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    up512to1023OctetsFrames.setStatus("current")
_Up1024to1518OctetsFrames_Type = Counter32
_Up1024to1518OctetsFrames_Object = MibScalar
up1024to1518OctetsFrames = _Up1024to1518OctetsFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 33),
    _Up1024to1518OctetsFrames_Type()
)
up1024to1518OctetsFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    up1024to1518OctetsFrames.setStatus("current")
_DnDiscardFrames_Type = Counter32
_DnDiscardFrames_Object = MibScalar
dnDiscardFrames = _DnDiscardFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 34),
    _DnDiscardFrames_Type()
)
dnDiscardFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnDiscardFrames.setStatus("current")
_UpDiscardFrames_Type = Counter32
_UpDiscardFrames_Object = MibScalar
upDiscardFrames = _UpDiscardFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 35),
    _UpDiscardFrames_Type()
)
upDiscardFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upDiscardFrames.setStatus("current")
_DnErrFrames_Type = Counter32
_DnErrFrames_Object = MibScalar
dnErrFrames = _DnErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 36),
    _DnErrFrames_Type()
)
dnErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnErrFrames.setStatus("current")
_UpErrFrames_Type = Counter32
_UpErrFrames_Object = MibScalar
upErrFrames = _UpErrFrames_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 37),
    _UpErrFrames_Type()
)
upErrFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upErrFrames.setStatus("current")
_StatusChangeTimes_Type = Counter32
_StatusChangeTimes_Object = MibScalar
statusChangeTimes = _StatusChangeTimes_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 2, 16, 3, 38),
    _StatusChangeTimes_Type()
)
statusChangeTimes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statusChangeTimes.setStatus("current")
_OnuPortGlobalView_ObjectIdentity = ObjectIdentity
onuPortGlobalView = _OnuPortGlobalView_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 3)
)


class _GlobalViewPonNum_Type(Integer32):
    """Custom type globalViewPonNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_GlobalViewPonNum_Type.__name__ = "Integer32"
_GlobalViewPonNum_Object = MibScalar
globalViewPonNum = _GlobalViewPonNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 3, 1),
    _GlobalViewPonNum_Type()
)
globalViewPonNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalViewPonNum.setStatus("current")


class _GlobalViewOnuNum_Type(Integer32):
    """Custom type globalViewOnuNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_GlobalViewOnuNum_Type.__name__ = "Integer32"
_GlobalViewOnuNum_Object = MibScalar
globalViewOnuNum = _GlobalViewOnuNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 3, 2),
    _GlobalViewOnuNum_Type()
)
globalViewOnuNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalViewOnuNum.setStatus("current")


class _GlobalViewPortNum_Type(Integer32):
    """Custom type globalViewPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_GlobalViewPortNum_Type.__name__ = "Integer32"
_GlobalViewPortNum_Object = MibScalar
globalViewPortNum = _GlobalViewPortNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 5, 3, 3),
    _GlobalViewPortNum_Type()
)
globalViewPortNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalViewPortNum.setStatus("current")
_OnuVoipCfg_ObjectIdentity = ObjectIdentity
onuVoipCfg = _OnuVoipCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6)
)
_VoipInfo_ObjectIdentity = ObjectIdentity
voipInfo = _VoipInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1)
)
_VoipGlobalInfo_ObjectIdentity = ObjectIdentity
voipGlobalInfo = _VoipGlobalInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2)
)
_VoipGlobalIPTable_Object = MibTable
voipGlobalIPTable = _VoipGlobalIPTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1)
)
if mibBuilder.loadTexts:
    voipGlobalIPTable.setStatus("current")
_VoipGlobalIPEntry_Object = MibTableRow
voipGlobalIPEntry = _VoipGlobalIPEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1)
)
voipGlobalIPEntry.setIndexNames(
    (0, "V1600D", "voipGIPPonNo"),
    (0, "V1600D", "voipGIPOnuNo"),
)
if mibBuilder.loadTexts:
    voipGlobalIPEntry.setStatus("current")
_VoipGIPPonNo_Type = Integer32
_VoipGIPPonNo_Object = MibTableColumn
voipGIPPonNo = _VoipGIPPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 1),
    _VoipGIPPonNo_Type()
)
voipGIPPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPPonNo.setStatus("current")
_VoipGIPOnuNo_Type = Integer32
_VoipGIPOnuNo_Object = MibTableColumn
voipGIPOnuNo = _VoipGIPOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 2),
    _VoipGIPOnuNo_Type()
)
voipGIPOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPOnuNo.setStatus("current")


class _VoipGIPMode_Type(Integer32):
    """Custom type voipGIPMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Static_IP", 0),
          ("DHCP", 1),
          ("PPPoE", 2))
    )


_VoipGIPMode_Type.__name__ = "Integer32"
_VoipGIPMode_Object = MibTableColumn
voipGIPMode = _VoipGIPMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 3),
    _VoipGIPMode_Type()
)
voipGIPMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPMode.setStatus("current")
_VoipGIPAddr_Type = IpAddress
_VoipGIPAddr_Object = MibTableColumn
voipGIPAddr = _VoipGIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 4),
    _VoipGIPAddr_Type()
)
voipGIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPAddr.setStatus("current")
_VoipGIPMask_Type = IpAddress
_VoipGIPMask_Object = MibTableColumn
voipGIPMask = _VoipGIPMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 5),
    _VoipGIPMask_Type()
)
voipGIPMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPMask.setStatus("current")
_VoipGIPGateway_Type = IpAddress
_VoipGIPGateway_Object = MibTableColumn
voipGIPGateway = _VoipGIPGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 6),
    _VoipGIPGateway_Type()
)
voipGIPGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPGateway.setStatus("current")


class _VoipGIPPPPoEMode_Type(Integer32):
    """Custom type voipGIPPPPoEMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("AUTO", 0),
          ("CHAP", 1),
          ("PAP", 2))
    )


_VoipGIPPPPoEMode_Type.__name__ = "Integer32"
_VoipGIPPPPoEMode_Object = MibTableColumn
voipGIPPPPoEMode = _VoipGIPPPPoEMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 7),
    _VoipGIPPPPoEMode_Type()
)
voipGIPPPPoEMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPPPPoEMode.setStatus("current")
_VoipGIPPPPoEUserName_Type = OctetString
_VoipGIPPPPoEUserName_Object = MibTableColumn
voipGIPPPPoEUserName = _VoipGIPPPPoEUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 8),
    _VoipGIPPPPoEUserName_Type()
)
voipGIPPPPoEUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPPPPoEUserName.setStatus("current")
_VoipGIPPPPoEPasswd_Type = OctetString
_VoipGIPPPPoEPasswd_Object = MibTableColumn
voipGIPPPPoEPasswd = _VoipGIPPPPoEPasswd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 9),
    _VoipGIPPPPoEPasswd_Type()
)
voipGIPPPPoEPasswd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPPPPoEPasswd.setStatus("current")


class _VoipGIPTagFlag_Type(Integer32):
    """Custom type voipGIPTagFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Transparent", 0),
          ("Tag", 1),
          ("Vlan_Stacking", 2))
    )


_VoipGIPTagFlag_Type.__name__ = "Integer32"
_VoipGIPTagFlag_Object = MibTableColumn
voipGIPTagFlag = _VoipGIPTagFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 10),
    _VoipGIPTagFlag_Type()
)
voipGIPTagFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPTagFlag.setStatus("current")
_VoipGIPCVlan_Type = Integer32
_VoipGIPCVlan_Object = MibTableColumn
voipGIPCVlan = _VoipGIPCVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 11),
    _VoipGIPCVlan_Type()
)
voipGIPCVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPCVlan.setStatus("current")
_VoipGIPSVlan_Type = Integer32
_VoipGIPSVlan_Object = MibTableColumn
voipGIPSVlan = _VoipGIPSVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 12),
    _VoipGIPSVlan_Type()
)
voipGIPSVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPSVlan.setStatus("current")
_VoipGIPPriority_Type = Integer32
_VoipGIPPriority_Object = MibTableColumn
voipGIPPriority = _VoipGIPPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 1, 1, 13),
    _VoipGIPPriority_Type()
)
voipGIPPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGIPPriority.setStatus("current")
_VoipPortMngTable_Object = MibTable
voipPortMngTable = _VoipPortMngTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 2)
)
if mibBuilder.loadTexts:
    voipPortMngTable.setStatus("current")
_VoipPortMngEntry_Object = MibTableRow
voipPortMngEntry = _VoipPortMngEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 2, 1)
)
voipPortMngEntry.setIndexNames(
    (0, "V1600D", "voipMngTPonNo"),
    (0, "V1600D", "voipMngTOnuNo"),
    (0, "V1600D", "voipMngTPotsNo"),
)
if mibBuilder.loadTexts:
    voipPortMngEntry.setStatus("current")
_VoipMngTPonNo_Type = Integer32
_VoipMngTPonNo_Object = MibTableColumn
voipMngTPonNo = _VoipMngTPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 2, 1, 1),
    _VoipMngTPonNo_Type()
)
voipMngTPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipMngTPonNo.setStatus("current")
_VoipMngTOnuNo_Type = Integer32
_VoipMngTOnuNo_Object = MibTableColumn
voipMngTOnuNo = _VoipMngTOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 2, 1, 2),
    _VoipMngTOnuNo_Type()
)
voipMngTOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipMngTOnuNo.setStatus("current")
_VoipMngTPotsNo_Type = Integer32
_VoipMngTPotsNo_Object = MibTableColumn
voipMngTPotsNo = _VoipMngTPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 2, 1, 3),
    _VoipMngTPotsNo_Type()
)
voipMngTPotsNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipMngTPotsNo.setStatus("current")


class _VoipMngTPortManage_Type(Integer32):
    """Custom type voipMngTPortManage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Disactive", 0),
          ("Active", 1))
    )


_VoipMngTPortManage_Type.__name__ = "Integer32"
_VoipMngTPortManage_Object = MibTableColumn
voipMngTPortManage = _VoipMngTPortManage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 2, 1, 4),
    _VoipMngTPortManage_Type()
)
voipMngTPortManage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipMngTPortManage.setStatus("current")
_VoipIADInfoTable_Object = MibTable
voipIADInfoTable = _VoipIADInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3)
)
if mibBuilder.loadTexts:
    voipIADInfoTable.setStatus("current")
_VoipIADInfoEntry_Object = MibTableRow
voipIADInfoEntry = _VoipIADInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1)
)
voipIADInfoEntry.setIndexNames(
    (0, "V1600D", "voipIADInfoPonNo"),
    (0, "V1600D", "voipIADInfoOnuNo"),
)
if mibBuilder.loadTexts:
    voipIADInfoEntry.setStatus("current")
_VoipIADInfoPonNo_Type = Integer32
_VoipIADInfoPonNo_Object = MibTableColumn
voipIADInfoPonNo = _VoipIADInfoPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 1),
    _VoipIADInfoPonNo_Type()
)
voipIADInfoPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoPonNo.setStatus("current")
_VoipIADInfoOnuNo_Type = Integer32
_VoipIADInfoOnuNo_Object = MibTableColumn
voipIADInfoOnuNo = _VoipIADInfoOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 2),
    _VoipIADInfoOnuNo_Type()
)
voipIADInfoOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoOnuNo.setStatus("current")
_VoipIADInfoMacAddr_Type = OctetString
_VoipIADInfoMacAddr_Object = MibTableColumn
voipIADInfoMacAddr = _VoipIADInfoMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 3),
    _VoipIADInfoMacAddr_Type()
)
voipIADInfoMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoMacAddr.setStatus("current")


class _VoipIADInfoProtocolSupport_Type(Integer32):
    """Custom type voipIADInfoProtocolSupport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("H248", 0),
          ("SIP", 1))
    )


_VoipIADInfoProtocolSupport_Type.__name__ = "Integer32"
_VoipIADInfoProtocolSupport_Object = MibTableColumn
voipIADInfoProtocolSupport = _VoipIADInfoProtocolSupport_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 4),
    _VoipIADInfoProtocolSupport_Type()
)
voipIADInfoProtocolSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoProtocolSupport.setStatus("current")
_VoipIADInfoSoftVersion_Type = OctetString
_VoipIADInfoSoftVersion_Object = MibTableColumn
voipIADInfoSoftVersion = _VoipIADInfoSoftVersion_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 5),
    _VoipIADInfoSoftVersion_Type()
)
voipIADInfoSoftVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoSoftVersion.setStatus("current")
_VoipIADInfoSoftTime_Type = OctetString
_VoipIADInfoSoftTime_Object = MibTableColumn
voipIADInfoSoftTime = _VoipIADInfoSoftTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 6),
    _VoipIADInfoSoftTime_Type()
)
voipIADInfoSoftTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoSoftTime.setStatus("current")
_VoipIADInfoUserCount_Type = Integer32
_VoipIADInfoUserCount_Object = MibTableColumn
voipIADInfoUserCount = _VoipIADInfoUserCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 3, 1, 7),
    _VoipIADInfoUserCount_Type()
)
voipIADInfoUserCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipIADInfoUserCount.setStatus("current")
_VoipPotsStatusTable_Object = MibTable
voipPotsStatusTable = _VoipPotsStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4)
)
if mibBuilder.loadTexts:
    voipPotsStatusTable.setStatus("current")
_VoipPotsStatusEntry_Object = MibTableRow
voipPotsStatusEntry = _VoipPotsStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1)
)
voipPotsStatusEntry.setIndexNames(
    (0, "V1600D", "voipPostStatusPonNo"),
    (0, "V1600D", "voipPostStatusOnuNo"),
    (0, "V1600D", "voipPostStatusPotsNo"),
)
if mibBuilder.loadTexts:
    voipPotsStatusEntry.setStatus("current")
_VoipPostStatusPonNo_Type = Integer32
_VoipPostStatusPonNo_Object = MibTableColumn
voipPostStatusPonNo = _VoipPostStatusPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1, 1),
    _VoipPostStatusPonNo_Type()
)
voipPostStatusPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPostStatusPonNo.setStatus("current")
_VoipPostStatusOnuNo_Type = Integer32
_VoipPostStatusOnuNo_Object = MibTableColumn
voipPostStatusOnuNo = _VoipPostStatusOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1, 2),
    _VoipPostStatusOnuNo_Type()
)
voipPostStatusOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPostStatusOnuNo.setStatus("current")
_VoipPostStatusPotsNo_Type = Integer32
_VoipPostStatusPotsNo_Object = MibTableColumn
voipPostStatusPotsNo = _VoipPostStatusPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1, 3),
    _VoipPostStatusPotsNo_Type()
)
voipPostStatusPotsNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPostStatusPotsNo.setStatus("current")


class _VoipPostStatusPortStatus_Type(Integer32):
    """Custom type voipPostStatusPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("Registering", 0),
          ("Idle", 1),
          ("Offhook", 2),
          ("Dialing", 3),
          ("Ringing", 4),
          ("Ring_Back", 5),
          ("Connecting", 6),
          ("Connected", 7),
          ("Release_connection", 8),
          ("Register_fail", 9),
          ("Inactive", 10))
    )


_VoipPostStatusPortStatus_Type.__name__ = "Integer32"
_VoipPostStatusPortStatus_Object = MibTableColumn
voipPostStatusPortStatus = _VoipPostStatusPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1, 4),
    _VoipPostStatusPortStatus_Type()
)
voipPostStatusPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPostStatusPortStatus.setStatus("current")


class _VoipPostStatusServicesState_Type(Integer32):
    """Custom type voipPostStatusServicesState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("Endlocal", 0),
          ("EndRemote", 1),
          ("EndAuto", 2),
          ("EndNormal", 3))
    )


_VoipPostStatusServicesState_Type.__name__ = "Integer32"
_VoipPostStatusServicesState_Object = MibTableColumn
voipPostStatusServicesState = _VoipPostStatusServicesState_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1, 5),
    _VoipPostStatusServicesState_Type()
)
voipPostStatusServicesState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPostStatusServicesState.setStatus("current")


class _VoipPostStatusCodecMode_Type(Integer32):
    """Custom type voipPostStatusCodecMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("G711A", 0),
          ("G729", 1),
          ("G711U", 2),
          ("G723", 3),
          ("G726", 4),
          ("T38", 5))
    )


_VoipPostStatusCodecMode_Type.__name__ = "Integer32"
_VoipPostStatusCodecMode_Object = MibTableColumn
voipPostStatusCodecMode = _VoipPostStatusCodecMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 2, 4, 1, 6),
    _VoipPostStatusCodecMode_Type()
)
voipPostStatusCodecMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPostStatusCodecMode.setStatus("current")
_VoipH248Info_ObjectIdentity = ObjectIdentity
voipH248Info = _VoipH248Info_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3)
)
_H248IADStatusTable_Object = MibTable
h248IADStatusTable = _H248IADStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 1)
)
if mibBuilder.loadTexts:
    h248IADStatusTable.setStatus("current")
_H248IADStatusEntry_Object = MibTableRow
h248IADStatusEntry = _H248IADStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 1, 1)
)
h248IADStatusEntry.setIndexNames(
    (0, "V1600D", "h248IADStatusPonNo"),
    (0, "V1600D", "h248IADStatusOnuNo"),
)
if mibBuilder.loadTexts:
    h248IADStatusEntry.setStatus("current")
_H248IADStatusPonNo_Type = Integer32
_H248IADStatusPonNo_Object = MibTableColumn
h248IADStatusPonNo = _H248IADStatusPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 1, 1, 1),
    _H248IADStatusPonNo_Type()
)
h248IADStatusPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248IADStatusPonNo.setStatus("current")
_H248IADStatusOnuNo_Type = Integer32
_H248IADStatusOnuNo_Object = MibTableColumn
h248IADStatusOnuNo = _H248IADStatusOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 1, 1, 2),
    _H248IADStatusOnuNo_Type()
)
h248IADStatusOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248IADStatusOnuNo.setStatus("current")


class _H248IADOperStatus_Type(Integer32):
    """Custom type h248IADOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("Registering", 0),
          ("Register_success", 1),
          ("IAD_fault", 2),
          ("Deregister", 3),
          ("IAD_restarting", 4))
    )


_H248IADOperStatus_Type.__name__ = "Integer32"
_H248IADOperStatus_Object = MibTableColumn
h248IADOperStatus = _H248IADOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 1, 1, 3),
    _H248IADOperStatus_Type()
)
h248IADOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248IADOperStatus.setStatus("current")
_H248ParamTable_Object = MibTable
h248ParamTable = _H248ParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2)
)
if mibBuilder.loadTexts:
    h248ParamTable.setStatus("current")
_H248ParamEntry_Object = MibTableRow
h248ParamEntry = _H248ParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1)
)
h248ParamEntry.setIndexNames(
    (0, "V1600D", "h248ParamTPonNo"),
    (0, "V1600D", "h248ParamTOnuNo"),
)
if mibBuilder.loadTexts:
    h248ParamEntry.setStatus("current")
_H248ParamTPonNo_Type = Integer32
_H248ParamTPonNo_Object = MibTableColumn
h248ParamTPonNo = _H248ParamTPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 1),
    _H248ParamTPonNo_Type()
)
h248ParamTPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTPonNo.setStatus("current")
_H248ParamTOnuNo_Type = Integer32
_H248ParamTOnuNo_Object = MibTableColumn
h248ParamTOnuNo = _H248ParamTOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 2),
    _H248ParamTOnuNo_Type()
)
h248ParamTOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTOnuNo.setStatus("current")
_H248ParamTMGPortNo_Type = Integer32
_H248ParamTMGPortNo_Object = MibTableColumn
h248ParamTMGPortNo = _H248ParamTMGPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 3),
    _H248ParamTMGPortNo_Type()
)
h248ParamTMGPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTMGPortNo.setStatus("current")
_H248ParamTMGCIP_Type = IpAddress
_H248ParamTMGCIP_Object = MibTableColumn
h248ParamTMGCIP = _H248ParamTMGCIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 4),
    _H248ParamTMGCIP_Type()
)
h248ParamTMGCIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTMGCIP.setStatus("current")
_H248ParamTMgcComPortNo_Type = Integer32
_H248ParamTMgcComPortNo_Object = MibTableColumn
h248ParamTMgcComPortNo = _H248ParamTMgcComPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 5),
    _H248ParamTMgcComPortNo_Type()
)
h248ParamTMgcComPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTMgcComPortNo.setStatus("current")
_H248ParamTBackupMGCIP_Type = IpAddress
_H248ParamTBackupMGCIP_Object = MibTableColumn
h248ParamTBackupMGCIP = _H248ParamTBackupMGCIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 6),
    _H248ParamTBackupMGCIP_Type()
)
h248ParamTBackupMGCIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTBackupMGCIP.setStatus("current")
_H248ParamTBackupMgcComPortNo_Type = Integer32
_H248ParamTBackupMgcComPortNo_Object = MibTableColumn
h248ParamTBackupMgcComPortNo = _H248ParamTBackupMgcComPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 7),
    _H248ParamTBackupMgcComPortNo_Type()
)
h248ParamTBackupMgcComPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTBackupMgcComPortNo.setStatus("current")


class _H248ParamTActiveMGC_Type(Integer32):
    """Custom type h248ParamTActiveMGC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("BackupMGC", 0),
          ("MainMGC", 1))
    )


_H248ParamTActiveMGC_Type.__name__ = "Integer32"
_H248ParamTActiveMGC_Object = MibTableColumn
h248ParamTActiveMGC = _H248ParamTActiveMGC_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 8),
    _H248ParamTActiveMGC_Type()
)
h248ParamTActiveMGC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTActiveMGC.setStatus("current")


class _H248ParamTRegMode_Type(Integer32):
    """Custom type h248ParamTRegMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Ipaddr", 0),
          ("Domain_name", 1),
          ("Device_name", 2))
    )


_H248ParamTRegMode_Type.__name__ = "Integer32"
_H248ParamTRegMode_Object = MibTableColumn
h248ParamTRegMode = _H248ParamTRegMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 9),
    _H248ParamTRegMode_Type()
)
h248ParamTRegMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTRegMode.setStatus("current")
_H248ParamTMID_Type = OctetString
_H248ParamTMID_Object = MibTableColumn
h248ParamTMID = _H248ParamTMID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 10),
    _H248ParamTMID_Type()
)
h248ParamTMID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTMID.setStatus("current")


class _H248ParamTHBMode_Type(Integer32):
    """Custom type h248ParamTHBMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Disable", 0),
          ("H248", 1))
    )


_H248ParamTHBMode_Type.__name__ = "Integer32"
_H248ParamTHBMode_Object = MibTableColumn
h248ParamTHBMode = _H248ParamTHBMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 11),
    _H248ParamTHBMode_Type()
)
h248ParamTHBMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTHBMode.setStatus("current")
_H248ParamTHBCycle_Type = Integer32
_H248ParamTHBCycle_Object = MibTableColumn
h248ParamTHBCycle = _H248ParamTHBCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 12),
    _H248ParamTHBCycle_Type()
)
h248ParamTHBCycle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTHBCycle.setStatus("current")
_H248ParamTHBCount_Type = Integer32
_H248ParamTHBCount_Object = MibTableColumn
h248ParamTHBCount = _H248ParamTHBCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 2, 1, 13),
    _H248ParamTHBCount_Type()
)
h248ParamTHBCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ParamTHBCount.setStatus("current")
_H248UserTidTable_Object = MibTable
h248UserTidTable = _H248UserTidTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 3)
)
if mibBuilder.loadTexts:
    h248UserTidTable.setStatus("current")
_H248UserTidEntry_Object = MibTableRow
h248UserTidEntry = _H248UserTidEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 3, 1)
)
h248UserTidEntry.setIndexNames(
    (0, "V1600D", "h248UserTIDPonNo"),
    (0, "V1600D", "h248UserTIDOnuNo"),
    (0, "V1600D", "h248UserTIDPotsNo"),
)
if mibBuilder.loadTexts:
    h248UserTidEntry.setStatus("current")
_H248UserTIDPonNo_Type = Integer32
_H248UserTIDPonNo_Object = MibTableColumn
h248UserTIDPonNo = _H248UserTIDPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 3, 1, 1),
    _H248UserTIDPonNo_Type()
)
h248UserTIDPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTIDPonNo.setStatus("current")
_H248UserTIDOnuNo_Type = Integer32
_H248UserTIDOnuNo_Object = MibTableColumn
h248UserTIDOnuNo = _H248UserTIDOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 3, 1, 2),
    _H248UserTIDOnuNo_Type()
)
h248UserTIDOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTIDOnuNo.setStatus("current")
_H248UserTIDPotsNo_Type = Integer32
_H248UserTIDPotsNo_Object = MibTableColumn
h248UserTIDPotsNo = _H248UserTIDPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 3, 1, 3),
    _H248UserTIDPotsNo_Type()
)
h248UserTIDPotsNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTIDPotsNo.setStatus("current")
_H248UserTIDName_Type = OctetString
_H248UserTIDName_Object = MibTableColumn
h248UserTIDName = _H248UserTIDName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 3, 1, 4),
    _H248UserTIDName_Type()
)
h248UserTIDName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTIDName.setStatus("current")
_H248RTPTIDTable_Object = MibTable
h248RTPTIDTable = _H248RTPTIDTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 4)
)
if mibBuilder.loadTexts:
    h248RTPTIDTable.setStatus("current")
_H248RTPTIDEntry_Object = MibTableRow
h248RTPTIDEntry = _H248RTPTIDEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 4, 1)
)
h248RTPTIDEntry.setIndexNames(
    (0, "V1600D", "h248RTPTIDPonNo"),
    (0, "V1600D", "h248RTPTIDOnuNo"),
)
if mibBuilder.loadTexts:
    h248RTPTIDEntry.setStatus("current")
_H248RTPTIDPonNo_Type = Integer32
_H248RTPTIDPonNo_Object = MibTableColumn
h248RTPTIDPonNo = _H248RTPTIDPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 4, 1, 1),
    _H248RTPTIDPonNo_Type()
)
h248RTPTIDPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RTPTIDPonNo.setStatus("current")
_H248RTPTIDOnuNo_Type = Integer32
_H248RTPTIDOnuNo_Object = MibTableColumn
h248RTPTIDOnuNo = _H248RTPTIDOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 4, 1, 2),
    _H248RTPTIDOnuNo_Type()
)
h248RTPTIDOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RTPTIDOnuNo.setStatus("current")
_H248RTPTIDNumber_Type = Integer32
_H248RTPTIDNumber_Object = MibTableColumn
h248RTPTIDNumber = _H248RTPTIDNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 4, 1, 3),
    _H248RTPTIDNumber_Type()
)
h248RTPTIDNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RTPTIDNumber.setStatus("current")
_H248RTPTIDFirstName_Type = OctetString
_H248RTPTIDFirstName_Object = MibTableColumn
h248RTPTIDFirstName = _H248RTPTIDFirstName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 3, 4, 1, 4),
    _H248RTPTIDFirstName_Type()
)
h248RTPTIDFirstName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RTPTIDFirstName.setStatus("current")
_VoipSipInfo_ObjectIdentity = ObjectIdentity
voipSipInfo = _VoipSipInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4)
)
_SipParamTable_Object = MibTable
sipParamTable = _SipParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1)
)
if mibBuilder.loadTexts:
    sipParamTable.setStatus("current")
_SipParamEntry_Object = MibTableRow
sipParamEntry = _SipParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1)
)
sipParamEntry.setIndexNames(
    (0, "V1600D", "sipPTPonNo"),
    (0, "V1600D", "sipPTOnuNo"),
)
if mibBuilder.loadTexts:
    sipParamEntry.setStatus("current")
_SipPTPonNo_Type = Integer32
_SipPTPonNo_Object = MibTableColumn
sipPTPonNo = _SipPTPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 1),
    _SipPTPonNo_Type()
)
sipPTPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTPonNo.setStatus("current")
_SipPTOnuNo_Type = Integer32
_SipPTOnuNo_Object = MibTableColumn
sipPTOnuNo = _SipPTOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 2),
    _SipPTOnuNo_Type()
)
sipPTOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTOnuNo.setStatus("current")
_SipPTMGPortNo_Type = Integer32
_SipPTMGPortNo_Object = MibTableColumn
sipPTMGPortNo = _SipPTMGPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 3),
    _SipPTMGPortNo_Type()
)
sipPTMGPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTMGPortNo.setStatus("current")
_SipPTProxyServIp_Type = IpAddress
_SipPTProxyServIp_Object = MibTableColumn
sipPTProxyServIp = _SipPTProxyServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 4),
    _SipPTProxyServIp_Type()
)
sipPTProxyServIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTProxyServIp.setStatus("current")
_SipPTPorxyServPortNo_Type = Integer32
_SipPTPorxyServPortNo_Object = MibTableColumn
sipPTPorxyServPortNo = _SipPTPorxyServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 5),
    _SipPTPorxyServPortNo_Type()
)
sipPTPorxyServPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTPorxyServPortNo.setStatus("current")
_SipPTBackupProxyServIp_Type = IpAddress
_SipPTBackupProxyServIp_Object = MibTableColumn
sipPTBackupProxyServIp = _SipPTBackupProxyServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 6),
    _SipPTBackupProxyServIp_Type()
)
sipPTBackupProxyServIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTBackupProxyServIp.setStatus("current")
_SipPTBackupPorxyServPortNo_Type = Integer32
_SipPTBackupPorxyServPortNo_Object = MibTableColumn
sipPTBackupPorxyServPortNo = _SipPTBackupPorxyServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 7),
    _SipPTBackupPorxyServPortNo_Type()
)
sipPTBackupPorxyServPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTBackupPorxyServPortNo.setStatus("current")
_SipPTActiveProxyServer_Type = IpAddress
_SipPTActiveProxyServer_Object = MibTableColumn
sipPTActiveProxyServer = _SipPTActiveProxyServer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 8),
    _SipPTActiveProxyServer_Type()
)
sipPTActiveProxyServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTActiveProxyServer.setStatus("current")
_SipPTRegServIp_Type = IpAddress
_SipPTRegServIp_Object = MibTableColumn
sipPTRegServIp = _SipPTRegServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 9),
    _SipPTRegServIp_Type()
)
sipPTRegServIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTRegServIp.setStatus("current")
_SipPTRegServPortNo_Type = Integer32
_SipPTRegServPortNo_Object = MibTableColumn
sipPTRegServPortNo = _SipPTRegServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 10),
    _SipPTRegServPortNo_Type()
)
sipPTRegServPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTRegServPortNo.setStatus("current")
_SipPTBackupRegServIp_Type = IpAddress
_SipPTBackupRegServIp_Object = MibTableColumn
sipPTBackupRegServIp = _SipPTBackupRegServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 11),
    _SipPTBackupRegServIp_Type()
)
sipPTBackupRegServIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTBackupRegServIp.setStatus("current")
_SipPTBackupRegServPortNo_Type = Integer32
_SipPTBackupRegServPortNo_Object = MibTableColumn
sipPTBackupRegServPortNo = _SipPTBackupRegServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 12),
    _SipPTBackupRegServPortNo_Type()
)
sipPTBackupRegServPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTBackupRegServPortNo.setStatus("current")
_SipPTOutBoundServIp_Type = IpAddress
_SipPTOutBoundServIp_Object = MibTableColumn
sipPTOutBoundServIp = _SipPTOutBoundServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 13),
    _SipPTOutBoundServIp_Type()
)
sipPTOutBoundServIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTOutBoundServIp.setStatus("current")
_SipPTOutBoundServPortNo_Type = Integer32
_SipPTOutBoundServPortNo_Object = MibTableColumn
sipPTOutBoundServPortNo = _SipPTOutBoundServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 14),
    _SipPTOutBoundServPortNo_Type()
)
sipPTOutBoundServPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTOutBoundServPortNo.setStatus("current")
_SipPTRegInterval_Type = Integer32
_SipPTRegInterval_Object = MibTableColumn
sipPTRegInterval = _SipPTRegInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 15),
    _SipPTRegInterval_Type()
)
sipPTRegInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTRegInterval.setStatus("current")


class _SipPTHeartbeatEn_Type(Integer32):
    """Custom type sipPTHeartbeatEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 0),
          ("Disable", 1))
    )


_SipPTHeartbeatEn_Type.__name__ = "Integer32"
_SipPTHeartbeatEn_Object = MibTableColumn
sipPTHeartbeatEn = _SipPTHeartbeatEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 16),
    _SipPTHeartbeatEn_Type()
)
sipPTHeartbeatEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTHeartbeatEn.setStatus("current")
_SipPTHeartbeatCycle_Type = Integer32
_SipPTHeartbeatCycle_Object = MibTableColumn
sipPTHeartbeatCycle = _SipPTHeartbeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 17),
    _SipPTHeartbeatCycle_Type()
)
sipPTHeartbeatCycle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTHeartbeatCycle.setStatus("current")
_SipPTHeartbeatCount_Type = Integer32
_SipPTHeartbeatCount_Object = MibTableColumn
sipPTHeartbeatCount = _SipPTHeartbeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 1, 1, 18),
    _SipPTHeartbeatCount_Type()
)
sipPTHeartbeatCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipPTHeartbeatCount.setStatus("current")
_SipUserParamTable_Object = MibTable
sipUserParamTable = _SipUserParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2)
)
if mibBuilder.loadTexts:
    sipUserParamTable.setStatus("current")
_SipUserParamEntry_Object = MibTableRow
sipUserParamEntry = _SipUserParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1)
)
sipUserParamEntry.setIndexNames(
    (0, "V1600D", "sipUserParamPonNo"),
    (0, "V1600D", "sipUserParamOnuNo"),
    (0, "V1600D", "sipUserParamPotsNo"),
)
if mibBuilder.loadTexts:
    sipUserParamEntry.setStatus("current")
_SipUserParamPonNo_Type = Integer32
_SipUserParamPonNo_Object = MibTableColumn
sipUserParamPonNo = _SipUserParamPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1, 1),
    _SipUserParamPonNo_Type()
)
sipUserParamPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserParamPonNo.setStatus("current")
_SipUserParamOnuNo_Type = Integer32
_SipUserParamOnuNo_Object = MibTableColumn
sipUserParamOnuNo = _SipUserParamOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1, 2),
    _SipUserParamOnuNo_Type()
)
sipUserParamOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserParamOnuNo.setStatus("current")
_SipUserParamPotsNo_Type = Integer32
_SipUserParamPotsNo_Object = MibTableColumn
sipUserParamPotsNo = _SipUserParamPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1, 3),
    _SipUserParamPotsNo_Type()
)
sipUserParamPotsNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserParamPotsNo.setStatus("current")
_SipUserParamUserAccount_Type = OctetString
_SipUserParamUserAccount_Object = MibTableColumn
sipUserParamUserAccount = _SipUserParamUserAccount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1, 4),
    _SipUserParamUserAccount_Type()
)
sipUserParamUserAccount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserParamUserAccount.setStatus("current")
_SipUserParamUserName_Type = OctetString
_SipUserParamUserName_Object = MibTableColumn
sipUserParamUserName = _SipUserParamUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1, 5),
    _SipUserParamUserName_Type()
)
sipUserParamUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserParamUserName.setStatus("current")
_SipUserParamUserPasswd_Type = OctetString
_SipUserParamUserPasswd_Object = MibTableColumn
sipUserParamUserPasswd = _SipUserParamUserPasswd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 2, 1, 6),
    _SipUserParamUserPasswd_Type()
)
sipUserParamUserPasswd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserParamUserPasswd.setStatus("current")
_FaxModemCfgTable_Object = MibTable
faxModemCfgTable = _FaxModemCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 3)
)
if mibBuilder.loadTexts:
    faxModemCfgTable.setStatus("current")
_FaxModemCfgEntry_Object = MibTableRow
faxModemCfgEntry = _FaxModemCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 3, 1)
)
faxModemCfgEntry.setIndexNames(
    (0, "V1600D", "faxModemPonNo"),
    (0, "V1600D", "faxModemOnuNo"),
)
if mibBuilder.loadTexts:
    faxModemCfgEntry.setStatus("current")
_FaxModemPonNo_Type = Integer32
_FaxModemPonNo_Object = MibTableColumn
faxModemPonNo = _FaxModemPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 3, 1, 1),
    _FaxModemPonNo_Type()
)
faxModemPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxModemPonNo.setStatus("current")
_FaxModemOnuNo_Type = Integer32
_FaxModemOnuNo_Object = MibTableColumn
faxModemOnuNo = _FaxModemOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 3, 1, 2),
    _FaxModemOnuNo_Type()
)
faxModemOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxModemOnuNo.setStatus("current")


class _FaxModemVoiceT38En_Type(Integer32):
    """Custom type faxModemVoiceT38En based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("T30", 0),
          ("T38", 1))
    )


_FaxModemVoiceT38En_Type.__name__ = "Integer32"
_FaxModemVoiceT38En_Object = MibTableColumn
faxModemVoiceT38En = _FaxModemVoiceT38En_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 3, 1, 3),
    _FaxModemVoiceT38En_Type()
)
faxModemVoiceT38En.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxModemVoiceT38En.setStatus("current")


class _FaxModemVoiceCtl_Type(Integer32):
    """Custom type faxModemVoiceCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Negotiation", 0),
          ("Auto_VBD", 1))
    )


_FaxModemVoiceCtl_Type.__name__ = "Integer32"
_FaxModemVoiceCtl_Object = MibTableColumn
faxModemVoiceCtl = _FaxModemVoiceCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 3, 1, 4),
    _FaxModemVoiceCtl_Type()
)
faxModemVoiceCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxModemVoiceCtl.setStatus("current")
_SipDigitMapTable_Object = MibTable
sipDigitMapTable = _SipDigitMapTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 4)
)
if mibBuilder.loadTexts:
    sipDigitMapTable.setStatus("current")
_SipDigitMapEntry_Object = MibTableRow
sipDigitMapEntry = _SipDigitMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 4, 1)
)
sipDigitMapEntry.setIndexNames(
    (0, "V1600D", "sipDigitMapPonNo"),
    (0, "V1600D", "sipDigitMapOnuNo"),
)
if mibBuilder.loadTexts:
    sipDigitMapEntry.setStatus("current")
_SipDigitMapPonNo_Type = Integer32
_SipDigitMapPonNo_Object = MibTableColumn
sipDigitMapPonNo = _SipDigitMapPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 4, 1, 1),
    _SipDigitMapPonNo_Type()
)
sipDigitMapPonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitMapPonNo.setStatus("current")
_SipDigitMapOnuNo_Type = Integer32
_SipDigitMapOnuNo_Object = MibTableColumn
sipDigitMapOnuNo = _SipDigitMapOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 4, 1, 2),
    _SipDigitMapOnuNo_Type()
)
sipDigitMapOnuNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitMapOnuNo.setStatus("current")
_SipDigitMap_Type = OctetString
_SipDigitMap_Object = MibTableColumn
sipDigitMap = _SipDigitMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 1, 4, 4, 1, 3),
    _SipDigitMap_Type()
)
sipDigitMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitMap.setStatus("current")
_VoipGlobalCfg_ObjectIdentity = ObjectIdentity
voipGlobalCfg = _VoipGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2)
)
_VoipGlobalIpCfg_ObjectIdentity = ObjectIdentity
voipGlobalIpCfg = _VoipGlobalIpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1)
)


class _VoipIpPonNo_Type(Integer32):
    """Custom type voipIpPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_VoipIpPonNo_Type.__name__ = "Integer32"
_VoipIpPonNo_Object = MibScalar
voipIpPonNo = _VoipIpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 1),
    _VoipIpPonNo_Type()
)
voipIpPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipIpPonNo.setStatus("current")


class _VoipIpOnuNo_Type(Integer32):
    """Custom type voipIpOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VoipIpOnuNo_Type.__name__ = "Integer32"
_VoipIpOnuNo_Object = MibScalar
voipIpOnuNo = _VoipIpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 2),
    _VoipIpOnuNo_Type()
)
voipIpOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipIpOnuNo.setStatus("current")


class _VoipIpMode_Type(Integer32):
    """Custom type voipIpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Static_IP", 0),
          ("DHCP", 1),
          ("PPPoE", 2))
    )


_VoipIpMode_Type.__name__ = "Integer32"
_VoipIpMode_Object = MibScalar
voipIpMode = _VoipIpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 3),
    _VoipIpMode_Type()
)
voipIpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipIpMode.setStatus("current")
_VoipStaticIpAddr_Type = IpAddress
_VoipStaticIpAddr_Object = MibScalar
voipStaticIpAddr = _VoipStaticIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 4),
    _VoipStaticIpAddr_Type()
)
voipStaticIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipStaticIpAddr.setStatus("current")
_VoipStaticIpMask_Type = IpAddress
_VoipStaticIpMask_Object = MibScalar
voipStaticIpMask = _VoipStaticIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 5),
    _VoipStaticIpMask_Type()
)
voipStaticIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipStaticIpMask.setStatus("current")
_VoipStaticIpGw_Type = IpAddress
_VoipStaticIpGw_Object = MibScalar
voipStaticIpGw = _VoipStaticIpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 6),
    _VoipStaticIpGw_Type()
)
voipStaticIpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipStaticIpGw.setStatus("current")


class _VoipPPPoEMode_Type(Integer32):
    """Custom type voipPPPoEMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("AUTO", 0),
          ("CHAP", 1),
          ("PAP", 2))
    )


_VoipPPPoEMode_Type.__name__ = "Integer32"
_VoipPPPoEMode_Object = MibScalar
voipPPPoEMode = _VoipPPPoEMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 7),
    _VoipPPPoEMode_Type()
)
voipPPPoEMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPPPoEMode.setStatus("current")


class _VoipPPPOEUserName_Type(OctetString):
    """Custom type voipPPPOEUserName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VoipPPPOEUserName_Type.__name__ = "OctetString"
_VoipPPPOEUserName_Object = MibScalar
voipPPPOEUserName = _VoipPPPOEUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 8),
    _VoipPPPOEUserName_Type()
)
voipPPPOEUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPPPOEUserName.setStatus("current")


class _VoipPPPOEPasswd_Type(OctetString):
    """Custom type voipPPPOEPasswd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VoipPPPOEPasswd_Type.__name__ = "OctetString"
_VoipPPPOEPasswd_Object = MibScalar
voipPPPOEPasswd = _VoipPPPOEPasswd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 9),
    _VoipPPPOEPasswd_Type()
)
voipPPPOEPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPPPOEPasswd.setStatus("current")


class _VoipTagFlag_Type(Integer32):
    """Custom type voipTagFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("Transparent", 0),
          ("Tag", 1),
          ("Vlan_Stacking", 2))
    )


_VoipTagFlag_Type.__name__ = "Integer32"
_VoipTagFlag_Object = MibScalar
voipTagFlag = _VoipTagFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 10),
    _VoipTagFlag_Type()
)
voipTagFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipTagFlag.setStatus("current")


class _VoipCVlan_Type(Integer32):
    """Custom type voipCVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipCVlan_Type.__name__ = "Integer32"
_VoipCVlan_Object = MibScalar
voipCVlan = _VoipCVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 11),
    _VoipCVlan_Type()
)
voipCVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipCVlan.setStatus("current")


class _VoipSVlan_Type(Integer32):
    """Custom type voipSVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipSVlan_Type.__name__ = "Integer32"
_VoipSVlan_Object = MibScalar
voipSVlan = _VoipSVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 12),
    _VoipSVlan_Type()
)
voipSVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipSVlan.setStatus("current")


class _VoipPriority_Type(Integer32):
    """Custom type voipPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipPriority_Type.__name__ = "Integer32"
_VoipPriority_Object = MibScalar
voipPriority = _VoipPriority_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 13),
    _VoipPriority_Type()
)
voipPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPriority.setStatus("current")


class _StaticIpAction_Type(Integer32):
    """Custom type staticIpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_StaticIpAction_Type.__name__ = "Integer32"
_StaticIpAction_Object = MibScalar
staticIpAction = _StaticIpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 1, 14),
    _StaticIpAction_Type()
)
staticIpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staticIpAction.setStatus("current")
_VoipPortMng_ObjectIdentity = ObjectIdentity
voipPortMng = _VoipPortMng_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 2)
)


class _VoipMngPonNo_Type(Integer32):
    """Custom type voipMngPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_VoipMngPonNo_Type.__name__ = "Integer32"
_VoipMngPonNo_Object = MibScalar
voipMngPonNo = _VoipMngPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 2, 1),
    _VoipMngPonNo_Type()
)
voipMngPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipMngPonNo.setStatus("current")


class _VoipMngOnuNo_Type(Integer32):
    """Custom type voipMngOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VoipMngOnuNo_Type.__name__ = "Integer32"
_VoipMngOnuNo_Object = MibScalar
voipMngOnuNo = _VoipMngOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 2, 2),
    _VoipMngOnuNo_Type()
)
voipMngOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipMngOnuNo.setStatus("current")


class _VoipMngPotsNo_Type(Integer32):
    """Custom type voipMngPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_VoipMngPotsNo_Type.__name__ = "Integer32"
_VoipMngPotsNo_Object = MibScalar
voipMngPotsNo = _VoipMngPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 2, 3),
    _VoipMngPotsNo_Type()
)
voipMngPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipMngPotsNo.setStatus("current")


class _VoipPortManage_Type(Integer32):
    """Custom type voipPortManage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Disable", 0),
          ("Enable", 1))
    )


_VoipPortManage_Type.__name__ = "Integer32"
_VoipPortManage_Object = MibScalar
voipPortManage = _VoipPortManage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 2, 2, 4),
    _VoipPortManage_Type()
)
voipPortManage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPortManage.setStatus("current")
_VoipH248Cfg_ObjectIdentity = ObjectIdentity
voipH248Cfg = _VoipH248Cfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3)
)
_H248ProParam_ObjectIdentity = ObjectIdentity
h248ProParam = _H248ProParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1)
)
_IpRegModeCfg_ObjectIdentity = ObjectIdentity
ipRegModeCfg = _IpRegModeCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 1)
)


class _IpRegPonNo_Type(Integer32):
    """Custom type ipRegPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_IpRegPonNo_Type.__name__ = "Integer32"
_IpRegPonNo_Object = MibScalar
ipRegPonNo = _IpRegPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 1, 1),
    _IpRegPonNo_Type()
)
ipRegPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRegPonNo.setStatus("current")


class _IpRegOnuNo_Type(Integer32):
    """Custom type ipRegOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IpRegOnuNo_Type.__name__ = "Integer32"
_IpRegOnuNo_Object = MibScalar
ipRegOnuNo = _IpRegOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 1, 2),
    _IpRegOnuNo_Type()
)
ipRegOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRegOnuNo.setStatus("current")


class _IpRegMode_Type(Integer32):
    """Custom type ipRegMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ip_addr", 1)
    )


_IpRegMode_Type.__name__ = "Integer32"
_IpRegMode_Object = MibScalar
ipRegMode = _IpRegMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 1, 3),
    _IpRegMode_Type()
)
ipRegMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRegMode.setStatus("current")


class _IpRegAction_Type(Integer32):
    """Custom type ipRegAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_IpRegAction_Type.__name__ = "Integer32"
_IpRegAction_Object = MibScalar
ipRegAction = _IpRegAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 1, 5),
    _IpRegAction_Type()
)
ipRegAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRegAction.setStatus("current")
_NameCfg_ObjectIdentity = ObjectIdentity
nameCfg = _NameCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 2)
)


class _NamePonNo_Type(Integer32):
    """Custom type namePonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_NamePonNo_Type.__name__ = "Integer32"
_NamePonNo_Object = MibScalar
namePonNo = _NamePonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 2, 1),
    _NamePonNo_Type()
)
namePonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    namePonNo.setStatus("current")


class _NameOnuNo_Type(Integer32):
    """Custom type nameOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_NameOnuNo_Type.__name__ = "Integer32"
_NameOnuNo_Object = MibScalar
nameOnuNo = _NameOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 2, 2),
    _NameOnuNo_Type()
)
nameOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nameOnuNo.setStatus("current")


class _NameSel_Type(Integer32):
    """Custom type nameSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("realmName", 1),
          ("deviceName", 2))
    )


_NameSel_Type.__name__ = "Integer32"
_NameSel_Object = MibScalar
nameSel = _NameSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 2, 3),
    _NameSel_Type()
)
nameSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nameSel.setStatus("current")
_NameValue_Type = OctetString
_NameValue_Object = MibScalar
nameValue = _NameValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 2, 4),
    _NameValue_Type()
)
nameValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nameValue.setStatus("current")


class _NameAction_Type(Integer32):
    """Custom type nameAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_NameAction_Type.__name__ = "Integer32"
_NameAction_Object = MibScalar
nameAction = _NameAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 2, 5),
    _NameAction_Type()
)
nameAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nameAction.setStatus("current")
_HeartbeatCfg_ObjectIdentity = ObjectIdentity
heartbeatCfg = _HeartbeatCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3)
)


class _HeartbeatPonNo_Type(Integer32):
    """Custom type heartbeatPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_HeartbeatPonNo_Type.__name__ = "Integer32"
_HeartbeatPonNo_Object = MibScalar
heartbeatPonNo = _HeartbeatPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3, 1),
    _HeartbeatPonNo_Type()
)
heartbeatPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartbeatPonNo.setStatus("current")


class _HeartbeatOnuNo_Type(Integer32):
    """Custom type heartbeatOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HeartbeatOnuNo_Type.__name__ = "Integer32"
_HeartbeatOnuNo_Object = MibScalar
heartbeatOnuNo = _HeartbeatOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3, 2),
    _HeartbeatOnuNo_Type()
)
heartbeatOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartbeatOnuNo.setStatus("current")


class _HeartbeatMode_Type(Integer32):
    """Custom type heartbeatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("h248", 1))
    )


_HeartbeatMode_Type.__name__ = "Integer32"
_HeartbeatMode_Object = MibScalar
heartbeatMode = _HeartbeatMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3, 3),
    _HeartbeatMode_Type()
)
heartbeatMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartbeatMode.setStatus("current")


class _HeartbeatCycle_Type(Integer32):
    """Custom type heartbeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HeartbeatCycle_Type.__name__ = "Integer32"
_HeartbeatCycle_Object = MibScalar
heartbeatCycle = _HeartbeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3, 4),
    _HeartbeatCycle_Type()
)
heartbeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartbeatCycle.setStatus("current")


class _HeartbeatCount_Type(Integer32):
    """Custom type heartbeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HeartbeatCount_Type.__name__ = "Integer32"
_HeartbeatCount_Object = MibScalar
heartbeatCount = _HeartbeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3, 5),
    _HeartbeatCount_Type()
)
heartbeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartbeatCount.setStatus("current")


class _HeartbeatAction_Type(Integer32):
    """Custom type heartbeatAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_HeartbeatAction_Type.__name__ = "Integer32"
_HeartbeatAction_Object = MibScalar
heartbeatAction = _HeartbeatAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 3, 6),
    _HeartbeatAction_Type()
)
heartbeatAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartbeatAction.setStatus("current")
_MgcCfg_ObjectIdentity = ObjectIdentity
mgcCfg = _MgcCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4)
)


class _MgcPonNo_Type(Integer32):
    """Custom type mgcPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_MgcPonNo_Type.__name__ = "Integer32"
_MgcPonNo_Object = MibScalar
mgcPonNo = _MgcPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 1),
    _MgcPonNo_Type()
)
mgcPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgcPonNo.setStatus("current")


class _MgcOnuNo_Type(Integer32):
    """Custom type mgcOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MgcOnuNo_Type.__name__ = "Integer32"
_MgcOnuNo_Object = MibScalar
mgcOnuNo = _MgcOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 2),
    _MgcOnuNo_Type()
)
mgcOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgcOnuNo.setStatus("current")


class _MgPort_Type(Integer32):
    """Custom type mgPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MgPort_Type.__name__ = "Integer32"
_MgPort_Object = MibScalar
mgPort = _MgPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 3),
    _MgPort_Type()
)
mgPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgPort.setStatus("current")
_MgcIp_Type = IpAddress
_MgcIp_Object = MibScalar
mgcIp = _MgcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 4),
    _MgcIp_Type()
)
mgcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgcIp.setStatus("current")


class _MgcPort_Type(Integer32):
    """Custom type mgcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MgcPort_Type.__name__ = "Integer32"
_MgcPort_Object = MibScalar
mgcPort = _MgcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 5),
    _MgcPort_Type()
)
mgcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgcPort.setStatus("current")
_BakMgcIp_Type = IpAddress
_BakMgcIp_Object = MibScalar
bakMgcIp = _BakMgcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 6),
    _BakMgcIp_Type()
)
bakMgcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakMgcIp.setStatus("current")


class _BakMgcPort_Type(Integer32):
    """Custom type bakMgcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BakMgcPort_Type.__name__ = "Integer32"
_BakMgcPort_Object = MibScalar
bakMgcPort = _BakMgcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 7),
    _BakMgcPort_Type()
)
bakMgcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakMgcPort.setStatus("current")


class _MgcAction_Type(Integer32):
    """Custom type mgcAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_MgcAction_Type.__name__ = "Integer32"
_MgcAction_Object = MibScalar
mgcAction = _MgcAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 4, 8),
    _MgcAction_Type()
)
mgcAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgcAction.setStatus("current")
_H248ParamCfg_ObjectIdentity = ObjectIdentity
h248ParamCfg = _H248ParamCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5)
)


class _H248ParamPonNo_Type(Integer32):
    """Custom type h248ParamPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_H248ParamPonNo_Type.__name__ = "Integer32"
_H248ParamPonNo_Object = MibScalar
h248ParamPonNo = _H248ParamPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 1),
    _H248ParamPonNo_Type()
)
h248ParamPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamPonNo.setStatus("current")


class _H248ParamOnuNo_Type(Integer32):
    """Custom type h248ParamOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ParamOnuNo_Type.__name__ = "Integer32"
_H248ParamOnuNo_Object = MibScalar
h248ParamOnuNo = _H248ParamOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 2),
    _H248ParamOnuNo_Type()
)
h248ParamOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamOnuNo.setStatus("current")


class _H248ParamMGPortNo_Type(Integer32):
    """Custom type h248ParamMGPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ParamMGPortNo_Type.__name__ = "Integer32"
_H248ParamMGPortNo_Object = MibScalar
h248ParamMGPortNo = _H248ParamMGPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 3),
    _H248ParamMGPortNo_Type()
)
h248ParamMGPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamMGPortNo.setStatus("current")
_H248ParamMGCIP_Type = IpAddress
_H248ParamMGCIP_Object = MibScalar
h248ParamMGCIP = _H248ParamMGCIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 4),
    _H248ParamMGCIP_Type()
)
h248ParamMGCIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamMGCIP.setStatus("current")


class _H248ParamMgcComPortNo_Type(Integer32):
    """Custom type h248ParamMgcComPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_H248ParamMgcComPortNo_Type.__name__ = "Integer32"
_H248ParamMgcComPortNo_Object = MibScalar
h248ParamMgcComPortNo = _H248ParamMgcComPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 5),
    _H248ParamMgcComPortNo_Type()
)
h248ParamMgcComPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamMgcComPortNo.setStatus("current")
_H248ParamBackupMGCIP_Type = IpAddress
_H248ParamBackupMGCIP_Object = MibScalar
h248ParamBackupMGCIP = _H248ParamBackupMGCIP_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 6),
    _H248ParamBackupMGCIP_Type()
)
h248ParamBackupMGCIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamBackupMGCIP.setStatus("current")


class _H248ParamBackupMgcComPortNo_Type(Integer32):
    """Custom type h248ParamBackupMgcComPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_H248ParamBackupMgcComPortNo_Type.__name__ = "Integer32"
_H248ParamBackupMgcComPortNo_Object = MibScalar
h248ParamBackupMgcComPortNo = _H248ParamBackupMgcComPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 7),
    _H248ParamBackupMgcComPortNo_Type()
)
h248ParamBackupMgcComPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamBackupMgcComPortNo.setStatus("current")


class _H248ParamRegMode_Type(Integer32):
    """Custom type h248ParamRegMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("IPAddr", 0),
          ("Domain_name", 1),
          ("Device_name", 2))
    )


_H248ParamRegMode_Type.__name__ = "Integer32"
_H248ParamRegMode_Object = MibScalar
h248ParamRegMode = _H248ParamRegMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 8),
    _H248ParamRegMode_Type()
)
h248ParamRegMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamRegMode.setStatus("current")


class _H248ParamMID_Type(OctetString):
    """Custom type h248ParamMID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_H248ParamMID_Type.__name__ = "OctetString"
_H248ParamMID_Object = MibScalar
h248ParamMID = _H248ParamMID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 9),
    _H248ParamMID_Type()
)
h248ParamMID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamMID.setStatus("current")


class _H248ParamHBMode_Type(Integer32):
    """Custom type h248ParamHBMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Disable", 0),
          ("H248", 1))
    )


_H248ParamHBMode_Type.__name__ = "Integer32"
_H248ParamHBMode_Object = MibScalar
h248ParamHBMode = _H248ParamHBMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 10),
    _H248ParamHBMode_Type()
)
h248ParamHBMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamHBMode.setStatus("current")


class _H248ParamHBCycle_Type(Integer32):
    """Custom type h248ParamHBCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_H248ParamHBCycle_Type.__name__ = "Integer32"
_H248ParamHBCycle_Object = MibScalar
h248ParamHBCycle = _H248ParamHBCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 11),
    _H248ParamHBCycle_Type()
)
h248ParamHBCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamHBCycle.setStatus("current")


class _H248ParamHBCount_Type(Integer32):
    """Custom type h248ParamHBCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_H248ParamHBCount_Type.__name__ = "Integer32"
_H248ParamHBCount_Object = MibScalar
h248ParamHBCount = _H248ParamHBCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 12),
    _H248ParamHBCount_Type()
)
h248ParamHBCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamHBCount.setStatus("current")


class _H248ParamAction_Type(Integer32):
    """Custom type h248ParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("Commit", 1)
    )


_H248ParamAction_Type.__name__ = "Integer32"
_H248ParamAction_Object = MibScalar
h248ParamAction = _H248ParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 1, 5, 13),
    _H248ParamAction_Type()
)
h248ParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248ParamAction.setStatus("current")
_H248UserTid_ObjectIdentity = ObjectIdentity
h248UserTid = _H248UserTid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 2)
)


class _UserTidPonNo_Type(Integer32):
    """Custom type userTidPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_UserTidPonNo_Type.__name__ = "Integer32"
_UserTidPonNo_Object = MibScalar
userTidPonNo = _UserTidPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 2, 1),
    _UserTidPonNo_Type()
)
userTidPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userTidPonNo.setStatus("current")


class _UserTidOnuNo_Type(Integer32):
    """Custom type userTidOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_UserTidOnuNo_Type.__name__ = "Integer32"
_UserTidOnuNo_Object = MibScalar
userTidOnuNo = _UserTidOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 2, 2),
    _UserTidOnuNo_Type()
)
userTidOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userTidOnuNo.setStatus("current")


class _UserTidPotsNo_Type(Integer32):
    """Custom type userTidPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_UserTidPotsNo_Type.__name__ = "Integer32"
_UserTidPotsNo_Object = MibScalar
userTidPotsNo = _UserTidPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 2, 3),
    _UserTidPotsNo_Type()
)
userTidPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userTidPotsNo.setStatus("current")


class _UserTid_Type(OctetString):
    """Custom type userTid based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_UserTid_Type.__name__ = "OctetString"
_UserTid_Object = MibScalar
userTid = _UserTid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 2, 4),
    _UserTid_Type()
)
userTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userTid.setStatus("current")


class _UserTidAction_Type(Integer32):
    """Custom type userTidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_UserTidAction_Type.__name__ = "Integer32"
_UserTidAction_Object = MibScalar
userTidAction = _UserTidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 2, 5),
    _UserTidAction_Type()
)
userTidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userTidAction.setStatus("current")
_H248RtpTid_ObjectIdentity = ObjectIdentity
h248RtpTid = _H248RtpTid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4)
)


class _RtpTidPonNo_Type(Integer32):
    """Custom type rtpTidPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_RtpTidPonNo_Type.__name__ = "Integer32"
_RtpTidPonNo_Object = MibScalar
rtpTidPonNo = _RtpTidPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 1),
    _RtpTidPonNo_Type()
)
rtpTidPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpTidPonNo.setStatus("current")


class _RtpTidOnuNo_Type(Integer32):
    """Custom type rtpTidOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RtpTidOnuNo_Type.__name__ = "Integer32"
_RtpTidOnuNo_Object = MibScalar
rtpTidOnuNo = _RtpTidOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 2),
    _RtpTidOnuNo_Type()
)
rtpTidOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpTidOnuNo.setStatus("current")


class _RtpTidNumber_Type(Integer32):
    """Custom type rtpTidNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_RtpTidNumber_Type.__name__ = "Integer32"
_RtpTidNumber_Object = MibScalar
rtpTidNumber = _RtpTidNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 3),
    _RtpTidNumber_Type()
)
rtpTidNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpTidNumber.setStatus("current")
_RtpTidPrefix_Type = OctetString
_RtpTidPrefix_Object = MibScalar
rtpTidPrefix = _RtpTidPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 4),
    _RtpTidPrefix_Type()
)
rtpTidPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpTidPrefix.setStatus("current")


class _DigitBegin0_Type(Unsigned32):
    """Custom type digitBegin0 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_DigitBegin0_Type.__name__ = "Unsigned32"
_DigitBegin0_Object = MibScalar
digitBegin0 = _DigitBegin0_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 5),
    _DigitBegin0_Type()
)
digitBegin0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitBegin0.setStatus("current")


class _DigitBegin1_Type(Unsigned32):
    """Custom type digitBegin1 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_DigitBegin1_Type.__name__ = "Unsigned32"
_DigitBegin1_Object = MibScalar
digitBegin1 = _DigitBegin1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 6),
    _DigitBegin1_Type()
)
digitBegin1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitBegin1.setStatus("current")


class _RtpTidMode_Type(Integer32):
    """Custom type rtpTidMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("align", 1),
          ("unalign", 2))
    )


_RtpTidMode_Type.__name__ = "Integer32"
_RtpTidMode_Object = MibScalar
rtpTidMode = _RtpTidMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 7),
    _RtpTidMode_Type()
)
rtpTidMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpTidMode.setStatus("current")


class _DigitLength_Type(Integer32):
    """Custom type digitLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_DigitLength_Type.__name__ = "Integer32"
_DigitLength_Object = MibScalar
digitLength = _DigitLength_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 8),
    _DigitLength_Type()
)
digitLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitLength.setStatus("current")


class _RtpTidAction_Type(Integer32):
    """Custom type rtpTidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_RtpTidAction_Type.__name__ = "Integer32"
_RtpTidAction_Object = MibScalar
rtpTidAction = _RtpTidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 3, 4, 9),
    _RtpTidAction_Type()
)
rtpTidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpTidAction.setStatus("current")
_VoipSipCfg_ObjectIdentity = ObjectIdentity
voipSipCfg = _VoipSipCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4)
)
_SipProParam_ObjectIdentity = ObjectIdentity
sipProParam = _SipProParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1)
)
_HbeatCfg_ObjectIdentity = ObjectIdentity
hbeatCfg = _HbeatCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1)
)


class _HbeatPonNo_Type(Integer32):
    """Custom type hbeatPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_HbeatPonNo_Type.__name__ = "Integer32"
_HbeatPonNo_Object = MibScalar
hbeatPonNo = _HbeatPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 1),
    _HbeatPonNo_Type()
)
hbeatPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hbeatPonNo.setStatus("current")


class _HbeatOnuNo_Type(Integer32):
    """Custom type hbeatOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HbeatOnuNo_Type.__name__ = "Integer32"
_HbeatOnuNo_Object = MibScalar
hbeatOnuNo = _HbeatOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 2),
    _HbeatOnuNo_Type()
)
hbeatOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hbeatOnuNo.setStatus("current")


class _HbeartEn_Type(Integer32):
    """Custom type hbeartEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_HbeartEn_Type.__name__ = "Integer32"
_HbeartEn_Object = MibScalar
hbeartEn = _HbeartEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 3),
    _HbeartEn_Type()
)
hbeartEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hbeartEn.setStatus("current")


class _HbeatCycle_Type(Integer32):
    """Custom type hbeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HbeatCycle_Type.__name__ = "Integer32"
_HbeatCycle_Object = MibScalar
hbeatCycle = _HbeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 4),
    _HbeatCycle_Type()
)
hbeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hbeatCycle.setStatus("current")


class _HbeatCount_Type(Integer32):
    """Custom type hbeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HbeatCount_Type.__name__ = "Integer32"
_HbeatCount_Object = MibScalar
hbeatCount = _HbeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 5),
    _HbeatCount_Type()
)
hbeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hbeatCount.setStatus("current")


class _RegInterVal_Type(Integer32):
    """Custom type regInterVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RegInterVal_Type.__name__ = "Integer32"
_RegInterVal_Object = MibScalar
regInterVal = _RegInterVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 6),
    _RegInterVal_Type()
)
regInterVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regInterVal.setStatus("current")


class _HbeatAction_Type(Integer32):
    """Custom type hbeatAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_HbeatAction_Type.__name__ = "Integer32"
_HbeatAction_Object = MibScalar
hbeatAction = _HbeatAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 1, 7),
    _HbeatAction_Type()
)
hbeatAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hbeatAction.setStatus("current")
_ServIpCfg_ObjectIdentity = ObjectIdentity
servIpCfg = _ServIpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2)
)


class _ServIpPonNo_Type(Integer32):
    """Custom type servIpPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ServIpPonNo_Type.__name__ = "Integer32"
_ServIpPonNo_Object = MibScalar
servIpPonNo = _ServIpPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2, 1),
    _ServIpPonNo_Type()
)
servIpPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    servIpPonNo.setStatus("current")


class _ServIpOnuNo_Type(Integer32):
    """Custom type servIpOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ServIpOnuNo_Type.__name__ = "Integer32"
_ServIpOnuNo_Object = MibScalar
servIpOnuNo = _ServIpOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2, 2),
    _ServIpOnuNo_Type()
)
servIpOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    servIpOnuNo.setStatus("current")


class _MgPortVal_Type(Integer32):
    """Custom type mgPortVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MgPortVal_Type.__name__ = "Integer32"
_MgPortVal_Object = MibScalar
mgPortVal = _MgPortVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2, 3),
    _MgPortVal_Type()
)
mgPortVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgPortVal.setStatus("current")
_ServIpVal_Type = IpAddress
_ServIpVal_Object = MibScalar
servIpVal = _ServIpVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2, 4),
    _ServIpVal_Type()
)
servIpVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    servIpVal.setStatus("current")


class _ServPortVal_Type(Integer32):
    """Custom type servPortVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ServPortVal_Type.__name__ = "Integer32"
_ServPortVal_Object = MibScalar
servPortVal = _ServPortVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2, 5),
    _ServPortVal_Type()
)
servPortVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    servPortVal.setStatus("current")


class _ServIpAction_Type(Integer32):
    """Custom type servIpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_ServIpAction_Type.__name__ = "Integer32"
_ServIpAction_Object = MibScalar
servIpAction = _ServIpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 2, 6),
    _ServIpAction_Type()
)
servIpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    servIpAction.setStatus("current")
_ProxyServCfg_ObjectIdentity = ObjectIdentity
proxyServCfg = _ProxyServCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3)
)


class _ProxySrvPonNo_Type(Integer32):
    """Custom type proxySrvPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ProxySrvPonNo_Type.__name__ = "Integer32"
_ProxySrvPonNo_Object = MibScalar
proxySrvPonNo = _ProxySrvPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 1),
    _ProxySrvPonNo_Type()
)
proxySrvPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxySrvPonNo.setStatus("current")


class _ProxySrvOnuNo_Type(Integer32):
    """Custom type proxySrvOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ProxySrvOnuNo_Type.__name__ = "Integer32"
_ProxySrvOnuNo_Object = MibScalar
proxySrvOnuNo = _ProxySrvOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 2),
    _ProxySrvOnuNo_Type()
)
proxySrvOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxySrvOnuNo.setStatus("current")
_ProxySrv_Type = IpAddress
_ProxySrv_Object = MibScalar
proxySrv = _ProxySrv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 3),
    _ProxySrv_Type()
)
proxySrv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxySrv.setStatus("current")


class _ProxySrvPort_Type(Integer32):
    """Custom type proxySrvPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ProxySrvPort_Type.__name__ = "Integer32"
_ProxySrvPort_Object = MibScalar
proxySrvPort = _ProxySrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 4),
    _ProxySrvPort_Type()
)
proxySrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxySrvPort.setStatus("current")
_BakProxySrv_Type = IpAddress
_BakProxySrv_Object = MibScalar
bakProxySrv = _BakProxySrv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 5),
    _BakProxySrv_Type()
)
bakProxySrv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakProxySrv.setStatus("current")


class _BakProxySrvPort_Type(Integer32):
    """Custom type bakProxySrvPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BakProxySrvPort_Type.__name__ = "Integer32"
_BakProxySrvPort_Object = MibScalar
bakProxySrvPort = _BakProxySrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 6),
    _BakProxySrvPort_Type()
)
bakProxySrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakProxySrvPort.setStatus("current")


class _ProxySrvAction_Type(Integer32):
    """Custom type proxySrvAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_ProxySrvAction_Type.__name__ = "Integer32"
_ProxySrvAction_Object = MibScalar
proxySrvAction = _ProxySrvAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 3, 7),
    _ProxySrvAction_Type()
)
proxySrvAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxySrvAction.setStatus("current")
_RegServCfg_ObjectIdentity = ObjectIdentity
regServCfg = _RegServCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4)
)


class _RegSrvPonNo_Type(Integer32):
    """Custom type regSrvPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_RegSrvPonNo_Type.__name__ = "Integer32"
_RegSrvPonNo_Object = MibScalar
regSrvPonNo = _RegSrvPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 1),
    _RegSrvPonNo_Type()
)
regSrvPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regSrvPonNo.setStatus("current")


class _RegSrvOnuNo_Type(Integer32):
    """Custom type regSrvOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RegSrvOnuNo_Type.__name__ = "Integer32"
_RegSrvOnuNo_Object = MibScalar
regSrvOnuNo = _RegSrvOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 2),
    _RegSrvOnuNo_Type()
)
regSrvOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regSrvOnuNo.setStatus("current")
_RegSrv_Type = IpAddress
_RegSrv_Object = MibScalar
regSrv = _RegSrv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 3),
    _RegSrv_Type()
)
regSrv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regSrv.setStatus("current")


class _RegSrvPort_Type(Integer32):
    """Custom type regSrvPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RegSrvPort_Type.__name__ = "Integer32"
_RegSrvPort_Object = MibScalar
regSrvPort = _RegSrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 4),
    _RegSrvPort_Type()
)
regSrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regSrvPort.setStatus("current")
_BakRegSrv_Type = IpAddress
_BakRegSrv_Object = MibScalar
bakRegSrv = _BakRegSrv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 5),
    _BakRegSrv_Type()
)
bakRegSrv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakRegSrv.setStatus("current")


class _BakRegSrvPort_Type(Integer32):
    """Custom type bakRegSrvPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BakRegSrvPort_Type.__name__ = "Integer32"
_BakRegSrvPort_Object = MibScalar
bakRegSrvPort = _BakRegSrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 6),
    _BakRegSrvPort_Type()
)
bakRegSrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakRegSrvPort.setStatus("current")


class _RegSrvAction_Type(Integer32):
    """Custom type regSrvAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_RegSrvAction_Type.__name__ = "Integer32"
_RegSrvAction_Object = MibScalar
regSrvAction = _RegSrvAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 4, 7),
    _RegSrvAction_Type()
)
regSrvAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regSrvAction.setStatus("current")
_SipParamCfg_ObjectIdentity = ObjectIdentity
sipParamCfg = _SipParamCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5)
)


class _SipParamPonNo_Type(Integer32):
    """Custom type sipParamPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_SipParamPonNo_Type.__name__ = "Integer32"
_SipParamPonNo_Object = MibScalar
sipParamPonNo = _SipParamPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 1),
    _SipParamPonNo_Type()
)
sipParamPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamPonNo.setStatus("current")


class _SipParamOnuNo_Type(Integer32):
    """Custom type sipParamOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipParamOnuNo_Type.__name__ = "Integer32"
_SipParamOnuNo_Object = MibScalar
sipParamOnuNo = _SipParamOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 2),
    _SipParamOnuNo_Type()
)
sipParamOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamOnuNo.setStatus("current")


class _SipParamMGPortNo_Type(Integer32):
    """Custom type sipParamMGPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamMGPortNo_Type.__name__ = "Integer32"
_SipParamMGPortNo_Object = MibScalar
sipParamMGPortNo = _SipParamMGPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 3),
    _SipParamMGPortNo_Type()
)
sipParamMGPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamMGPortNo.setStatus("current")
_SipParamSipProxyServIp_Type = IpAddress
_SipParamSipProxyServIp_Object = MibScalar
sipParamSipProxyServIp = _SipParamSipProxyServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 4),
    _SipParamSipProxyServIp_Type()
)
sipParamSipProxyServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamSipProxyServIp.setStatus("current")


class _SipParamSipProxyServPortNo_Type(Integer32):
    """Custom type sipParamSipProxyServPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamSipProxyServPortNo_Type.__name__ = "Integer32"
_SipParamSipProxyServPortNo_Object = MibScalar
sipParamSipProxyServPortNo = _SipParamSipProxyServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 5),
    _SipParamSipProxyServPortNo_Type()
)
sipParamSipProxyServPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamSipProxyServPortNo.setStatus("current")
_SipParamBackupSipProxyServIp_Type = IpAddress
_SipParamBackupSipProxyServIp_Object = MibScalar
sipParamBackupSipProxyServIp = _SipParamBackupSipProxyServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 6),
    _SipParamBackupSipProxyServIp_Type()
)
sipParamBackupSipProxyServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamBackupSipProxyServIp.setStatus("current")


class _SipParamBackupSipProxyServPortNo_Type(Integer32):
    """Custom type sipParamBackupSipProxyServPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamBackupSipProxyServPortNo_Type.__name__ = "Integer32"
_SipParamBackupSipProxyServPortNo_Object = MibScalar
sipParamBackupSipProxyServPortNo = _SipParamBackupSipProxyServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 7),
    _SipParamBackupSipProxyServPortNo_Type()
)
sipParamBackupSipProxyServPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamBackupSipProxyServPortNo.setStatus("current")
_SipParamSipRegServIp_Type = IpAddress
_SipParamSipRegServIp_Object = MibScalar
sipParamSipRegServIp = _SipParamSipRegServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 8),
    _SipParamSipRegServIp_Type()
)
sipParamSipRegServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamSipRegServIp.setStatus("current")


class _SipParamSipRegServPortNo_Type(Integer32):
    """Custom type sipParamSipRegServPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamSipRegServPortNo_Type.__name__ = "Integer32"
_SipParamSipRegServPortNo_Object = MibScalar
sipParamSipRegServPortNo = _SipParamSipRegServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 9),
    _SipParamSipRegServPortNo_Type()
)
sipParamSipRegServPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamSipRegServPortNo.setStatus("current")
_SipParamBackupSipRegServIp_Type = IpAddress
_SipParamBackupSipRegServIp_Object = MibScalar
sipParamBackupSipRegServIp = _SipParamBackupSipRegServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 10),
    _SipParamBackupSipRegServIp_Type()
)
sipParamBackupSipRegServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamBackupSipRegServIp.setStatus("current")


class _SipParamBackupSipRegServPortNo_Type(Integer32):
    """Custom type sipParamBackupSipRegServPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamBackupSipRegServPortNo_Type.__name__ = "Integer32"
_SipParamBackupSipRegServPortNo_Object = MibScalar
sipParamBackupSipRegServPortNo = _SipParamBackupSipRegServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 11),
    _SipParamBackupSipRegServPortNo_Type()
)
sipParamBackupSipRegServPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamBackupSipRegServPortNo.setStatus("current")
_SipParamOutBoundServIp_Type = IpAddress
_SipParamOutBoundServIp_Object = MibScalar
sipParamOutBoundServIp = _SipParamOutBoundServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 12),
    _SipParamOutBoundServIp_Type()
)
sipParamOutBoundServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamOutBoundServIp.setStatus("current")


class _SipParamOutBoundServPortNo_Type(Integer32):
    """Custom type sipParamOutBoundServPortNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamOutBoundServPortNo_Type.__name__ = "Integer32"
_SipParamOutBoundServPortNo_Object = MibScalar
sipParamOutBoundServPortNo = _SipParamOutBoundServPortNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 13),
    _SipParamOutBoundServPortNo_Type()
)
sipParamOutBoundServPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamOutBoundServPortNo.setStatus("current")
_SipParamRegInterval_Type = Integer32
_SipParamRegInterval_Object = MibScalar
sipParamRegInterval = _SipParamRegInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 14),
    _SipParamRegInterval_Type()
)
sipParamRegInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamRegInterval.setStatus("current")


class _SipParamHeartbeatEn_Type(Integer32):
    """Custom type sipParamHeartbeatEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("Enable", 0),
          ("Disable", 1))
    )


_SipParamHeartbeatEn_Type.__name__ = "Integer32"
_SipParamHeartbeatEn_Object = MibScalar
sipParamHeartbeatEn = _SipParamHeartbeatEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 15),
    _SipParamHeartbeatEn_Type()
)
sipParamHeartbeatEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamHeartbeatEn.setStatus("current")


class _SipParamHeartbeatCycle_Type(Integer32):
    """Custom type sipParamHeartbeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipParamHeartbeatCycle_Type.__name__ = "Integer32"
_SipParamHeartbeatCycle_Object = MibScalar
sipParamHeartbeatCycle = _SipParamHeartbeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 16),
    _SipParamHeartbeatCycle_Type()
)
sipParamHeartbeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamHeartbeatCycle.setStatus("current")


class _SipParamHeartbeatCount_Type(Integer32):
    """Custom type sipParamHeartbeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipParamHeartbeatCount_Type.__name__ = "Integer32"
_SipParamHeartbeatCount_Object = MibScalar
sipParamHeartbeatCount = _SipParamHeartbeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 17),
    _SipParamHeartbeatCount_Type()
)
sipParamHeartbeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamHeartbeatCount.setStatus("current")


class _SipParamAction_Type(Integer32):
    """Custom type sipParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("Commit", 1)
    )


_SipParamAction_Type.__name__ = "Integer32"
_SipParamAction_Object = MibScalar
sipParamAction = _SipParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 1, 5, 18),
    _SipParamAction_Type()
)
sipParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamAction.setStatus("current")
_SipUserParam_ObjectIdentity = ObjectIdentity
sipUserParam = _SipUserParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2)
)


class _SipUserPonNo_Type(Integer32):
    """Custom type sipUserPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_SipUserPonNo_Type.__name__ = "Integer32"
_SipUserPonNo_Object = MibScalar
sipUserPonNo = _SipUserPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 1),
    _SipUserPonNo_Type()
)
sipUserPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserPonNo.setStatus("current")


class _SipUserOnuNo_Type(Integer32):
    """Custom type sipUserOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipUserOnuNo_Type.__name__ = "Integer32"
_SipUserOnuNo_Object = MibScalar
sipUserOnuNo = _SipUserOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 2),
    _SipUserOnuNo_Type()
)
sipUserOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserOnuNo.setStatus("current")


class _SipUserPotsNo_Type(Integer32):
    """Custom type sipUserPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SipUserPotsNo_Type.__name__ = "Integer32"
_SipUserPotsNo_Object = MibScalar
sipUserPotsNo = _SipUserPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 3),
    _SipUserPotsNo_Type()
)
sipUserPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserPotsNo.setStatus("current")
_SipUserAccount_Type = OctetString
_SipUserAccount_Object = MibScalar
sipUserAccount = _SipUserAccount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 4),
    _SipUserAccount_Type()
)
sipUserAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserAccount.setStatus("current")
_SipUserName_Type = OctetString
_SipUserName_Object = MibScalar
sipUserName = _SipUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 5),
    _SipUserName_Type()
)
sipUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserName.setStatus("current")
_SipUserPw_Type = OctetString
_SipUserPw_Object = MibScalar
sipUserPw = _SipUserPw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 6),
    _SipUserPw_Type()
)
sipUserPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserPw.setStatus("current")


class _SipUserAction_Type(Integer32):
    """Custom type sipUserAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_SipUserAction_Type.__name__ = "Integer32"
_SipUserAction_Object = MibScalar
sipUserAction = _SipUserAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 2, 7),
    _SipUserAction_Type()
)
sipUserAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipUserAction.setStatus("current")
_FaxModemCfg_ObjectIdentity = ObjectIdentity
faxModemCfg = _FaxModemCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 3)
)


class _FaxPonNo_Type(Integer32):
    """Custom type faxPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_FaxPonNo_Type.__name__ = "Integer32"
_FaxPonNo_Object = MibScalar
faxPonNo = _FaxPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 3, 1),
    _FaxPonNo_Type()
)
faxPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    faxPonNo.setStatus("current")


class _FaxOnuNo_Type(Integer32):
    """Custom type faxOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_FaxOnuNo_Type.__name__ = "Integer32"
_FaxOnuNo_Object = MibScalar
faxOnuNo = _FaxOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 3, 2),
    _FaxOnuNo_Type()
)
faxOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    faxOnuNo.setStatus("current")


class _T38En_Type(Integer32):
    """Custom type t38En based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_T38En_Type.__name__ = "Integer32"
_T38En_Object = MibScalar
t38En = _T38En_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 3, 3),
    _T38En_Type()
)
t38En.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    t38En.setStatus("current")


class _Control_Type(Integer32):
    """Custom type control based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("negotiation", 1),
          ("autovbd", 2))
    )


_Control_Type.__name__ = "Integer32"
_Control_Object = MibScalar
control = _Control_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 3, 4),
    _Control_Type()
)
control.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    control.setStatus("current")


class _FaxModemAction_Type(Integer32):
    """Custom type faxModemAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_FaxModemAction_Type.__name__ = "Integer32"
_FaxModemAction_Object = MibScalar
faxModemAction = _FaxModemAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 3, 5),
    _FaxModemAction_Type()
)
faxModemAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    faxModemAction.setStatus("current")
_IadOperCfg_ObjectIdentity = ObjectIdentity
iadOperCfg = _IadOperCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 4)
)


class _IadOperPonNo_Type(Integer32):
    """Custom type iadOperPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_IadOperPonNo_Type.__name__ = "Integer32"
_IadOperPonNo_Object = MibScalar
iadOperPonNo = _IadOperPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 4, 1),
    _IadOperPonNo_Type()
)
iadOperPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iadOperPonNo.setStatus("current")


class _IadOperOnuNo_Type(Integer32):
    """Custom type iadOperOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IadOperOnuNo_Type.__name__ = "Integer32"
_IadOperOnuNo_Object = MibScalar
iadOperOnuNo = _IadOperOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 4, 2),
    _IadOperOnuNo_Type()
)
iadOperOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iadOperOnuNo.setStatus("current")


class _IadOperation_Type(Integer32):
    """Custom type iadOperation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("reregister", 1),
          ("deregister", 2),
          ("reset", 3))
    )


_IadOperation_Type.__name__ = "Integer32"
_IadOperation_Object = MibScalar
iadOperation = _IadOperation_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 4, 3),
    _IadOperation_Type()
)
iadOperation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iadOperation.setStatus("current")


class _IadOperAction_Type(Integer32):
    """Custom type iadOperAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_IadOperAction_Type.__name__ = "Integer32"
_IadOperAction_Object = MibScalar
iadOperAction = _IadOperAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 4, 4),
    _IadOperAction_Type()
)
iadOperAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iadOperAction.setStatus("current")
_SipDigitCfg_ObjectIdentity = ObjectIdentity
sipDigitCfg = _SipDigitCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5)
)


class _DigitPonNo_Type(Integer32):
    """Custom type digitPonNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DigitPonNo_Type.__name__ = "Integer32"
_DigitPonNo_Object = MibScalar
digitPonNo = _DigitPonNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5, 1),
    _DigitPonNo_Type()
)
digitPonNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitPonNo.setStatus("current")


class _DigitOnuNo_Type(Integer32):
    """Custom type digitOnuNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DigitOnuNo_Type.__name__ = "Integer32"
_DigitOnuNo_Object = MibScalar
digitOnuNo = _DigitOnuNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5, 2),
    _DigitOnuNo_Type()
)
digitOnuNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitOnuNo.setStatus("current")


class _DigBlockNum_Type(Integer32):
    """Custom type digBlockNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DigBlockNum_Type.__name__ = "Integer32"
_DigBlockNum_Object = MibScalar
digBlockNum = _DigBlockNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5, 3),
    _DigBlockNum_Type()
)
digBlockNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digBlockNum.setStatus("current")


class _DigMapId_Type(Integer32):
    """Custom type digMapId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DigMapId_Type.__name__ = "Integer32"
_DigMapId_Object = MibScalar
digMapId = _DigMapId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5, 4),
    _DigMapId_Type()
)
digMapId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digMapId.setStatus("current")
_DigitMap_Type = OctetString
_DigitMap_Object = MibScalar
digitMap = _DigitMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5, 5),
    _DigitMap_Type()
)
digitMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitMap.setStatus("current")


class _SipDigitAction_Type(Integer32):
    """Custom type sipDigitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_SipDigitAction_Type.__name__ = "Integer32"
_SipDigitAction_Object = MibScalar
sipDigitAction = _SipDigitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 6, 4, 5, 6),
    _SipDigitAction_Type()
)
sipDigitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipDigitAction.setStatus("current")
_OnuAlarmShow_ObjectIdentity = ObjectIdentity
onuAlarmShow = _OnuAlarmShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7)
)
_OnuAlarmPonTable_Object = MibTable
onuAlarmPonTable = _OnuAlarmPonTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1)
)
if mibBuilder.loadTexts:
    onuAlarmPonTable.setStatus("current")
_OnuAlarmPonEntry_Object = MibTableRow
onuAlarmPonEntry = _OnuAlarmPonEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1)
)
onuAlarmPonEntry.setIndexNames(
    (0, "V1600D", "onuAlarmPonIndex"),
    (0, "V1600D", "onuAlarmPonOnuIndex"),
    (0, "V1600D", "onuAlarmPonType"),
)
if mibBuilder.loadTexts:
    onuAlarmPonEntry.setStatus("current")
_OnuAlarmPonIndex_Type = Integer32
_OnuAlarmPonIndex_Object = MibTableColumn
onuAlarmPonIndex = _OnuAlarmPonIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1, 1),
    _OnuAlarmPonIndex_Type()
)
onuAlarmPonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPonIndex.setStatus("current")
_OnuAlarmPonOnuIndex_Type = Integer32
_OnuAlarmPonOnuIndex_Object = MibTableColumn
onuAlarmPonOnuIndex = _OnuAlarmPonOnuIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1, 2),
    _OnuAlarmPonOnuIndex_Type()
)
onuAlarmPonOnuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPonOnuIndex.setStatus("current")


class _OnuAlarmPonType_Type(Integer32):
    """Custom type onuAlarmPonType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("rxPowerHighAlarm", 1),
          ("rxPowerLowAlarm", 2),
          ("txPowerHighAlarm", 3),
          ("txPowerLowAlarm", 4),
          ("txBiasHighAlarm", 5),
          ("txBiasLowAlarm", 6),
          ("vccHighAlarm", 7),
          ("vccLowAlarm", 8),
          ("tempHighAlarm", 9),
          ("tempLowAlarm", 10),
          ("rxPowerHighWarn", 11),
          ("rxPowerLowWarn", 12),
          ("txPowerHighWarn", 13),
          ("txPowerLowWarn", 14),
          ("txBiasHighWarn", 15),
          ("txBiasLowWarn", 16),
          ("vccHighWarn", 17),
          ("vccLowWarn", 18),
          ("tempHighWarn", 19),
          ("tempLowWarn", 20))
    )


_OnuAlarmPonType_Type.__name__ = "Integer32"
_OnuAlarmPonType_Object = MibTableColumn
onuAlarmPonType = _OnuAlarmPonType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1, 3),
    _OnuAlarmPonType_Type()
)
onuAlarmPonType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPonType.setStatus("current")


class _OnuAlarmPonEnable_Type(Integer32):
    """Custom type onuAlarmPonEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAlarmPonEnable_Type.__name__ = "Integer32"
_OnuAlarmPonEnable_Object = MibTableColumn
onuAlarmPonEnable = _OnuAlarmPonEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1, 4),
    _OnuAlarmPonEnable_Type()
)
onuAlarmPonEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPonEnable.setStatus("current")
_OnuAlarmPonAlarmThr_Type = OctetString
_OnuAlarmPonAlarmThr_Object = MibTableColumn
onuAlarmPonAlarmThr = _OnuAlarmPonAlarmThr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1, 5),
    _OnuAlarmPonAlarmThr_Type()
)
onuAlarmPonAlarmThr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPonAlarmThr.setStatus("current")
_OnuAlarmPonClearThr_Type = OctetString
_OnuAlarmPonClearThr_Object = MibTableColumn
onuAlarmPonClearThr = _OnuAlarmPonClearThr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 1, 1, 6),
    _OnuAlarmPonClearThr_Type()
)
onuAlarmPonClearThr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPonClearThr.setStatus("current")
_OnuAlarmPortTable_Object = MibTable
onuAlarmPortTable = _OnuAlarmPortTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2)
)
if mibBuilder.loadTexts:
    onuAlarmPortTable.setStatus("current")
_OnuAlarmPortEntry_Object = MibTableRow
onuAlarmPortEntry = _OnuAlarmPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1)
)
onuAlarmPortEntry.setIndexNames(
    (0, "V1600D", "onuAlarmPortPon"),
    (0, "V1600D", "onuAlarmPortOnu"),
    (0, "V1600D", "onuAlarmPortPort"),
)
if mibBuilder.loadTexts:
    onuAlarmPortEntry.setStatus("current")
_OnuAlarmPortPon_Type = Integer32
_OnuAlarmPortPon_Object = MibTableColumn
onuAlarmPortPon = _OnuAlarmPortPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 1),
    _OnuAlarmPortPon_Type()
)
onuAlarmPortPon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortPon.setStatus("current")
_OnuAlarmPortOnu_Type = Integer32
_OnuAlarmPortOnu_Object = MibTableColumn
onuAlarmPortOnu = _OnuAlarmPortOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 2),
    _OnuAlarmPortOnu_Type()
)
onuAlarmPortOnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortOnu.setStatus("current")
_OnuAlarmPortPort_Type = Integer32
_OnuAlarmPortPort_Object = MibTableColumn
onuAlarmPortPort = _OnuAlarmPortPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 3),
    _OnuAlarmPortPort_Type()
)
onuAlarmPortPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortPort.setStatus("current")


class _OnuAlarmPortAutoEnable_Type(Integer32):
    """Custom type onuAlarmPortAutoEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAlarmPortAutoEnable_Type.__name__ = "Integer32"
_OnuAlarmPortAutoEnable_Object = MibTableColumn
onuAlarmPortAutoEnable = _OnuAlarmPortAutoEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 4),
    _OnuAlarmPortAutoEnable_Type()
)
onuAlarmPortAutoEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortAutoEnable.setStatus("current")


class _OnuAlarmPortLosEnable_Type(Integer32):
    """Custom type onuAlarmPortLosEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAlarmPortLosEnable_Type.__name__ = "Integer32"
_OnuAlarmPortLosEnable_Object = MibTableColumn
onuAlarmPortLosEnable = _OnuAlarmPortLosEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 5),
    _OnuAlarmPortLosEnable_Type()
)
onuAlarmPortLosEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortLosEnable.setStatus("current")


class _OnuAlarmPortFailureEnable_Type(Integer32):
    """Custom type onuAlarmPortFailureEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAlarmPortFailureEnable_Type.__name__ = "Integer32"
_OnuAlarmPortFailureEnable_Object = MibTableColumn
onuAlarmPortFailureEnable = _OnuAlarmPortFailureEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 6),
    _OnuAlarmPortFailureEnable_Type()
)
onuAlarmPortFailureEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortFailureEnable.setStatus("current")


class _OnuAlarmPortLoopbackEnable_Type(Integer32):
    """Custom type onuAlarmPortLoopbackEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAlarmPortLoopbackEnable_Type.__name__ = "Integer32"
_OnuAlarmPortLoopbackEnable_Object = MibTableColumn
onuAlarmPortLoopbackEnable = _OnuAlarmPortLoopbackEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 7),
    _OnuAlarmPortLoopbackEnable_Type()
)
onuAlarmPortLoopbackEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortLoopbackEnable.setStatus("current")


class _OnuAlarmPortCongestEnable_Type(Integer32):
    """Custom type onuAlarmPortCongestEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAlarmPortCongestEnable_Type.__name__ = "Integer32"
_OnuAlarmPortCongestEnable_Object = MibTableColumn
onuAlarmPortCongestEnable = _OnuAlarmPortCongestEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 7, 2, 1, 8),
    _OnuAlarmPortCongestEnable_Type()
)
onuAlarmPortCongestEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAlarmPortCongestEnable.setStatus("current")
_OnuProfileCfg_ObjectIdentity = ObjectIdentity
onuProfileCfg = _OnuProfileCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8)
)
_ProfileEdit_ObjectIdentity = ObjectIdentity
profileEdit = _ProfileEdit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 1)
)


class _ProfileTpye_Type(Integer32):
    """Custom type profileTpye based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dba", 1),
          ("srv", 2),
          ("voip", 3),
          ("alarm", 4))
    )


_ProfileTpye_Type.__name__ = "Integer32"
_ProfileTpye_Object = MibScalar
profileTpye = _ProfileTpye_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 1, 1),
    _ProfileTpye_Type()
)
profileTpye.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileTpye.setStatus("current")


class _ProfileId_Type(Integer32):
    """Custom type profileId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_ProfileId_Type.__name__ = "Integer32"
_ProfileId_Object = MibScalar
profileId = _ProfileId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 1, 2),
    _ProfileId_Type()
)
profileId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileId.setStatus("current")


class _ProfileAction_Type(Integer32):
    """Custom type profileAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2),
          ("commit", 3))
    )


_ProfileAction_Type.__name__ = "Integer32"
_ProfileAction_Object = MibScalar
profileAction = _ProfileAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 1, 3),
    _ProfileAction_Type()
)
profileAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileAction.setStatus("current")
_DbaProfileEdit_ObjectIdentity = ObjectIdentity
dbaProfileEdit = _DbaProfileEdit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2)
)


class _DbaProfileNo_Type(Integer32):
    """Custom type dbaProfileNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_DbaProfileNo_Type.__name__ = "Integer32"
_DbaProfileNo_Object = MibScalar
dbaProfileNo = _DbaProfileNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 1),
    _DbaProfileNo_Type()
)
dbaProfileNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dbaProfileNo.setStatus("current")
_UpstreamCfg_ObjectIdentity = ObjectIdentity
upstreamCfg = _UpstreamCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 2)
)


class _UpstreamFir_Type(Integer32):
    """Custom type upstreamFir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 950000),
    )


_UpstreamFir_Type.__name__ = "Integer32"
_UpstreamFir_Object = MibScalar
upstreamFir = _UpstreamFir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 2, 1),
    _UpstreamFir_Type()
)
upstreamFir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upstreamFir.setStatus("current")


class _UpstreamCir_Type(Integer32):
    """Custom type upstreamCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 950000),
    )


_UpstreamCir_Type.__name__ = "Integer32"
_UpstreamCir_Object = MibScalar
upstreamCir = _UpstreamCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 2, 2),
    _UpstreamCir_Type()
)
upstreamCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upstreamCir.setStatus("current")


class _UpstreamPir_Type(Integer32):
    """Custom type upstreamPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 1000000),
    )


_UpstreamPir_Type.__name__ = "Integer32"
_UpstreamPir_Object = MibScalar
upstreamPir = _UpstreamPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 2, 3),
    _UpstreamPir_Type()
)
upstreamPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upstreamPir.setStatus("current")


class _UpstreamWeight_Type(Integer32):
    """Custom type upstreamWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_UpstreamWeight_Type.__name__ = "Integer32"
_UpstreamWeight_Object = MibScalar
upstreamWeight = _UpstreamWeight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 2, 4),
    _UpstreamWeight_Type()
)
upstreamWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upstreamWeight.setStatus("current")


class _UpstreamAction_Type(Integer32):
    """Custom type upstreamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_UpstreamAction_Type.__name__ = "Integer32"
_UpstreamAction_Object = MibScalar
upstreamAction = _UpstreamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 2, 5),
    _UpstreamAction_Type()
)
upstreamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upstreamAction.setStatus("current")
_DnstreamCfg_ObjectIdentity = ObjectIdentity
dnstreamCfg = _DnstreamCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 3)
)


class _DnstreamPir_Type(Integer32):
    """Custom type dnstreamPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_DnstreamPir_Type.__name__ = "Integer32"
_DnstreamPir_Object = MibScalar
dnstreamPir = _DnstreamPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 3, 1),
    _DnstreamPir_Type()
)
dnstreamPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnstreamPir.setStatus("current")


class _DnstreamWeight_Type(Integer32):
    """Custom type dnstreamWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DnstreamWeight_Type.__name__ = "Integer32"
_DnstreamWeight_Object = MibScalar
dnstreamWeight = _DnstreamWeight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 3, 2),
    _DnstreamWeight_Type()
)
dnstreamWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnstreamWeight.setStatus("current")


class _DnstreamAction_Type(Integer32):
    """Custom type dnstreamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_DnstreamAction_Type.__name__ = "Integer32"
_DnstreamAction_Object = MibScalar
dnstreamAction = _DnstreamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 2, 3, 3),
    _DnstreamAction_Type()
)
dnstreamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnstreamAction.setStatus("current")
_SrvProfileEdit_ObjectIdentity = ObjectIdentity
srvProfileEdit = _SrvProfileEdit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3)
)


class _SrvProfileNo_Type(Integer32):
    """Custom type srvProfileNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_SrvProfileNo_Type.__name__ = "Integer32"
_SrvProfileNo_Object = MibScalar
srvProfileNo = _SrvProfileNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 1),
    _SrvProfileNo_Type()
)
srvProfileNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvProfileNo.setStatus("current")
_OnuLanCountConfig_ObjectIdentity = ObjectIdentity
onuLanCountConfig = _OnuLanCountConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 2)
)


class _LanCount_Type(Integer32):
    """Custom type lanCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_LanCount_Type.__name__ = "Integer32"
_LanCount_Object = MibScalar
lanCount = _LanCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 2, 1),
    _LanCount_Type()
)
lanCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanCount.setStatus("current")


class _LanCountAction_Type(Integer32):
    """Custom type lanCountAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_LanCountAction_Type.__name__ = "Integer32"
_LanCountAction_Object = MibScalar
lanCountAction = _LanCountAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 2, 2),
    _LanCountAction_Type()
)
lanCountAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanCountAction.setStatus("current")
_OnuFastLeaveConfig_ObjectIdentity = ObjectIdentity
onuFastLeaveConfig = _OnuFastLeaveConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 3)
)


class _CtcFastLeave_Type(Integer32):
    """Custom type ctcFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcFastLeave_Type.__name__ = "Integer32"
_CtcFastLeave_Object = MibScalar
ctcFastLeave = _CtcFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 3, 1),
    _CtcFastLeave_Type()
)
ctcFastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcFastLeave.setStatus("current")


class _CtcFastLeaveAction_Type(Integer32):
    """Custom type ctcFastLeaveAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcFastLeaveAction_Type.__name__ = "Integer32"
_CtcFastLeaveAction_Object = MibScalar
ctcFastLeaveAction = _CtcFastLeaveAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 3, 2),
    _CtcFastLeaveAction_Type()
)
ctcFastLeaveAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcFastLeaveAction.setStatus("current")
_OnuFecModeConfig_ObjectIdentity = ObjectIdentity
onuFecModeConfig = _OnuFecModeConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 4)
)


class _CtcFecMode_Type(Integer32):
    """Custom type ctcFecMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcFecMode_Type.__name__ = "Integer32"
_CtcFecMode_Object = MibScalar
ctcFecMode = _CtcFecMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 4, 1),
    _CtcFecMode_Type()
)
ctcFecMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcFecMode.setStatus("current")


class _CtcFecModeAction_Type(Integer32):
    """Custom type ctcFecModeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcFecModeAction_Type.__name__ = "Integer32"
_CtcFecModeAction_Object = MibScalar
ctcFecModeAction = _CtcFecModeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 4, 2),
    _CtcFecModeAction_Type()
)
ctcFecModeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcFecModeAction.setStatus("current")
_CtcMcModeConfig_ObjectIdentity = ObjectIdentity
ctcMcModeConfig = _CtcMcModeConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 5)
)


class _CtcMcMode_Type(Integer32):
    """Custom type ctcMcMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snooping", 1),
          ("control", 2))
    )


_CtcMcMode_Type.__name__ = "Integer32"
_CtcMcMode_Object = MibScalar
ctcMcMode = _CtcMcMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 5, 1),
    _CtcMcMode_Type()
)
ctcMcMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcMode.setStatus("current")


class _CtcMcModeAction_Type(Integer32):
    """Custom type ctcMcModeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcMcModeAction_Type.__name__ = "Integer32"
_CtcMcModeAction_Object = MibScalar
ctcMcModeAction = _CtcMcModeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 5, 2),
    _CtcMcModeAction_Type()
)
ctcMcModeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcModeAction.setStatus("current")
_CtcMultiLlidConfig_ObjectIdentity = ObjectIdentity
ctcMultiLlidConfig = _CtcMultiLlidConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 6)
)


class _CtcMultiLlid_Type(Integer32):
    """Custom type ctcMultiLlid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_CtcMultiLlid_Type.__name__ = "Integer32"
_CtcMultiLlid_Object = MibScalar
ctcMultiLlid = _CtcMultiLlid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 6, 1),
    _CtcMultiLlid_Type()
)
ctcMultiLlid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMultiLlid.setStatus("current")


class _CtcMultiLlidAction_Type(Integer32):
    """Custom type ctcMultiLlidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcMultiLlidAction_Type.__name__ = "Integer32"
_CtcMultiLlidAction_Object = MibScalar
ctcMultiLlidAction = _CtcMultiLlidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 6, 2),
    _CtcMultiLlidAction_Type()
)
ctcMultiLlidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMultiLlidAction.setStatus("current")
_CtcActivePonConfig_ObjectIdentity = ObjectIdentity
ctcActivePonConfig = _CtcActivePonConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 7)
)


class _CtcActivePon_Type(Integer32):
    """Custom type ctcActivePon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_CtcActivePon_Type.__name__ = "Integer32"
_CtcActivePon_Object = MibScalar
ctcActivePon = _CtcActivePon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 7, 1),
    _CtcActivePon_Type()
)
ctcActivePon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcActivePon.setStatus("current")


class _CtcActivePonAction_Type(Integer32):
    """Custom type ctcActivePonAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcActivePonAction_Type.__name__ = "Integer32"
_CtcActivePonAction_Object = MibScalar
ctcActivePonAction = _CtcActivePonAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 7, 2),
    _CtcActivePonAction_Type()
)
ctcActivePonAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcActivePonAction.setStatus("current")
_CtcHoldoverConfig_ObjectIdentity = ObjectIdentity
ctcHoldoverConfig = _CtcHoldoverConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 8)
)


class _CtcHoldover_Type(Integer32):
    """Custom type ctcHoldover based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcHoldover_Type.__name__ = "Integer32"
_CtcHoldover_Object = MibScalar
ctcHoldover = _CtcHoldover_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 8, 1),
    _CtcHoldover_Type()
)
ctcHoldover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHoldover.setStatus("current")


class _CtcHoldoverAction_Type(Integer32):
    """Custom type ctcHoldoverAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcHoldoverAction_Type.__name__ = "Integer32"
_CtcHoldoverAction_Object = MibScalar
ctcHoldoverAction = _CtcHoldoverAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 8, 2),
    _CtcHoldoverAction_Type()
)
ctcHoldoverAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHoldoverAction.setStatus("current")
_OnuMgmtIpCfg_ObjectIdentity = ObjectIdentity
onuMgmtIpCfg = _OnuMgmtIpCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9)
)
_OnuMgmtIpAddr_Type = IpAddress
_OnuMgmtIpAddr_Object = MibScalar
onuMgmtIpAddr = _OnuMgmtIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 1),
    _OnuMgmtIpAddr_Type()
)
onuMgmtIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtIpAddr.setStatus("current")
_OnuMgmtIpMask_Type = IpAddress
_OnuMgmtIpMask_Object = MibScalar
onuMgmtIpMask = _OnuMgmtIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 2),
    _OnuMgmtIpMask_Type()
)
onuMgmtIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtIpMask.setStatus("current")
_OnuMgmtIpGw_Type = IpAddress
_OnuMgmtIpGw_Object = MibScalar
onuMgmtIpGw = _OnuMgmtIpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 3),
    _OnuMgmtIpGw_Type()
)
onuMgmtIpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtIpGw.setStatus("current")


class _OnuMgmtCvlan_Type(Integer32):
    """Custom type onuMgmtCvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_OnuMgmtCvlan_Type.__name__ = "Integer32"
_OnuMgmtCvlan_Object = MibScalar
onuMgmtCvlan = _OnuMgmtCvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 4),
    _OnuMgmtCvlan_Type()
)
onuMgmtCvlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtCvlan.setStatus("current")


class _OnuMgmtSvlan_Type(Integer32):
    """Custom type onuMgmtSvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_OnuMgmtSvlan_Type.__name__ = "Integer32"
_OnuMgmtSvlan_Object = MibScalar
onuMgmtSvlan = _OnuMgmtSvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 5),
    _OnuMgmtSvlan_Type()
)
onuMgmtSvlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtSvlan.setStatus("current")


class _OnuMgmtPri_Type(Integer32):
    """Custom type onuMgmtPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_OnuMgmtPri_Type.__name__ = "Integer32"
_OnuMgmtPri_Object = MibScalar
onuMgmtPri = _OnuMgmtPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 6),
    _OnuMgmtPri_Type()
)
onuMgmtPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtPri.setStatus("current")


class _OnuMgmtAction_Type(Integer32):
    """Custom type onuMgmtAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_OnuMgmtAction_Type.__name__ = "Integer32"
_OnuMgmtAction_Object = MibScalar
onuMgmtAction = _OnuMgmtAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 9, 7),
    _OnuMgmtAction_Type()
)
onuMgmtAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuMgmtAction.setStatus("current")
_OnuSnmpProParam_ObjectIdentity = ObjectIdentity
onuSnmpProParam = _OnuSnmpProParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10)
)
_CtcSnmpHost_Type = IpAddress
_CtcSnmpHost_Object = MibScalar
ctcSnmpHost = _CtcSnmpHost_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 1),
    _CtcSnmpHost_Type()
)
ctcSnmpHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSnmpHost.setStatus("current")


class _CtcSnmpTrapPort_Type(Integer32):
    """Custom type ctcSnmpTrapPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcSnmpTrapPort_Type.__name__ = "Integer32"
_CtcSnmpTrapPort_Object = MibScalar
ctcSnmpTrapPort = _CtcSnmpTrapPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 2),
    _CtcSnmpTrapPort_Type()
)
ctcSnmpTrapPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSnmpTrapPort.setStatus("current")


class _CtcSnmpPort_Type(Integer32):
    """Custom type ctcSnmpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcSnmpPort_Type.__name__ = "Integer32"
_CtcSnmpPort_Object = MibScalar
ctcSnmpPort = _CtcSnmpPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 3),
    _CtcSnmpPort_Type()
)
ctcSnmpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSnmpPort.setStatus("current")
_CtcCommunityName_Type = OctetString
_CtcCommunityName_Object = MibScalar
ctcCommunityName = _CtcCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 4),
    _CtcCommunityName_Type()
)
ctcCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcCommunityName.setStatus("current")
_CtcRoCommunityName_Type = OctetString
_CtcRoCommunityName_Object = MibScalar
ctcRoCommunityName = _CtcRoCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 5),
    _CtcRoCommunityName_Type()
)
ctcRoCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRoCommunityName.setStatus("current")
_CtcRwCommunityName_Type = OctetString
_CtcRwCommunityName_Object = MibScalar
ctcRwCommunityName = _CtcRwCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 6),
    _CtcRwCommunityName_Type()
)
ctcRwCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRwCommunityName.setStatus("current")


class _CtcSnmpAction_Type(Integer32):
    """Custom type ctcSnmpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcSnmpAction_Type.__name__ = "Integer32"
_CtcSnmpAction_Object = MibScalar
ctcSnmpAction = _CtcSnmpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 10, 7),
    _CtcSnmpAction_Type()
)
ctcSnmpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSnmpAction.setStatus("current")
_OnuSlaConfig_ObjectIdentity = ObjectIdentity
onuSlaConfig = _OnuSlaConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11)
)


class _CtcSlaEn_Type(Integer32):
    """Custom type ctcSlaEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcSlaEn_Type.__name__ = "Integer32"
_CtcSlaEn_Object = MibScalar
ctcSlaEn = _CtcSlaEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 1),
    _CtcSlaEn_Type()
)
ctcSlaEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSlaEn.setStatus("current")


class _CtcSlaMode_Type(Integer32):
    """Custom type ctcSlaMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("sp_basic", 1),
          ("wrr", 2),
          ("sp_wrr", 3))
    )


_CtcSlaMode_Type.__name__ = "Integer32"
_CtcSlaMode_Object = MibScalar
ctcSlaMode = _CtcSlaMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 2),
    _CtcSlaMode_Type()
)
ctcSlaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSlaMode.setStatus("current")


class _CtcQueueId_Type(Integer32):
    """Custom type ctcQueueId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CtcQueueId_Type.__name__ = "Integer32"
_CtcQueueId_Object = MibScalar
ctcQueueId = _CtcQueueId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 3),
    _CtcQueueId_Type()
)
ctcQueueId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcQueueId.setStatus("current")


class _CtcQueweight_Type(Integer32):
    """Custom type ctcQueweight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CtcQueweight_Type.__name__ = "Integer32"
_CtcQueweight_Object = MibScalar
ctcQueweight = _CtcQueweight_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 4),
    _CtcQueweight_Type()
)
ctcQueweight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcQueweight.setStatus("current")


class _CtcGuaranteedBandwidth_Type(Integer32):
    """Custom type ctcGuaranteedBandwidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_CtcGuaranteedBandwidth_Type.__name__ = "Integer32"
_CtcGuaranteedBandwidth_Object = MibScalar
ctcGuaranteedBandwidth = _CtcGuaranteedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 5),
    _CtcGuaranteedBandwidth_Type()
)
ctcGuaranteedBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcGuaranteedBandwidth.setStatus("current")


class _CtcBesteffortBandwith_Type(Integer32):
    """Custom type ctcBesteffortBandwith based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_CtcBesteffortBandwith_Type.__name__ = "Integer32"
_CtcBesteffortBandwith_Object = MibScalar
ctcBesteffortBandwith = _CtcBesteffortBandwith_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 6),
    _CtcBesteffortBandwith_Type()
)
ctcBesteffortBandwith.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBesteffortBandwith.setStatus("current")


class _CtcSlaAction_Type(Integer32):
    """Custom type ctcSlaAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcSlaAction_Type.__name__ = "Integer32"
_CtcSlaAction_Object = MibScalar
ctcSlaAction = _CtcSlaAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 11, 7),
    _CtcSlaAction_Type()
)
ctcSlaAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSlaAction.setStatus("current")
_OnuCtcPause_ObjectIdentity = ObjectIdentity
onuCtcPause = _OnuCtcPause_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 12)
)


class _PauseEthNo_Type(Integer32):
    """Custom type pauseEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PauseEthNo_Type.__name__ = "Integer32"
_PauseEthNo_Object = MibScalar
pauseEthNo = _PauseEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 12, 1),
    _PauseEthNo_Type()
)
pauseEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pauseEthNo.setStatus("current")


class _CtcPauseEn_Type(Integer32):
    """Custom type ctcPauseEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcPauseEn_Type.__name__ = "Integer32"
_CtcPauseEn_Object = MibScalar
ctcPauseEn = _CtcPauseEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 12, 2),
    _CtcPauseEn_Type()
)
ctcPauseEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPauseEn.setStatus("current")


class _CtcPauseAction_Type(Integer32):
    """Custom type ctcPauseAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcPauseAction_Type.__name__ = "Integer32"
_CtcPauseAction_Object = MibScalar
ctcPauseAction = _CtcPauseAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 12, 3),
    _CtcPauseAction_Type()
)
ctcPauseAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPauseAction.setStatus("current")
_OnuCtcLoopdetect_ObjectIdentity = ObjectIdentity
onuCtcLoopdetect = _OnuCtcLoopdetect_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 13)
)


class _LoopEthNo_Type(Integer32):
    """Custom type loopEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LoopEthNo_Type.__name__ = "Integer32"
_LoopEthNo_Object = MibScalar
loopEthNo = _LoopEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 13, 1),
    _LoopEthNo_Type()
)
loopEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopEthNo.setStatus("current")


class _CtcLoopdetectEn_Type(Integer32):
    """Custom type ctcLoopdetectEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcLoopdetectEn_Type.__name__ = "Integer32"
_CtcLoopdetectEn_Object = MibScalar
ctcLoopdetectEn = _CtcLoopdetectEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 13, 2),
    _CtcLoopdetectEn_Type()
)
ctcLoopdetectEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcLoopdetectEn.setStatus("current")


class _CtcLoopdetectAction_Type(Integer32):
    """Custom type ctcLoopdetectAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcLoopdetectAction_Type.__name__ = "Integer32"
_CtcLoopdetectAction_Object = MibScalar
ctcLoopdetectAction = _CtcLoopdetectAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 13, 3),
    _CtcLoopdetectAction_Type()
)
ctcLoopdetectAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcLoopdetectAction.setStatus("current")
_OnuMcTagstrip_ObjectIdentity = ObjectIdentity
onuMcTagstrip = _OnuMcTagstrip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 14)
)


class _TagstripEthNo_Type(Integer32):
    """Custom type tagstripEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TagstripEthNo_Type.__name__ = "Integer32"
_TagstripEthNo_Object = MibScalar
tagstripEthNo = _TagstripEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 14, 1),
    _TagstripEthNo_Type()
)
tagstripEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripEthNo.setStatus("current")


class _CtcTagstripEn_Type(Integer32):
    """Custom type ctcTagstripEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcTagstripEn_Type.__name__ = "Integer32"
_CtcTagstripEn_Object = MibScalar
ctcTagstripEn = _CtcTagstripEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 14, 2),
    _CtcTagstripEn_Type()
)
ctcTagstripEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTagstripEn.setStatus("current")


class _TagstripAction_Type(Integer32):
    """Custom type tagstripAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_TagstripAction_Type.__name__ = "Integer32"
_TagstripAction_Object = MibScalar
tagstripAction = _TagstripAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 14, 3),
    _TagstripAction_Type()
)
tagstripAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tagstripAction.setStatus("current")
_OnuMcVlanTrans_ObjectIdentity = ObjectIdentity
onuMcVlanTrans = _OnuMcVlanTrans_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 15)
)


class _McVlanTransEthNo_Type(Integer32):
    """Custom type mcVlanTransEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_McVlanTransEthNo_Type.__name__ = "Integer32"
_McVlanTransEthNo_Object = MibScalar
mcVlanTransEthNo = _McVlanTransEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 15, 1),
    _McVlanTransEthNo_Type()
)
mcVlanTransEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanTransEthNo.setStatus("current")
_CtcMcTransVlanStr_Type = OctetString
_CtcMcTransVlanStr_Object = MibScalar
ctcMcTransVlanStr = _CtcMcTransVlanStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 15, 2),
    _CtcMcTransVlanStr_Type()
)
ctcMcTransVlanStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcTransVlanStr.setStatus("current")


class _CtcMcTransAction_Type(Integer32):
    """Custom type ctcMcTransAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcMcTransAction_Type.__name__ = "Integer32"
_CtcMcTransAction_Object = MibScalar
ctcMcTransAction = _CtcMcTransAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 15, 10),
    _CtcMcTransAction_Type()
)
ctcMcTransAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcTransAction.setStatus("current")
_OnuPortPhyAdmin_ObjectIdentity = ObjectIdentity
onuPortPhyAdmin = _OnuPortPhyAdmin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 16)
)


class _AdminEthNo_Type(Integer32):
    """Custom type adminEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AdminEthNo_Type.__name__ = "Integer32"
_AdminEthNo_Object = MibScalar
adminEthNo = _AdminEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 16, 1),
    _AdminEthNo_Type()
)
adminEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminEthNo.setStatus("current")


class _CtcPortAdmin_Type(Integer32):
    """Custom type ctcPortAdmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcPortAdmin_Type.__name__ = "Integer32"
_CtcPortAdmin_Object = MibScalar
ctcPortAdmin = _CtcPortAdmin_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 16, 2),
    _CtcPortAdmin_Type()
)
ctcPortAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPortAdmin.setStatus("current")


class _CtcPortAdminAction_Type(Integer32):
    """Custom type ctcPortAdminAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_CtcPortAdminAction_Type.__name__ = "Integer32"
_CtcPortAdminAction_Object = MibScalar
ctcPortAdminAction = _CtcPortAdminAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 16, 3),
    _CtcPortAdminAction_Type()
)
ctcPortAdminAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPortAdminAction.setStatus("current")
_OnuPortAutoNegConfig_ObjectIdentity = ObjectIdentity
onuPortAutoNegConfig = _OnuPortAutoNegConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 17)
)


class _AutoNegEthNo_Type(Integer32):
    """Custom type autoNegEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AutoNegEthNo_Type.__name__ = "Integer32"
_AutoNegEthNo_Object = MibScalar
autoNegEthNo = _AutoNegEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 17, 1),
    _AutoNegEthNo_Type()
)
autoNegEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    autoNegEthNo.setStatus("current")


class _CtcAutoNeg_Type(Integer32):
    """Custom type ctcAutoNeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcAutoNeg_Type.__name__ = "Integer32"
_CtcAutoNeg_Object = MibScalar
ctcAutoNeg = _CtcAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 17, 2),
    _CtcAutoNeg_Type()
)
ctcAutoNeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcAutoNeg.setStatus("current")


class _CtcAutoNegAction_Type(Integer32):
    """Custom type ctcAutoNegAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_CtcAutoNegAction_Type.__name__ = "Integer32"
_CtcAutoNegAction_Object = MibScalar
ctcAutoNegAction = _CtcAutoNegAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 17, 3),
    _CtcAutoNegAction_Type()
)
ctcAutoNegAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcAutoNegAction.setStatus("current")
_OnuPortMaxIgmpGrp_ObjectIdentity = ObjectIdentity
onuPortMaxIgmpGrp = _OnuPortMaxIgmpGrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 18)
)


class _GrpEthNo_Type(Integer32):
    """Custom type grpEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_GrpEthNo_Type.__name__ = "Integer32"
_GrpEthNo_Object = MibScalar
grpEthNo = _GrpEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 18, 1),
    _GrpEthNo_Type()
)
grpEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    grpEthNo.setStatus("current")


class _CtcMcMaxGrp_Type(Integer32):
    """Custom type ctcMcMaxGrp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CtcMcMaxGrp_Type.__name__ = "Integer32"
_CtcMcMaxGrp_Object = MibScalar
ctcMcMaxGrp = _CtcMcMaxGrp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 18, 2),
    _CtcMcMaxGrp_Type()
)
ctcMcMaxGrp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcMaxGrp.setStatus("current")


class _McMaxGrpAction_Type(Integer32):
    """Custom type mcMaxGrpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_McMaxGrpAction_Type.__name__ = "Integer32"
_McMaxGrpAction_Object = MibScalar
mcMaxGrpAction = _McMaxGrpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 18, 3),
    _McMaxGrpAction_Type()
)
mcMaxGrpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcMaxGrpAction.setStatus("current")
_OnuPortUpLimit_ObjectIdentity = ObjectIdentity
onuPortUpLimit = _OnuPortUpLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 19)
)


class _UpLimitEthNo_Type(Integer32):
    """Custom type upLimitEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_UpLimitEthNo_Type.__name__ = "Integer32"
_UpLimitEthNo_Object = MibScalar
upLimitEthNo = _UpLimitEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 19, 1),
    _UpLimitEthNo_Type()
)
upLimitEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upLimitEthNo.setStatus("current")


class _CtcUpLimitCir_Type(Integer32):
    """Custom type ctcUpLimitCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_CtcUpLimitCir_Type.__name__ = "Integer32"
_CtcUpLimitCir_Object = MibScalar
ctcUpLimitCir = _CtcUpLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 19, 2),
    _CtcUpLimitCir_Type()
)
ctcUpLimitCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUpLimitCir.setStatus("current")


class _CtcUpLimitCbs_Type(Integer32):
    """Custom type ctcUpLimitCbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10240),
    )


_CtcUpLimitCbs_Type.__name__ = "Integer32"
_CtcUpLimitCbs_Object = MibScalar
ctcUpLimitCbs = _CtcUpLimitCbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 19, 3),
    _CtcUpLimitCbs_Type()
)
ctcUpLimitCbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUpLimitCbs.setStatus("current")


class _CtcUpLimitEbs_Type(Integer32):
    """Custom type ctcUpLimitEbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10240),
    )


_CtcUpLimitEbs_Type.__name__ = "Integer32"
_CtcUpLimitEbs_Object = MibScalar
ctcUpLimitEbs = _CtcUpLimitEbs_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 19, 4),
    _CtcUpLimitEbs_Type()
)
ctcUpLimitEbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUpLimitEbs.setStatus("current")


class _CtcUpLimitAction_Type(Integer32):
    """Custom type ctcUpLimitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_CtcUpLimitAction_Type.__name__ = "Integer32"
_CtcUpLimitAction_Object = MibScalar
ctcUpLimitAction = _CtcUpLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 19, 5),
    _CtcUpLimitAction_Type()
)
ctcUpLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUpLimitAction.setStatus("current")
_OnuPortDownLimit_ObjectIdentity = ObjectIdentity
onuPortDownLimit = _OnuPortDownLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 20)
)


class _DownLimitEthNo_Type(Integer32):
    """Custom type downLimitEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DownLimitEthNo_Type.__name__ = "Integer32"
_DownLimitEthNo_Object = MibScalar
downLimitEthNo = _DownLimitEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 20, 1),
    _DownLimitEthNo_Type()
)
downLimitEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    downLimitEthNo.setStatus("current")


class _CtcDownLimitCir_Type(Integer32):
    """Custom type ctcDownLimitCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_CtcDownLimitCir_Type.__name__ = "Integer32"
_CtcDownLimitCir_Object = MibScalar
ctcDownLimitCir = _CtcDownLimitCir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 20, 2),
    _CtcDownLimitCir_Type()
)
ctcDownLimitCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDownLimitCir.setStatus("current")


class _CtcDownLimitPir_Type(Integer32):
    """Custom type ctcDownLimitPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1048576),
    )


_CtcDownLimitPir_Type.__name__ = "Integer32"
_CtcDownLimitPir_Object = MibScalar
ctcDownLimitPir = _CtcDownLimitPir_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 20, 3),
    _CtcDownLimitPir_Type()
)
ctcDownLimitPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDownLimitPir.setStatus("current")


class _CtcDownLimitAction_Type(Integer32):
    """Custom type ctcDownLimitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("delete", 2))
    )


_CtcDownLimitAction_Type.__name__ = "Integer32"
_CtcDownLimitAction_Object = MibScalar
ctcDownLimitAction = _CtcDownLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 20, 4),
    _CtcDownLimitAction_Type()
)
ctcDownLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDownLimitAction.setStatus("current")
_OnuPortVlanConfig_ObjectIdentity = ObjectIdentity
onuPortVlanConfig = _OnuPortVlanConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21)
)
_PortVlanMode_ObjectIdentity = ObjectIdentity
portVlanMode = _PortVlanMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 1)
)


class _VlanModeEthNo_Type(Integer32):
    """Custom type vlanModeEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanModeEthNo_Type.__name__ = "Integer32"
_VlanModeEthNo_Object = MibScalar
vlanModeEthNo = _VlanModeEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 1, 1),
    _VlanModeEthNo_Type()
)
vlanModeEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanModeEthNo.setStatus("current")


class _CtcVlanMode_Type(Integer32):
    """Custom type ctcVlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 1),
          ("tag", 2),
          ("translation", 3),
          ("aggregation", 4),
          ("trunk", 5))
    )


_CtcVlanMode_Type.__name__ = "Integer32"
_CtcVlanMode_Object = MibScalar
ctcVlanMode = _CtcVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 1, 2),
    _CtcVlanMode_Type()
)
ctcVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcVlanMode.setStatus("current")


class _VlanModeAction_Type(Integer32):
    """Custom type vlanModeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_VlanModeAction_Type.__name__ = "Integer32"
_VlanModeAction_Object = MibScalar
vlanModeAction = _VlanModeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 1, 3),
    _VlanModeAction_Type()
)
vlanModeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanModeAction.setStatus("current")
_PortVlanPvid_ObjectIdentity = ObjectIdentity
portVlanPvid = _PortVlanPvid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 2)
)


class _PvidEthNo_Type(Integer32):
    """Custom type pvidEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PvidEthNo_Type.__name__ = "Integer32"
_PvidEthNo_Object = MibScalar
pvidEthNo = _PvidEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 2, 1),
    _PvidEthNo_Type()
)
pvidEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pvidEthNo.setStatus("current")


class _CtcPvidVal_Type(Integer32):
    """Custom type ctcPvidVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_CtcPvidVal_Type.__name__ = "Integer32"
_CtcPvidVal_Object = MibScalar
ctcPvidVal = _CtcPvidVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 2, 2),
    _CtcPvidVal_Type()
)
ctcPvidVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPvidVal.setStatus("current")


class _CtcTpidVal_Type(OctetString):
    """Custom type ctcTpidVal based on OctetString"""
    defaultHexValue = "00"


_CtcTpidVal_Type.__name__ = "OctetString"
_CtcTpidVal_Object = MibScalar
ctcTpidVal = _CtcTpidVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 2, 3),
    _CtcTpidVal_Type()
)
ctcTpidVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTpidVal.setStatus("current")


class _CtcPvidAction_Type(Integer32):
    """Custom type ctcPvidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_CtcPvidAction_Type.__name__ = "Integer32"
_CtcPvidAction_Object = MibScalar
ctcPvidAction = _CtcPvidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 2, 4),
    _CtcPvidAction_Type()
)
ctcPvidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPvidAction.setStatus("current")


class _CtcPvidPriVal_Type(Integer32):
    """Custom type ctcPvidPriVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CtcPvidPriVal_Type.__name__ = "Integer32"
_CtcPvidPriVal_Object = MibScalar
ctcPvidPriVal = _CtcPvidPriVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 2, 5),
    _CtcPvidPriVal_Type()
)
ctcPvidPriVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPvidPriVal.setStatus("current")
_PortVlanTranslate_ObjectIdentity = ObjectIdentity
portVlanTranslate = _PortVlanTranslate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 3)
)


class _VlanTransEthNo_Type(Integer32):
    """Custom type vlanTransEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanTransEthNo_Type.__name__ = "Integer32"
_VlanTransEthNo_Object = MibScalar
vlanTransEthNo = _VlanTransEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 3, 1),
    _VlanTransEthNo_Type()
)
vlanTransEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTransEthNo.setStatus("current")


class _CtcTransVlanStr_Type(OctetString):
    """Custom type ctcTransVlanStr based on OctetString"""
    defaultHexValue = "00"


_CtcTransVlanStr_Type.__name__ = "OctetString"
_CtcTransVlanStr_Object = MibScalar
ctcTransVlanStr = _CtcTransVlanStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 3, 2),
    _CtcTransVlanStr_Type()
)
ctcTransVlanStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTransVlanStr.setStatus("current")


class _CtcTransAction_Type(Integer32):
    """Custom type ctcTransAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcTransAction_Type.__name__ = "Integer32"
_CtcTransAction_Object = MibScalar
ctcTransAction = _CtcTransAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 3, 8),
    _CtcTransAction_Type()
)
ctcTransAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTransAction.setStatus("current")
_PortVlanTrunk_ObjectIdentity = ObjectIdentity
portVlanTrunk = _PortVlanTrunk_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 4)
)


class _TrunkEthNo_Type(Integer32):
    """Custom type trunkEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TrunkEthNo_Type.__name__ = "Integer32"
_TrunkEthNo_Object = MibScalar
trunkEthNo = _TrunkEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 4, 1),
    _TrunkEthNo_Type()
)
trunkEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trunkEthNo.setStatus("current")


class _CtcTrunkVidStr_Type(OctetString):
    """Custom type ctcTrunkVidStr based on OctetString"""
    defaultHexValue = "00"


_CtcTrunkVidStr_Type.__name__ = "OctetString"
_CtcTrunkVidStr_Object = MibScalar
ctcTrunkVidStr = _CtcTrunkVidStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 4, 2),
    _CtcTrunkVidStr_Type()
)
ctcTrunkVidStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTrunkVidStr.setStatus("current")


class _CtcTrunkVidAction_Type(Integer32):
    """Custom type ctcTrunkVidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcTrunkVidAction_Type.__name__ = "Integer32"
_CtcTrunkVidAction_Object = MibScalar
ctcTrunkVidAction = _CtcTrunkVidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 4, 3),
    _CtcTrunkVidAction_Type()
)
ctcTrunkVidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTrunkVidAction.setStatus("current")
_PortVlanAgg_ObjectIdentity = ObjectIdentity
portVlanAgg = _PortVlanAgg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 5)
)


class _AggEthNo_Type(Integer32):
    """Custom type aggEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AggEthNo_Type.__name__ = "Integer32"
_AggEthNo_Object = MibScalar
aggEthNo = _AggEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 5, 1),
    _AggEthNo_Type()
)
aggEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aggEthNo.setStatus("current")


class _CtcAggNewVlan_Type(Integer32):
    """Custom type ctcAggNewVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_CtcAggNewVlan_Type.__name__ = "Integer32"
_CtcAggNewVlan_Object = MibScalar
ctcAggNewVlan = _CtcAggNewVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 5, 2),
    _CtcAggNewVlan_Type()
)
ctcAggNewVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcAggNewVlan.setStatus("current")


class _CtcAggVlanStr_Type(OctetString):
    """Custom type ctcAggVlanStr based on OctetString"""
    defaultHexValue = "00"


_CtcAggVlanStr_Type.__name__ = "OctetString"
_CtcAggVlanStr_Object = MibScalar
ctcAggVlanStr = _CtcAggVlanStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 5, 10),
    _CtcAggVlanStr_Type()
)
ctcAggVlanStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcAggVlanStr.setStatus("current")


class _CtcAggAction_Type(Integer32):
    """Custom type ctcAggAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcAggAction_Type.__name__ = "Integer32"
_CtcAggAction_Object = MibScalar
ctcAggAction = _CtcAggAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 21, 5, 11),
    _CtcAggAction_Type()
)
ctcAggAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcAggAction.setStatus("current")
_OnuIgmpVlanConfig_ObjectIdentity = ObjectIdentity
onuIgmpVlanConfig = _OnuIgmpVlanConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 22)
)


class _McVlanEthNo_Type(Integer32):
    """Custom type mcVlanEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_McVlanEthNo_Type.__name__ = "Integer32"
_McVlanEthNo_Object = MibScalar
mcVlanEthNo = _McVlanEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 22, 2),
    _McVlanEthNo_Type()
)
mcVlanEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcVlanEthNo.setStatus("current")


class _CtcMcVlanStr_Type(OctetString):
    """Custom type ctcMcVlanStr based on OctetString"""
    defaultHexValue = "00"


_CtcMcVlanStr_Type.__name__ = "OctetString"
_CtcMcVlanStr_Object = MibScalar
ctcMcVlanStr = _CtcMcVlanStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 22, 3),
    _CtcMcVlanStr_Type()
)
ctcMcVlanStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcVlanStr.setStatus("current")


class _CtcMcValnAction_Type(Integer32):
    """Custom type ctcMcValnAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcMcValnAction_Type.__name__ = "Integer32"
_CtcMcValnAction_Object = MibScalar
ctcMcValnAction = _CtcMcValnAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 22, 4),
    _CtcMcValnAction_Type()
)
ctcMcValnAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMcValnAction.setStatus("current")
_OnuClassifyConfig_ObjectIdentity = ObjectIdentity
onuClassifyConfig = _OnuClassifyConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23)
)
_OnuClassifyAdd_ObjectIdentity = ObjectIdentity
onuClassifyAdd = _OnuClassifyAdd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1)
)


class _CfyEthNo_Type(Integer32):
    """Custom type cfyEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CfyEthNo_Type.__name__ = "Integer32"
_CfyEthNo_Object = MibScalar
cfyEthNo = _CfyEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 1),
    _CfyEthNo_Type()
)
cfyEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfyEthNo.setStatus("current")


class _CtcPrecedence_Type(Integer32):
    """Custom type ctcPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CtcPrecedence_Type.__name__ = "Integer32"
_CtcPrecedence_Object = MibScalar
ctcPrecedence = _CtcPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 2),
    _CtcPrecedence_Type()
)
ctcPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPrecedence.setStatus("current")


class _CtcPri_Type(Integer32):
    """Custom type ctcPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CtcPri_Type.__name__ = "Integer32"
_CtcPri_Object = MibScalar
ctcPri = _CtcPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 3),
    _CtcPri_Type()
)
ctcPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPri.setStatus("current")


class _CtcDstMacEqualSel_Type(Integer32):
    """Custom type ctcDstMacEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcDstMacEqualSel_Type.__name__ = "Integer32"
_CtcDstMacEqualSel_Object = MibScalar
ctcDstMacEqualSel = _CtcDstMacEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 4),
    _CtcDstMacEqualSel_Type()
)
ctcDstMacEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDstMacEqualSel.setStatus("current")
_CtcDstMacValue_Type = OctetString
_CtcDstMacValue_Object = MibScalar
ctcDstMacValue = _CtcDstMacValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 5),
    _CtcDstMacValue_Type()
)
ctcDstMacValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDstMacValue.setStatus("current")


class _CtcSrcMacEqualSel_Type(Integer32):
    """Custom type ctcSrcMacEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcSrcMacEqualSel_Type.__name__ = "Integer32"
_CtcSrcMacEqualSel_Object = MibScalar
ctcSrcMacEqualSel = _CtcSrcMacEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 6),
    _CtcSrcMacEqualSel_Type()
)
ctcSrcMacEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSrcMacEqualSel.setStatus("current")
_CtcSrcMacValue_Type = OctetString
_CtcSrcMacValue_Object = MibScalar
ctcSrcMacValue = _CtcSrcMacValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 7),
    _CtcSrcMacValue_Type()
)
ctcSrcMacValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSrcMacValue.setStatus("current")


class _CtcVlanEqualSel_Type(Integer32):
    """Custom type ctcVlanEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcVlanEqualSel_Type.__name__ = "Integer32"
_CtcVlanEqualSel_Object = MibScalar
ctcVlanEqualSel = _CtcVlanEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 8),
    _CtcVlanEqualSel_Type()
)
ctcVlanEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcVlanEqualSel.setStatus("current")


class _CtcVlanValue_Type(Integer32):
    """Custom type ctcVlanValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_CtcVlanValue_Type.__name__ = "Integer32"
_CtcVlanValue_Object = MibScalar
ctcVlanValue = _CtcVlanValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 9),
    _CtcVlanValue_Type()
)
ctcVlanValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcVlanValue.setStatus("current")


class _CtcCosEqualSel_Type(Integer32):
    """Custom type ctcCosEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCosEqualSel_Type.__name__ = "Integer32"
_CtcCosEqualSel_Object = MibScalar
ctcCosEqualSel = _CtcCosEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 10),
    _CtcCosEqualSel_Type()
)
ctcCosEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcCosEqualSel.setStatus("current")


class _CtcCosValue_Type(Integer32):
    """Custom type ctcCosValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_CtcCosValue_Type.__name__ = "Integer32"
_CtcCosValue_Object = MibScalar
ctcCosValue = _CtcCosValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 11),
    _CtcCosValue_Type()
)
ctcCosValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcCosValue.setStatus("current")


class _CtcEthTypeEqualSel_Type(Integer32):
    """Custom type ctcEthTypeEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcEthTypeEqualSel_Type.__name__ = "Integer32"
_CtcEthTypeEqualSel_Object = MibScalar
ctcEthTypeEqualSel = _CtcEthTypeEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 12),
    _CtcEthTypeEqualSel_Type()
)
ctcEthTypeEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcEthTypeEqualSel.setStatus("current")
_CtcEthTypeValue_Type = OctetString
_CtcEthTypeValue_Object = MibScalar
ctcEthTypeValue = _CtcEthTypeValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 13),
    _CtcEthTypeValue_Type()
)
ctcEthTypeValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcEthTypeValue.setStatus("current")


class _CtcSrcIpEqualSel_Type(Integer32):
    """Custom type ctcSrcIpEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcSrcIpEqualSel_Type.__name__ = "Integer32"
_CtcSrcIpEqualSel_Object = MibScalar
ctcSrcIpEqualSel = _CtcSrcIpEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 14),
    _CtcSrcIpEqualSel_Type()
)
ctcSrcIpEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSrcIpEqualSel.setStatus("current")
_CtcSrcIpValue_Type = IpAddress
_CtcSrcIpValue_Object = MibScalar
ctcSrcIpValue = _CtcSrcIpValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 15),
    _CtcSrcIpValue_Type()
)
ctcSrcIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSrcIpValue.setStatus("current")


class _CtcDestIpEqualSel_Type(Integer32):
    """Custom type ctcDestIpEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcDestIpEqualSel_Type.__name__ = "Integer32"
_CtcDestIpEqualSel_Object = MibScalar
ctcDestIpEqualSel = _CtcDestIpEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 16),
    _CtcDestIpEqualSel_Type()
)
ctcDestIpEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDestIpEqualSel.setStatus("current")
_CtcDestIpValue_Type = IpAddress
_CtcDestIpValue_Object = MibScalar
ctcDestIpValue = _CtcDestIpValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 17),
    _CtcDestIpValue_Type()
)
ctcDestIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDestIpValue.setStatus("current")


class _CtcProEqualSel_Type(Integer32):
    """Custom type ctcProEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcProEqualSel_Type.__name__ = "Integer32"
_CtcProEqualSel_Object = MibScalar
ctcProEqualSel = _CtcProEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 18),
    _CtcProEqualSel_Type()
)
ctcProEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcProEqualSel.setStatus("current")


class _CtcProValue_Type(Integer32):
    """Custom type ctcProValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_CtcProValue_Type.__name__ = "Integer32"
_CtcProValue_Object = MibScalar
ctcProValue = _CtcProValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 19),
    _CtcProValue_Type()
)
ctcProValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcProValue.setStatus("current")


class _CtcTosDscpEuqalSel_Type(Integer32):
    """Custom type ctcTosDscpEuqalSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcTosDscpEuqalSel_Type.__name__ = "Integer32"
_CtcTosDscpEuqalSel_Object = MibScalar
ctcTosDscpEuqalSel = _CtcTosDscpEuqalSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 20),
    _CtcTosDscpEuqalSel_Type()
)
ctcTosDscpEuqalSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTosDscpEuqalSel.setStatus("current")


class _CtcTosDscpValue_Type(Integer32):
    """Custom type ctcTosDscpValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_CtcTosDscpValue_Type.__name__ = "Integer32"
_CtcTosDscpValue_Object = MibScalar
ctcTosDscpValue = _CtcTosDscpValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 21),
    _CtcTosDscpValue_Type()
)
ctcTosDscpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcTosDscpValue.setStatus("current")


class _CtcSrcPortEqualSel_Type(Integer32):
    """Custom type ctcSrcPortEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcSrcPortEqualSel_Type.__name__ = "Integer32"
_CtcSrcPortEqualSel_Object = MibScalar
ctcSrcPortEqualSel = _CtcSrcPortEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 22),
    _CtcSrcPortEqualSel_Type()
)
ctcSrcPortEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSrcPortEqualSel.setStatus("current")


class _CtcSrcPortValue_Type(Integer32):
    """Custom type ctcSrcPortValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CtcSrcPortValue_Type.__name__ = "Integer32"
_CtcSrcPortValue_Object = MibScalar
ctcSrcPortValue = _CtcSrcPortValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 23),
    _CtcSrcPortValue_Type()
)
ctcSrcPortValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSrcPortValue.setStatus("current")


class _CtcDestPortEqualSel_Type(Integer32):
    """Custom type ctcDestPortEqualSel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcDestPortEqualSel_Type.__name__ = "Integer32"
_CtcDestPortEqualSel_Object = MibScalar
ctcDestPortEqualSel = _CtcDestPortEqualSel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 24),
    _CtcDestPortEqualSel_Type()
)
ctcDestPortEqualSel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDestPortEqualSel.setStatus("current")


class _CtcDestPortValue_Type(Integer32):
    """Custom type ctcDestPortValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CtcDestPortValue_Type.__name__ = "Integer32"
_CtcDestPortValue_Object = MibScalar
ctcDestPortValue = _CtcDestPortValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 25),
    _CtcDestPortValue_Type()
)
ctcDestPortValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDestPortValue.setStatus("current")


class _CtcCfyAction_Type(Integer32):
    """Custom type ctcCfyAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_CtcCfyAction_Type.__name__ = "Integer32"
_CtcCfyAction_Object = MibScalar
ctcCfyAction = _CtcCfyAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 26),
    _CtcCfyAction_Type()
)
ctcCfyAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcCfyAction.setStatus("current")


class _CtcQueue_Type(Integer32):
    """Custom type ctcQueue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CtcQueue_Type.__name__ = "Integer32"
_CtcQueue_Object = MibScalar
ctcQueue = _CtcQueue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 1, 27),
    _CtcQueue_Type()
)
ctcQueue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcQueue.setStatus("current")
_OnuClassifyDel_ObjectIdentity = ObjectIdentity
onuClassifyDel = _OnuClassifyDel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 2)
)


class _CfyDelEthNo_Type(Integer32):
    """Custom type cfyDelEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CfyDelEthNo_Type.__name__ = "Integer32"
_CfyDelEthNo_Object = MibScalar
cfyDelEthNo = _CfyDelEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 2, 1),
    _CfyDelEthNo_Type()
)
cfyDelEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfyDelEthNo.setStatus("current")


class _CtcDelPrecedence_Type(Integer32):
    """Custom type ctcDelPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CtcDelPrecedence_Type.__name__ = "Integer32"
_CtcDelPrecedence_Object = MibScalar
ctcDelPrecedence = _CtcDelPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 2, 2),
    _CtcDelPrecedence_Type()
)
ctcDelPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDelPrecedence.setStatus("current")


class _CtcCfyDelAction_Type(Integer32):
    """Custom type ctcCfyDelAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 1),
          ("clearAll", 2))
    )


_CtcCfyDelAction_Type.__name__ = "Integer32"
_CtcCfyDelAction_Object = MibScalar
ctcCfyDelAction = _CtcCfyDelAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 23, 2, 3),
    _CtcCfyDelAction_Type()
)
ctcCfyDelAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcCfyDelAction.setStatus("current")
_OnuMacAgetime_ObjectIdentity = ObjectIdentity
onuMacAgetime = _OnuMacAgetime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 24)
)


class _CtcAgetime_Type(Gauge32):
    """Custom type ctcAgetime based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_CtcAgetime_Type.__name__ = "Gauge32"
_CtcAgetime_Object = MibScalar
ctcAgetime = _CtcAgetime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 24, 1),
    _CtcAgetime_Type()
)
ctcAgetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcAgetime.setStatus("current")


class _AgetimeAction_Type(Integer32):
    """Custom type agetimeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_AgetimeAction_Type.__name__ = "Integer32"
_AgetimeAction_Object = MibScalar
agetimeAction = _AgetimeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 24, 2),
    _AgetimeAction_Type()
)
agetimeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    agetimeAction.setStatus("current")
_OnuPonProtect_ObjectIdentity = ObjectIdentity
onuPonProtect = _OnuPonProtect_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 25)
)


class _CtcLosOptical_Type(Integer32):
    """Custom type ctcLosOptical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcLosOptical_Type.__name__ = "Integer32"
_CtcLosOptical_Object = MibScalar
ctcLosOptical = _CtcLosOptical_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 25, 1),
    _CtcLosOptical_Type()
)
ctcLosOptical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcLosOptical.setStatus("current")


class _CtcLosMpcp_Type(Integer32):
    """Custom type ctcLosMpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcLosMpcp_Type.__name__ = "Integer32"
_CtcLosMpcp_Object = MibScalar
ctcLosMpcp = _CtcLosMpcp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 25, 2),
    _CtcLosMpcp_Type()
)
ctcLosMpcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcLosMpcp.setStatus("current")


class _CtcPonProtectAction_Type(Integer32):
    """Custom type ctcPonProtectAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_CtcPonProtectAction_Type.__name__ = "Integer32"
_CtcPonProtectAction_Object = MibScalar
ctcPonProtectAction = _CtcPonProtectAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 25, 3),
    _CtcPonProtectAction_Type()
)
ctcPonProtectAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPonProtectAction.setStatus("current")
_OnuPowerSaveConfig_ObjectIdentity = ObjectIdentity
onuPowerSaveConfig = _OnuPowerSaveConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 26)
)


class _CtcEarlyWakeupEn_Type(Integer32):
    """Custom type ctcEarlyWakeupEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcEarlyWakeupEn_Type.__name__ = "Integer32"
_CtcEarlyWakeupEn_Object = MibScalar
ctcEarlyWakeupEn = _CtcEarlyWakeupEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 26, 1),
    _CtcEarlyWakeupEn_Type()
)
ctcEarlyWakeupEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcEarlyWakeupEn.setStatus("current")


class _CtcSleepDurationMax_Type(Integer32):
    """Custom type ctcSleepDurationMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcSleepDurationMax_Type.__name__ = "Integer32"
_CtcSleepDurationMax_Object = MibScalar
ctcSleepDurationMax = _CtcSleepDurationMax_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 26, 2),
    _CtcSleepDurationMax_Type()
)
ctcSleepDurationMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSleepDurationMax.setStatus("current")


class _OnuPowerSaveAction_Type(Integer32):
    """Custom type onuPowerSaveAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPowerSaveAction_Type.__name__ = "Integer32"
_OnuPowerSaveAction_Object = MibScalar
onuPowerSaveAction = _OnuPowerSaveAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 26, 3),
    _OnuPowerSaveAction_Type()
)
onuPowerSaveAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPowerSaveAction.setStatus("current")
_OnuPwSavParameter_ObjectIdentity = ObjectIdentity
onuPwSavParameter = _OnuPwSavParameter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 27)
)


class _CtcSleepDuration_Type(Integer32):
    """Custom type ctcSleepDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcSleepDuration_Type.__name__ = "Integer32"
_CtcSleepDuration_Object = MibScalar
ctcSleepDuration = _CtcSleepDuration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 27, 1),
    _CtcSleepDuration_Type()
)
ctcSleepDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSleepDuration.setStatus("current")


class _CtcWakeDuration_Type(Integer32):
    """Custom type ctcWakeDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcWakeDuration_Type.__name__ = "Integer32"
_CtcWakeDuration_Object = MibScalar
ctcWakeDuration = _CtcWakeDuration_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 27, 2),
    _CtcWakeDuration_Type()
)
ctcWakeDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcWakeDuration.setStatus("current")


class _CtcSleepFlag_Type(Integer32):
    """Custom type ctcSleepFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2),
          ("change", 3))
    )


_CtcSleepFlag_Type.__name__ = "Integer32"
_CtcSleepFlag_Object = MibScalar
ctcSleepFlag = _CtcSleepFlag_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 27, 3),
    _CtcSleepFlag_Type()
)
ctcSleepFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSleepFlag.setStatus("current")


class _CtcSleepMode_Type(Integer32):
    """Custom type ctcSleepMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("txSleepOnly", 2),
          ("txAndRxSleep", 3))
    )


_CtcSleepMode_Type.__name__ = "Integer32"
_CtcSleepMode_Object = MibScalar
ctcSleepMode = _CtcSleepMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 27, 4),
    _CtcSleepMode_Type()
)
ctcSleepMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcSleepMode.setStatus("current")


class _OnuPwSavAction_Type(Integer32):
    """Custom type onuPwSavAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_OnuPwSavAction_Type.__name__ = "Integer32"
_OnuPwSavAction_Object = MibScalar
onuPwSavAction = _OnuPwSavAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 27, 5),
    _OnuPwSavAction_Type()
)
onuPwSavAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPwSavAction.setStatus("current")
_OnuDisableLoopConfig_ObjectIdentity = ObjectIdentity
onuDisableLoopConfig = _OnuDisableLoopConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 28)
)


class _DisLoopEthNo_Type(Integer32):
    """Custom type disLoopEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DisLoopEthNo_Type.__name__ = "Integer32"
_DisLoopEthNo_Object = MibScalar
disLoopEthNo = _DisLoopEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 28, 1),
    _DisLoopEthNo_Type()
)
disLoopEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    disLoopEthNo.setStatus("current")


class _DisableLoopEn_Type(Integer32):
    """Custom type disableLoopEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DisableLoopEn_Type.__name__ = "Integer32"
_DisableLoopEn_Object = MibScalar
disableLoopEn = _DisableLoopEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 28, 2),
    _DisableLoopEn_Type()
)
disableLoopEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    disableLoopEn.setStatus("current")


class _DisLoopEthAction_Type(Integer32):
    """Custom type disLoopEthAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_DisLoopEthAction_Type.__name__ = "Integer32"
_DisLoopEthAction_Object = MibScalar
disLoopEthAction = _DisLoopEthAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 28, 3),
    _DisLoopEthAction_Type()
)
disLoopEthAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    disLoopEthAction.setStatus("current")
_OnuPortStatConfig_ObjectIdentity = ObjectIdentity
onuPortStatConfig = _OnuPortStatConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 29)
)


class _PortStatEthNo_Type(Integer32):
    """Custom type portStatEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortStatEthNo_Type.__name__ = "Integer32"
_PortStatEthNo_Object = MibScalar
portStatEthNo = _PortStatEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 29, 1),
    _PortStatEthNo_Type()
)
portStatEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatEthNo.setStatus("current")


class _CtcMonitorStatus_Type(Integer32):
    """Custom type ctcMonitorStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcMonitorStatus_Type.__name__ = "Integer32"
_CtcMonitorStatus_Object = MibScalar
ctcMonitorStatus = _CtcMonitorStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 29, 2),
    _CtcMonitorStatus_Type()
)
ctcMonitorStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMonitorStatus.setStatus("current")


class _CtcStatCycle_Type(Integer32):
    """Custom type ctcStatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcStatCycle_Type.__name__ = "Integer32"
_CtcStatCycle_Object = MibScalar
ctcStatCycle = _CtcStatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 29, 3),
    _CtcStatCycle_Type()
)
ctcStatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcStatCycle.setStatus("current")


class _PortStatAction_Type(Integer32):
    """Custom type portStatAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PortStatAction_Type.__name__ = "Integer32"
_PortStatAction_Object = MibScalar
portStatAction = _PortStatAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 29, 4),
    _PortStatAction_Type()
)
portStatAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatAction.setStatus("current")
_OnuPortStatClear_ObjectIdentity = ObjectIdentity
onuPortStatClear = _OnuPortStatClear_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 30)
)


class _CtcClearEthNo_Type(Integer32):
    """Custom type ctcClearEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CtcClearEthNo_Type.__name__ = "Integer32"
_CtcClearEthNo_Object = MibScalar
ctcClearEthNo = _CtcClearEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 30, 1),
    _CtcClearEthNo_Type()
)
ctcClearEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcClearEthNo.setStatus("current")


class _CtcClearAction_Type(Integer32):
    """Custom type ctcClearAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcClearAction_Type.__name__ = "Integer32"
_CtcClearAction_Object = MibScalar
ctcClearAction = _CtcClearAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 30, 2),
    _CtcClearAction_Type()
)
ctcClearAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcClearAction.setStatus("current")
_OnuIgmpAdmin_ObjectIdentity = ObjectIdentity
onuIgmpAdmin = _OnuIgmpAdmin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 31)
)


class _IgmpAdmin_Type(Integer32):
    """Custom type igmpAdmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_IgmpAdmin_Type.__name__ = "Integer32"
_IgmpAdmin_Object = MibScalar
igmpAdmin = _IgmpAdmin_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 31, 1),
    _IgmpAdmin_Type()
)
igmpAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpAdmin.setStatus("current")


class _IgmpAdminAction_Type(Integer32):
    """Custom type igmpAdminAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_IgmpAdminAction_Type.__name__ = "Integer32"
_IgmpAdminAction_Object = MibScalar
igmpAdminAction = _IgmpAdminAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 31, 2),
    _IgmpAdminAction_Type()
)
igmpAdminAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpAdminAction.setStatus("current")
_OnuCatvEnable_ObjectIdentity = ObjectIdentity
onuCatvEnable = _OnuCatvEnable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 32)
)


class _CatvEnable_Type(Integer32):
    """Custom type catvEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CatvEnable_Type.__name__ = "Integer32"
_CatvEnable_Object = MibScalar
catvEnable = _CatvEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 32, 1),
    _CatvEnable_Type()
)
catvEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    catvEnable.setStatus("current")


class _CatvEnableAction_Type(Integer32):
    """Custom type catvEnableAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CatvEnableAction_Type.__name__ = "Integer32"
_CatvEnableAction_Object = MibScalar
catvEnableAction = _CatvEnableAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 32, 2),
    _CatvEnableAction_Type()
)
catvEnableAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    catvEnableAction.setStatus("current")
_OnuCtcoamSkip_ObjectIdentity = ObjectIdentity
onuCtcoamSkip = _OnuCtcoamSkip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 33)
)


class _CtcoamSkip_Type(Integer32):
    """Custom type ctcoamSkip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcoamSkip_Type.__name__ = "Integer32"
_CtcoamSkip_Object = MibScalar
ctcoamSkip = _CtcoamSkip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 33, 1),
    _CtcoamSkip_Type()
)
ctcoamSkip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcoamSkip.setStatus("current")


class _CtcoamSkipAction_Type(Integer32):
    """Custom type ctcoamSkipAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcoamSkipAction_Type.__name__ = "Integer32"
_CtcoamSkipAction_Object = MibScalar
ctcoamSkipAction = _CtcoamSkipAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 33, 2),
    _CtcoamSkipAction_Type()
)
ctcoamSkipAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcoamSkipAction.setStatus("current")
_OnuWifiSwich_ObjectIdentity = ObjectIdentity
onuWifiSwich = _OnuWifiSwich_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34)
)


class _WlanApmoduleEnable_Type(Integer32):
    """Custom type wlanApmoduleEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WlanApmoduleEnable_Type.__name__ = "Integer32"
_WlanApmoduleEnable_Object = MibScalar
wlanApmoduleEnable = _WlanApmoduleEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 1),
    _WlanApmoduleEnable_Type()
)
wlanApmoduleEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanApmoduleEnable.setStatus("current")


class _WlanCountry_Type(Integer32):
    """Custom type wlanCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_WlanCountry_Type.__name__ = "Integer32"
_WlanCountry_Object = MibScalar
wlanCountry = _WlanCountry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 2),
    _WlanCountry_Type()
)
wlanCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanCountry.setStatus("current")


class _WlanChannel_Type(Integer32):
    """Custom type wlanChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_WlanChannel_Type.__name__ = "Integer32"
_WlanChannel_Object = MibScalar
wlanChannel = _WlanChannel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 3),
    _WlanChannel_Type()
)
wlanChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanChannel.setStatus("current")


class _WlanStandard_Type(Integer32):
    """Custom type wlanStandard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4))
    )


_WlanStandard_Type.__name__ = "Integer32"
_WlanStandard_Object = MibScalar
wlanStandard = _WlanStandard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 4),
    _WlanStandard_Type()
)
wlanStandard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanStandard.setStatus("current")


class _WlanPower_Type(Integer32):
    """Custom type wlanPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_WlanPower_Type.__name__ = "Integer32"
_WlanPower_Object = MibScalar
wlanPower = _WlanPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 5),
    _WlanPower_Type()
)
wlanPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanPower.setStatus("current")


class _WlanSwichAction_Type(Integer32):
    """Custom type wlanSwichAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_WlanSwichAction_Type.__name__ = "Integer32"
_WlanSwichAction_Object = MibScalar
wlanSwichAction = _WlanSwichAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 6),
    _WlanSwichAction_Type()
)
wlanSwichAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanSwichAction.setStatus("current")


class _WlanChannelWidth_Type(Integer32):
    """Custom type wlanChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s20_40", 3))
    )


_WlanChannelWidth_Type.__name__ = "Integer32"
_WlanChannelWidth_Object = MibScalar
wlanChannelWidth = _WlanChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 34, 7),
    _WlanChannelWidth_Type()
)
wlanChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wlanChannelWidth.setStatus("current")
_OnuWifiSsid_ObjectIdentity = ObjectIdentity
onuWifiSsid = _OnuWifiSsid_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35)
)


class _SsidId_Type(Integer32):
    """Custom type ssidId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SsidId_Type.__name__ = "Integer32"
_SsidId_Object = MibScalar
ssidId = _SsidId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 1),
    _SsidId_Type()
)
ssidId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidId.setStatus("current")
_SsidName_Type = OctetString
_SsidName_Object = MibScalar
ssidName = _SsidName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 2),
    _SsidName_Type()
)
ssidName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidName.setStatus("current")


class _SsidEnable_Type(Integer32):
    """Custom type ssidEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidEnable_Type.__name__ = "Integer32"
_SsidEnable_Object = MibScalar
ssidEnable = _SsidEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 3),
    _SsidEnable_Type()
)
ssidEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidEnable.setStatus("current")


class _SsidHide_Type(Integer32):
    """Custom type ssidHide based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SsidHide_Type.__name__ = "Integer32"
_SsidHide_Object = MibScalar
ssidHide = _SsidHide_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 4),
    _SsidHide_Type()
)
ssidHide.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidHide.setStatus("current")


class _SsidAuthMode_Type(Integer32):
    """Custom type ssidAuthMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("open", 1),
          ("shared", 2),
          ("wepauto", 3),
          ("wpapsk", 4),
          ("wpa", 5),
          ("wpa2psk", 6),
          ("wpa2", 7),
          ("wpa_wpa2", 8),
          ("wpapsk_wpa2psk", 9))
    )


_SsidAuthMode_Type.__name__ = "Integer32"
_SsidAuthMode_Object = MibScalar
ssidAuthMode = _SsidAuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 5),
    _SsidAuthMode_Type()
)
ssidAuthMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidAuthMode.setStatus("current")


class _SsidEncrypTpye_Type(Integer32):
    """Custom type ssidEncrypTpye based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("wep", 2),
          ("tkip", 3),
          ("aes", 4),
          ("tkipaes", 5))
    )


_SsidEncrypTpye_Type.__name__ = "Integer32"
_SsidEncrypTpye_Object = MibScalar
ssidEncrypTpye = _SsidEncrypTpye_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 6),
    _SsidEncrypTpye_Type()
)
ssidEncrypTpye.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidEncrypTpye.setStatus("current")
_SsidPresharedKey_Type = OctetString
_SsidPresharedKey_Object = MibScalar
ssidPresharedKey = _SsidPresharedKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 7),
    _SsidPresharedKey_Type()
)
ssidPresharedKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidPresharedKey.setStatus("current")


class _SsidRekeyInterval_Type(Integer32):
    """Custom type ssidRekeyInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4194303),
    )


_SsidRekeyInterval_Type.__name__ = "Integer32"
_SsidRekeyInterval_Object = MibScalar
ssidRekeyInterval = _SsidRekeyInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 8),
    _SsidRekeyInterval_Type()
)
ssidRekeyInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRekeyInterval.setStatus("current")


class _SsidRadiusServIpType_Type(Integer32):
    """Custom type ssidRadiusServIpType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2),
          ("ipv4z", 3),
          ("ipv6z", 4),
          ("dns", 16))
    )


_SsidRadiusServIpType_Type.__name__ = "Integer32"
_SsidRadiusServIpType_Object = MibScalar
ssidRadiusServIpType = _SsidRadiusServIpType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 9),
    _SsidRadiusServIpType_Type()
)
ssidRadiusServIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusServIpType.setStatus("current")
_SsidRadiusSerIp_Type = OctetString
_SsidRadiusSerIp_Object = MibScalar
ssidRadiusSerIp = _SsidRadiusSerIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 10),
    _SsidRadiusSerIp_Type()
)
ssidRadiusSerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusSerIp.setStatus("current")


class _SsidRadiusServIpPrefixLen_Type(Integer32):
    """Custom type ssidRadiusServIpPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SsidRadiusServIpPrefixLen_Type.__name__ = "Integer32"
_SsidRadiusServIpPrefixLen_Object = MibScalar
ssidRadiusServIpPrefixLen = _SsidRadiusServIpPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 11),
    _SsidRadiusServIpPrefixLen_Type()
)
ssidRadiusServIpPrefixLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusServIpPrefixLen.setStatus("current")


class _SsidRadiusPort_Type(Integer32):
    """Custom type ssidRadiusPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusPort_Type.__name__ = "Integer32"
_SsidRadiusPort_Object = MibScalar
ssidRadiusPort = _SsidRadiusPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 12),
    _SsidRadiusPort_Type()
)
ssidRadiusPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusPort.setStatus("current")


class _SsidRadiusKey_Type(OctetString):
    """Custom type ssidRadiusKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SsidRadiusKey_Type.__name__ = "OctetString"
_SsidRadiusKey_Object = MibScalar
ssidRadiusKey = _SsidRadiusKey_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 13),
    _SsidRadiusKey_Type()
)
ssidRadiusKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusKey.setStatus("current")


class _SsidWepEncryptionLevel_Type(Integer32):
    """Custom type ssidWepEncryptionLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("s64bit", 1),
          ("s128bit", 2))
    )


_SsidWepEncryptionLevel_Type.__name__ = "Integer32"
_SsidWepEncryptionLevel_Object = MibScalar
ssidWepEncryptionLevel = _SsidWepEncryptionLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 14),
    _SsidWepEncryptionLevel_Type()
)
ssidWepEncryptionLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepEncryptionLevel.setStatus("current")


class _SsidWepKeyIndex_Type(Integer32):
    """Custom type ssidWepKeyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_SsidWepKeyIndex_Type.__name__ = "Integer32"
_SsidWepKeyIndex_Object = MibScalar
ssidWepKeyIndex = _SsidWepKeyIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 15),
    _SsidWepKeyIndex_Type()
)
ssidWepKeyIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKeyIndex.setStatus("current")


class _SsidWepKey1_Type(OctetString):
    """Custom type ssidWepKey1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SsidWepKey1_Type.__name__ = "OctetString"
_SsidWepKey1_Object = MibScalar
ssidWepKey1 = _SsidWepKey1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 16),
    _SsidWepKey1_Type()
)
ssidWepKey1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey1.setStatus("current")


class _SsidWepKey2_Type(OctetString):
    """Custom type ssidWepKey2 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SsidWepKey2_Type.__name__ = "OctetString"
_SsidWepKey2_Object = MibScalar
ssidWepKey2 = _SsidWepKey2_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 17),
    _SsidWepKey2_Type()
)
ssidWepKey2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey2.setStatus("current")


class _SsidWepKey3_Type(OctetString):
    """Custom type ssidWepKey3 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SsidWepKey3_Type.__name__ = "OctetString"
_SsidWepKey3_Object = MibScalar
ssidWepKey3 = _SsidWepKey3_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 18),
    _SsidWepKey3_Type()
)
ssidWepKey3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey3.setStatus("current")


class _SsidWepKey4_Type(OctetString):
    """Custom type ssidWepKey4 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SsidWepKey4_Type.__name__ = "OctetString"
_SsidWepKey4_Object = MibScalar
ssidWepKey4 = _SsidWepKey4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 19),
    _SsidWepKey4_Type()
)
ssidWepKey4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey4.setStatus("current")


class _SsidAction_Type(Integer32):
    """Custom type ssidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_SsidAction_Type.__name__ = "Integer32"
_SsidAction_Object = MibScalar
ssidAction = _SsidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 35, 20),
    _SsidAction_Type()
)
ssidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidAction.setStatus("current")
_OnuWanConn_ObjectIdentity = ObjectIdentity
onuWanConn = _OnuWanConn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36)
)
_WanConnAdd_ObjectIdentity = ObjectIdentity
wanConnAdd = _WanConnAdd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 1)
)


class _ConnType_Type(Integer32):
    """Custom type connType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_ConnType_Type.__name__ = "Integer32"
_ConnType_Object = MibScalar
connType = _ConnType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 1, 1),
    _ConnType_Type()
)
connType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connType.setStatus("current")


class _ConnAddAction_Type(Integer32):
    """Custom type connAddAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_ConnAddAction_Type.__name__ = "Integer32"
_ConnAddAction_Object = MibScalar
connAddAction = _ConnAddAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 1, 2),
    _ConnAddAction_Type()
)
connAddAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connAddAction.setStatus("current")
_WanConnDelete_ObjectIdentity = ObjectIdentity
wanConnDelete = _WanConnDelete_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 2)
)


class _ConnIndexD_Type(Integer32):
    """Custom type connIndexD based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_ConnIndexD_Type.__name__ = "Integer32"
_ConnIndexD_Object = MibScalar
connIndexD = _ConnIndexD_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 2, 1),
    _ConnIndexD_Type()
)
connIndexD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connIndexD.setStatus("current")


class _ConnDeleteAction_Type(Integer32):
    """Custom type connDeleteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("delete", 1)
    )


_ConnDeleteAction_Type.__name__ = "Integer32"
_ConnDeleteAction_Object = MibScalar
connDeleteAction = _ConnDeleteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 2, 2),
    _ConnDeleteAction_Type()
)
connDeleteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connDeleteAction.setStatus("current")
_WanConnCfg_ObjectIdentity = ObjectIdentity
wanConnCfg = _WanConnCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3)
)


class _ConnIndex_Type(Integer32):
    """Custom type connIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_ConnIndex_Type.__name__ = "Integer32"
_ConnIndex_Object = MibScalar
connIndex = _ConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 1),
    _ConnIndex_Type()
)
connIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connIndex.setStatus("current")


class _ConnBindLan_Type(Integer32):
    """Custom type connBindLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_ConnBindLan_Type.__name__ = "Integer32"
_ConnBindLan_Object = MibScalar
connBindLan = _ConnBindLan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 2),
    _ConnBindLan_Type()
)
connBindLan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connBindLan.setStatus("current")


class _ConnBindSsid_Type(Integer32):
    """Custom type connBindSsid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_ConnBindSsid_Type.__name__ = "Integer32"
_ConnBindSsid_Object = MibScalar
connBindSsid = _ConnBindSsid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 3),
    _ConnBindSsid_Type()
)
connBindSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connBindSsid.setStatus("current")


class _WanMode_Type(Integer32):
    """Custom type wanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("other", 100))
    )


_WanMode_Type.__name__ = "Integer32"
_WanMode_Object = MibScalar
wanMode = _WanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 4),
    _WanMode_Type()
)
wanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanMode.setStatus("current")


class _ConnTypeCfg_Type(Integer32):
    """Custom type connTypeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_ConnTypeCfg_Type.__name__ = "Integer32"
_ConnTypeCfg_Object = MibScalar
connTypeCfg = _ConnTypeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 5),
    _ConnTypeCfg_Type()
)
connTypeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connTypeCfg.setStatus("current")


class _ConnVlanId_Type(Integer32):
    """Custom type connVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_ConnVlanId_Type.__name__ = "Integer32"
_ConnVlanId_Object = MibScalar
connVlanId = _ConnVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 6),
    _ConnVlanId_Type()
)
connVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connVlanId.setStatus("current")


class _ConnCos_Type(Integer32):
    """Custom type connCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ConnCos_Type.__name__ = "Integer32"
_ConnCos_Object = MibScalar
connCos = _ConnCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 7),
    _ConnCos_Type()
)
connCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connCos.setStatus("current")


class _ConnNatEnable_Type(Integer32):
    """Custom type connNatEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ConnNatEnable_Type.__name__ = "Integer32"
_ConnNatEnable_Object = MibScalar
connNatEnable = _ConnNatEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 8),
    _ConnNatEnable_Type()
)
connNatEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connNatEnable.setStatus("current")


class _ConnModeCfg_Type(Integer32):
    """Custom type connModeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_ConnModeCfg_Type.__name__ = "Integer32"
_ConnModeCfg_Object = MibScalar
connModeCfg = _ConnModeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 9),
    _ConnModeCfg_Type()
)
connModeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connModeCfg.setStatus("current")
_ConnIpAddress_Type = IpAddress
_ConnIpAddress_Object = MibScalar
connIpAddress = _ConnIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 10),
    _ConnIpAddress_Type()
)
connIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connIpAddress.setStatus("current")
_ConnIpMask_Type = IpAddress
_ConnIpMask_Object = MibScalar
connIpMask = _ConnIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 11),
    _ConnIpMask_Type()
)
connIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connIpMask.setStatus("current")
_ConnGateway_Type = IpAddress
_ConnGateway_Object = MibScalar
connGateway = _ConnGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 12),
    _ConnGateway_Type()
)
connGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connGateway.setStatus("current")
_ConnMasterDns_Type = IpAddress
_ConnMasterDns_Object = MibScalar
connMasterDns = _ConnMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 13),
    _ConnMasterDns_Type()
)
connMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connMasterDns.setStatus("current")
_ConnSlaveDns_Type = IpAddress
_ConnSlaveDns_Object = MibScalar
connSlaveDns = _ConnSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 14),
    _ConnSlaveDns_Type()
)
connSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connSlaveDns.setStatus("current")


class _ConnPppoeProxy_Type(Integer32):
    """Custom type connPppoeProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ConnPppoeProxy_Type.__name__ = "Integer32"
_ConnPppoeProxy_Object = MibScalar
connPppoeProxy = _ConnPppoeProxy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 15),
    _ConnPppoeProxy_Type()
)
connPppoeProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connPppoeProxy.setStatus("current")
_ConnPppoeUsername_Type = OctetString
_ConnPppoeUsername_Object = MibScalar
connPppoeUsername = _ConnPppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 16),
    _ConnPppoeUsername_Type()
)
connPppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connPppoeUsername.setStatus("current")
_ConnPppoePassword_Type = OctetString
_ConnPppoePassword_Object = MibScalar
connPppoePassword = _ConnPppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 17),
    _ConnPppoePassword_Type()
)
connPppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connPppoePassword.setStatus("current")
_ConnPppoeSerName_Type = OctetString
_ConnPppoeSerName_Object = MibScalar
connPppoeSerName = _ConnPppoeSerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 18),
    _ConnPppoeSerName_Type()
)
connPppoeSerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connPppoeSerName.setStatus("current")


class _ConnPppoeMode_Type(Integer32):
    """Custom type connPppoeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("connecWhenPayload", 1))
    )


_ConnPppoeMode_Type.__name__ = "Integer32"
_ConnPppoeMode_Object = MibScalar
connPppoeMode = _ConnPppoeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 19),
    _ConnPppoeMode_Type()
)
connPppoeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connPppoeMode.setStatus("current")


class _ConnQosEnable_Type(Integer32):
    """Custom type connQosEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ConnQosEnable_Type.__name__ = "Integer32"
_ConnQosEnable_Object = MibScalar
connQosEnable = _ConnQosEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 20),
    _ConnQosEnable_Type()
)
connQosEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connQosEnable.setStatus("current")


class _ConnVlanMode_Type(Integer32):
    """Custom type connVlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_ConnVlanMode_Type.__name__ = "Integer32"
_ConnVlanMode_Object = MibScalar
connVlanMode = _ConnVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 21),
    _ConnVlanMode_Type()
)
connVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connVlanMode.setStatus("current")


class _ConnTranslationEnable_Type(Integer32):
    """Custom type connTranslationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ConnTranslationEnable_Type.__name__ = "Integer32"
_ConnTranslationEnable_Object = MibScalar
connTranslationEnable = _ConnTranslationEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 22),
    _ConnTranslationEnable_Type()
)
connTranslationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connTranslationEnable.setStatus("current")


class _ConnTranslationVlan_Type(Integer32):
    """Custom type connTranslationVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_ConnTranslationVlan_Type.__name__ = "Integer32"
_ConnTranslationVlan_Object = MibScalar
connTranslationVlan = _ConnTranslationVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 23),
    _ConnTranslationVlan_Type()
)
connTranslationVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connTranslationVlan.setStatus("current")


class _ConnTranslationCos_Type(Integer32):
    """Custom type connTranslationCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ConnTranslationCos_Type.__name__ = "Integer32"
_ConnTranslationCos_Object = MibScalar
connTranslationCos = _ConnTranslationCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 24),
    _ConnTranslationCos_Type()
)
connTranslationCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connTranslationCos.setStatus("current")


class _ConnQinqEnable_Type(Integer32):
    """Custom type connQinqEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_ConnQinqEnable_Type.__name__ = "Integer32"
_ConnQinqEnable_Object = MibScalar
connQinqEnable = _ConnQinqEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 25),
    _ConnQinqEnable_Type()
)
connQinqEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connQinqEnable.setStatus("current")


class _ConnQinqTpid_Type(Integer32):
    """Custom type connQinqTpid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_ConnQinqTpid_Type.__name__ = "Integer32"
_ConnQinqTpid_Object = MibScalar
connQinqTpid = _ConnQinqTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 26),
    _ConnQinqTpid_Type()
)
connQinqTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connQinqTpid.setStatus("current")


class _ConnWanSvlan_Type(Integer32):
    """Custom type connWanSvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_ConnWanSvlan_Type.__name__ = "Integer32"
_ConnWanSvlan_Object = MibScalar
connWanSvlan = _ConnWanSvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 27),
    _ConnWanSvlan_Type()
)
connWanSvlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connWanSvlan.setStatus("current")


class _ConnSvlanCos_Type(Integer32):
    """Custom type connSvlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ConnSvlanCos_Type.__name__ = "Integer32"
_ConnSvlanCos_Object = MibScalar
connSvlanCos = _ConnSvlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 28),
    _ConnSvlanCos_Type()
)
connSvlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connSvlanCos.setStatus("current")


class _ConnCfgAction_Type(Integer32):
    """Custom type connCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_ConnCfgAction_Type.__name__ = "Integer32"
_ConnCfgAction_Object = MibScalar
connCfgAction = _ConnCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 29),
    _ConnCfgAction_Type()
)
connCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connCfgAction.setStatus("current")


class _ConnRouteMtu_Type(Integer32):
    """Custom type connRouteMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(576, 1500),
    )


_ConnRouteMtu_Type.__name__ = "Integer32"
_ConnRouteMtu_Object = MibScalar
connRouteMtu = _ConnRouteMtu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 3, 30),
    _ConnRouteMtu_Type()
)
connRouteMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connRouteMtu.setStatus("current")
_WanConnCommit_ObjectIdentity = ObjectIdentity
wanConnCommit = _WanConnCommit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 4)
)


class _ConnCommitAction_Type(Integer32):
    """Custom type connCommitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_ConnCommitAction_Type.__name__ = "Integer32"
_ConnCommitAction_Object = MibScalar
connCommitAction = _ConnCommitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 36, 4, 1),
    _ConnCommitAction_Type()
)
connCommitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connCommitAction.setStatus("current")
_OnuPortMacLimit_ObjectIdentity = ObjectIdentity
onuPortMacLimit = _OnuPortMacLimit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 37)
)


class _MacLimitEthNo_Type(Integer32):
    """Custom type macLimitEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_MacLimitEthNo_Type.__name__ = "Integer32"
_MacLimitEthNo_Object = MibScalar
macLimitEthNo = _MacLimitEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 37, 1),
    _MacLimitEthNo_Type()
)
macLimitEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macLimitEthNo.setStatus("current")


class _MacLimit_Type(Integer32):
    """Custom type macLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MacLimit_Type.__name__ = "Integer32"
_MacLimit_Object = MibScalar
macLimit = _MacLimit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 37, 2),
    _MacLimit_Type()
)
macLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macLimit.setStatus("current")


class _MacLimitAction_Type(Integer32):
    """Custom type macLimitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_MacLimitAction_Type.__name__ = "Integer32"
_MacLimitAction_Object = MibScalar
macLimitAction = _MacLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 37, 3),
    _MacLimitAction_Type()
)
macLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macLimitAction.setStatus("current")
_OnuPortPkgSuppress_ObjectIdentity = ObjectIdentity
onuPortPkgSuppress = _OnuPortPkgSuppress_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 38)
)


class _PkgSuppressEthNo_Type(Integer32):
    """Custom type pkgSuppressEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PkgSuppressEthNo_Type.__name__ = "Integer32"
_PkgSuppressEthNo_Object = MibScalar
pkgSuppressEthNo = _PkgSuppressEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 38, 1),
    _PkgSuppressEthNo_Type()
)
pkgSuppressEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pkgSuppressEthNo.setStatus("current")


class _PkgBroadcast_Type(Integer32):
    """Custom type pkgBroadcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PkgBroadcast_Type.__name__ = "Integer32"
_PkgBroadcast_Object = MibScalar
pkgBroadcast = _PkgBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 38, 2),
    _PkgBroadcast_Type()
)
pkgBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pkgBroadcast.setStatus("current")


class _PkgMulticast_Type(Integer32):
    """Custom type pkgMulticast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PkgMulticast_Type.__name__ = "Integer32"
_PkgMulticast_Object = MibScalar
pkgMulticast = _PkgMulticast_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 38, 3),
    _PkgMulticast_Type()
)
pkgMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pkgMulticast.setStatus("current")


class _PkgUnknown_Type(Integer32):
    """Custom type pkgUnknown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PkgUnknown_Type.__name__ = "Integer32"
_PkgUnknown_Object = MibScalar
pkgUnknown = _PkgUnknown_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 38, 4),
    _PkgUnknown_Type()
)
pkgUnknown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pkgUnknown.setStatus("current")


class _PkgSuppressAction_Type(Integer32):
    """Custom type pkgSuppressAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PkgSuppressAction_Type.__name__ = "Integer32"
_PkgSuppressAction_Object = MibScalar
pkgSuppressAction = _PkgSuppressAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 38, 5),
    _PkgSuppressAction_Type()
)
pkgSuppressAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pkgSuppressAction.setStatus("current")
_OnuPortIsolateEnable_ObjectIdentity = ObjectIdentity
onuPortIsolateEnable = _OnuPortIsolateEnable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 39)
)


class _PortIsolateEnable_Type(Integer32):
    """Custom type portIsolateEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortIsolateEnable_Type.__name__ = "Integer32"
_PortIsolateEnable_Object = MibScalar
portIsolateEnable = _PortIsolateEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 39, 1),
    _PortIsolateEnable_Type()
)
portIsolateEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portIsolateEnable.setStatus("current")


class _PortIsolateAction_Type(Integer32):
    """Custom type portIsolateAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PortIsolateAction_Type.__name__ = "Integer32"
_PortIsolateAction_Object = MibScalar
portIsolateAction = _PortIsolateAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 39, 2),
    _PortIsolateAction_Type()
)
portIsolateAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portIsolateAction.setStatus("current")
_OnuPortModeControl_ObjectIdentity = ObjectIdentity
onuPortModeControl = _OnuPortModeControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 40)
)


class _ModeControlEthNo_Type(Integer32):
    """Custom type modeControlEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ModeControlEthNo_Type.__name__ = "Integer32"
_ModeControlEthNo_Object = MibScalar
modeControlEthNo = _ModeControlEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 40, 1),
    _ModeControlEthNo_Type()
)
modeControlEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    modeControlEthNo.setStatus("current")


class _ModeControl_Type(Integer32):
    """Custom type modeControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("s10hd", 1),
          ("s10fd", 2),
          ("s100hd", 3),
          ("s100fd", 4),
          ("s1000hd", 5),
          ("s1000fd", 6),
          ("s10000fd", 7))
    )


_ModeControl_Type.__name__ = "Integer32"
_ModeControl_Object = MibScalar
modeControl = _ModeControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 40, 2),
    _ModeControl_Type()
)
modeControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    modeControl.setStatus("current")


class _ModeControlAction_Type(Integer32):
    """Custom type modeControlAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_ModeControlAction_Type.__name__ = "Integer32"
_ModeControlAction_Object = MibScalar
modeControlAction = _ModeControlAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 40, 3),
    _ModeControlAction_Type()
)
modeControlAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    modeControlAction.setStatus("current")
_OnuDhcpServer_ObjectIdentity = ObjectIdentity
onuDhcpServer = _OnuDhcpServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41)
)
_DhcpLanip_Type = IpAddress
_DhcpLanip_Object = MibScalar
dhcpLanip = _DhcpLanip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 1),
    _DhcpLanip_Type()
)
dhcpLanip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpLanip.setStatus("current")
_DhcplanMask_Type = IpAddress
_DhcplanMask_Object = MibScalar
dhcplanMask = _DhcplanMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 2),
    _DhcplanMask_Type()
)
dhcplanMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcplanMask.setStatus("current")


class _DhcpServerEnable_Type(Integer32):
    """Custom type dhcpServerEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_DhcpServerEnable_Type.__name__ = "Integer32"
_DhcpServerEnable_Object = MibScalar
dhcpServerEnable = _DhcpServerEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 3),
    _DhcpServerEnable_Type()
)
dhcpServerEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpServerEnable.setStatus("current")


class _DhcpLease_Type(Unsigned32):
    """Custom type dhcpLease based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_DhcpLease_Type.__name__ = "Unsigned32"
_DhcpLease_Object = MibScalar
dhcpLease = _DhcpLease_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 4),
    _DhcpLease_Type()
)
dhcpLease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpLease.setStatus("current")
_DhcpBeginIp_Type = IpAddress
_DhcpBeginIp_Object = MibScalar
dhcpBeginIp = _DhcpBeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 5),
    _DhcpBeginIp_Type()
)
dhcpBeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpBeginIp.setStatus("current")
_DhcpEndIp_Type = IpAddress
_DhcpEndIp_Object = MibScalar
dhcpEndIp = _DhcpEndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 6),
    _DhcpEndIp_Type()
)
dhcpEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpEndIp.setStatus("current")


class _DhcpPoolType_Type(Integer32):
    """Custom type dhcpPoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_DhcpPoolType_Type.__name__ = "Integer32"
_DhcpPoolType_Object = MibScalar
dhcpPoolType = _DhcpPoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 7),
    _DhcpPoolType_Type()
)
dhcpPoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpPoolType.setStatus("current")
_DhcpMasterDns_Type = IpAddress
_DhcpMasterDns_Object = MibScalar
dhcpMasterDns = _DhcpMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 8),
    _DhcpMasterDns_Type()
)
dhcpMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpMasterDns.setStatus("current")
_DhcpSlaveDns_Type = IpAddress
_DhcpSlaveDns_Object = MibScalar
dhcpSlaveDns = _DhcpSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 9),
    _DhcpSlaveDns_Type()
)
dhcpSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSlaveDns.setStatus("current")
_DhcpGateway_Type = IpAddress
_DhcpGateway_Object = MibScalar
dhcpGateway = _DhcpGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 10),
    _DhcpGateway_Type()
)
dhcpGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpGateway.setStatus("current")
_DhcpRelayIp_Type = IpAddress
_DhcpRelayIp_Object = MibScalar
dhcpRelayIp = _DhcpRelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 11),
    _DhcpRelayIp_Type()
)
dhcpRelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpRelayIp.setStatus("current")


class _DhcpAction_Type(Integer32):
    """Custom type dhcpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_DhcpAction_Type.__name__ = "Integer32"
_DhcpAction_Object = MibScalar
dhcpAction = _DhcpAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 41, 12),
    _DhcpAction_Type()
)
dhcpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpAction.setStatus("current")
_OnuDhcpOption82_ObjectIdentity = ObjectIdentity
onuDhcpOption82 = _OnuDhcpOption82_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 42)
)


class _DhcpOption82Enable_Type(Integer32):
    """Custom type dhcpOption82Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpOption82Enable_Type.__name__ = "Integer32"
_DhcpOption82Enable_Object = MibScalar
dhcpOption82Enable = _DhcpOption82Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 42, 1),
    _DhcpOption82Enable_Type()
)
dhcpOption82Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpOption82Enable.setStatus("current")


class _DhcpOption82Action_Type(Integer32):
    """Custom type dhcpOption82Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_DhcpOption82Action_Type.__name__ = "Integer32"
_DhcpOption82Action_Object = MibScalar
dhcpOption82Action = _DhcpOption82Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 42, 2),
    _DhcpOption82Action_Type()
)
dhcpOption82Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpOption82Action.setStatus("current")
_OnuPPPoE_ObjectIdentity = ObjectIdentity
onuPPPoE = _OnuPPPoE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 43)
)


class _PppoeEnable_Type(Integer32):
    """Custom type pppoeEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PppoeEnable_Type.__name__ = "Integer32"
_PppoeEnable_Object = MibScalar
pppoeEnable = _PppoeEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 43, 1),
    _PppoeEnable_Type()
)
pppoeEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeEnable.setStatus("current")


class _PppoeAction_Type(Integer32):
    """Custom type pppoeAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PppoeAction_Type.__name__ = "Integer32"
_PppoeAction_Object = MibScalar
pppoeAction = _PppoeAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 43, 2),
    _PppoeAction_Type()
)
pppoeAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeAction.setStatus("current")
_OnuDhcpV6_ObjectIdentity = ObjectIdentity
onuDhcpV6 = _OnuDhcpV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 44)
)


class _DhcpV6Option18Enable_Type(Integer32):
    """Custom type dhcpV6Option18Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpV6Option18Enable_Type.__name__ = "Integer32"
_DhcpV6Option18Enable_Object = MibScalar
dhcpV6Option18Enable = _DhcpV6Option18Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 44, 1),
    _DhcpV6Option18Enable_Type()
)
dhcpV6Option18Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpV6Option18Enable.setStatus("current")


class _DhcpV6Option37Enable_Type(Integer32):
    """Custom type dhcpV6Option37Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpV6Option37Enable_Type.__name__ = "Integer32"
_DhcpV6Option37Enable_Object = MibScalar
dhcpV6Option37Enable = _DhcpV6Option37Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 44, 2),
    _DhcpV6Option37Enable_Type()
)
dhcpV6Option37Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpV6Option37Enable.setStatus("current")


class _DhcpV6Action_Type(Integer32):
    """Custom type dhcpV6Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_DhcpV6Action_Type.__name__ = "Integer32"
_DhcpV6Action_Object = MibScalar
dhcpV6Action = _DhcpV6Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 44, 3),
    _DhcpV6Action_Type()
)
dhcpV6Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpV6Action.setStatus("current")
_OnuSecurity_ObjectIdentity = ObjectIdentity
onuSecurity = _OnuSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45)
)
_OnuUsername_ObjectIdentity = ObjectIdentity
onuUsername = _OnuUsername_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1)
)


class _AdminControl_Type(Integer32):
    """Custom type adminControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AdminControl_Type.__name__ = "Integer32"
_AdminControl_Object = MibScalar
adminControl = _AdminControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 1),
    _AdminControl_Type()
)
adminControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminControl.setStatus("current")
_AdminName_Type = OctetString
_AdminName_Object = MibScalar
adminName = _AdminName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 2),
    _AdminName_Type()
)
adminName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminName.setStatus("current")
_AdminPwd_Type = OctetString
_AdminPwd_Object = MibScalar
adminPwd = _AdminPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 3),
    _AdminPwd_Type()
)
adminPwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminPwd.setStatus("current")


class _UserControl_Type(Integer32):
    """Custom type userControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UserControl_Type.__name__ = "Integer32"
_UserControl_Object = MibScalar
userControl = _UserControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 4),
    _UserControl_Type()
)
userControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userControl.setStatus("current")
_Username_Type = OctetString
_Username_Object = MibScalar
username = _Username_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 5),
    _Username_Type()
)
username.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    username.setStatus("current")
_UserPwd_Type = OctetString
_UserPwd_Object = MibScalar
userPwd = _UserPwd_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 6),
    _UserPwd_Type()
)
userPwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userPwd.setStatus("current")


class _ControlAction_Type(Integer32):
    """Custom type controlAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("remove", 0),
          ("commit", 1))
    )


_ControlAction_Type.__name__ = "Integer32"
_ControlAction_Object = MibScalar
controlAction = _ControlAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 1, 7),
    _ControlAction_Type()
)
controlAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlAction.setStatus("current")
_OnuFirewall_ObjectIdentity = ObjectIdentity
onuFirewall = _OnuFirewall_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 2)
)


class _Level_Type(Integer32):
    """Custom type level based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("low", 1),
          ("middle", 2),
          ("high", 3),
          ("remove", 4))
    )


_Level_Type.__name__ = "Integer32"
_Level_Object = MibScalar
level = _Level_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 2, 1),
    _Level_Type()
)
level.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    level.setStatus("current")


class _OnuAclCommit_Type(Integer32):
    """Custom type onuAclCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_OnuAclCommit_Type.__name__ = "Integer32"
_OnuAclCommit_Object = MibScalar
onuAclCommit = _OnuAclCommit_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 3),
    _OnuAclCommit_Type()
)
onuAclCommit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuAclCommit.setStatus("current")
_OnuAcl_ObjectIdentity = ObjectIdentity
onuAcl = _OnuAcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4)
)


class _AclProtocolType_Type(Integer32):
    """Custom type aclProtocolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 0),
          ("ftp", 1),
          ("http", 2),
          ("https", 3),
          ("tftp", 4),
          ("ping", 5))
    )


_AclProtocolType_Type.__name__ = "Integer32"
_AclProtocolType_Object = MibScalar
aclProtocolType = _AclProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 1),
    _AclProtocolType_Type()
)
aclProtocolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclProtocolType.setStatus("current")


class _AclControl_Type(Integer32):
    """Custom type aclControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AclControl_Type.__name__ = "Integer32"
_AclControl_Object = MibScalar
aclControl = _AclControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 2),
    _AclControl_Type()
)
aclControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclControl.setStatus("current")


class _AclLanControl_Type(Integer32):
    """Custom type aclLanControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AclLanControl_Type.__name__ = "Integer32"
_AclLanControl_Object = MibScalar
aclLanControl = _AclLanControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 3),
    _AclLanControl_Type()
)
aclLanControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclLanControl.setStatus("current")


class _AclWanControl_Type(Integer32):
    """Custom type aclWanControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AclWanControl_Type.__name__ = "Integer32"
_AclWanControl_Object = MibScalar
aclWanControl = _AclWanControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 4),
    _AclWanControl_Type()
)
aclWanControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclWanControl.setStatus("current")


class _AclIPv4Control_Type(Integer32):
    """Custom type aclIPv4Control based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AclIPv4Control_Type.__name__ = "Integer32"
_AclIPv4Control_Object = MibScalar
aclIPv4Control = _AclIPv4Control_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 5),
    _AclIPv4Control_Type()
)
aclIPv4Control.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIPv4Control.setStatus("current")
_AclIPv4Addr_Type = IpAddress
_AclIPv4Addr_Object = MibScalar
aclIPv4Addr = _AclIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 6),
    _AclIPv4Addr_Type()
)
aclIPv4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIPv4Addr.setStatus("current")
_AclIPv4Mask_Type = IpAddress
_AclIPv4Mask_Object = MibScalar
aclIPv4Mask = _AclIPv4Mask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 7),
    _AclIPv4Mask_Type()
)
aclIPv4Mask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIPv4Mask.setStatus("current")


class _AclIPv6Control_Type(Integer32):
    """Custom type aclIPv6Control based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AclIPv6Control_Type.__name__ = "Integer32"
_AclIPv6Control_Object = MibScalar
aclIPv6Control = _AclIPv6Control_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 8),
    _AclIPv6Control_Type()
)
aclIPv6Control.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIPv6Control.setStatus("current")
_AclIPv6Address_Type = OctetString
_AclIPv6Address_Object = MibScalar
aclIPv6Address = _AclIPv6Address_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 9),
    _AclIPv6Address_Type()
)
aclIPv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIPv6Address.setStatus("current")
_AclIPv6Prefix_Type = Unsigned32
_AclIPv6Prefix_Object = MibScalar
aclIPv6Prefix = _AclIPv6Prefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 10),
    _AclIPv6Prefix_Type()
)
aclIPv6Prefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIPv6Prefix.setStatus("current")


class _AclProtocolPort_Type(Unsigned32):
    """Custom type aclProtocolPort based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclProtocolPort_Type.__name__ = "Unsigned32"
_AclProtocolPort_Object = MibScalar
aclProtocolPort = _AclProtocolPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 11),
    _AclProtocolPort_Type()
)
aclProtocolPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclProtocolPort.setStatus("current")


class _AclAction_Type(Integer32):
    """Custom type aclAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("remove", 0),
          ("commit", 1))
    )


_AclAction_Type.__name__ = "Integer32"
_AclAction_Object = MibScalar
aclAction = _AclAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 45, 4, 12),
    _AclAction_Type()
)
aclAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclAction.setStatus("current")
_OnuWifiSwitch1_ObjectIdentity = ObjectIdentity
onuWifiSwitch1 = _OnuWifiSwitch1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46)
)


class _WifiApmoduleEnable_Type(Integer32):
    """Custom type wifiApmoduleEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WifiApmoduleEnable_Type.__name__ = "Integer32"
_WifiApmoduleEnable_Object = MibScalar
wifiApmoduleEnable = _WifiApmoduleEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 1),
    _WifiApmoduleEnable_Type()
)
wifiApmoduleEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiApmoduleEnable.setStatus("current")


class _WifiCountry_Type(Integer32):
    """Custom type wifiCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_WifiCountry_Type.__name__ = "Integer32"
_WifiCountry_Object = MibScalar
wifiCountry = _WifiCountry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 2),
    _WifiCountry_Type()
)
wifiCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiCountry.setStatus("current")


class _WifiChannel_Type(Integer32):
    """Custom type wifiChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_WifiChannel_Type.__name__ = "Integer32"
_WifiChannel_Object = MibScalar
wifiChannel = _WifiChannel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 3),
    _WifiChannel_Type()
)
wifiChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiChannel.setStatus("current")


class _WifiStandard_Type(Integer32):
    """Custom type wifiStandard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4),
          ("s80211ac", 5),
          ("s80211a", 6),
          ("s80211an", 7),
          ("s80211nac", 8),
          ("s80211anac", 9))
    )


_WifiStandard_Type.__name__ = "Integer32"
_WifiStandard_Object = MibScalar
wifiStandard = _WifiStandard_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 4),
    _WifiStandard_Type()
)
wifiStandard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiStandard.setStatus("current")


class _WifiPower_Type(Integer32):
    """Custom type wifiPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_WifiPower_Type.__name__ = "Integer32"
_WifiPower_Object = MibScalar
wifiPower = _WifiPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 5),
    _WifiPower_Type()
)
wifiPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiPower.setStatus("current")


class _WifiSwitchAction_Type(Integer32):
    """Custom type wifiSwitchAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_WifiSwitchAction_Type.__name__ = "Integer32"
_WifiSwitchAction_Object = MibScalar
wifiSwitchAction = _WifiSwitchAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 6),
    _WifiSwitchAction_Type()
)
wifiSwitchAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiSwitchAction.setStatus("current")


class _WifiChannelWidth_Type(Integer32):
    """Custom type wifiChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s80", 2),
          ("s20_40", 3))
    )


_WifiChannelWidth_Type.__name__ = "Integer32"
_WifiChannelWidth_Object = MibScalar
wifiChannelWidth = _WifiChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 7),
    _WifiChannelWidth_Type()
)
wifiChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiChannelWidth.setStatus("current")


class _WifiEasyMeshStatus_Type(Integer32):
    """Custom type wifiEasyMeshStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WifiEasyMeshStatus_Type.__name__ = "Integer32"
_WifiEasyMeshStatus_Object = MibScalar
wifiEasyMeshStatus = _WifiEasyMeshStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 46, 8),
    _WifiEasyMeshStatus_Type()
)
wifiEasyMeshStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wifiEasyMeshStatus.setStatus("current")
_OnuDhcpv6Server_ObjectIdentity = ObjectIdentity
onuDhcpv6Server = _OnuDhcpv6Server_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47)
)
_Dhcpv6Lanip_Type = OctetString
_Dhcpv6Lanip_Object = MibScalar
dhcpv6Lanip = _Dhcpv6Lanip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 1),
    _Dhcpv6Lanip_Type()
)
dhcpv6Lanip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6Lanip.setStatus("current")


class _Dhcpv6lanPrefixlen_Type(Integer32):
    """Custom type dhcpv6lanPrefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Dhcpv6lanPrefixlen_Type.__name__ = "Integer32"
_Dhcpv6lanPrefixlen_Object = MibScalar
dhcpv6lanPrefixlen = _Dhcpv6lanPrefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 2),
    _Dhcpv6lanPrefixlen_Type()
)
dhcpv6lanPrefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6lanPrefixlen.setStatus("current")


class _Dhcpv6PrefixMode_Type(Integer32):
    """Custom type dhcpv6PrefixMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("static", 1))
    )


_Dhcpv6PrefixMode_Type.__name__ = "Integer32"
_Dhcpv6PrefixMode_Object = MibScalar
dhcpv6PrefixMode = _Dhcpv6PrefixMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 3),
    _Dhcpv6PrefixMode_Type()
)
dhcpv6PrefixMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6PrefixMode.setStatus("current")
_Dhcpv6PrefixModeIp_Type = OctetString
_Dhcpv6PrefixModeIp_Object = MibScalar
dhcpv6PrefixModeIp = _Dhcpv6PrefixModeIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 4),
    _Dhcpv6PrefixModeIp_Type()
)
dhcpv6PrefixModeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6PrefixModeIp.setStatus("current")


class _Dhcpv6ServerEnable_Type(Integer32):
    """Custom type dhcpv6ServerEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_Dhcpv6ServerEnable_Type.__name__ = "Integer32"
_Dhcpv6ServerEnable_Object = MibScalar
dhcpv6ServerEnable = _Dhcpv6ServerEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 5),
    _Dhcpv6ServerEnable_Type()
)
dhcpv6ServerEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6ServerEnable.setStatus("current")


class _Dhcpv6Preference_Type(Unsigned32):
    """Custom type dhcpv6Preference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_Dhcpv6Preference_Type.__name__ = "Unsigned32"
_Dhcpv6Preference_Object = MibScalar
dhcpv6Preference = _Dhcpv6Preference_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 6),
    _Dhcpv6Preference_Type()
)
dhcpv6Preference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6Preference.setStatus("current")
_Dhcpv6BeginIp_Type = OctetString
_Dhcpv6BeginIp_Object = MibScalar
dhcpv6BeginIp = _Dhcpv6BeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 7),
    _Dhcpv6BeginIp_Type()
)
dhcpv6BeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6BeginIp.setStatus("current")
_Dhcpv6EndIp_Type = OctetString
_Dhcpv6EndIp_Object = MibScalar
dhcpv6EndIp = _Dhcpv6EndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 8),
    _Dhcpv6EndIp_Type()
)
dhcpv6EndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6EndIp.setStatus("current")


class _Dhcpv6PoolType_Type(Integer32):
    """Custom type dhcpv6PoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_Dhcpv6PoolType_Type.__name__ = "Integer32"
_Dhcpv6PoolType_Object = MibScalar
dhcpv6PoolType = _Dhcpv6PoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 9),
    _Dhcpv6PoolType_Type()
)
dhcpv6PoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6PoolType.setStatus("current")
_Dhcpv6MasterDns_Type = OctetString
_Dhcpv6MasterDns_Object = MibScalar
dhcpv6MasterDns = _Dhcpv6MasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 10),
    _Dhcpv6MasterDns_Type()
)
dhcpv6MasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6MasterDns.setStatus("current")
_Dhcpv6SlaveDns_Type = OctetString
_Dhcpv6SlaveDns_Object = MibScalar
dhcpv6SlaveDns = _Dhcpv6SlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 11),
    _Dhcpv6SlaveDns_Type()
)
dhcpv6SlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SlaveDns.setStatus("current")
_Dhcpv6Gateway_Type = OctetString
_Dhcpv6Gateway_Object = MibScalar
dhcpv6Gateway = _Dhcpv6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 12),
    _Dhcpv6Gateway_Type()
)
dhcpv6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6Gateway.setStatus("current")
_Dhcpv6RelayIp_Type = OctetString
_Dhcpv6RelayIp_Object = MibScalar
dhcpv6RelayIp = _Dhcpv6RelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 13),
    _Dhcpv6RelayIp_Type()
)
dhcpv6RelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RelayIp.setStatus("current")


class _Dhcpv6RA_Type(Integer32):
    """Custom type dhcpv6RA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcpv6RA_Type.__name__ = "Integer32"
_Dhcpv6RA_Object = MibScalar
dhcpv6RA = _Dhcpv6RA_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 14),
    _Dhcpv6RA_Type()
)
dhcpv6RA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RA.setStatus("current")


class _Dhcpv6RAManage_Type(Integer32):
    """Custom type dhcpv6RAManage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcpv6RAManage_Type.__name__ = "Integer32"
_Dhcpv6RAManage_Object = MibScalar
dhcpv6RAManage = _Dhcpv6RAManage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 15),
    _Dhcpv6RAManage_Type()
)
dhcpv6RAManage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RAManage.setStatus("current")


class _Dhcpv6RAOther_Type(Integer32):
    """Custom type dhcpv6RAOther based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dhcpv6RAOther_Type.__name__ = "Integer32"
_Dhcpv6RAOther_Object = MibScalar
dhcpv6RAOther = _Dhcpv6RAOther_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 16),
    _Dhcpv6RAOther_Type()
)
dhcpv6RAOther.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RAOther.setStatus("current")


class _Dhcpv6RAMaxInterval_Type(Integer32):
    """Custom type dhcpv6RAMaxInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_Dhcpv6RAMaxInterval_Type.__name__ = "Integer32"
_Dhcpv6RAMaxInterval_Object = MibScalar
dhcpv6RAMaxInterval = _Dhcpv6RAMaxInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 17),
    _Dhcpv6RAMaxInterval_Type()
)
dhcpv6RAMaxInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RAMaxInterval.setStatus("current")


class _Dhcpv6RAMinInterval_Type(Integer32):
    """Custom type dhcpv6RAMinInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_Dhcpv6RAMinInterval_Type.__name__ = "Integer32"
_Dhcpv6RAMinInterval_Object = MibScalar
dhcpv6RAMinInterval = _Dhcpv6RAMinInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 18),
    _Dhcpv6RAMinInterval_Type()
)
dhcpv6RAMinInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RAMinInterval.setStatus("current")


class _Dhcpv6Action_Type(Integer32):
    """Custom type dhcpv6Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_Dhcpv6Action_Type.__name__ = "Integer32"
_Dhcpv6Action_Object = MibScalar
dhcpv6Action = _Dhcpv6Action_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 19),
    _Dhcpv6Action_Type()
)
dhcpv6Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6Action.setStatus("current")


class _Dhcpv6Valid_Type(Unsigned32):
    """Custom type dhcpv6Valid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_Dhcpv6Valid_Type.__name__ = "Unsigned32"
_Dhcpv6Valid_Object = MibScalar
dhcpv6Valid = _Dhcpv6Valid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 20),
    _Dhcpv6Valid_Type()
)
dhcpv6Valid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6Valid.setStatus("current")


class _Dhcpv6DnsMode_Type(Integer32):
    """Custom type dhcpv6DnsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wanconnection", 0),
          ("static", 1),
          ("hgwproxy", 2))
    )


_Dhcpv6DnsMode_Type.__name__ = "Integer32"
_Dhcpv6DnsMode_Object = MibScalar
dhcpv6DnsMode = _Dhcpv6DnsMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 47, 21),
    _Dhcpv6DnsMode_Type()
)
dhcpv6DnsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6DnsMode.setStatus("current")
_OnuWanConnV6_ObjectIdentity = ObjectIdentity
onuWanConnV6 = _OnuWanConnV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48)
)
_V6WanConnAdd_ObjectIdentity = ObjectIdentity
v6WanConnAdd = _V6WanConnAdd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 1)
)


class _V6connType_Type(Integer32):
    """Custom type v6connType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_V6connType_Type.__name__ = "Integer32"
_V6connType_Object = MibScalar
v6connType = _V6connType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 1, 1),
    _V6connType_Type()
)
v6connType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6connType.setStatus("current")


class _V6connAddAction_Type(Integer32):
    """Custom type v6connAddAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_V6connAddAction_Type.__name__ = "Integer32"
_V6connAddAction_Object = MibScalar
v6connAddAction = _V6connAddAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 1, 2),
    _V6connAddAction_Type()
)
v6connAddAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6connAddAction.setStatus("current")
_V6WanConnDelete_ObjectIdentity = ObjectIdentity
v6WanConnDelete = _V6WanConnDelete_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 2)
)


class _V6connIndexD_Type(Integer32):
    """Custom type v6connIndexD based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_V6connIndexD_Type.__name__ = "Integer32"
_V6connIndexD_Object = MibScalar
v6connIndexD = _V6connIndexD_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 2, 1),
    _V6connIndexD_Type()
)
v6connIndexD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6connIndexD.setStatus("current")


class _V6connDeleteAction_Type(Integer32):
    """Custom type v6connDeleteAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("delete", 1)
    )


_V6connDeleteAction_Type.__name__ = "Integer32"
_V6connDeleteAction_Object = MibScalar
v6connDeleteAction = _V6connDeleteAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 2, 2),
    _V6connDeleteAction_Type()
)
v6connDeleteAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6connDeleteAction.setStatus("current")
_V6WanConnCfg_ObjectIdentity = ObjectIdentity
v6WanConnCfg = _V6WanConnCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3)
)


class _V6ConnIndex_Type(Integer32):
    """Custom type v6ConnIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_V6ConnIndex_Type.__name__ = "Integer32"
_V6ConnIndex_Object = MibScalar
v6ConnIndex = _V6ConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 1),
    _V6ConnIndex_Type()
)
v6ConnIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnIndex.setStatus("current")


class _V6ConnBindLan_Type(Integer32):
    """Custom type v6ConnBindLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_V6ConnBindLan_Type.__name__ = "Integer32"
_V6ConnBindLan_Object = MibScalar
v6ConnBindLan = _V6ConnBindLan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 2),
    _V6ConnBindLan_Type()
)
v6ConnBindLan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnBindLan.setStatus("current")


class _V6ConnBindSsid_Type(Integer32):
    """Custom type v6ConnBindSsid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_V6ConnBindSsid_Type.__name__ = "Integer32"
_V6ConnBindSsid_Object = MibScalar
v6ConnBindSsid = _V6ConnBindSsid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 3),
    _V6ConnBindSsid_Type()
)
v6ConnBindSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnBindSsid.setStatus("current")


class _V6WanMode_Type(Integer32):
    """Custom type v6WanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("voip", 7),
          ("other", 100))
    )


_V6WanMode_Type.__name__ = "Integer32"
_V6WanMode_Object = MibScalar
v6WanMode = _V6WanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 4),
    _V6WanMode_Type()
)
v6WanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6WanMode.setStatus("current")


class _V6ConnTypeCfg_Type(Integer32):
    """Custom type v6ConnTypeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_V6ConnTypeCfg_Type.__name__ = "Integer32"
_V6ConnTypeCfg_Object = MibScalar
v6ConnTypeCfg = _V6ConnTypeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 5),
    _V6ConnTypeCfg_Type()
)
v6ConnTypeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnTypeCfg.setStatus("current")


class _V6ConnVlanId_Type(Integer32):
    """Custom type v6ConnVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_V6ConnVlanId_Type.__name__ = "Integer32"
_V6ConnVlanId_Object = MibScalar
v6ConnVlanId = _V6ConnVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 6),
    _V6ConnVlanId_Type()
)
v6ConnVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnVlanId.setStatus("current")


class _V6ConnCos_Type(Integer32):
    """Custom type v6ConnCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_V6ConnCos_Type.__name__ = "Integer32"
_V6ConnCos_Object = MibScalar
v6ConnCos = _V6ConnCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 7),
    _V6ConnCos_Type()
)
v6ConnCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnCos.setStatus("current")


class _V6ConnIpProtocol_Type(Integer32):
    """Custom type v6ConnIpProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 0),
          ("ipv6", 1),
          ("ipv4_ipv6", 2))
    )


_V6ConnIpProtocol_Type.__name__ = "Integer32"
_V6ConnIpProtocol_Object = MibScalar
v6ConnIpProtocol = _V6ConnIpProtocol_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 8),
    _V6ConnIpProtocol_Type()
)
v6ConnIpProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnIpProtocol.setStatus("current")


class _V6ConnModeCfg_Type(Integer32):
    """Custom type v6ConnModeCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_V6ConnModeCfg_Type.__name__ = "Integer32"
_V6ConnModeCfg_Object = MibScalar
v6ConnModeCfg = _V6ConnModeCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 9),
    _V6ConnModeCfg_Type()
)
v6ConnModeCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnModeCfg.setStatus("current")
_V6ConnIpAddressIpv4_Type = IpAddress
_V6ConnIpAddressIpv4_Object = MibScalar
v6ConnIpAddressIpv4 = _V6ConnIpAddressIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 10),
    _V6ConnIpAddressIpv4_Type()
)
v6ConnIpAddressIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnIpAddressIpv4.setStatus("current")
_V6ConnIpNetMaskIpv4_Type = IpAddress
_V6ConnIpNetMaskIpv4_Object = MibScalar
v6ConnIpNetMaskIpv4 = _V6ConnIpNetMaskIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 11),
    _V6ConnIpNetMaskIpv4_Type()
)
v6ConnIpNetMaskIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnIpNetMaskIpv4.setStatus("current")
_V6ConnGatewayIpv4_Type = IpAddress
_V6ConnGatewayIpv4_Object = MibScalar
v6ConnGatewayIpv4 = _V6ConnGatewayIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 12),
    _V6ConnGatewayIpv4_Type()
)
v6ConnGatewayIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnGatewayIpv4.setStatus("current")


class _V6ConnDnsEnableIpv4_Type(Integer32):
    """Custom type v6ConnDnsEnableIpv4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnDnsEnableIpv4_Type.__name__ = "Integer32"
_V6ConnDnsEnableIpv4_Object = MibScalar
v6ConnDnsEnableIpv4 = _V6ConnDnsEnableIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 13),
    _V6ConnDnsEnableIpv4_Type()
)
v6ConnDnsEnableIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDnsEnableIpv4.setStatus("current")
_V6ConnMasterDnsIpv4_Type = IpAddress
_V6ConnMasterDnsIpv4_Object = MibScalar
v6ConnMasterDnsIpv4 = _V6ConnMasterDnsIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 14),
    _V6ConnMasterDnsIpv4_Type()
)
v6ConnMasterDnsIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnMasterDnsIpv4.setStatus("current")
_V6ConnSlaveDnsIpv4_Type = IpAddress
_V6ConnSlaveDnsIpv4_Object = MibScalar
v6ConnSlaveDnsIpv4 = _V6ConnSlaveDnsIpv4_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 15),
    _V6ConnSlaveDnsIpv4_Type()
)
v6ConnSlaveDnsIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnSlaveDnsIpv4.setStatus("current")


class _V6ConnNatEnable_Type(Integer32):
    """Custom type v6ConnNatEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnNatEnable_Type.__name__ = "Integer32"
_V6ConnNatEnable_Object = MibScalar
v6ConnNatEnable = _V6ConnNatEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 16),
    _V6ConnNatEnable_Type()
)
v6ConnNatEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnNatEnable.setStatus("current")
_V6ConnAddressIpv6_Type = OctetString
_V6ConnAddressIpv6_Object = MibScalar
v6ConnAddressIpv6 = _V6ConnAddressIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 17),
    _V6ConnAddressIpv6_Type()
)
v6ConnAddressIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnAddressIpv6.setStatus("current")


class _V6ConnPrefixLenIpv6_Type(Integer32):
    """Custom type v6ConnPrefixLenIpv6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_V6ConnPrefixLenIpv6_Type.__name__ = "Integer32"
_V6ConnPrefixLenIpv6_Object = MibScalar
v6ConnPrefixLenIpv6 = _V6ConnPrefixLenIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 18),
    _V6ConnPrefixLenIpv6_Type()
)
v6ConnPrefixLenIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnPrefixLenIpv6.setStatus("current")
_V6ConnGatewayIpv6_Type = OctetString
_V6ConnGatewayIpv6_Object = MibScalar
v6ConnGatewayIpv6 = _V6ConnGatewayIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 19),
    _V6ConnGatewayIpv6_Type()
)
v6ConnGatewayIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnGatewayIpv6.setStatus("current")


class _V6ConnDnsEnableIpv6_Type(Integer32):
    """Custom type v6ConnDnsEnableIpv6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnDnsEnableIpv6_Type.__name__ = "Integer32"
_V6ConnDnsEnableIpv6_Object = MibScalar
v6ConnDnsEnableIpv6 = _V6ConnDnsEnableIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 20),
    _V6ConnDnsEnableIpv6_Type()
)
v6ConnDnsEnableIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDnsEnableIpv6.setStatus("current")
_V6ConnMasterDnsIpv6_Type = OctetString
_V6ConnMasterDnsIpv6_Object = MibScalar
v6ConnMasterDnsIpv6 = _V6ConnMasterDnsIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 21),
    _V6ConnMasterDnsIpv6_Type()
)
v6ConnMasterDnsIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnMasterDnsIpv6.setStatus("current")
_V6ConnSlaveDnsIpv6_Type = OctetString
_V6ConnSlaveDnsIpv6_Object = MibScalar
v6ConnSlaveDnsIpv6 = _V6ConnSlaveDnsIpv6_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 22),
    _V6ConnSlaveDnsIpv6_Type()
)
v6ConnSlaveDnsIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnSlaveDnsIpv6.setStatus("current")


class _V6ConnSlaac_Type(Integer32):
    """Custom type v6ConnSlaac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnSlaac_Type.__name__ = "Integer32"
_V6ConnSlaac_Object = MibScalar
v6ConnSlaac = _V6ConnSlaac_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 23),
    _V6ConnSlaac_Type()
)
v6ConnSlaac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnSlaac.setStatus("current")


class _V6ConnPppoeProxy_Type(Integer32):
    """Custom type v6ConnPppoeProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnPppoeProxy_Type.__name__ = "Integer32"
_V6ConnPppoeProxy_Object = MibScalar
v6ConnPppoeProxy = _V6ConnPppoeProxy_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 24),
    _V6ConnPppoeProxy_Type()
)
v6ConnPppoeProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnPppoeProxy.setStatus("current")
_V6ConnPppoeUsername_Type = OctetString
_V6ConnPppoeUsername_Object = MibScalar
v6ConnPppoeUsername = _V6ConnPppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 25),
    _V6ConnPppoeUsername_Type()
)
v6ConnPppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnPppoeUsername.setStatus("current")
_V6ConnPppoePassword_Type = OctetString
_V6ConnPppoePassword_Object = MibScalar
v6ConnPppoePassword = _V6ConnPppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 26),
    _V6ConnPppoePassword_Type()
)
v6ConnPppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnPppoePassword.setStatus("current")
_V6ConnPppoeSerName_Type = OctetString
_V6ConnPppoeSerName_Object = MibScalar
v6ConnPppoeSerName = _V6ConnPppoeSerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 27),
    _V6ConnPppoeSerName_Type()
)
v6ConnPppoeSerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnPppoeSerName.setStatus("current")


class _V6ConnPppoeMode_Type(Integer32):
    """Custom type v6ConnPppoeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("flowconnect", 1))
    )


_V6ConnPppoeMode_Type.__name__ = "Integer32"
_V6ConnPppoeMode_Object = MibScalar
v6ConnPppoeMode = _V6ConnPppoeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 28),
    _V6ConnPppoeMode_Type()
)
v6ConnPppoeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnPppoeMode.setStatus("current")


class _V6ConnDhcpv6ClientAddress_Type(Integer32):
    """Custom type v6ConnDhcpv6ClientAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnDhcpv6ClientAddress_Type.__name__ = "Integer32"
_V6ConnDhcpv6ClientAddress_Object = MibScalar
v6ConnDhcpv6ClientAddress = _V6ConnDhcpv6ClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 29),
    _V6ConnDhcpv6ClientAddress_Type()
)
v6ConnDhcpv6ClientAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDhcpv6ClientAddress.setStatus("current")


class _V6ConnDhcpv6ClientPrefix_Type(Integer32):
    """Custom type v6ConnDhcpv6ClientPrefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnDhcpv6ClientPrefix_Type.__name__ = "Integer32"
_V6ConnDhcpv6ClientPrefix_Object = MibScalar
v6ConnDhcpv6ClientPrefix = _V6ConnDhcpv6ClientPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 30),
    _V6ConnDhcpv6ClientPrefix_Type()
)
v6ConnDhcpv6ClientPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDhcpv6ClientPrefix.setStatus("current")


class _V6ConnDsLiteEnable_Type(Integer32):
    """Custom type v6ConnDsLiteEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnDsLiteEnable_Type.__name__ = "Integer32"
_V6ConnDsLiteEnable_Object = MibScalar
v6ConnDsLiteEnable = _V6ConnDsLiteEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 31),
    _V6ConnDsLiteEnable_Type()
)
v6ConnDsLiteEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDsLiteEnable.setStatus("current")


class _V6ConnDsLiteAftrMode_Type(Integer32):
    """Custom type v6ConnDsLiteAftrMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dhcpv6", 0),
          ("manual", 1))
    )


_V6ConnDsLiteAftrMode_Type.__name__ = "Integer32"
_V6ConnDsLiteAftrMode_Object = MibScalar
v6ConnDsLiteAftrMode = _V6ConnDsLiteAftrMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 32),
    _V6ConnDsLiteAftrMode_Type()
)
v6ConnDsLiteAftrMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDsLiteAftrMode.setStatus("current")


class _V6ConnDsLiteAddressType_Type(Integer32):
    """Custom type v6ConnDsLiteAddressType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ipv6", 0),
          ("dns", 1))
    )


_V6ConnDsLiteAddressType_Type.__name__ = "Integer32"
_V6ConnDsLiteAddressType_Object = MibScalar
v6ConnDsLiteAddressType = _V6ConnDsLiteAddressType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 33),
    _V6ConnDsLiteAddressType_Type()
)
v6ConnDsLiteAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDsLiteAddressType.setStatus("current")
_V6ConnDsLiteAddress_Type = OctetString
_V6ConnDsLiteAddress_Object = MibScalar
v6ConnDsLiteAddress = _V6ConnDsLiteAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 34),
    _V6ConnDsLiteAddress_Type()
)
v6ConnDsLiteAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnDsLiteAddress.setStatus("current")


class _V6ConnQosEnable_Type(Integer32):
    """Custom type v6ConnQosEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnQosEnable_Type.__name__ = "Integer32"
_V6ConnQosEnable_Object = MibScalar
v6ConnQosEnable = _V6ConnQosEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 35),
    _V6ConnQosEnable_Type()
)
v6ConnQosEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnQosEnable.setStatus("current")


class _V6ConnVlanMode_Type(Integer32):
    """Custom type v6ConnVlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_V6ConnVlanMode_Type.__name__ = "Integer32"
_V6ConnVlanMode_Object = MibScalar
v6ConnVlanMode = _V6ConnVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 36),
    _V6ConnVlanMode_Type()
)
v6ConnVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnVlanMode.setStatus("current")


class _V6ConnTranslationEnable_Type(Integer32):
    """Custom type v6ConnTranslationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnTranslationEnable_Type.__name__ = "Integer32"
_V6ConnTranslationEnable_Object = MibScalar
v6ConnTranslationEnable = _V6ConnTranslationEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 37),
    _V6ConnTranslationEnable_Type()
)
v6ConnTranslationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnTranslationEnable.setStatus("current")


class _V6ConnTranslationVlan_Type(Integer32):
    """Custom type v6ConnTranslationVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_V6ConnTranslationVlan_Type.__name__ = "Integer32"
_V6ConnTranslationVlan_Object = MibScalar
v6ConnTranslationVlan = _V6ConnTranslationVlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 38),
    _V6ConnTranslationVlan_Type()
)
v6ConnTranslationVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnTranslationVlan.setStatus("current")


class _V6ConnTranslationCos_Type(Integer32):
    """Custom type v6ConnTranslationCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_V6ConnTranslationCos_Type.__name__ = "Integer32"
_V6ConnTranslationCos_Object = MibScalar
v6ConnTranslationCos = _V6ConnTranslationCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 39),
    _V6ConnTranslationCos_Type()
)
v6ConnTranslationCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnTranslationCos.setStatus("current")


class _V6ConnQinqEnable_Type(Integer32):
    """Custom type v6ConnQinqEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6ConnQinqEnable_Type.__name__ = "Integer32"
_V6ConnQinqEnable_Object = MibScalar
v6ConnQinqEnable = _V6ConnQinqEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 40),
    _V6ConnQinqEnable_Type()
)
v6ConnQinqEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnQinqEnable.setStatus("current")


class _V6ConnQinqTpid_Type(Integer32):
    """Custom type v6ConnQinqTpid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_V6ConnQinqTpid_Type.__name__ = "Integer32"
_V6ConnQinqTpid_Object = MibScalar
v6ConnQinqTpid = _V6ConnQinqTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 41),
    _V6ConnQinqTpid_Type()
)
v6ConnQinqTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnQinqTpid.setStatus("current")


class _V6ConnWanSvlanId_Type(Integer32):
    """Custom type v6ConnWanSvlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_V6ConnWanSvlanId_Type.__name__ = "Integer32"
_V6ConnWanSvlanId_Object = MibScalar
v6ConnWanSvlanId = _V6ConnWanSvlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 42),
    _V6ConnWanSvlanId_Type()
)
v6ConnWanSvlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnWanSvlanId.setStatus("current")


class _V6ConnSvlanCos_Type(Integer32):
    """Custom type v6ConnSvlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_V6ConnSvlanCos_Type.__name__ = "Integer32"
_V6ConnSvlanCos_Object = MibScalar
v6ConnSvlanCos = _V6ConnSvlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 43),
    _V6ConnSvlanCos_Type()
)
v6ConnSvlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnSvlanCos.setStatus("current")


class _V6ConnRouteMtu_Type(Integer32):
    """Custom type v6ConnRouteMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(576, 1500),
    )


_V6ConnRouteMtu_Type.__name__ = "Integer32"
_V6ConnRouteMtu_Object = MibScalar
v6ConnRouteMtu = _V6ConnRouteMtu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 44),
    _V6ConnRouteMtu_Type()
)
v6ConnRouteMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnRouteMtu.setStatus("current")


class _V6ConnCfgAction_Type(Integer32):
    """Custom type v6ConnCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("add", 1)
    )


_V6ConnCfgAction_Type.__name__ = "Integer32"
_V6ConnCfgAction_Object = MibScalar
v6ConnCfgAction = _V6ConnCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 3, 45),
    _V6ConnCfgAction_Type()
)
v6ConnCfgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnCfgAction.setStatus("current")
_V6WanConnCommit_ObjectIdentity = ObjectIdentity
v6WanConnCommit = _V6WanConnCommit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 4)
)


class _V6ConnCommitAction_Type(Integer32):
    """Custom type v6ConnCommitAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_V6ConnCommitAction_Type.__name__ = "Integer32"
_V6ConnCommitAction_Object = MibScalar
v6ConnCommitAction = _V6ConnCommitAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 48, 4, 1),
    _V6ConnCommitAction_Type()
)
v6ConnCommitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6ConnCommitAction.setStatus("current")
_OnuTr069_ObjectIdentity = ObjectIdentity
onuTr069 = _OnuTr069_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49)
)
_OnuTr069Manage_ObjectIdentity = ObjectIdentity
onuTr069Manage = _OnuTr069Manage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1)
)


class _MngStatus_Type(Integer32):
    """Custom type mngStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MngStatus_Type.__name__ = "Integer32"
_MngStatus_Object = MibScalar
mngStatus = _MngStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 1),
    _MngStatus_Type()
)
mngStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngStatus.setStatus("current")


class _MngAcsAddress_Type(OctetString):
    """Custom type mngAcsAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_MngAcsAddress_Type.__name__ = "OctetString"
_MngAcsAddress_Object = MibScalar
mngAcsAddress = _MngAcsAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 2),
    _MngAcsAddress_Type()
)
mngAcsAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngAcsAddress.setStatus("current")


class _MngAcsUsername_Type(OctetString):
    """Custom type mngAcsUsername based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_MngAcsUsername_Type.__name__ = "OctetString"
_MngAcsUsername_Object = MibScalar
mngAcsUsername = _MngAcsUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 3),
    _MngAcsUsername_Type()
)
mngAcsUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngAcsUsername.setStatus("current")


class _MngAcsPassword_Type(OctetString):
    """Custom type mngAcsPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_MngAcsPassword_Type.__name__ = "OctetString"
_MngAcsPassword_Object = MibScalar
mngAcsPassword = _MngAcsPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 4),
    _MngAcsPassword_Type()
)
mngAcsPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngAcsPassword.setStatus("current")


class _MngCertificateEn_Type(Integer32):
    """Custom type mngCertificateEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MngCertificateEn_Type.__name__ = "Integer32"
_MngCertificateEn_Object = MibScalar
mngCertificateEn = _MngCertificateEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 5),
    _MngCertificateEn_Type()
)
mngCertificateEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngCertificateEn.setStatus("current")


class _MngInformEn_Type(Integer32):
    """Custom type mngInformEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_MngInformEn_Type.__name__ = "Integer32"
_MngInformEn_Object = MibScalar
mngInformEn = _MngInformEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 6),
    _MngInformEn_Type()
)
mngInformEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngInformEn.setStatus("current")


class _MngInformIntervalTime_Type(Unsigned32):
    """Custom type mngInformIntervalTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MngInformIntervalTime_Type.__name__ = "Unsigned32"
_MngInformIntervalTime_Object = MibScalar
mngInformIntervalTime = _MngInformIntervalTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 7),
    _MngInformIntervalTime_Type()
)
mngInformIntervalTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngInformIntervalTime.setStatus("current")


class _MngRevConnUsername_Type(OctetString):
    """Custom type mngRevConnUsername based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_MngRevConnUsername_Type.__name__ = "OctetString"
_MngRevConnUsername_Object = MibScalar
mngRevConnUsername = _MngRevConnUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 8),
    _MngRevConnUsername_Type()
)
mngRevConnUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngRevConnUsername.setStatus("current")


class _MngRevConnPassword_Type(OctetString):
    """Custom type mngRevConnPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_MngRevConnPassword_Type.__name__ = "OctetString"
_MngRevConnPassword_Object = MibScalar
mngRevConnPassword = _MngRevConnPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 9),
    _MngRevConnPassword_Type()
)
mngRevConnPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngRevConnPassword.setStatus("current")


class _MngAction_Type(Integer32):
    """Custom type mngAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("submit", 1),
          ("remove", 2))
    )


_MngAction_Type.__name__ = "Integer32"
_MngAction_Object = MibScalar
mngAction = _MngAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 1, 10),
    _MngAction_Type()
)
mngAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mngAction.setStatus("current")
_OnuTr069Stun_ObjectIdentity = ObjectIdentity
onuTr069Stun = _OnuTr069Stun_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2)
)


class _StunStatus_Type(Integer32):
    """Custom type stunStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_StunStatus_Type.__name__ = "Integer32"
_StunStatus_Object = MibScalar
stunStatus = _StunStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2, 1),
    _StunStatus_Type()
)
stunStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stunStatus.setStatus("current")


class _StunServerAddress_Type(OctetString):
    """Custom type stunServerAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StunServerAddress_Type.__name__ = "OctetString"
_StunServerAddress_Object = MibScalar
stunServerAddress = _StunServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2, 2),
    _StunServerAddress_Type()
)
stunServerAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stunServerAddress.setStatus("current")


class _StunServerPort_Type(Integer32):
    """Custom type stunServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StunServerPort_Type.__name__ = "Integer32"
_StunServerPort_Object = MibScalar
stunServerPort = _StunServerPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2, 3),
    _StunServerPort_Type()
)
stunServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stunServerPort.setStatus("current")


class _StunServerUsername_Type(OctetString):
    """Custom type stunServerUsername based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StunServerUsername_Type.__name__ = "OctetString"
_StunServerUsername_Object = MibScalar
stunServerUsername = _StunServerUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2, 4),
    _StunServerUsername_Type()
)
stunServerUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stunServerUsername.setStatus("current")


class _StunServerPassword_Type(OctetString):
    """Custom type stunServerPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StunServerPassword_Type.__name__ = "OctetString"
_StunServerPassword_Object = MibScalar
stunServerPassword = _StunServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2, 5),
    _StunServerPassword_Type()
)
stunServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stunServerPassword.setStatus("current")


class _StunAction_Type(Integer32):
    """Custom type stunAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("submit", 1),
          ("remove", 2))
    )


_StunAction_Type.__name__ = "Integer32"
_StunAction_Object = MibScalar
stunAction = _StunAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 3, 49, 2, 6),
    _StunAction_Type()
)
stunAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stunAction.setStatus("current")
_VoipProfileEdit_ObjectIdentity = ObjectIdentity
voipProfileEdit = _VoipProfileEdit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4)
)


class _VoipProfileNo_Type(Integer32):
    """Custom type voipProfileNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_VoipProfileNo_Type.__name__ = "Integer32"
_VoipProfileNo_Object = MibScalar
voipProfileNo = _VoipProfileNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 1),
    _VoipProfileNo_Type()
)
voipProfileNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipProfileNo.setStatus("current")
_OnuPotsCountConfig_ObjectIdentity = ObjectIdentity
onuPotsCountConfig = _OnuPotsCountConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 2)
)


class _PotsCount_Type(Integer32):
    """Custom type potsCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PotsCount_Type.__name__ = "Integer32"
_PotsCount_Object = MibScalar
potsCount = _PotsCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 2, 1),
    _PotsCount_Type()
)
potsCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsCount.setStatus("current")


class _PotsCountAction_Type(Integer32):
    """Custom type potsCountAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_PotsCountAction_Type.__name__ = "Integer32"
_PotsCountAction_Object = MibScalar
potsCountAction = _PotsCountAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 2, 2),
    _PotsCountAction_Type()
)
potsCountAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsCountAction.setStatus("current")
_VoipGlobalConfig_ObjectIdentity = ObjectIdentity
voipGlobalConfig = _VoipGlobalConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3)
)


class _CtcIpMode_Type(Integer32):
    """Custom type ctcIpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("staticip", 0),
          ("dhcp", 1),
          ("pppoe", 2))
    )


_CtcIpMode_Type.__name__ = "Integer32"
_CtcIpMode_Object = MibScalar
ctcIpMode = _CtcIpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 1),
    _CtcIpMode_Type()
)
ctcIpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcIpMode.setStatus("current")
_CtcStaticIpAddr_Type = IpAddress
_CtcStaticIpAddr_Object = MibScalar
ctcStaticIpAddr = _CtcStaticIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 2),
    _CtcStaticIpAddr_Type()
)
ctcStaticIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcStaticIpAddr.setStatus("current")
_CtcStaticIpMask_Type = IpAddress
_CtcStaticIpMask_Object = MibScalar
ctcStaticIpMask = _CtcStaticIpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 3),
    _CtcStaticIpMask_Type()
)
ctcStaticIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcStaticIpMask.setStatus("current")
_CtcStaticIpGw_Type = IpAddress
_CtcStaticIpGw_Object = MibScalar
ctcStaticIpGw = _CtcStaticIpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 4),
    _CtcStaticIpGw_Type()
)
ctcStaticIpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcStaticIpGw.setStatus("current")


class _CtcPppoeMode_Type(Integer32):
    """Custom type ctcPppoeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("chap", 2),
          ("pap", 3))
    )


_CtcPppoeMode_Type.__name__ = "Integer32"
_CtcPppoeMode_Object = MibScalar
ctcPppoeMode = _CtcPppoeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 5),
    _CtcPppoeMode_Type()
)
ctcPppoeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPppoeMode.setStatus("current")
_CtcPppoeUsr_Type = OctetString
_CtcPppoeUsr_Object = MibScalar
ctcPppoeUsr = _CtcPppoeUsr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 6),
    _CtcPppoeUsr_Type()
)
ctcPppoeUsr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPppoeUsr.setStatus("current")
_CtcPppoePw_Type = OctetString
_CtcPppoePw_Object = MibScalar
ctcPppoePw = _CtcPppoePw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 7),
    _CtcPppoePw_Type()
)
ctcPppoePw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPppoePw.setStatus("current")


class _VoipVlanMode_Type(Integer32):
    """Custom type voipVlanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 1),
          ("tag", 2),
          ("vlan_stacking", 3))
    )


_VoipVlanMode_Type.__name__ = "Integer32"
_VoipVlanMode_Object = MibScalar
voipVlanMode = _VoipVlanMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 8),
    _VoipVlanMode_Type()
)
voipVlanMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipVlanMode.setStatus("current")


class _VoipCvlan_Type(Integer32):
    """Custom type voipCvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipCvlan_Type.__name__ = "Integer32"
_VoipCvlan_Object = MibScalar
voipCvlan = _VoipCvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 9),
    _VoipCvlan_Type()
)
voipCvlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipCvlan.setStatus("current")


class _VoipSvlan_Type(Integer32):
    """Custom type voipSvlan based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipSvlan_Type.__name__ = "Integer32"
_VoipSvlan_Object = MibScalar
voipSvlan = _VoipSvlan_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 10),
    _VoipSvlan_Type()
)
voipSvlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipSvlan.setStatus("current")


class _VoipPri_Type(Integer32):
    """Custom type voipPri based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipPri_Type.__name__ = "Integer32"
_VoipPri_Object = MibScalar
voipPri = _VoipPri_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 11),
    _VoipPri_Type()
)
voipPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPri.setStatus("current")


class _CtcVoipGlobalAction_Type(Integer32):
    """Custom type ctcVoipGlobalAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcVoipGlobalAction_Type.__name__ = "Integer32"
_CtcVoipGlobalAction_Object = MibScalar
ctcVoipGlobalAction = _CtcVoipGlobalAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 3, 12),
    _CtcVoipGlobalAction_Type()
)
ctcVoipGlobalAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcVoipGlobalAction.setStatus("current")
_VoipH248Config_ObjectIdentity = ObjectIdentity
voipH248Config = _VoipH248Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4)
)
_H248ProParamConfig_ObjectIdentity = ObjectIdentity
h248ProParamConfig = _H248ProParamConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1)
)


class _CtcMgPort_Type(Integer32):
    """Custom type ctcMgPort based on Integer32"""
    defaultValue = 2944

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcMgPort_Type.__name__ = "Integer32"
_CtcMgPort_Object = MibScalar
ctcMgPort = _CtcMgPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 1),
    _CtcMgPort_Type()
)
ctcMgPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMgPort.setStatus("current")
_CtcMgcIp_Type = IpAddress
_CtcMgcIp_Object = MibScalar
ctcMgcIp = _CtcMgcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 2),
    _CtcMgcIp_Type()
)
ctcMgcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMgcIp.setStatus("current")


class _CtcMgComPort_Type(Integer32):
    """Custom type ctcMgComPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcMgComPort_Type.__name__ = "Integer32"
_CtcMgComPort_Object = MibScalar
ctcMgComPort = _CtcMgComPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 3),
    _CtcMgComPort_Type()
)
ctcMgComPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMgComPort.setStatus("current")
_CtcBakMgcIp_Type = IpAddress
_CtcBakMgcIp_Object = MibScalar
ctcBakMgcIp = _CtcBakMgcIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 4),
    _CtcBakMgcIp_Type()
)
ctcBakMgcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBakMgcIp.setStatus("current")


class _CtcBakMgcPort_Type(Integer32):
    """Custom type ctcBakMgcPort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcBakMgcPort_Type.__name__ = "Integer32"
_CtcBakMgcPort_Object = MibScalar
ctcBakMgcPort = _CtcBakMgcPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 5),
    _CtcBakMgcPort_Type()
)
ctcBakMgcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBakMgcPort.setStatus("current")


class _CtcRegMode_Type(Integer32):
    """Custom type ctcRegMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip_addr", 0),
          ("realm", 1),
          ("device", 2))
    )


_CtcRegMode_Type.__name__ = "Integer32"
_CtcRegMode_Object = MibScalar
ctcRegMode = _CtcRegMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 6),
    _CtcRegMode_Type()
)
ctcRegMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRegMode.setStatus("current")
_CtcMID_Type = OctetString
_CtcMID_Object = MibScalar
ctcMID = _CtcMID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 7),
    _CtcMID_Type()
)
ctcMID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMID.setStatus("current")


class _CtcHeartbeatMode_Type(Integer32):
    """Custom type ctcHeartbeatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("h248", 1))
    )


_CtcHeartbeatMode_Type.__name__ = "Integer32"
_CtcHeartbeatMode_Object = MibScalar
ctcHeartbeatMode = _CtcHeartbeatMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 8),
    _CtcHeartbeatMode_Type()
)
ctcHeartbeatMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHeartbeatMode.setStatus("current")


class _CtcHeartbeatCycle_Type(Integer32):
    """Custom type ctcHeartbeatCycle based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcHeartbeatCycle_Type.__name__ = "Integer32"
_CtcHeartbeatCycle_Object = MibScalar
ctcHeartbeatCycle = _CtcHeartbeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 9),
    _CtcHeartbeatCycle_Type()
)
ctcHeartbeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHeartbeatCycle.setStatus("current")


class _CtcHeartbeatCount_Type(Integer32):
    """Custom type ctcHeartbeatCount based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcHeartbeatCount_Type.__name__ = "Integer32"
_CtcHeartbeatCount_Object = MibScalar
ctcHeartbeatCount = _CtcHeartbeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 10),
    _CtcHeartbeatCount_Type()
)
ctcHeartbeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHeartbeatCount.setStatus("current")


class _CtcH248ProParamAction_Type(Integer32):
    """Custom type ctcH248ProParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcH248ProParamAction_Type.__name__ = "Integer32"
_CtcH248ProParamAction_Object = MibScalar
ctcH248ProParamAction = _CtcH248ProParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 1, 11),
    _CtcH248ProParamAction_Type()
)
ctcH248ProParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcH248ProParamAction.setStatus("current")
_H248RtpTidConfig_ObjectIdentity = ObjectIdentity
h248RtpTidConfig = _H248RtpTidConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2)
)


class _CtcRtpTidNumber_Type(Integer32):
    """Custom type ctcRtpTidNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CtcRtpTidNumber_Type.__name__ = "Integer32"
_CtcRtpTidNumber_Object = MibScalar
ctcRtpTidNumber = _CtcRtpTidNumber_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 1),
    _CtcRtpTidNumber_Type()
)
ctcRtpTidNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRtpTidNumber.setStatus("current")
_CtcRtpTidPrefix_Type = OctetString
_CtcRtpTidPrefix_Object = MibScalar
ctcRtpTidPrefix = _CtcRtpTidPrefix_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 2),
    _CtcRtpTidPrefix_Type()
)
ctcRtpTidPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRtpTidPrefix.setStatus("current")


class _CtcDigitBegin0_Type(Unsigned32):
    """Custom type ctcDigitBegin0 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_CtcDigitBegin0_Type.__name__ = "Unsigned32"
_CtcDigitBegin0_Object = MibScalar
ctcDigitBegin0 = _CtcDigitBegin0_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 3),
    _CtcDigitBegin0_Type()
)
ctcDigitBegin0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitBegin0.setStatus("current")


class _CtcDigitBegin1_Type(Unsigned32):
    """Custom type ctcDigitBegin1 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_CtcDigitBegin1_Type.__name__ = "Unsigned32"
_CtcDigitBegin1_Object = MibScalar
ctcDigitBegin1 = _CtcDigitBegin1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 4),
    _CtcDigitBegin1_Type()
)
ctcDigitBegin1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitBegin1.setStatus("current")


class _CtcRtpTidMode_Type(Integer32):
    """Custom type ctcRtpTidMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("align", 1),
          ("unalign", 2))
    )


_CtcRtpTidMode_Type.__name__ = "Integer32"
_CtcRtpTidMode_Object = MibScalar
ctcRtpTidMode = _CtcRtpTidMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 5),
    _CtcRtpTidMode_Type()
)
ctcRtpTidMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRtpTidMode.setStatus("current")


class _CtcDigitLength_Type(Integer32):
    """Custom type ctcDigitLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CtcDigitLength_Type.__name__ = "Integer32"
_CtcDigitLength_Object = MibScalar
ctcDigitLength = _CtcDigitLength_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 6),
    _CtcDigitLength_Type()
)
ctcDigitLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitLength.setStatus("current")


class _CtcRtpTidAction_Type(Integer32):
    """Custom type ctcRtpTidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcRtpTidAction_Type.__name__ = "Integer32"
_CtcRtpTidAction_Object = MibScalar
ctcRtpTidAction = _CtcRtpTidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 2, 7),
    _CtcRtpTidAction_Type()
)
ctcRtpTidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRtpTidAction.setStatus("current")
_H248UserTidConfig_ObjectIdentity = ObjectIdentity
h248UserTidConfig = _H248UserTidConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 3)
)


class _CtcUserTidPotsNo_Type(Integer32):
    """Custom type ctcUserTidPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CtcUserTidPotsNo_Type.__name__ = "Integer32"
_CtcUserTidPotsNo_Object = MibScalar
ctcUserTidPotsNo = _CtcUserTidPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 3, 1),
    _CtcUserTidPotsNo_Type()
)
ctcUserTidPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserTidPotsNo.setStatus("current")
_CtcUserTid_Type = OctetString
_CtcUserTid_Object = MibScalar
ctcUserTid = _CtcUserTid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 3, 2),
    _CtcUserTid_Type()
)
ctcUserTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserTid.setStatus("current")


class _CtcUserTidAction_Type(Integer32):
    """Custom type ctcUserTidAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcUserTidAction_Type.__name__ = "Integer32"
_CtcUserTidAction_Object = MibScalar
ctcUserTidAction = _CtcUserTidAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 4, 3, 3),
    _CtcUserTidAction_Type()
)
ctcUserTidAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserTidAction.setStatus("current")
_VoipSipConfig_ObjectIdentity = ObjectIdentity
voipSipConfig = _VoipSipConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5)
)
_SipProParamConfig_ObjectIdentity = ObjectIdentity
sipProParamConfig = _SipProParamConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1)
)


class _CtcMgPortVal_Type(Integer32):
    """Custom type ctcMgPortVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcMgPortVal_Type.__name__ = "Integer32"
_CtcMgPortVal_Object = MibScalar
ctcMgPortVal = _CtcMgPortVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 1),
    _CtcMgPortVal_Type()
)
ctcMgPortVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcMgPortVal.setStatus("current")
_CtcProxySrvIp_Type = IpAddress
_CtcProxySrvIp_Object = MibScalar
ctcProxySrvIp = _CtcProxySrvIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 2),
    _CtcProxySrvIp_Type()
)
ctcProxySrvIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcProxySrvIp.setStatus("current")


class _CtcProxySrvPort_Type(Integer32):
    """Custom type ctcProxySrvPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcProxySrvPort_Type.__name__ = "Integer32"
_CtcProxySrvPort_Object = MibScalar
ctcProxySrvPort = _CtcProxySrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 3),
    _CtcProxySrvPort_Type()
)
ctcProxySrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcProxySrvPort.setStatus("current")
_CtcBakProxySrvIp_Type = IpAddress
_CtcBakProxySrvIp_Object = MibScalar
ctcBakProxySrvIp = _CtcBakProxySrvIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 4),
    _CtcBakProxySrvIp_Type()
)
ctcBakProxySrvIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBakProxySrvIp.setStatus("current")


class _CtcBakProxySrvPort_Type(Integer32):
    """Custom type ctcBakProxySrvPort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcBakProxySrvPort_Type.__name__ = "Integer32"
_CtcBakProxySrvPort_Object = MibScalar
ctcBakProxySrvPort = _CtcBakProxySrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 5),
    _CtcBakProxySrvPort_Type()
)
ctcBakProxySrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBakProxySrvPort.setStatus("current")
_CtcRegSrvIp_Type = IpAddress
_CtcRegSrvIp_Object = MibScalar
ctcRegSrvIp = _CtcRegSrvIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 6),
    _CtcRegSrvIp_Type()
)
ctcRegSrvIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRegSrvIp.setStatus("current")


class _CtcRegSrvPort_Type(Integer32):
    """Custom type ctcRegSrvPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcRegSrvPort_Type.__name__ = "Integer32"
_CtcRegSrvPort_Object = MibScalar
ctcRegSrvPort = _CtcRegSrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 7),
    _CtcRegSrvPort_Type()
)
ctcRegSrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRegSrvPort.setStatus("current")
_CtcBakRegSrvIp_Type = IpAddress
_CtcBakRegSrvIp_Object = MibScalar
ctcBakRegSrvIp = _CtcBakRegSrvIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 8),
    _CtcBakRegSrvIp_Type()
)
ctcBakRegSrvIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBakRegSrvIp.setStatus("current")


class _CtcBakRegSrvPort_Type(Integer32):
    """Custom type ctcBakRegSrvPort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcBakRegSrvPort_Type.__name__ = "Integer32"
_CtcBakRegSrvPort_Object = MibScalar
ctcBakRegSrvPort = _CtcBakRegSrvPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 9),
    _CtcBakRegSrvPort_Type()
)
ctcBakRegSrvPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcBakRegSrvPort.setStatus("current")
_CtcOutBoundServIp_Type = IpAddress
_CtcOutBoundServIp_Object = MibScalar
ctcOutBoundServIp = _CtcOutBoundServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 10),
    _CtcOutBoundServIp_Type()
)
ctcOutBoundServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcOutBoundServIp.setStatus("current")


class _CtcOutBoundServPort_Type(Integer32):
    """Custom type ctcOutBoundServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcOutBoundServPort_Type.__name__ = "Integer32"
_CtcOutBoundServPort_Object = MibScalar
ctcOutBoundServPort = _CtcOutBoundServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 11),
    _CtcOutBoundServPort_Type()
)
ctcOutBoundServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcOutBoundServPort.setStatus("current")


class _CtcRegInterVal_Type(Integer32):
    """Custom type ctcRegInterVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_CtcRegInterVal_Type.__name__ = "Integer32"
_CtcRegInterVal_Object = MibScalar
ctcRegInterVal = _CtcRegInterVal_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 12),
    _CtcRegInterVal_Type()
)
ctcRegInterVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRegInterVal.setStatus("current")


class _CtcHbeartEn_Type(Integer32):
    """Custom type ctcHbeartEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcHbeartEn_Type.__name__ = "Integer32"
_CtcHbeartEn_Object = MibScalar
ctcHbeartEn = _CtcHbeartEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 13),
    _CtcHbeartEn_Type()
)
ctcHbeartEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHbeartEn.setStatus("current")


class _CtcHbeatCycle_Type(Integer32):
    """Custom type ctcHbeatCycle based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcHbeatCycle_Type.__name__ = "Integer32"
_CtcHbeatCycle_Object = MibScalar
ctcHbeatCycle = _CtcHbeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 14),
    _CtcHbeatCycle_Type()
)
ctcHbeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHbeatCycle.setStatus("current")


class _CtcHbeatCount_Type(Integer32):
    """Custom type ctcHbeatCount based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CtcHbeatCount_Type.__name__ = "Integer32"
_CtcHbeatCount_Object = MibScalar
ctcHbeatCount = _CtcHbeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 15),
    _CtcHbeatCount_Type()
)
ctcHbeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcHbeatCount.setStatus("current")


class _CtcRegSrvAction_Type(Integer32):
    """Custom type ctcRegSrvAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcRegSrvAction_Type.__name__ = "Integer32"
_CtcRegSrvAction_Object = MibScalar
ctcRegSrvAction = _CtcRegSrvAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 1, 16),
    _CtcRegSrvAction_Type()
)
ctcRegSrvAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcRegSrvAction.setStatus("current")
_SipUserParamConfig_ObjectIdentity = ObjectIdentity
sipUserParamConfig = _SipUserParamConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 2)
)


class _CtcUserPotsNo_Type(Integer32):
    """Custom type ctcUserPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CtcUserPotsNo_Type.__name__ = "Integer32"
_CtcUserPotsNo_Object = MibScalar
ctcUserPotsNo = _CtcUserPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 2, 1),
    _CtcUserPotsNo_Type()
)
ctcUserPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserPotsNo.setStatus("current")
_CtcUserAccount_Type = OctetString
_CtcUserAccount_Object = MibScalar
ctcUserAccount = _CtcUserAccount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 2, 2),
    _CtcUserAccount_Type()
)
ctcUserAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserAccount.setStatus("current")
_CtcUserName_Type = OctetString
_CtcUserName_Object = MibScalar
ctcUserName = _CtcUserName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 2, 3),
    _CtcUserName_Type()
)
ctcUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserName.setStatus("current")
_CtcUserPw_Type = OctetString
_CtcUserPw_Object = MibScalar
ctcUserPw = _CtcUserPw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 2, 4),
    _CtcUserPw_Type()
)
ctcUserPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserPw.setStatus("current")


class _CtcUserAction_Type(Integer32):
    """Custom type ctcUserAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcUserAction_Type.__name__ = "Integer32"
_CtcUserAction_Object = MibScalar
ctcUserAction = _CtcUserAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 2, 5),
    _CtcUserAction_Type()
)
ctcUserAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcUserAction.setStatus("current")
_SipDigitConfig_ObjectIdentity = ObjectIdentity
sipDigitConfig = _SipDigitConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 3)
)


class _CtcDigitNum_Type(Integer32):
    """Custom type ctcDigitNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CtcDigitNum_Type.__name__ = "Integer32"
_CtcDigitNum_Object = MibScalar
ctcDigitNum = _CtcDigitNum_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 3, 1),
    _CtcDigitNum_Type()
)
ctcDigitNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitNum.setStatus("current")


class _CtcDigitNumBlock_Type(Integer32):
    """Custom type ctcDigitNumBlock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CtcDigitNumBlock_Type.__name__ = "Integer32"
_CtcDigitNumBlock_Object = MibScalar
ctcDigitNumBlock = _CtcDigitNumBlock_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 3, 2),
    _CtcDigitNumBlock_Type()
)
ctcDigitNumBlock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitNumBlock.setStatus("current")
_CtcDigitMap_Type = OctetString
_CtcDigitMap_Object = MibScalar
ctcDigitMap = _CtcDigitMap_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 3, 3),
    _CtcDigitMap_Type()
)
ctcDigitMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitMap.setStatus("current")


class _CtcDigitMapAction_Type(Integer32):
    """Custom type ctcDigitMapAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("commit", 2))
    )


_CtcDigitMapAction_Type.__name__ = "Integer32"
_CtcDigitMapAction_Object = MibScalar
ctcDigitMapAction = _CtcDigitMapAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 5, 3, 4),
    _CtcDigitMapAction_Type()
)
ctcDigitMapAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcDigitMapAction.setStatus("current")
_VoipFaxModemCfg_ObjectIdentity = ObjectIdentity
voipFaxModemCfg = _VoipFaxModemCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 6)
)


class _CtcT38En_Type(Integer32):
    """Custom type ctcT38En based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcT38En_Type.__name__ = "Integer32"
_CtcT38En_Object = MibScalar
ctcT38En = _CtcT38En_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 6, 1),
    _CtcT38En_Type()
)
ctcT38En.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcT38En.setStatus("current")


class _CtcControl_Type(Integer32):
    """Custom type ctcControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("negotiation", 1),
          ("autovbd", 2))
    )


_CtcControl_Type.__name__ = "Integer32"
_CtcControl_Object = MibScalar
ctcControl = _CtcControl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 6, 2),
    _CtcControl_Type()
)
ctcControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcControl.setStatus("current")


class _CtcFaxModemAction_Type(Integer32):
    """Custom type ctcFaxModemAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcFaxModemAction_Type.__name__ = "Integer32"
_CtcFaxModemAction_Object = MibScalar
ctcFaxModemAction = _CtcFaxModemAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 6, 3),
    _CtcFaxModemAction_Type()
)
ctcFaxModemAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcFaxModemAction.setStatus("current")
_VoipPotsManage_ObjectIdentity = ObjectIdentity
voipPotsManage = _VoipPotsManage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 7)
)


class _CtcPotsNo_Type(Integer32):
    """Custom type ctcPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CtcPotsNo_Type.__name__ = "Integer32"
_CtcPotsNo_Object = MibScalar
ctcPotsNo = _CtcPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 7, 1),
    _CtcPotsNo_Type()
)
ctcPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPotsNo.setStatus("current")


class _CtcPotsEnable_Type(Integer32):
    """Custom type ctcPotsEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_CtcPotsEnable_Type.__name__ = "Integer32"
_CtcPotsEnable_Object = MibScalar
ctcPotsEnable = _CtcPotsEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 7, 2),
    _CtcPotsEnable_Type()
)
ctcPotsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPotsEnable.setStatus("current")


class _CtcPotsMgAction_Type(Integer32):
    """Custom type ctcPotsMgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_CtcPotsMgAction_Type.__name__ = "Integer32"
_CtcPotsMgAction_Object = MibScalar
ctcPotsMgAction = _CtcPotsMgAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 7, 3),
    _CtcPotsMgAction_Type()
)
ctcPotsMgAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ctcPotsMgAction.setStatus("current")
_VoipTimerConfig_ObjectIdentity = ObjectIdentity
voipTimerConfig = _VoipTimerConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8)
)


class _MaxWaitTime_Type(Integer32):
    """Custom type maxWaitTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_MaxWaitTime_Type.__name__ = "Integer32"
_MaxWaitTime_Object = MibScalar
maxWaitTime = _MaxWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8, 1),
    _MaxWaitTime_Type()
)
maxWaitTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxWaitTime.setStatus("current")
_StartTimer_Type = Integer32
_StartTimer_Object = MibScalar
startTimer = _StartTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8, 2),
    _StartTimer_Type()
)
startTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    startTimer.setStatus("current")


class _LongTimer_Type(Integer32):
    """Custom type longTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LongTimer_Type.__name__ = "Integer32"
_LongTimer_Object = MibScalar
longTimer = _LongTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8, 3),
    _LongTimer_Type()
)
longTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    longTimer.setStatus("current")


class _ShortTimer_Type(Integer32):
    """Custom type shortTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ShortTimer_Type.__name__ = "Integer32"
_ShortTimer_Object = MibScalar
shortTimer = _ShortTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8, 4),
    _ShortTimer_Type()
)
shortTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shortTimer.setStatus("current")


class _DigitmapNotify_Type(Integer32):
    """Custom type digitmapNotify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DigitmapNotify_Type.__name__ = "Integer32"
_DigitmapNotify_Object = MibScalar
digitmapNotify = _DigitmapNotify_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8, 5),
    _DigitmapNotify_Type()
)
digitmapNotify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    digitmapNotify.setStatus("current")


class _VoipTimerAction_Type(Integer32):
    """Custom type voipTimerAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_VoipTimerAction_Type.__name__ = "Integer32"
_VoipTimerAction_Object = MibScalar
voipTimerAction = _VoipTimerAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 8, 6),
    _VoipTimerAction_Type()
)
voipTimerAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipTimerAction.setStatus("current")
_VoipPotsParameter_ObjectIdentity = ObjectIdentity
voipPotsParameter = _VoipPotsParameter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9)
)


class _PriPotsPtNo_Type(Integer32):
    """Custom type priPotsPtNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PriPotsPtNo_Type.__name__ = "Integer32"
_PriPotsPtNo_Object = MibScalar
priPotsPtNo = _PriPotsPtNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 1),
    _PriPotsPtNo_Type()
)
priPotsPtNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsPtNo.setStatus("current")


class _PriVad_Type(Integer32):
    """Custom type priVad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriVad_Type.__name__ = "Integer32"
_PriVad_Object = MibScalar
priVad = _PriVad_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 2),
    _PriVad_Type()
)
priVad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priVad.setStatus("current")


class _PriEchoCancel_Type(Integer32):
    """Custom type priEchoCancel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PriEchoCancel_Type.__name__ = "Integer32"
_PriEchoCancel_Object = MibScalar
priEchoCancel = _PriEchoCancel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 3),
    _PriEchoCancel_Type()
)
priEchoCancel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priEchoCancel.setStatus("current")


class _PriInputGain_Type(Integer32):
    """Custom type priInputGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PriInputGain_Type.__name__ = "Integer32"
_PriInputGain_Object = MibScalar
priInputGain = _PriInputGain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 4),
    _PriInputGain_Type()
)
priInputGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priInputGain.setStatus("current")


class _PriOutputGain_Type(Integer32):
    """Custom type priOutputGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PriOutputGain_Type.__name__ = "Integer32"
_PriOutputGain_Object = MibScalar
priOutputGain = _PriOutputGain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 5),
    _PriOutputGain_Type()
)
priOutputGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priOutputGain.setStatus("current")


class _PriDtmfMode_Type(Integer32):
    """Custom type priDtmfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 0),
          ("rfc2833", 1),
          ("rfc2833_redundancy", 2),
          ("outband", 3))
    )


_PriDtmfMode_Type.__name__ = "Integer32"
_PriDtmfMode_Object = MibScalar
priDtmfMode = _PriDtmfMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 6),
    _PriDtmfMode_Type()
)
priDtmfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priDtmfMode.setStatus("current")


class _PriPotsParameterAction_Type(Integer32):
    """Custom type priPotsParameterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("remove", 2))
    )


_PriPotsParameterAction_Type.__name__ = "Integer32"
_PriPotsParameterAction_Object = MibScalar
priPotsParameterAction = _PriPotsParameterAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 9, 7),
    _PriPotsParameterAction_Type()
)
priPotsParameterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    priPotsParameterAction.setStatus("current")
_OnuVoipParam_ObjectIdentity = ObjectIdentity
onuVoipParam = _OnuVoipParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10)
)


class _IpMode_Type(Integer32):
    """Custom type ipMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dhcp", 2),
          ("pppoe", 3))
    )


_IpMode_Type.__name__ = "Integer32"
_IpMode_Object = MibScalar
ipMode = _IpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 1),
    _IpMode_Type()
)
ipMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipMode.setStatus("current")
_Ip_Type = IpAddress
_Ip_Object = MibScalar
ip = _Ip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 2),
    _Ip_Type()
)
ip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ip.setStatus("current")
_Mask_Type = IpAddress
_Mask_Object = MibScalar
mask = _Mask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 3),
    _Mask_Type()
)
mask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mask.setStatus("current")
_Gw_Type = IpAddress
_Gw_Object = MibScalar
gw = _Gw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 4),
    _Gw_Type()
)
gw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gw.setStatus("current")
_RtpIp_Type = IpAddress
_RtpIp_Object = MibScalar
rtpIp = _RtpIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 5),
    _RtpIp_Type()
)
rtpIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpIp.setStatus("current")
_RtpMask_Type = IpAddress
_RtpMask_Object = MibScalar
rtpMask = _RtpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 6),
    _RtpMask_Type()
)
rtpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpMask.setStatus("current")
_RtpGw_Type = IpAddress
_RtpGw_Object = MibScalar
rtpGw = _RtpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 7),
    _RtpGw_Type()
)
rtpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpGw.setStatus("current")
_DnsMaster_Type = IpAddress
_DnsMaster_Object = MibScalar
dnsMaster = _DnsMaster_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 8),
    _DnsMaster_Type()
)
dnsMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsMaster.setStatus("current")
_DnsSlave_Type = IpAddress
_DnsSlave_Object = MibScalar
dnsSlave = _DnsSlave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 9),
    _DnsSlave_Type()
)
dnsSlave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsSlave.setStatus("current")


class _DhcpOption60Enable_Type(Integer32):
    """Custom type dhcpOption60Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_DhcpOption60Enable_Type.__name__ = "Integer32"
_DhcpOption60Enable_Object = MibScalar
dhcpOption60Enable = _DhcpOption60Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 10),
    _DhcpOption60Enable_Type()
)
dhcpOption60Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpOption60Enable.setStatus("current")
_DhcpOption60Base_Type = OctetString
_DhcpOption60Base_Object = MibScalar
dhcpOption60Base = _DhcpOption60Base_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 11),
    _DhcpOption60Base_Type()
)
dhcpOption60Base.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpOption60Base.setStatus("current")
_DhcpOption60Value_Type = OctetString
_DhcpOption60Value_Object = MibScalar
dhcpOption60Value = _DhcpOption60Value_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 12),
    _DhcpOption60Value_Type()
)
dhcpOption60Value.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpOption60Value.setStatus("current")


class _PppoeMode_Type(Integer32):
    """Custom type pppoeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("chap", 1),
          ("pap", 2))
    )


_PppoeMode_Type.__name__ = "Integer32"
_PppoeMode_Object = MibScalar
pppoeMode = _PppoeMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 13),
    _PppoeMode_Type()
)
pppoeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeMode.setStatus("current")
_PppoeUsername_Type = OctetString
_PppoeUsername_Object = MibScalar
pppoeUsername = _PppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 14),
    _PppoeUsername_Type()
)
pppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoeUsername.setStatus("current")
_PppoePassword_Type = OctetString
_PppoePassword_Object = MibScalar
pppoePassword = _PppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 15),
    _PppoePassword_Type()
)
pppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppoePassword.setStatus("current")
_SvlanTpid_Type = Integer32
_SvlanTpid_Object = MibScalar
svlanTpid = _SvlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 16),
    _SvlanTpid_Type()
)
svlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svlanTpid.setStatus("current")


class _SvlanId_Type(Integer32):
    """Custom type svlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_SvlanId_Type.__name__ = "Integer32"
_SvlanId_Object = MibScalar
svlanId = _SvlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 17),
    _SvlanId_Type()
)
svlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svlanId.setStatus("current")


class _SvlanCos_Type(Integer32):
    """Custom type svlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SvlanCos_Type.__name__ = "Integer32"
_SvlanCos_Object = MibScalar
svlanCos = _SvlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 18),
    _SvlanCos_Type()
)
svlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svlanCos.setStatus("current")
_CvlanTpid_Type = Integer32
_CvlanTpid_Object = MibScalar
cvlanTpid = _CvlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 19),
    _CvlanTpid_Type()
)
cvlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cvlanTpid.setStatus("current")


class _CvlanId_Type(Integer32):
    """Custom type cvlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CvlanId_Type.__name__ = "Integer32"
_CvlanId_Object = MibScalar
cvlanId = _CvlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 20),
    _CvlanId_Type()
)
cvlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cvlanId.setStatus("current")


class _CvlanCos_Type(Integer32):
    """Custom type cvlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CvlanCos_Type.__name__ = "Integer32"
_CvlanCos_Object = MibScalar
cvlanCos = _CvlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 21),
    _CvlanCos_Type()
)
cvlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cvlanCos.setStatus("current")
_RtpSVlanTpid_Type = Integer32
_RtpSVlanTpid_Object = MibScalar
rtpSVlanTpid = _RtpSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 22),
    _RtpSVlanTpid_Type()
)
rtpSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpSVlanTpid.setStatus("current")


class _RtpSVlanId_Type(Integer32):
    """Custom type rtpSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_RtpSVlanId_Type.__name__ = "Integer32"
_RtpSVlanId_Object = MibScalar
rtpSVlanId = _RtpSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 23),
    _RtpSVlanId_Type()
)
rtpSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpSVlanId.setStatus("current")


class _RtpSVlanCos_Type(Integer32):
    """Custom type rtpSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RtpSVlanCos_Type.__name__ = "Integer32"
_RtpSVlanCos_Object = MibScalar
rtpSVlanCos = _RtpSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 24),
    _RtpSVlanCos_Type()
)
rtpSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpSVlanCos.setStatus("current")
_RtpCVlanTpid_Type = Integer32
_RtpCVlanTpid_Object = MibScalar
rtpCVlanTpid = _RtpCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 25),
    _RtpCVlanTpid_Type()
)
rtpCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpCVlanTpid.setStatus("current")


class _RtpCVlanId_Type(Integer32):
    """Custom type rtpCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_RtpCVlanId_Type.__name__ = "Integer32"
_RtpCVlanId_Object = MibScalar
rtpCVlanId = _RtpCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 26),
    _RtpCVlanId_Type()
)
rtpCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpCVlanId.setStatus("current")


class _RtpCVlanCos_Type(Integer32):
    """Custom type rtpCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RtpCVlanCos_Type.__name__ = "Integer32"
_RtpCVlanCos_Object = MibScalar
rtpCVlanCos = _RtpCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 27),
    _RtpCVlanCos_Type()
)
rtpCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rtpCVlanCos.setStatus("current")


class _VoipParamAction_Type(Integer32):
    """Custom type voipParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_VoipParamAction_Type.__name__ = "Integer32"
_VoipParamAction_Object = MibScalar
voipParamAction = _VoipParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 10, 28),
    _VoipParamAction_Type()
)
voipParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamAction.setStatus("current")
_OnuSipParam_ObjectIdentity = ObjectIdentity
onuSipParam = _OnuSipParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11)
)
_ProxyServName_Type = OctetString
_ProxyServName_Object = MibScalar
proxyServName = _ProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 1),
    _ProxyServName_Type()
)
proxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyServName.setStatus("current")


class _ProxyServPort_Type(Integer32):
    """Custom type proxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ProxyServPort_Type.__name__ = "Integer32"
_ProxyServPort_Object = MibScalar
proxyServPort = _ProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 2),
    _ProxyServPort_Type()
)
proxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    proxyServPort.setStatus("current")
_BakProxyServName_Type = OctetString
_BakProxyServName_Object = MibScalar
bakProxyServName = _BakProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 3),
    _BakProxyServName_Type()
)
bakProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakProxyServName.setStatus("current")


class _BakProxyServPort_Type(Integer32):
    """Custom type bakProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BakProxyServPort_Type.__name__ = "Integer32"
_BakProxyServPort_Object = MibScalar
bakProxyServPort = _BakProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 4),
    _BakProxyServPort_Type()
)
bakProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakProxyServPort.setStatus("current")
_RegServName_Type = OctetString
_RegServName_Object = MibScalar
regServName = _RegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 5),
    _RegServName_Type()
)
regServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regServName.setStatus("current")


class _RegServPort_Type(Integer32):
    """Custom type regServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RegServPort_Type.__name__ = "Integer32"
_RegServPort_Object = MibScalar
regServPort = _RegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 6),
    _RegServPort_Type()
)
regServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regServPort.setStatus("current")
_BakRegServName_Type = OctetString
_BakRegServName_Object = MibScalar
bakRegServName = _BakRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 7),
    _BakRegServName_Type()
)
bakRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakRegServName.setStatus("current")


class _BakRegServPort_Type(Integer32):
    """Custom type bakRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BakRegServPort_Type.__name__ = "Integer32"
_BakRegServPort_Object = MibScalar
bakRegServPort = _BakRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 8),
    _BakRegServPort_Type()
)
bakRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bakRegServPort.setStatus("current")
_OutBndServName_Type = OctetString
_OutBndServName_Object = MibScalar
outBndServName = _OutBndServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 9),
    _OutBndServName_Type()
)
outBndServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    outBndServName.setStatus("current")


class _OutBndServPort_Type(Integer32):
    """Custom type outBndServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OutBndServPort_Type.__name__ = "Integer32"
_OutBndServPort_Object = MibScalar
outBndServPort = _OutBndServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 10),
    _OutBndServPort_Type()
)
outBndServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    outBndServPort.setStatus("current")


class _SipParamMgPort_Type(Integer32):
    """Custom type sipParamMgPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipParamMgPort_Type.__name__ = "Integer32"
_SipParamMgPort_Object = MibScalar
sipParamMgPort = _SipParamMgPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 11),
    _SipParamMgPort_Type()
)
sipParamMgPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipParamMgPort.setStatus("current")


class _RegInterval_Type(Integer32):
    """Custom type regInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_RegInterval_Type.__name__ = "Integer32"
_RegInterval_Object = MibScalar
regInterval = _RegInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 12),
    _RegInterval_Type()
)
regInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    regInterval.setStatus("current")


class _HBeatCfg_Type(Integer32):
    """Custom type hBeatCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("active", 1),
          ("passive", 2))
    )


_HBeatCfg_Type.__name__ = "Integer32"
_HBeatCfg_Object = MibScalar
hBeatCfg = _HBeatCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 13),
    _HBeatCfg_Type()
)
hBeatCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hBeatCfg.setStatus("current")


class _HBeatCycle_Type(Integer32):
    """Custom type hBeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65525),
    )


_HBeatCycle_Type.__name__ = "Integer32"
_HBeatCycle_Object = MibScalar
hBeatCycle = _HBeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 14),
    _HBeatCycle_Type()
)
hBeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hBeatCycle.setStatus("current")


class _HBeatCount_Type(Integer32):
    """Custom type hBeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HBeatCount_Type.__name__ = "Integer32"
_HBeatCount_Object = MibScalar
hBeatCount = _HBeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 15),
    _HBeatCount_Type()
)
hBeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hBeatCount.setStatus("current")


class _SipGloParamAction_Type(Integer32):
    """Custom type sipGloParamAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commit", 1),
          ("remove", 2))
    )


_SipGloParamAction_Type.__name__ = "Integer32"
_SipGloParamAction_Object = MibScalar
sipGloParamAction = _SipGloParamAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 4, 11, 16),
    _SipGloParamAction_Type()
)
sipGloParamAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipGloParamAction.setStatus("current")
_AlarmProfileEdit_ObjectIdentity = ObjectIdentity
alarmProfileEdit = _AlarmProfileEdit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5)
)


class _AlarmProfileNo_Type(Integer32):
    """Custom type alarmProfileNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_AlarmProfileNo_Type.__name__ = "Integer32"
_AlarmProfileNo_Object = MibScalar
alarmProfileNo = _AlarmProfileNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 2),
    _AlarmProfileNo_Type()
)
alarmProfileNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmProfileNo.setStatus("current")
_AlarmOnuConfig_ObjectIdentity = ObjectIdentity
alarmOnuConfig = _AlarmOnuConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 3)
)


class _AlarmOnuTpye_Type(Integer32):
    """Custom type alarmOnuTpye based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("equipmemAlarm", 1),
          ("powerAlarm", 2),
          ("batteryMiss", 3),
          ("batteryFail", 4),
          ("physicalLntrusion", 5),
          ("selfTestFail", 6),
          ("iadConFail", 7),
          ("ponIfSwitch", 8),
          ("sleepStatusUpdate", 9))
    )


_AlarmOnuTpye_Type.__name__ = "Integer32"
_AlarmOnuTpye_Object = MibScalar
alarmOnuTpye = _AlarmOnuTpye_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 3, 1),
    _AlarmOnuTpye_Type()
)
alarmOnuTpye.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmOnuTpye.setStatus("current")


class _AlarmOnuEn_Type(Integer32):
    """Custom type alarmOnuEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmOnuEn_Type.__name__ = "Integer32"
_AlarmOnuEn_Object = MibScalar
alarmOnuEn = _AlarmOnuEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 3, 2),
    _AlarmOnuEn_Type()
)
alarmOnuEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmOnuEn.setStatus("current")


class _AlarmOnuAction_Type(Integer32):
    """Custom type alarmOnuAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("commit", 2))
    )


_AlarmOnuAction_Type.__name__ = "Integer32"
_AlarmOnuAction_Object = MibScalar
alarmOnuAction = _AlarmOnuAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 3, 3),
    _AlarmOnuAction_Type()
)
alarmOnuAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmOnuAction.setStatus("current")
_OnuTempAlarm_ObjectIdentity = ObjectIdentity
onuTempAlarm = _OnuTempAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 4)
)


class _OnuTempAlarmType_Type(Integer32):
    """Custom type onuTempAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("onuTempHighAarm", 1),
          ("onuTempLowAlarm", 2))
    )


_OnuTempAlarmType_Type.__name__ = "Integer32"
_OnuTempAlarmType_Object = MibScalar
onuTempAlarmType = _OnuTempAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 4, 1),
    _OnuTempAlarmType_Type()
)
onuTempAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTempAlarmType.setStatus("current")


class _OnuTempAlarmEn_Type(Integer32):
    """Custom type onuTempAlarmEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuTempAlarmEn_Type.__name__ = "Integer32"
_OnuTempAlarmEn_Object = MibScalar
onuTempAlarmEn = _OnuTempAlarmEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 4, 2),
    _OnuTempAlarmEn_Type()
)
onuTempAlarmEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTempAlarmEn.setStatus("current")


class _OnuTempAlarmThld_Type(Integer32):
    """Custom type onuTempAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1280, 1280),
    )


_OnuTempAlarmThld_Type.__name__ = "Integer32"
_OnuTempAlarmThld_Object = MibScalar
onuTempAlarmThld = _OnuTempAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 4, 3),
    _OnuTempAlarmThld_Type()
)
onuTempAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTempAlarmThld.setStatus("current")


class _OnuTempClearThld_Type(Integer32):
    """Custom type onuTempClearThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1280, 1280),
    )


_OnuTempClearThld_Type.__name__ = "Integer32"
_OnuTempClearThld_Object = MibScalar
onuTempClearThld = _OnuTempClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 4, 4),
    _OnuTempClearThld_Type()
)
onuTempClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTempClearThld.setStatus("current")


class _OnuTempAlarmAction_Type(Integer32):
    """Custom type onuTempAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("commit", 2))
    )


_OnuTempAlarmAction_Type.__name__ = "Integer32"
_OnuTempAlarmAction_Object = MibScalar
onuTempAlarmAction = _OnuTempAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 4, 5),
    _OnuTempAlarmAction_Type()
)
onuTempAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuTempAlarmAction.setStatus("current")
_OnuVccLowAlarm_ObjectIdentity = ObjectIdentity
onuVccLowAlarm = _OnuVccLowAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 5)
)


class _OnuVccAlarmEn_Type(Integer32):
    """Custom type onuVccAlarmEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuVccAlarmEn_Type.__name__ = "Integer32"
_OnuVccAlarmEn_Object = MibScalar
onuVccAlarmEn = _OnuVccAlarmEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 5, 1),
    _OnuVccAlarmEn_Type()
)
onuVccAlarmEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVccAlarmEn.setStatus("current")


class _OnuVccAlarmThld_Type(Integer32):
    """Custom type onuVccAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuVccAlarmThld_Type.__name__ = "Integer32"
_OnuVccAlarmThld_Object = MibScalar
onuVccAlarmThld = _OnuVccAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 5, 2),
    _OnuVccAlarmThld_Type()
)
onuVccAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVccAlarmThld.setStatus("current")


class _OnuVccClearThld_Type(Integer32):
    """Custom type onuVccClearThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuVccClearThld_Type.__name__ = "Integer32"
_OnuVccClearThld_Object = MibScalar
onuVccClearThld = _OnuVccClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 5, 3),
    _OnuVccClearThld_Type()
)
onuVccClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVccClearThld.setStatus("current")


class _OnuVccAlarmAction_Type(Integer32):
    """Custom type onuVccAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_OnuVccAlarmAction_Type.__name__ = "Integer32"
_OnuVccAlarmAction_Object = MibScalar
onuVccAlarmAction = _OnuVccAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 5, 4),
    _OnuVccAlarmAction_Type()
)
onuVccAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuVccAlarmAction.setStatus("current")
_PonVccAlarm_ObjectIdentity = ObjectIdentity
ponVccAlarm = _PonVccAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 6)
)


class _PonVccAlarmType_Type(Integer32):
    """Custom type ponVccAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("vccHighAlarm", 1),
          ("vccLowAlarm", 2),
          ("vccHighWarn", 3),
          ("vccLowWarn", 4))
    )


_PonVccAlarmType_Type.__name__ = "Integer32"
_PonVccAlarmType_Object = MibScalar
ponVccAlarmType = _PonVccAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 6, 1),
    _PonVccAlarmType_Type()
)
ponVccAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccAlarmType.setStatus("current")


class _PonVccAlarmTypeEn_Type(Integer32):
    """Custom type ponVccAlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonVccAlarmTypeEn_Type.__name__ = "Integer32"
_PonVccAlarmTypeEn_Object = MibScalar
ponVccAlarmTypeEn = _PonVccAlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 6, 2),
    _PonVccAlarmTypeEn_Type()
)
ponVccAlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccAlarmTypeEn.setStatus("current")


class _PonVccAlarmThld_Type(Integer32):
    """Custom type ponVccAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65),
    )


_PonVccAlarmThld_Type.__name__ = "Integer32"
_PonVccAlarmThld_Object = MibScalar
ponVccAlarmThld = _PonVccAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 6, 3),
    _PonVccAlarmThld_Type()
)
ponVccAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccAlarmThld.setStatus("current")


class _PonVccClearThld_Type(Integer32):
    """Custom type ponVccClearThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65),
    )


_PonVccClearThld_Type.__name__ = "Integer32"
_PonVccClearThld_Object = MibScalar
ponVccClearThld = _PonVccClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 6, 4),
    _PonVccClearThld_Type()
)
ponVccClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccClearThld.setStatus("current")


class _PonVccAlarmAction_Type(Integer32):
    """Custom type ponVccAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PonVccAlarmAction_Type.__name__ = "Integer32"
_PonVccAlarmAction_Object = MibScalar
ponVccAlarmAction = _PonVccAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 6, 5),
    _PonVccAlarmAction_Type()
)
ponVccAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponVccAlarmAction.setStatus("current")
_PonBiasAlarm_ObjectIdentity = ObjectIdentity
ponBiasAlarm = _PonBiasAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 7)
)


class _PonBiasAlarmType_Type(Integer32):
    """Custom type ponBiasAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("txBiasHighAlarm", 1),
          ("txBiasLowAlarm", 2),
          ("txBiasHighWarn", 3),
          ("txBiasLowWarn", 4))
    )


_PonBiasAlarmType_Type.__name__ = "Integer32"
_PonBiasAlarmType_Object = MibScalar
ponBiasAlarmType = _PonBiasAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 7, 1),
    _PonBiasAlarmType_Type()
)
ponBiasAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponBiasAlarmType.setStatus("current")


class _PonBiasAlarmTypeEn_Type(Integer32):
    """Custom type ponBiasAlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonBiasAlarmTypeEn_Type.__name__ = "Integer32"
_PonBiasAlarmTypeEn_Object = MibScalar
ponBiasAlarmTypeEn = _PonBiasAlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 7, 2),
    _PonBiasAlarmTypeEn_Type()
)
ponBiasAlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponBiasAlarmTypeEn.setStatus("current")


class _PonBiasAlarmThld_Type(Integer32):
    """Custom type ponBiasAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1310),
    )


_PonBiasAlarmThld_Type.__name__ = "Integer32"
_PonBiasAlarmThld_Object = MibScalar
ponBiasAlarmThld = _PonBiasAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 7, 3),
    _PonBiasAlarmThld_Type()
)
ponBiasAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponBiasAlarmThld.setStatus("current")


class _PonBiasClearThld_Type(Integer32):
    """Custom type ponBiasClearThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1310),
    )


_PonBiasClearThld_Type.__name__ = "Integer32"
_PonBiasClearThld_Object = MibScalar
ponBiasClearThld = _PonBiasClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 7, 4),
    _PonBiasClearThld_Type()
)
ponBiasClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponBiasClearThld.setStatus("current")


class _PonBiasAlarmAction_Type(Integer32):
    """Custom type ponBiasAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PonBiasAlarmAction_Type.__name__ = "Integer32"
_PonBiasAlarmAction_Object = MibScalar
ponBiasAlarmAction = _PonBiasAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 7, 5),
    _PonBiasAlarmAction_Type()
)
ponBiasAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponBiasAlarmAction.setStatus("current")
_PonPowerAlarm_ObjectIdentity = ObjectIdentity
ponPowerAlarm = _PonPowerAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 8)
)


class _PonPowerAlarmType_Type(Integer32):
    """Custom type ponPowerAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("rxPowerHighAlarm", 1),
          ("rxPowerLowAlarm", 2),
          ("txPowerHighAlarm", 3),
          ("txPowerLowAlarm", 4),
          ("rxPowerHighWarn", 5),
          ("rxPowerLowWarn", 6),
          ("txPowerHighWarn", 7),
          ("txPowerLowWarn", 8))
    )


_PonPowerAlarmType_Type.__name__ = "Integer32"
_PonPowerAlarmType_Object = MibScalar
ponPowerAlarmType = _PonPowerAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 8, 1),
    _PonPowerAlarmType_Type()
)
ponPowerAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPowerAlarmType.setStatus("current")


class _PonPowerAlarmTypeEn_Type(Integer32):
    """Custom type ponPowerAlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonPowerAlarmTypeEn_Type.__name__ = "Integer32"
_PonPowerAlarmTypeEn_Object = MibScalar
ponPowerAlarmTypeEn = _PonPowerAlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 8, 2),
    _PonPowerAlarmTypeEn_Type()
)
ponPowerAlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPowerAlarmTypeEn.setStatus("current")


class _PonPowerAlarmThld_Type(Integer32):
    """Custom type ponPowerAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-400, 82),
    )


_PonPowerAlarmThld_Type.__name__ = "Integer32"
_PonPowerAlarmThld_Object = MibScalar
ponPowerAlarmThld = _PonPowerAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 8, 3),
    _PonPowerAlarmThld_Type()
)
ponPowerAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPowerAlarmThld.setStatus("current")


class _PonPowerClearThld_Type(Integer32):
    """Custom type ponPowerClearThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-400, 82),
    )


_PonPowerClearThld_Type.__name__ = "Integer32"
_PonPowerClearThld_Object = MibScalar
ponPowerClearThld = _PonPowerClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 8, 4),
    _PonPowerClearThld_Type()
)
ponPowerClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPowerClearThld.setStatus("current")


class _PonPowerAlarmAction_Type(Integer32):
    """Custom type ponPowerAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PonPowerAlarmAction_Type.__name__ = "Integer32"
_PonPowerAlarmAction_Object = MibScalar
ponPowerAlarmAction = _PonPowerAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 8, 5),
    _PonPowerAlarmAction_Type()
)
ponPowerAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponPowerAlarmAction.setStatus("current")
_PonTempAlarm_ObjectIdentity = ObjectIdentity
ponTempAlarm = _PonTempAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 9)
)


class _PonTempAlarmType_Type(Integer32):
    """Custom type ponTempAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("tempHighAlarm", 1),
          ("tempLowAlarm", 2),
          ("tempHighWarn", 3),
          ("tempLowWarn", 4))
    )


_PonTempAlarmType_Type.__name__ = "Integer32"
_PonTempAlarmType_Object = MibScalar
ponTempAlarmType = _PonTempAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 9, 1),
    _PonTempAlarmType_Type()
)
ponTempAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempAlarmType.setStatus("current")


class _PonTempAlarmTypeEn_Type(Integer32):
    """Custom type ponTempAlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonTempAlarmTypeEn_Type.__name__ = "Integer32"
_PonTempAlarmTypeEn_Object = MibScalar
ponTempAlarmTypeEn = _PonTempAlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 9, 2),
    _PonTempAlarmTypeEn_Type()
)
ponTempAlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempAlarmTypeEn.setStatus("current")


class _PonTempAlarmThld_Type(Integer32):
    """Custom type ponTempAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1280, 1280),
    )


_PonTempAlarmThld_Type.__name__ = "Integer32"
_PonTempAlarmThld_Object = MibScalar
ponTempAlarmThld = _PonTempAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 9, 3),
    _PonTempAlarmThld_Type()
)
ponTempAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempAlarmThld.setStatus("current")


class _PonTempClearThld_Type(Integer32):
    """Custom type ponTempClearThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1280, 1280),
    )


_PonTempClearThld_Type.__name__ = "Integer32"
_PonTempClearThld_Object = MibScalar
ponTempClearThld = _PonTempClearThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 9, 4),
    _PonTempClearThld_Type()
)
ponTempClearThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempClearThld.setStatus("current")


class _PonTempAlarmAction_Type(Integer32):
    """Custom type ponTempAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PonTempAlarmAction_Type.__name__ = "Integer32"
_PonTempAlarmAction_Object = MibScalar
ponTempAlarmAction = _PonTempAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 9, 5),
    _PonTempAlarmAction_Type()
)
ponTempAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponTempAlarmAction.setStatus("current")
_PonStatAlarm_ObjectIdentity = ObjectIdentity
ponStatAlarm = _PonStatAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 10)
)


class _PonStatAlarmType_Type(Integer32):
    """Custom type ponStatAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32)
        )
    )
    namedValues = NamedValues(
        *(("downstreamDropEventsAlarm", 1),
          ("upstreamDropEventsAlarm", 2),
          ("downstreamCRCErrorFramesAlarm", 3),
          ("upstreamCRCErrorFramesAlarm", 4),
          ("downstreamUndersizeFramesAlarm", 5),
          ("upstreamUndersizeFramesAlarm", 6),
          ("downstreamOversizeFramesAlarm", 7),
          ("upstreamOversizeFramesAlarm", 8),
          ("downstreamFragmentsAlarm", 9),
          ("upstreamFragmentsAlarm", 10),
          ("downstreamJabbersAlarm", 11),
          ("upstreamJabbersAlarm", 12),
          ("downstreamDiscardsAlarm", 13),
          ("upstreamDiscardsAlarm", 14),
          ("downstreamErrorsAlarm", 15),
          ("upstreamErrorsAlarm", 16),
          ("downstreamDropEventsWarning", 17),
          ("upstreamDropEventsWarning", 18),
          ("downstreamCRCErrorFramesWarning", 19),
          ("upstreamCRCErrorFramesWarning", 20),
          ("downstreamUndersizeFramesWarning", 21),
          ("upstreamUndersizeFramesWarning", 22),
          ("downstreamOversizeFramesWarning", 23),
          ("upstreamOversizeFramesWarning", 24),
          ("downstreamFragmentsWarning", 25),
          ("upstreamFragmentsWarning", 26),
          ("downstreamJabbersWarning", 27),
          ("upstreamJabbersWarning", 28),
          ("downstreamDiscardsWarning", 29),
          ("upstreamDiscardsWarning", 30),
          ("downstreamErrorsWarning", 31),
          ("upstreamErrorsWarning", 32))
    )


_PonStatAlarmType_Type.__name__ = "Integer32"
_PonStatAlarmType_Object = MibScalar
ponStatAlarmType = _PonStatAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 10, 1),
    _PonStatAlarmType_Type()
)
ponStatAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponStatAlarmType.setStatus("current")


class _PonStatAlarmTypeEn_Type(Integer32):
    """Custom type ponStatAlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PonStatAlarmTypeEn_Type.__name__ = "Integer32"
_PonStatAlarmTypeEn_Object = MibScalar
ponStatAlarmTypeEn = _PonStatAlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 10, 2),
    _PonStatAlarmTypeEn_Type()
)
ponStatAlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponStatAlarmTypeEn.setStatus("current")


class _PonStatAlarmThld_Type(Integer32):
    """Custom type ponStatAlarmThld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PonStatAlarmThld_Type.__name__ = "Integer32"
_PonStatAlarmThld_Object = MibScalar
ponStatAlarmThld = _PonStatAlarmThld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 10, 3),
    _PonStatAlarmThld_Type()
)
ponStatAlarmThld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponStatAlarmThld.setStatus("current")


class _PonStatAlarmAction_Type(Integer32):
    """Custom type ponStatAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PonStatAlarmAction_Type.__name__ = "Integer32"
_PonStatAlarmAction_Object = MibScalar
ponStatAlarmAction = _PonStatAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 10, 4),
    _PonStatAlarmAction_Type()
)
ponStatAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ponStatAlarmAction.setStatus("current")
_PortAlarmStatus_ObjectIdentity = ObjectIdentity
portAlarmStatus = _PortAlarmStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 11)
)


class _PortAlarmEthNo_Type(Integer32):
    """Custom type portAlarmEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortAlarmEthNo_Type.__name__ = "Integer32"
_PortAlarmEthNo_Object = MibScalar
portAlarmEthNo = _PortAlarmEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 11, 1),
    _PortAlarmEthNo_Type()
)
portAlarmEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAlarmEthNo.setStatus("current")


class _PortAlarmStatusType_Type(Integer32):
    """Custom type portAlarmStatusType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ethPortAutoNegFailure", 1),
          ("ethPortLos", 2),
          ("ethPortFailure", 3),
          ("ethPortLoopback", 4),
          ("ethPortCongestion", 5))
    )


_PortAlarmStatusType_Type.__name__ = "Integer32"
_PortAlarmStatusType_Object = MibScalar
portAlarmStatusType = _PortAlarmStatusType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 11, 2),
    _PortAlarmStatusType_Type()
)
portAlarmStatusType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAlarmStatusType.setStatus("current")


class _PortAlarmStatusEn_Type(Integer32):
    """Custom type portAlarmStatusEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortAlarmStatusEn_Type.__name__ = "Integer32"
_PortAlarmStatusEn_Object = MibScalar
portAlarmStatusEn = _PortAlarmStatusEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 11, 3),
    _PortAlarmStatusEn_Type()
)
portAlarmStatusEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAlarmStatusEn.setStatus("current")


class _PortAlarmStatusAction_Type(Integer32):
    """Custom type portAlarmStatusAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PortAlarmStatusAction_Type.__name__ = "Integer32"
_PortAlarmStatusAction_Object = MibScalar
portAlarmStatusAction = _PortAlarmStatusAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 11, 4),
    _PortAlarmStatusAction_Type()
)
portAlarmStatusAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portAlarmStatusAction.setStatus("current")
_PortStatAlarm_ObjectIdentity = ObjectIdentity
portStatAlarm = _PortStatAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 12)
)


class _PortStatAlarmEthNo_Type(Integer32):
    """Custom type portStatAlarmEthNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortStatAlarmEthNo_Type.__name__ = "Integer32"
_PortStatAlarmEthNo_Object = MibScalar
portStatAlarmEthNo = _PortStatAlarmEthNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 12, 1),
    _PortStatAlarmEthNo_Type()
)
portStatAlarmEthNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatAlarmEthNo.setStatus("current")


class _PortStatAlarmType_Type(Integer32):
    """Custom type portStatAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34)
        )
    )
    namedValues = NamedValues(
        *(("downstreamDropEventsAlarm", 1),
          ("upstreamDropEventsAlarm", 2),
          ("downstreamCRCErrorFramesAlarm", 3),
          ("upstreamCRCErrorFramesAlarm", 4),
          ("downstreamUndersizeFramesAlarm", 5),
          ("upstreamUndersizeFramesAlarm", 6),
          ("downstreamOversizeFramesAlarm", 7),
          ("upstreamOversizeFramesAlarm", 8),
          ("downstreamFragmentsAlarm", 9),
          ("upstreamFragmentsAlarm", 10),
          ("downstreamJabbersAlarm", 11),
          ("upstreamJabbersAlarm", 12),
          ("downstreamDiscardsAlarm", 13),
          ("upstreamDiscardsAlarm", 14),
          ("downstreamErrorsAlarm", 15),
          ("upstreamErrorsAlarm", 16),
          ("statusChangeTimesAlarm", 17),
          ("downstreamDropEventsWarning", 18),
          ("upstreamDropEventsWarning", 19),
          ("downstreamCRCErrorFramesWarning", 20),
          ("upstreamCRCErrorFramesWarning", 21),
          ("downstreamUndersizeFramesWarning", 22),
          ("upstreamUndersizeFramesWarning", 23),
          ("downstreamOversizeFramesWarning", 24),
          ("upstreamOversizeFramesWarning", 25),
          ("upstreamFragmentsWarning", 27),
          ("downstreamJabbersWarning", 28),
          ("upstreamJabbersWarning", 29),
          ("downstreamDiscardsWarning", 30),
          ("upstreamDiscardsWarning", 31),
          ("downstreamErrorsWarning", 32),
          ("upstreamErrorsWarning", 33),
          ("statusChangeTimesWarning", 34))
    )


_PortStatAlarmType_Type.__name__ = "Integer32"
_PortStatAlarmType_Object = MibScalar
portStatAlarmType = _PortStatAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 12, 2),
    _PortStatAlarmType_Type()
)
portStatAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatAlarmType.setStatus("current")


class _PortStatAlarmTypeEn_Type(Integer32):
    """Custom type portStatAlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortStatAlarmTypeEn_Type.__name__ = "Integer32"
_PortStatAlarmTypeEn_Object = MibScalar
portStatAlarmTypeEn = _PortStatAlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 12, 3),
    _PortStatAlarmTypeEn_Type()
)
portStatAlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatAlarmTypeEn.setStatus("current")


class _PortStatAlarmTld_Type(Integer32):
    """Custom type portStatAlarmTld based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortStatAlarmTld_Type.__name__ = "Integer32"
_PortStatAlarmTld_Object = MibScalar
portStatAlarmTld = _PortStatAlarmTld_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 12, 4),
    _PortStatAlarmTld_Type()
)
portStatAlarmTld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatAlarmTld.setStatus("current")


class _PortStatAlarmAction_Type(Integer32):
    """Custom type portStatAlarmAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PortStatAlarmAction_Type.__name__ = "Integer32"
_PortStatAlarmAction_Object = MibScalar
portStatAlarmAction = _PortStatAlarmAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 12, 5),
    _PortStatAlarmAction_Type()
)
portStatAlarmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portStatAlarmAction.setStatus("current")
_PotsAlarmStatus_ObjectIdentity = ObjectIdentity
potsAlarmStatus = _PotsAlarmStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 13)
)


class _PotsAlarmPotsNo_Type(Integer32):
    """Custom type potsAlarmPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_PotsAlarmPotsNo_Type.__name__ = "Integer32"
_PotsAlarmPotsNo_Object = MibScalar
potsAlarmPotsNo = _PotsAlarmPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 13, 1),
    _PotsAlarmPotsNo_Type()
)
potsAlarmPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsAlarmPotsNo.setStatus("current")


class _PotsPortFailAlarmEn_Type(Integer32):
    """Custom type potsPortFailAlarmEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PotsPortFailAlarmEn_Type.__name__ = "Integer32"
_PotsPortFailAlarmEn_Object = MibScalar
potsPortFailAlarmEn = _PotsPortFailAlarmEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 13, 2),
    _PotsPortFailAlarmEn_Type()
)
potsPortFailAlarmEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPortFailAlarmEn.setStatus("current")


class _PotsAlarmStatusAction_Type(Integer32):
    """Custom type potsAlarmStatusAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_PotsAlarmStatusAction_Type.__name__ = "Integer32"
_PotsAlarmStatusAction_Object = MibScalar
potsAlarmStatusAction = _PotsAlarmStatusAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 13, 3),
    _PotsAlarmStatusAction_Type()
)
potsAlarmStatusAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsAlarmStatusAction.setStatus("current")
_E1AlarmStatus_ObjectIdentity = ObjectIdentity
e1AlarmStatus = _E1AlarmStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 14)
)


class _E1AlarmE1No_Type(Integer32):
    """Custom type e1AlarmE1No based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_E1AlarmE1No_Type.__name__ = "Integer32"
_E1AlarmE1No_Object = MibScalar
e1AlarmE1No = _E1AlarmE1No_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 14, 1),
    _E1AlarmE1No_Type()
)
e1AlarmE1No.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1AlarmE1No.setStatus("current")


class _E1AlarmType_Type(Integer32):
    """Custom type e1AlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e1PortFailure", 1),
          ("e1TimingUnlock", 2),
          ("e1Los", 3))
    )


_E1AlarmType_Type.__name__ = "Integer32"
_E1AlarmType_Object = MibScalar
e1AlarmType = _E1AlarmType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 14, 2),
    _E1AlarmType_Type()
)
e1AlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1AlarmType.setStatus("current")


class _E1AlarmTypeEn_Type(Integer32):
    """Custom type e1AlarmTypeEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_E1AlarmTypeEn_Type.__name__ = "Integer32"
_E1AlarmTypeEn_Object = MibScalar
e1AlarmTypeEn = _E1AlarmTypeEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 14, 3),
    _E1AlarmTypeEn_Type()
)
e1AlarmTypeEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1AlarmTypeEn.setStatus("current")


class _E1AlarmStatusAction_Type(Integer32):
    """Custom type e1AlarmStatusAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_E1AlarmStatusAction_Type.__name__ = "Integer32"
_E1AlarmStatusAction_Object = MibScalar
e1AlarmStatusAction = _E1AlarmStatusAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 5, 14, 4),
    _E1AlarmStatusAction_Type()
)
e1AlarmStatusAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1AlarmStatusAction.setStatus("current")
_ProfileManualBind_ObjectIdentity = ObjectIdentity
profileManualBind = _ProfileManualBind_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 6)
)


class _ProfileBindTpye_Type(Integer32):
    """Custom type profileBindTpye based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dba", 1),
          ("srv", 2),
          ("voip", 3),
          ("alarm", 4))
    )


_ProfileBindTpye_Type.__name__ = "Integer32"
_ProfileBindTpye_Object = MibScalar
profileBindTpye = _ProfileBindTpye_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 6, 1),
    _ProfileBindTpye_Type()
)
profileBindTpye.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileBindTpye.setStatus("current")


class _ProfileBindPon_Type(Integer32):
    """Custom type profileBindPon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ProfileBindPon_Type.__name__ = "Integer32"
_ProfileBindPon_Object = MibScalar
profileBindPon = _ProfileBindPon_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 6, 2),
    _ProfileBindPon_Type()
)
profileBindPon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileBindPon.setStatus("current")


class _ProfileBindOnu_Type(Integer32):
    """Custom type profileBindOnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ProfileBindOnu_Type.__name__ = "Integer32"
_ProfileBindOnu_Object = MibScalar
profileBindOnu = _ProfileBindOnu_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 6, 3),
    _ProfileBindOnu_Type()
)
profileBindOnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileBindOnu.setStatus("current")


class _ProfileBindId_Type(Integer32):
    """Custom type profileBindId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_ProfileBindId_Type.__name__ = "Integer32"
_ProfileBindId_Object = MibScalar
profileBindId = _ProfileBindId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 6, 4),
    _ProfileBindId_Type()
)
profileBindId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileBindId.setStatus("current")


class _ProfileBindAction_Type(Integer32):
    """Custom type profileBindAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("commit", 1)
    )


_ProfileBindAction_Type.__name__ = "Integer32"
_ProfileBindAction_Object = MibScalar
profileBindAction = _ProfileBindAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 6, 5),
    _ProfileBindAction_Type()
)
profileBindAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileBindAction.setStatus("current")
_ProfileAutoBind_ObjectIdentity = ObjectIdentity
profileAutoBind = _ProfileAutoBind_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7)
)


class _ProfileAutoBindDba_Type(Integer32):
    """Custom type profileAutoBindDba based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_ProfileAutoBindDba_Type.__name__ = "Integer32"
_ProfileAutoBindDba_Object = MibScalar
profileAutoBindDba = _ProfileAutoBindDba_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7, 1),
    _ProfileAutoBindDba_Type()
)
profileAutoBindDba.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileAutoBindDba.setStatus("current")


class _ProfileAutoBindSrv_Type(Integer32):
    """Custom type profileAutoBindSrv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_ProfileAutoBindSrv_Type.__name__ = "Integer32"
_ProfileAutoBindSrv_Object = MibScalar
profileAutoBindSrv = _ProfileAutoBindSrv_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7, 2),
    _ProfileAutoBindSrv_Type()
)
profileAutoBindSrv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileAutoBindSrv.setStatus("current")


class _ProfileAutoBindVoip_Type(Integer32):
    """Custom type profileAutoBindVoip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_ProfileAutoBindVoip_Type.__name__ = "Integer32"
_ProfileAutoBindVoip_Object = MibScalar
profileAutoBindVoip = _ProfileAutoBindVoip_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7, 3),
    _ProfileAutoBindVoip_Type()
)
profileAutoBindVoip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileAutoBindVoip.setStatus("current")


class _ProfileAutoBindAlarm_Type(Integer32):
    """Custom type profileAutoBindAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_ProfileAutoBindAlarm_Type.__name__ = "Integer32"
_ProfileAutoBindAlarm_Object = MibScalar
profileAutoBindAlarm = _ProfileAutoBindAlarm_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7, 4),
    _ProfileAutoBindAlarm_Type()
)
profileAutoBindAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileAutoBindAlarm.setStatus("current")
_ProfileOnuType_Type = OctetString
_ProfileOnuType_Object = MibScalar
profileOnuType = _ProfileOnuType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7, 5),
    _ProfileOnuType_Type()
)
profileOnuType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileOnuType.setStatus("current")


class _ProfileAutoBindAction_Type(Integer32):
    """Custom type profileAutoBindAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 1),
          ("delete", 2))
    )


_ProfileAutoBindAction_Type.__name__ = "Integer32"
_ProfileAutoBindAction_Object = MibScalar
profileAutoBindAction = _ProfileAutoBindAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 7, 6),
    _ProfileAutoBindAction_Type()
)
profileAutoBindAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileAutoBindAction.setStatus("current")
_ProfileDescrEdit_ObjectIdentity = ObjectIdentity
profileDescrEdit = _ProfileDescrEdit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 8)
)


class _ProfileDescrType_Type(Integer32):
    """Custom type profileDescrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dba", 1),
          ("srv", 2),
          ("voip", 3),
          ("alarm", 4))
    )


_ProfileDescrType_Type.__name__ = "Integer32"
_ProfileDescrType_Object = MibScalar
profileDescrType = _ProfileDescrType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 8, 1),
    _ProfileDescrType_Type()
)
profileDescrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileDescrType.setStatus("current")


class _ProfileDescrId_Type(Integer32):
    """Custom type profileDescrId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_ProfileDescrId_Type.__name__ = "Integer32"
_ProfileDescrId_Object = MibScalar
profileDescrId = _ProfileDescrId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 8, 2),
    _ProfileDescrId_Type()
)
profileDescrId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileDescrId.setStatus("current")
_ProfileDescrStr_Type = OctetString
_ProfileDescrStr_Object = MibScalar
profileDescrStr = _ProfileDescrStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 8, 3),
    _ProfileDescrStr_Type()
)
profileDescrStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileDescrStr.setStatus("current")


class _ProfileDescrAction_Type(Integer32):
    """Custom type profileDescrAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("submit", 1),
          ("delete", 2))
    )


_ProfileDescrAction_Type.__name__ = "Integer32"
_ProfileDescrAction_Object = MibScalar
profileDescrAction = _ProfileDescrAction_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 8, 8, 4),
    _ProfileDescrAction_Type()
)
profileDescrAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileDescrAction.setStatus("current")
_OnuProfileShow_ObjectIdentity = ObjectIdentity
onuProfileShow = _OnuProfileShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9)
)
_DbaProfileShow_ObjectIdentity = ObjectIdentity
dbaProfileShow = _DbaProfileShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1)
)
_UpsteamPFTable_Object = MibTable
upsteamPFTable = _UpsteamPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1)
)
if mibBuilder.loadTexts:
    upsteamPFTable.setStatus("current")
_UpsteamPFEntry_Object = MibTableRow
upsteamPFEntry = _UpsteamPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1, 1)
)
upsteamPFEntry.setIndexNames(
    (0, "V1600D", "upstreamDbaId"),
)
if mibBuilder.loadTexts:
    upsteamPFEntry.setStatus("current")
_UpstreamDbaId_Type = Integer32
_UpstreamDbaId_Object = MibTableColumn
upstreamDbaId = _UpstreamDbaId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1, 1, 1),
    _UpstreamDbaId_Type()
)
upstreamDbaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upstreamDbaId.setStatus("current")


class _UpstreamFirS_Type(Integer32):
    """Custom type upstreamFirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 950000),
    )


_UpstreamFirS_Type.__name__ = "Integer32"
_UpstreamFirS_Object = MibTableColumn
upstreamFirS = _UpstreamFirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1, 1, 2),
    _UpstreamFirS_Type()
)
upstreamFirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upstreamFirS.setStatus("current")


class _UpstreamCirS_Type(Integer32):
    """Custom type upstreamCirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 950000),
    )


_UpstreamCirS_Type.__name__ = "Integer32"
_UpstreamCirS_Object = MibTableColumn
upstreamCirS = _UpstreamCirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1, 1, 3),
    _UpstreamCirS_Type()
)
upstreamCirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upstreamCirS.setStatus("current")


class _UpstreamPirS_Type(Integer32):
    """Custom type upstreamPirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 1000000),
    )


_UpstreamPirS_Type.__name__ = "Integer32"
_UpstreamPirS_Object = MibTableColumn
upstreamPirS = _UpstreamPirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1, 1, 4),
    _UpstreamPirS_Type()
)
upstreamPirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upstreamPirS.setStatus("current")


class _UpstreamWeightS_Type(Integer32):
    """Custom type upstreamWeightS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_UpstreamWeightS_Type.__name__ = "Integer32"
_UpstreamWeightS_Object = MibTableColumn
upstreamWeightS = _UpstreamWeightS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 1, 1, 5),
    _UpstreamWeightS_Type()
)
upstreamWeightS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upstreamWeightS.setStatus("current")
_DnstreamPFTable_Object = MibTable
dnstreamPFTable = _DnstreamPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 2)
)
if mibBuilder.loadTexts:
    dnstreamPFTable.setStatus("current")
_DnstreamPFEntry_Object = MibTableRow
dnstreamPFEntry = _DnstreamPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 2, 1)
)
dnstreamPFEntry.setIndexNames(
    (0, "V1600D", "dnstreamDbaId"),
)
if mibBuilder.loadTexts:
    dnstreamPFEntry.setStatus("current")
_DnstreamDbaId_Type = Integer32
_DnstreamDbaId_Object = MibTableColumn
dnstreamDbaId = _DnstreamDbaId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 2, 1, 1),
    _DnstreamDbaId_Type()
)
dnstreamDbaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnstreamDbaId.setStatus("current")


class _DnstreamPirS_Type(Integer32):
    """Custom type dnstreamPirS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_DnstreamPirS_Type.__name__ = "Integer32"
_DnstreamPirS_Object = MibTableColumn
dnstreamPirS = _DnstreamPirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 2, 1, 2),
    _DnstreamPirS_Type()
)
dnstreamPirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnstreamPirS.setStatus("current")


class _DnstreamWeightS_Type(Integer32):
    """Custom type dnstreamWeightS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DnstreamWeightS_Type.__name__ = "Integer32"
_DnstreamWeightS_Object = MibTableColumn
dnstreamWeightS = _DnstreamWeightS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 1, 2, 1, 3),
    _DnstreamWeightS_Type()
)
dnstreamWeightS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnstreamWeightS.setStatus("current")
_SrvProfileShow_ObjectIdentity = ObjectIdentity
srvProfileShow = _SrvProfileShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2)
)
_OnuLanCountPFTable_Object = MibTable
onuLanCountPFTable = _OnuLanCountPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 1)
)
if mibBuilder.loadTexts:
    onuLanCountPFTable.setStatus("current")
_OnuLanCountPFEntry_Object = MibTableRow
onuLanCountPFEntry = _OnuLanCountPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 1, 1)
)
onuLanCountPFEntry.setIndexNames(
    (0, "V1600D", "onuLanCountSrvId"),
)
if mibBuilder.loadTexts:
    onuLanCountPFEntry.setStatus("current")


class _OnuLanCountSrvId_Type(Integer32):
    """Custom type onuLanCountSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuLanCountSrvId_Type.__name__ = "Integer32"
_OnuLanCountSrvId_Object = MibTableColumn
onuLanCountSrvId = _OnuLanCountSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 1, 1, 1),
    _OnuLanCountSrvId_Type()
)
onuLanCountSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuLanCountSrvId.setStatus("current")


class _OnuLanCountS_Type(Integer32):
    """Custom type onuLanCountS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_OnuLanCountS_Type.__name__ = "Integer32"
_OnuLanCountS_Object = MibTableColumn
onuLanCountS = _OnuLanCountS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 1, 1, 2),
    _OnuLanCountS_Type()
)
onuLanCountS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuLanCountS.setStatus("current")
_OnuFastleavePFTable_Object = MibTable
onuFastleavePFTable = _OnuFastleavePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 2)
)
if mibBuilder.loadTexts:
    onuFastleavePFTable.setStatus("current")
_OnuFastleavePFEntry_Object = MibTableRow
onuFastleavePFEntry = _OnuFastleavePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 2, 1)
)
onuFastleavePFEntry.setIndexNames(
    (0, "V1600D", "onuFastleaveSrvId"),
)
if mibBuilder.loadTexts:
    onuFastleavePFEntry.setStatus("current")


class _OnuFastleaveSrvId_Type(Integer32):
    """Custom type onuFastleaveSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuFastleaveSrvId_Type.__name__ = "Integer32"
_OnuFastleaveSrvId_Object = MibTableColumn
onuFastleaveSrvId = _OnuFastleaveSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 2, 1, 1),
    _OnuFastleaveSrvId_Type()
)
onuFastleaveSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuFastleaveSrvId.setStatus("current")


class _OnuFastleaveEnableS_Type(Integer32):
    """Custom type onuFastleaveEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuFastleaveEnableS_Type.__name__ = "Integer32"
_OnuFastleaveEnableS_Object = MibTableColumn
onuFastleaveEnableS = _OnuFastleaveEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 2, 1, 2),
    _OnuFastleaveEnableS_Type()
)
onuFastleaveEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuFastleaveEnableS.setStatus("current")
_OnuFecModePFTable_Object = MibTable
onuFecModePFTable = _OnuFecModePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 3)
)
if mibBuilder.loadTexts:
    onuFecModePFTable.setStatus("current")
_OnuFecModePFEntry_Object = MibTableRow
onuFecModePFEntry = _OnuFecModePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 3, 1)
)
onuFecModePFEntry.setIndexNames(
    (0, "V1600D", "onuFecModeSrvId"),
)
if mibBuilder.loadTexts:
    onuFecModePFEntry.setStatus("current")


class _OnuFecModeSrvId_Type(Integer32):
    """Custom type onuFecModeSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuFecModeSrvId_Type.__name__ = "Integer32"
_OnuFecModeSrvId_Object = MibTableColumn
onuFecModeSrvId = _OnuFecModeSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 3, 1, 1),
    _OnuFecModeSrvId_Type()
)
onuFecModeSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuFecModeSrvId.setStatus("current")


class _OnuFecModeEnableS_Type(Integer32):
    """Custom type onuFecModeEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuFecModeEnableS_Type.__name__ = "Integer32"
_OnuFecModeEnableS_Object = MibTableColumn
onuFecModeEnableS = _OnuFecModeEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 3, 1, 2),
    _OnuFecModeEnableS_Type()
)
onuFecModeEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuFecModeEnableS.setStatus("current")
_CtcMcModePFTable_Object = MibTable
ctcMcModePFTable = _CtcMcModePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 4)
)
if mibBuilder.loadTexts:
    ctcMcModePFTable.setStatus("current")
_CtcMcModePFEntry_Object = MibTableRow
ctcMcModePFEntry = _CtcMcModePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 4, 1)
)
ctcMcModePFEntry.setIndexNames(
    (0, "V1600D", "ctcMcModeSrvId"),
)
if mibBuilder.loadTexts:
    ctcMcModePFEntry.setStatus("current")


class _CtcMcModeSrvId_Type(Integer32):
    """Custom type ctcMcModeSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcMcModeSrvId_Type.__name__ = "Integer32"
_CtcMcModeSrvId_Object = MibTableColumn
ctcMcModeSrvId = _CtcMcModeSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 4, 1, 1),
    _CtcMcModeSrvId_Type()
)
ctcMcModeSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcMcModeSrvId.setStatus("current")


class _CtcMcModeS_Type(Integer32):
    """Custom type ctcMcModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snooping", 1),
          ("control", 2))
    )


_CtcMcModeS_Type.__name__ = "Integer32"
_CtcMcModeS_Object = MibTableColumn
ctcMcModeS = _CtcMcModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 4, 1, 2),
    _CtcMcModeS_Type()
)
ctcMcModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcMcModeS.setStatus("current")
_CtcMultiLlidPFTable_Object = MibTable
ctcMultiLlidPFTable = _CtcMultiLlidPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 5)
)
if mibBuilder.loadTexts:
    ctcMultiLlidPFTable.setStatus("current")
_CtcMultiLlidPFEntry_Object = MibTableRow
ctcMultiLlidPFEntry = _CtcMultiLlidPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 5, 1)
)
ctcMultiLlidPFEntry.setIndexNames(
    (0, "V1600D", "ctcMultiLlidSrvId"),
)
if mibBuilder.loadTexts:
    ctcMultiLlidPFEntry.setStatus("current")


class _CtcMultiLlidSrvId_Type(Integer32):
    """Custom type ctcMultiLlidSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcMultiLlidSrvId_Type.__name__ = "Integer32"
_CtcMultiLlidSrvId_Object = MibTableColumn
ctcMultiLlidSrvId = _CtcMultiLlidSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 5, 1, 1),
    _CtcMultiLlidSrvId_Type()
)
ctcMultiLlidSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcMultiLlidSrvId.setStatus("current")


class _CtcMultiLlidS_Type(Integer32):
    """Custom type ctcMultiLlidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_CtcMultiLlidS_Type.__name__ = "Integer32"
_CtcMultiLlidS_Object = MibTableColumn
ctcMultiLlidS = _CtcMultiLlidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 5, 1, 2),
    _CtcMultiLlidS_Type()
)
ctcMultiLlidS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcMultiLlidS.setStatus("current")
_CtcActivePonPFTable_Object = MibTable
ctcActivePonPFTable = _CtcActivePonPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 6)
)
if mibBuilder.loadTexts:
    ctcActivePonPFTable.setStatus("current")
_CtcActivePonPFEntry_Object = MibTableRow
ctcActivePonPFEntry = _CtcActivePonPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 6, 1)
)
ctcActivePonPFEntry.setIndexNames(
    (0, "V1600D", "ctcActivePonSrvId"),
)
if mibBuilder.loadTexts:
    ctcActivePonPFEntry.setStatus("current")


class _CtcActivePonSrvId_Type(Integer32):
    """Custom type ctcActivePonSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcActivePonSrvId_Type.__name__ = "Integer32"
_CtcActivePonSrvId_Object = MibTableColumn
ctcActivePonSrvId = _CtcActivePonSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 6, 1, 1),
    _CtcActivePonSrvId_Type()
)
ctcActivePonSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcActivePonSrvId.setStatus("current")


class _CtcActivePonS_Type(Integer32):
    """Custom type ctcActivePonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_CtcActivePonS_Type.__name__ = "Integer32"
_CtcActivePonS_Object = MibTableColumn
ctcActivePonS = _CtcActivePonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 6, 1, 2),
    _CtcActivePonS_Type()
)
ctcActivePonS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcActivePonS.setStatus("current")
_CtcHoldoverPFTable_Object = MibTable
ctcHoldoverPFTable = _CtcHoldoverPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 7)
)
if mibBuilder.loadTexts:
    ctcHoldoverPFTable.setStatus("current")
_CtcHoldoverPFEntry_Object = MibTableRow
ctcHoldoverPFEntry = _CtcHoldoverPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 7, 1)
)
ctcHoldoverPFEntry.setIndexNames(
    (0, "V1600D", "ctcHoldoverSrvId"),
)
if mibBuilder.loadTexts:
    ctcHoldoverPFEntry.setStatus("current")


class _CtcHoldoverSrvId_Type(Integer32):
    """Custom type ctcHoldoverSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcHoldoverSrvId_Type.__name__ = "Integer32"
_CtcHoldoverSrvId_Object = MibTableColumn
ctcHoldoverSrvId = _CtcHoldoverSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 7, 1, 1),
    _CtcHoldoverSrvId_Type()
)
ctcHoldoverSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcHoldoverSrvId.setStatus("current")


class _CtcHoldoverS_Type(Integer32):
    """Custom type ctcHoldoverS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CtcHoldoverS_Type.__name__ = "Integer32"
_CtcHoldoverS_Object = MibTableColumn
ctcHoldoverS = _CtcHoldoverS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 7, 1, 2),
    _CtcHoldoverS_Type()
)
ctcHoldoverS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcHoldoverS.setStatus("current")
_OnuMgmtIpPFTable_Object = MibTable
onuMgmtIpPFTable = _OnuMgmtIpPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8)
)
if mibBuilder.loadTexts:
    onuMgmtIpPFTable.setStatus("current")
_OnuMgmtIpPFEntry_Object = MibTableRow
onuMgmtIpPFEntry = _OnuMgmtIpPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1)
)
onuMgmtIpPFEntry.setIndexNames(
    (0, "V1600D", "onuMgmtIpSrvId"),
)
if mibBuilder.loadTexts:
    onuMgmtIpPFEntry.setStatus("current")


class _OnuMgmtIpSrvId_Type(Integer32):
    """Custom type onuMgmtIpSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuMgmtIpSrvId_Type.__name__ = "Integer32"
_OnuMgmtIpSrvId_Object = MibTableColumn
onuMgmtIpSrvId = _OnuMgmtIpSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 1),
    _OnuMgmtIpSrvId_Type()
)
onuMgmtIpSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpSrvId.setStatus("current")
_OnuMgmtIpAddrS_Type = IpAddress
_OnuMgmtIpAddrS_Object = MibTableColumn
onuMgmtIpAddrS = _OnuMgmtIpAddrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 2),
    _OnuMgmtIpAddrS_Type()
)
onuMgmtIpAddrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpAddrS.setStatus("current")
_OnuMgmtIpMaskS_Type = IpAddress
_OnuMgmtIpMaskS_Object = MibTableColumn
onuMgmtIpMaskS = _OnuMgmtIpMaskS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 3),
    _OnuMgmtIpMaskS_Type()
)
onuMgmtIpMaskS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpMaskS.setStatus("current")
_OnuMgmtIpGwS_Type = IpAddress
_OnuMgmtIpGwS_Object = MibTableColumn
onuMgmtIpGwS = _OnuMgmtIpGwS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 4),
    _OnuMgmtIpGwS_Type()
)
onuMgmtIpGwS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpGwS.setStatus("current")


class _OnuMgmtIpCvlanS_Type(Integer32):
    """Custom type onuMgmtIpCvlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuMgmtIpCvlanS_Type.__name__ = "Integer32"
_OnuMgmtIpCvlanS_Object = MibTableColumn
onuMgmtIpCvlanS = _OnuMgmtIpCvlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 5),
    _OnuMgmtIpCvlanS_Type()
)
onuMgmtIpCvlanS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpCvlanS.setStatus("current")


class _OnuMgmtIpSvlanS_Type(Integer32):
    """Custom type onuMgmtIpSvlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OnuMgmtIpSvlanS_Type.__name__ = "Integer32"
_OnuMgmtIpSvlanS_Object = MibTableColumn
onuMgmtIpSvlanS = _OnuMgmtIpSvlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 6),
    _OnuMgmtIpSvlanS_Type()
)
onuMgmtIpSvlanS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpSvlanS.setStatus("current")


class _OnuMgmtIpPriS_Type(Integer32):
    """Custom type onuMgmtIpPriS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_OnuMgmtIpPriS_Type.__name__ = "Integer32"
_OnuMgmtIpPriS_Object = MibTableColumn
onuMgmtIpPriS = _OnuMgmtIpPriS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 8, 1, 7),
    _OnuMgmtIpPriS_Type()
)
onuMgmtIpPriS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMgmtIpPriS.setStatus("current")
_OnuSnmpProPFTable_Object = MibTable
onuSnmpProPFTable = _OnuSnmpProPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9)
)
if mibBuilder.loadTexts:
    onuSnmpProPFTable.setStatus("current")
_OnuSnmpProPFEntry_Object = MibTableRow
onuSnmpProPFEntry = _OnuSnmpProPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1)
)
onuSnmpProPFEntry.setIndexNames(
    (0, "V1600D", "onuSnmpProSrvId"),
)
if mibBuilder.loadTexts:
    onuSnmpProPFEntry.setStatus("current")


class _OnuSnmpProSrvId_Type(Integer32):
    """Custom type onuSnmpProSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSnmpProSrvId_Type.__name__ = "Integer32"
_OnuSnmpProSrvId_Object = MibTableColumn
onuSnmpProSrvId = _OnuSnmpProSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 1),
    _OnuSnmpProSrvId_Type()
)
onuSnmpProSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProSrvId.setStatus("current")
_OnuSnmpProHostS_Type = IpAddress
_OnuSnmpProHostS_Object = MibTableColumn
onuSnmpProHostS = _OnuSnmpProHostS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 2),
    _OnuSnmpProHostS_Type()
)
onuSnmpProHostS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProHostS.setStatus("current")


class _OnuSnmpProTrapPortS_Type(Integer32):
    """Custom type onuSnmpProTrapPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSnmpProTrapPortS_Type.__name__ = "Integer32"
_OnuSnmpProTrapPortS_Object = MibTableColumn
onuSnmpProTrapPortS = _OnuSnmpProTrapPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 3),
    _OnuSnmpProTrapPortS_Type()
)
onuSnmpProTrapPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProTrapPortS.setStatus("current")


class _OnuSnmpProPortS_Type(Integer32):
    """Custom type onuSnmpProPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OnuSnmpProPortS_Type.__name__ = "Integer32"
_OnuSnmpProPortS_Object = MibTableColumn
onuSnmpProPortS = _OnuSnmpProPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 4),
    _OnuSnmpProPortS_Type()
)
onuSnmpProPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProPortS.setStatus("current")
_OnuSnmpProNameS_Type = OctetString
_OnuSnmpProNameS_Object = MibTableColumn
onuSnmpProNameS = _OnuSnmpProNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 5),
    _OnuSnmpProNameS_Type()
)
onuSnmpProNameS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProNameS.setStatus("current")
_OnuSnmpProComRdS_Type = OctetString
_OnuSnmpProComRdS_Object = MibTableColumn
onuSnmpProComRdS = _OnuSnmpProComRdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 6),
    _OnuSnmpProComRdS_Type()
)
onuSnmpProComRdS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProComRdS.setStatus("current")
_OnuSnmpProComWrS_Type = OctetString
_OnuSnmpProComWrS_Object = MibTableColumn
onuSnmpProComWrS = _OnuSnmpProComWrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 9, 1, 7),
    _OnuSnmpProComWrS_Type()
)
onuSnmpProComWrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSnmpProComWrS.setStatus("current")
_OnuSlaPFTable_Object = MibTable
onuSlaPFTable = _OnuSlaPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 10)
)
if mibBuilder.loadTexts:
    onuSlaPFTable.setStatus("current")
_OnuSlaPFEntry_Object = MibTableRow
onuSlaPFEntry = _OnuSlaPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 10, 1)
)
onuSlaPFEntry.setIndexNames(
    (0, "V1600D", "onuSlaSrvId"),
)
if mibBuilder.loadTexts:
    onuSlaPFEntry.setStatus("current")


class _OnuSlaSrvId_Type(Integer32):
    """Custom type onuSlaSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSlaSrvId_Type.__name__ = "Integer32"
_OnuSlaSrvId_Object = MibTableColumn
onuSlaSrvId = _OnuSlaSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 10, 1, 1),
    _OnuSlaSrvId_Type()
)
onuSlaSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSlaSrvId.setStatus("current")


class _OnuSlaEnableS_Type(Integer32):
    """Custom type onuSlaEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuSlaEnableS_Type.__name__ = "Integer32"
_OnuSlaEnableS_Object = MibTableColumn
onuSlaEnableS = _OnuSlaEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 10, 1, 2),
    _OnuSlaEnableS_Type()
)
onuSlaEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSlaEnableS.setStatus("current")
_OnuCtcPausePFTable_Object = MibTable
onuCtcPausePFTable = _OnuCtcPausePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 11)
)
if mibBuilder.loadTexts:
    onuCtcPausePFTable.setStatus("current")
_OnuCtcPausePFEntry_Object = MibTableRow
onuCtcPausePFEntry = _OnuCtcPausePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 11, 1)
)
onuCtcPausePFEntry.setIndexNames(
    (0, "V1600D", "onuCtcPauseSrvId"),
    (0, "V1600D", "pausePortIndexS"),
)
if mibBuilder.loadTexts:
    onuCtcPausePFEntry.setStatus("current")


class _OnuCtcPauseSrvId_Type(Integer32):
    """Custom type onuCtcPauseSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_OnuCtcPauseSrvId_Type.__name__ = "Integer32"
_OnuCtcPauseSrvId_Object = MibTableColumn
onuCtcPauseSrvId = _OnuCtcPauseSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 11, 1, 1),
    _OnuCtcPauseSrvId_Type()
)
onuCtcPauseSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcPauseSrvId.setStatus("current")


class _PausePortIndexS_Type(Integer32):
    """Custom type pausePortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PausePortIndexS_Type.__name__ = "Integer32"
_PausePortIndexS_Object = MibTableColumn
pausePortIndexS = _PausePortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 11, 1, 2),
    _PausePortIndexS_Type()
)
pausePortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pausePortIndexS.setStatus("current")


class _OnuCtcPauseEnS_Type(Integer32):
    """Custom type onuCtcPauseEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuCtcPauseEnS_Type.__name__ = "Integer32"
_OnuCtcPauseEnS_Object = MibTableColumn
onuCtcPauseEnS = _OnuCtcPauseEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 11, 1, 3),
    _OnuCtcPauseEnS_Type()
)
onuCtcPauseEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcPauseEnS.setStatus("current")
_OnuCtcLoopdetectPFTable_Object = MibTable
onuCtcLoopdetectPFTable = _OnuCtcLoopdetectPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 12)
)
if mibBuilder.loadTexts:
    onuCtcLoopdetectPFTable.setStatus("current")
_OnuCtcLoopdetectPFEntry_Object = MibTableRow
onuCtcLoopdetectPFEntry = _OnuCtcLoopdetectPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 12, 1)
)
onuCtcLoopdetectPFEntry.setIndexNames(
    (0, "V1600D", "onuCtcLoopdetectSrvId"),
    (0, "V1600D", "loopdetectPortIndexS"),
)
if mibBuilder.loadTexts:
    onuCtcLoopdetectPFEntry.setStatus("current")


class _OnuCtcLoopdetectSrvId_Type(Integer32):
    """Custom type onuCtcLoopdetectSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuCtcLoopdetectSrvId_Type.__name__ = "Integer32"
_OnuCtcLoopdetectSrvId_Object = MibTableColumn
onuCtcLoopdetectSrvId = _OnuCtcLoopdetectSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 12, 1, 1),
    _OnuCtcLoopdetectSrvId_Type()
)
onuCtcLoopdetectSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcLoopdetectSrvId.setStatus("current")


class _LoopdetectPortIndexS_Type(Integer32):
    """Custom type loopdetectPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LoopdetectPortIndexS_Type.__name__ = "Integer32"
_LoopdetectPortIndexS_Object = MibTableColumn
loopdetectPortIndexS = _LoopdetectPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 12, 1, 2),
    _LoopdetectPortIndexS_Type()
)
loopdetectPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loopdetectPortIndexS.setStatus("current")


class _OnuCtcLoopdetectEnS_Type(Integer32):
    """Custom type onuCtcLoopdetectEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuCtcLoopdetectEnS_Type.__name__ = "Integer32"
_OnuCtcLoopdetectEnS_Object = MibTableColumn
onuCtcLoopdetectEnS = _OnuCtcLoopdetectEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 12, 1, 3),
    _OnuCtcLoopdetectEnS_Type()
)
onuCtcLoopdetectEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcLoopdetectEnS.setStatus("current")
_OnuMcTagstripPFTable_Object = MibTable
onuMcTagstripPFTable = _OnuMcTagstripPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 13)
)
if mibBuilder.loadTexts:
    onuMcTagstripPFTable.setStatus("current")
_OnuMcTagstripPFEntry_Object = MibTableRow
onuMcTagstripPFEntry = _OnuMcTagstripPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 13, 1)
)
onuMcTagstripPFEntry.setIndexNames(
    (0, "V1600D", "onuMcTagstripSrvId"),
    (0, "V1600D", "tagstripPortIndexS"),
)
if mibBuilder.loadTexts:
    onuMcTagstripPFEntry.setStatus("current")


class _OnuMcTagstripSrvId_Type(Integer32):
    """Custom type onuMcTagstripSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuMcTagstripSrvId_Type.__name__ = "Integer32"
_OnuMcTagstripSrvId_Object = MibTableColumn
onuMcTagstripSrvId = _OnuMcTagstripSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 13, 1, 1),
    _OnuMcTagstripSrvId_Type()
)
onuMcTagstripSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMcTagstripSrvId.setStatus("current")


class _TagstripPortIndexS_Type(Integer32):
    """Custom type tagstripPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TagstripPortIndexS_Type.__name__ = "Integer32"
_TagstripPortIndexS_Object = MibTableColumn
tagstripPortIndexS = _TagstripPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 13, 1, 2),
    _TagstripPortIndexS_Type()
)
tagstripPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tagstripPortIndexS.setStatus("current")


class _OnuMcTagstripEnS_Type(Integer32):
    """Custom type onuMcTagstripEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuMcTagstripEnS_Type.__name__ = "Integer32"
_OnuMcTagstripEnS_Object = MibTableColumn
onuMcTagstripEnS = _OnuMcTagstripEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 13, 1, 3),
    _OnuMcTagstripEnS_Type()
)
onuMcTagstripEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMcTagstripEnS.setStatus("current")
_OnuMcVlanTransPFTable_Object = MibTable
onuMcVlanTransPFTable = _OnuMcVlanTransPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 14)
)
if mibBuilder.loadTexts:
    onuMcVlanTransPFTable.setStatus("current")
_OnuMcVlanTransPFEntry_Object = MibTableRow
onuMcVlanTransPFEntry = _OnuMcVlanTransPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 14, 1)
)
onuMcVlanTransPFEntry.setIndexNames(
    (0, "V1600D", "onuMcVlanTransnSrvId"),
    (0, "V1600D", "mcVlanTransPortIndexS"),
)
if mibBuilder.loadTexts:
    onuMcVlanTransPFEntry.setStatus("current")


class _OnuMcVlanTransnSrvId_Type(Integer32):
    """Custom type onuMcVlanTransnSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuMcVlanTransnSrvId_Type.__name__ = "Integer32"
_OnuMcVlanTransnSrvId_Object = MibTableColumn
onuMcVlanTransnSrvId = _OnuMcVlanTransnSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 14, 1, 1),
    _OnuMcVlanTransnSrvId_Type()
)
onuMcVlanTransnSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMcVlanTransnSrvId.setStatus("current")


class _McVlanTransPortIndexS_Type(Integer32):
    """Custom type mcVlanTransPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_McVlanTransPortIndexS_Type.__name__ = "Integer32"
_McVlanTransPortIndexS_Object = MibTableColumn
mcVlanTransPortIndexS = _McVlanTransPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 14, 1, 2),
    _McVlanTransPortIndexS_Type()
)
mcVlanTransPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcVlanTransPortIndexS.setStatus("current")
_OnuMcVlanTransVlanStrS_Type = OctetString
_OnuMcVlanTransVlanStrS_Object = MibTableColumn
onuMcVlanTransVlanStrS = _OnuMcVlanTransVlanStrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 14, 1, 3),
    _OnuMcVlanTransVlanStrS_Type()
)
onuMcVlanTransVlanStrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMcVlanTransVlanStrS.setStatus("current")
_OnuPortPhyAdminPFTable_Object = MibTable
onuPortPhyAdminPFTable = _OnuPortPhyAdminPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 15)
)
if mibBuilder.loadTexts:
    onuPortPhyAdminPFTable.setStatus("current")
_OnuPortPhyAdminPFEntry_Object = MibTableRow
onuPortPhyAdminPFEntry = _OnuPortPhyAdminPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 15, 1)
)
onuPortPhyAdminPFEntry.setIndexNames(
    (0, "V1600D", "onuPortPhyAdminSrvId"),
    (0, "V1600D", "adminPortIndexS"),
)
if mibBuilder.loadTexts:
    onuPortPhyAdminPFEntry.setStatus("current")


class _OnuPortPhyAdminSrvId_Type(Integer32):
    """Custom type onuPortPhyAdminSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPortPhyAdminSrvId_Type.__name__ = "Integer32"
_OnuPortPhyAdminSrvId_Object = MibTableColumn
onuPortPhyAdminSrvId = _OnuPortPhyAdminSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 15, 1, 1),
    _OnuPortPhyAdminSrvId_Type()
)
onuPortPhyAdminSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortPhyAdminSrvId.setStatus("current")


class _AdminPortIndexS_Type(Integer32):
    """Custom type adminPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AdminPortIndexS_Type.__name__ = "Integer32"
_AdminPortIndexS_Object = MibTableColumn
adminPortIndexS = _AdminPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 15, 1, 2),
    _AdminPortIndexS_Type()
)
adminPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminPortIndexS.setStatus("current")


class _OnuPortPhyAdminEnS_Type(Integer32):
    """Custom type onuPortPhyAdminEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortPhyAdminEnS_Type.__name__ = "Integer32"
_OnuPortPhyAdminEnS_Object = MibTableColumn
onuPortPhyAdminEnS = _OnuPortPhyAdminEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 15, 1, 3),
    _OnuPortPhyAdminEnS_Type()
)
onuPortPhyAdminEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortPhyAdminEnS.setStatus("current")
_PortAutoNegPFTable_Object = MibTable
portAutoNegPFTable = _PortAutoNegPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 16)
)
if mibBuilder.loadTexts:
    portAutoNegPFTable.setStatus("current")
_PortAutoNegPFEntry_Object = MibTableRow
portAutoNegPFEntry = _PortAutoNegPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 16, 1)
)
portAutoNegPFEntry.setIndexNames(
    (0, "V1600D", "portAutoNegSrvId"),
    (0, "V1600D", "autoNegPortIndexS"),
)
if mibBuilder.loadTexts:
    portAutoNegPFEntry.setStatus("current")


class _PortAutoNegSrvId_Type(Integer32):
    """Custom type portAutoNegSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortAutoNegSrvId_Type.__name__ = "Integer32"
_PortAutoNegSrvId_Object = MibTableColumn
portAutoNegSrvId = _PortAutoNegSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 16, 1, 1),
    _PortAutoNegSrvId_Type()
)
portAutoNegSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portAutoNegSrvId.setStatus("current")


class _AutoNegPortIndexS_Type(Integer32):
    """Custom type autoNegPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AutoNegPortIndexS_Type.__name__ = "Integer32"
_AutoNegPortIndexS_Object = MibTableColumn
autoNegPortIndexS = _AutoNegPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 16, 1, 2),
    _AutoNegPortIndexS_Type()
)
autoNegPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    autoNegPortIndexS.setStatus("current")


class _PortAutoNegEnS_Type(Integer32):
    """Custom type portAutoNegEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortAutoNegEnS_Type.__name__ = "Integer32"
_PortAutoNegEnS_Object = MibTableColumn
portAutoNegEnS = _PortAutoNegEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 16, 1, 3),
    _PortAutoNegEnS_Type()
)
portAutoNegEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portAutoNegEnS.setStatus("current")
_MaxIgmpGrpPFTable_Object = MibTable
maxIgmpGrpPFTable = _MaxIgmpGrpPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 17)
)
if mibBuilder.loadTexts:
    maxIgmpGrpPFTable.setStatus("current")
_MaxIgmpGrpPFEntry_Object = MibTableRow
maxIgmpGrpPFEntry = _MaxIgmpGrpPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 17, 1)
)
maxIgmpGrpPFEntry.setIndexNames(
    (0, "V1600D", "maxIgmpGrpSrvId"),
    (0, "V1600D", "maxIgmpPortIndexS"),
)
if mibBuilder.loadTexts:
    maxIgmpGrpPFEntry.setStatus("current")


class _MaxIgmpGrpSrvId_Type(Integer32):
    """Custom type maxIgmpGrpSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MaxIgmpGrpSrvId_Type.__name__ = "Integer32"
_MaxIgmpGrpSrvId_Object = MibTableColumn
maxIgmpGrpSrvId = _MaxIgmpGrpSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 17, 1, 1),
    _MaxIgmpGrpSrvId_Type()
)
maxIgmpGrpSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxIgmpGrpSrvId.setStatus("current")


class _MaxIgmpPortIndexS_Type(Integer32):
    """Custom type maxIgmpPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_MaxIgmpPortIndexS_Type.__name__ = "Integer32"
_MaxIgmpPortIndexS_Object = MibTableColumn
maxIgmpPortIndexS = _MaxIgmpPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 17, 1, 2),
    _MaxIgmpPortIndexS_Type()
)
maxIgmpPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxIgmpPortIndexS.setStatus("current")
_MaxIgmpGrpS_Type = Integer32
_MaxIgmpGrpS_Object = MibTableColumn
maxIgmpGrpS = _MaxIgmpGrpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 17, 1, 3),
    _MaxIgmpGrpS_Type()
)
maxIgmpGrpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxIgmpGrpS.setStatus("current")
_OnuPortUpLimitPFTable_Object = MibTable
onuPortUpLimitPFTable = _OnuPortUpLimitPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18)
)
if mibBuilder.loadTexts:
    onuPortUpLimitPFTable.setStatus("current")
_OnuPortUpLimitPFEntry_Object = MibTableRow
onuPortUpLimitPFEntry = _OnuPortUpLimitPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18, 1)
)
onuPortUpLimitPFEntry.setIndexNames(
    (0, "V1600D", "onuPortUpLimitSrvId"),
    (0, "V1600D", "upLimitPortIndexS"),
)
if mibBuilder.loadTexts:
    onuPortUpLimitPFEntry.setStatus("current")


class _OnuPortUpLimitSrvId_Type(Integer32):
    """Custom type onuPortUpLimitSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPortUpLimitSrvId_Type.__name__ = "Integer32"
_OnuPortUpLimitSrvId_Object = MibTableColumn
onuPortUpLimitSrvId = _OnuPortUpLimitSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18, 1, 1),
    _OnuPortUpLimitSrvId_Type()
)
onuPortUpLimitSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpLimitSrvId.setStatus("current")


class _UpLimitPortIndexS_Type(Integer32):
    """Custom type upLimitPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_UpLimitPortIndexS_Type.__name__ = "Integer32"
_UpLimitPortIndexS_Object = MibTableColumn
upLimitPortIndexS = _UpLimitPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18, 1, 2),
    _UpLimitPortIndexS_Type()
)
upLimitPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upLimitPortIndexS.setStatus("current")
_OnuPortUpLimitCirS_Type = Integer32
_OnuPortUpLimitCirS_Object = MibTableColumn
onuPortUpLimitCirS = _OnuPortUpLimitCirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18, 1, 3),
    _OnuPortUpLimitCirS_Type()
)
onuPortUpLimitCirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpLimitCirS.setStatus("current")
_OnuPortUpLimitCbsS_Type = Integer32
_OnuPortUpLimitCbsS_Object = MibTableColumn
onuPortUpLimitCbsS = _OnuPortUpLimitCbsS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18, 1, 4),
    _OnuPortUpLimitCbsS_Type()
)
onuPortUpLimitCbsS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpLimitCbsS.setStatus("current")
_OnuPortUpLimitEbsS_Type = Integer32
_OnuPortUpLimitEbsS_Object = MibTableColumn
onuPortUpLimitEbsS = _OnuPortUpLimitEbsS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 18, 1, 5),
    _OnuPortUpLimitEbsS_Type()
)
onuPortUpLimitEbsS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortUpLimitEbsS.setStatus("current")
_OnuPortDownLimitPFTable_Object = MibTable
onuPortDownLimitPFTable = _OnuPortDownLimitPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 19)
)
if mibBuilder.loadTexts:
    onuPortDownLimitPFTable.setStatus("current")
_OnuPortDownLimitPFEntry_Object = MibTableRow
onuPortDownLimitPFEntry = _OnuPortDownLimitPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 19, 1)
)
onuPortDownLimitPFEntry.setIndexNames(
    (0, "V1600D", "onuPortDownLimitSrvId"),
    (0, "V1600D", "downLimitPortIndexS"),
)
if mibBuilder.loadTexts:
    onuPortDownLimitPFEntry.setStatus("current")


class _OnuPortDownLimitSrvId_Type(Integer32):
    """Custom type onuPortDownLimitSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPortDownLimitSrvId_Type.__name__ = "Integer32"
_OnuPortDownLimitSrvId_Object = MibTableColumn
onuPortDownLimitSrvId = _OnuPortDownLimitSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 19, 1, 1),
    _OnuPortDownLimitSrvId_Type()
)
onuPortDownLimitSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownLimitSrvId.setStatus("current")


class _DownLimitPortIndexS_Type(Integer32):
    """Custom type downLimitPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DownLimitPortIndexS_Type.__name__ = "Integer32"
_DownLimitPortIndexS_Object = MibTableColumn
downLimitPortIndexS = _DownLimitPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 19, 1, 2),
    _DownLimitPortIndexS_Type()
)
downLimitPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    downLimitPortIndexS.setStatus("current")
_OnuPortDownLimitCirS_Type = Integer32
_OnuPortDownLimitCirS_Object = MibTableColumn
onuPortDownLimitCirS = _OnuPortDownLimitCirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 19, 1, 3),
    _OnuPortDownLimitCirS_Type()
)
onuPortDownLimitCirS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortDownLimitCirS.setStatus("current")
_OnuPortDownLimitPirS_Type = Integer32
_OnuPortDownLimitPirS_Object = MibTableColumn
onuPortDownLimitPirS = _OnuPortDownLimitPirS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 19, 1, 4),
    _OnuPortDownLimitPirS_Type()
)
onuPortDownLimitPirS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortDownLimitPirS.setStatus("current")
_PortVlanModePFTable_Object = MibTable
portVlanModePFTable = _PortVlanModePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 20)
)
if mibBuilder.loadTexts:
    portVlanModePFTable.setStatus("current")
_PortVlanModePFEntry_Object = MibTableRow
portVlanModePFEntry = _PortVlanModePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 20, 1)
)
portVlanModePFEntry.setIndexNames(
    (0, "V1600D", "portVlanModeSrvId"),
    (0, "V1600D", "vlanModePortIndexS"),
)
if mibBuilder.loadTexts:
    portVlanModePFEntry.setStatus("current")


class _PortVlanModeSrvId_Type(Integer32):
    """Custom type portVlanModeSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortVlanModeSrvId_Type.__name__ = "Integer32"
_PortVlanModeSrvId_Object = MibTableColumn
portVlanModeSrvId = _PortVlanModeSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 20, 1, 1),
    _PortVlanModeSrvId_Type()
)
portVlanModeSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanModeSrvId.setStatus("current")


class _VlanModePortIndexS_Type(Integer32):
    """Custom type vlanModePortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanModePortIndexS_Type.__name__ = "Integer32"
_VlanModePortIndexS_Object = MibTableColumn
vlanModePortIndexS = _VlanModePortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 20, 1, 2),
    _VlanModePortIndexS_Type()
)
vlanModePortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanModePortIndexS.setStatus("current")


class _OnuCtcPortVlanModeS_Type(Integer32):
    """Custom type onuCtcPortVlanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 1),
          ("tag", 2),
          ("translation", 3),
          ("aggregation", 4),
          ("trunk", 5))
    )


_OnuCtcPortVlanModeS_Type.__name__ = "Integer32"
_OnuCtcPortVlanModeS_Object = MibTableColumn
onuCtcPortVlanModeS = _OnuCtcPortVlanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 20, 1, 3),
    _OnuCtcPortVlanModeS_Type()
)
onuCtcPortVlanModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCtcPortVlanModeS.setStatus("current")
_PortVlanPvidPFTable_Object = MibTable
portVlanPvidPFTable = _PortVlanPvidPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21)
)
if mibBuilder.loadTexts:
    portVlanPvidPFTable.setStatus("current")
_PortVlanPvidPFEntry_Object = MibTableRow
portVlanPvidPFEntry = _PortVlanPvidPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21, 1)
)
portVlanPvidPFEntry.setIndexNames(
    (0, "V1600D", "portVlanPvidSrvId"),
    (0, "V1600D", "vlanPvidPortIndexS"),
)
if mibBuilder.loadTexts:
    portVlanPvidPFEntry.setStatus("current")


class _PortVlanPvidSrvId_Type(Integer32):
    """Custom type portVlanPvidSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortVlanPvidSrvId_Type.__name__ = "Integer32"
_PortVlanPvidSrvId_Object = MibTableColumn
portVlanPvidSrvId = _PortVlanPvidSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21, 1, 1),
    _PortVlanPvidSrvId_Type()
)
portVlanPvidSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanPvidSrvId.setStatus("current")


class _VlanPvidPortIndexS_Type(Integer32):
    """Custom type vlanPvidPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanPvidPortIndexS_Type.__name__ = "Integer32"
_VlanPvidPortIndexS_Object = MibTableColumn
vlanPvidPortIndexS = _VlanPvidPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21, 1, 2),
    _VlanPvidPortIndexS_Type()
)
vlanPvidPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanPvidPortIndexS.setStatus("current")
_VlanPvidS_Type = Integer32
_VlanPvidS_Object = MibTableColumn
vlanPvidS = _VlanPvidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21, 1, 3),
    _VlanPvidS_Type()
)
vlanPvidS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanPvidS.setStatus("current")
_VlanTpidS_Type = OctetString
_VlanTpidS_Object = MibTableColumn
vlanTpidS = _VlanTpidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21, 1, 4),
    _VlanTpidS_Type()
)
vlanTpidS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanTpidS.setStatus("current")


class _VlanPvidPriS_Type(Integer32):
    """Custom type vlanPvidPriS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VlanPvidPriS_Type.__name__ = "Integer32"
_VlanPvidPriS_Object = MibTableColumn
vlanPvidPriS = _VlanPvidPriS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 21, 1, 5),
    _VlanPvidPriS_Type()
)
vlanPvidPriS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanPvidPriS.setStatus("current")
_PortVlanTranslatePFTable_Object = MibTable
portVlanTranslatePFTable = _PortVlanTranslatePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 22)
)
if mibBuilder.loadTexts:
    portVlanTranslatePFTable.setStatus("current")
_PortVlanTranslatePFEntry_Object = MibTableRow
portVlanTranslatePFEntry = _PortVlanTranslatePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 22, 1)
)
portVlanTranslatePFEntry.setIndexNames(
    (0, "V1600D", "portVlanTranslateSrvId"),
    (0, "V1600D", "vlanTransPortIndexS"),
)
if mibBuilder.loadTexts:
    portVlanTranslatePFEntry.setStatus("current")


class _PortVlanTranslateSrvId_Type(Integer32):
    """Custom type portVlanTranslateSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortVlanTranslateSrvId_Type.__name__ = "Integer32"
_PortVlanTranslateSrvId_Object = MibTableColumn
portVlanTranslateSrvId = _PortVlanTranslateSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 22, 1, 1),
    _PortVlanTranslateSrvId_Type()
)
portVlanTranslateSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanTranslateSrvId.setStatus("current")


class _VlanTransPortIndexS_Type(Integer32):
    """Custom type vlanTransPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanTransPortIndexS_Type.__name__ = "Integer32"
_VlanTransPortIndexS_Object = MibTableColumn
vlanTransPortIndexS = _VlanTransPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 22, 1, 2),
    _VlanTransPortIndexS_Type()
)
vlanTransPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanTransPortIndexS.setStatus("current")
_PortVlanTransVlanStrS_Type = OctetString
_PortVlanTransVlanStrS_Object = MibTableColumn
portVlanTransVlanStrS = _PortVlanTransVlanStrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 22, 1, 3),
    _PortVlanTransVlanStrS_Type()
)
portVlanTransVlanStrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanTransVlanStrS.setStatus("current")
_PortVlanTrunkPFTable_Object = MibTable
portVlanTrunkPFTable = _PortVlanTrunkPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 23)
)
if mibBuilder.loadTexts:
    portVlanTrunkPFTable.setStatus("current")
_PortVlanTrunkPFEntry_Object = MibTableRow
portVlanTrunkPFEntry = _PortVlanTrunkPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 23, 1)
)
portVlanTrunkPFEntry.setIndexNames(
    (0, "V1600D", "portVlanTrunkSrvId"),
    (0, "V1600D", "trunkPortIndexS"),
)
if mibBuilder.loadTexts:
    portVlanTrunkPFEntry.setStatus("current")


class _PortVlanTrunkSrvId_Type(Integer32):
    """Custom type portVlanTrunkSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortVlanTrunkSrvId_Type.__name__ = "Integer32"
_PortVlanTrunkSrvId_Object = MibTableColumn
portVlanTrunkSrvId = _PortVlanTrunkSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 23, 1, 1),
    _PortVlanTrunkSrvId_Type()
)
portVlanTrunkSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanTrunkSrvId.setStatus("current")


class _TrunkPortIndexS_Type(Integer32):
    """Custom type trunkPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TrunkPortIndexS_Type.__name__ = "Integer32"
_TrunkPortIndexS_Object = MibTableColumn
trunkPortIndexS = _TrunkPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 23, 1, 2),
    _TrunkPortIndexS_Type()
)
trunkPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trunkPortIndexS.setStatus("current")
_PortVlanTrunkVidStrS_Type = OctetString
_PortVlanTrunkVidStrS_Object = MibTableColumn
portVlanTrunkVidStrS = _PortVlanTrunkVidStrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 23, 1, 3),
    _PortVlanTrunkVidStrS_Type()
)
portVlanTrunkVidStrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanTrunkVidStrS.setStatus("current")
_PortVlanAggPFTable_Object = MibTable
portVlanAggPFTable = _PortVlanAggPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 24)
)
if mibBuilder.loadTexts:
    portVlanAggPFTable.setStatus("current")
_PortVlanAggPFEntry_Object = MibTableRow
portVlanAggPFEntry = _PortVlanAggPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 24, 1)
)
portVlanAggPFEntry.setIndexNames(
    (0, "V1600D", "portVlanAggSrvId"),
    (0, "V1600D", "vlanAggPortIndexS"),
)
if mibBuilder.loadTexts:
    portVlanAggPFEntry.setStatus("current")


class _PortVlanAggSrvId_Type(Integer32):
    """Custom type portVlanAggSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortVlanAggSrvId_Type.__name__ = "Integer32"
_PortVlanAggSrvId_Object = MibTableColumn
portVlanAggSrvId = _PortVlanAggSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 24, 1, 1),
    _PortVlanAggSrvId_Type()
)
portVlanAggSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanAggSrvId.setStatus("current")


class _VlanAggPortIndexS_Type(Integer32):
    """Custom type vlanAggPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VlanAggPortIndexS_Type.__name__ = "Integer32"
_VlanAggPortIndexS_Object = MibTableColumn
vlanAggPortIndexS = _VlanAggPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 24, 1, 2),
    _VlanAggPortIndexS_Type()
)
vlanAggPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanAggPortIndexS.setStatus("current")
_PortVlanAggNewVlanS_Type = Integer32
_PortVlanAggNewVlanS_Object = MibTableColumn
portVlanAggNewVlanS = _PortVlanAggNewVlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 24, 1, 3),
    _PortVlanAggNewVlanS_Type()
)
portVlanAggNewVlanS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanAggNewVlanS.setStatus("current")
_PortVlanAggOldVlanStrS_Type = OctetString
_PortVlanAggOldVlanStrS_Object = MibTableColumn
portVlanAggOldVlanStrS = _PortVlanAggOldVlanStrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 24, 1, 4),
    _PortVlanAggOldVlanStrS_Type()
)
portVlanAggOldVlanStrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portVlanAggOldVlanStrS.setStatus("current")
_PortMcVlanPFTable_Object = MibTable
portMcVlanPFTable = _PortMcVlanPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 25)
)
if mibBuilder.loadTexts:
    portMcVlanPFTable.setStatus("current")
_PortMcVlanPFEntry_Object = MibTableRow
portMcVlanPFEntry = _PortMcVlanPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 25, 1)
)
portMcVlanPFEntry.setIndexNames(
    (0, "V1600D", "portMcVlanSrvId"),
    (0, "V1600D", "mcVlanPortIndexS"),
)
if mibBuilder.loadTexts:
    portMcVlanPFEntry.setStatus("current")


class _PortMcVlanSrvId_Type(Integer32):
    """Custom type portMcVlanSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortMcVlanSrvId_Type.__name__ = "Integer32"
_PortMcVlanSrvId_Object = MibTableColumn
portMcVlanSrvId = _PortMcVlanSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 25, 1, 1),
    _PortMcVlanSrvId_Type()
)
portMcVlanSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMcVlanSrvId.setStatus("current")


class _McVlanPortIndexS_Type(Integer32):
    """Custom type mcVlanPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_McVlanPortIndexS_Type.__name__ = "Integer32"
_McVlanPortIndexS_Object = MibTableColumn
mcVlanPortIndexS = _McVlanPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 25, 1, 2),
    _McVlanPortIndexS_Type()
)
mcVlanPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcVlanPortIndexS.setStatus("current")
_PortMcVlanStrS_Type = OctetString
_PortMcVlanStrS_Object = MibTableColumn
portMcVlanStrS = _PortMcVlanStrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 25, 1, 3),
    _PortMcVlanStrS_Type()
)
portMcVlanStrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMcVlanStrS.setStatus("current")
_OnuClassifyPFTable_Object = MibTable
onuClassifyPFTable = _OnuClassifyPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26)
)
if mibBuilder.loadTexts:
    onuClassifyPFTable.setStatus("current")
_OnuClassifyPFEntry_Object = MibTableRow
onuClassifyPFEntry = _OnuClassifyPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1)
)
onuClassifyPFEntry.setIndexNames(
    (0, "V1600D", "onuClassifySrvId"),
    (0, "V1600D", "cfyPortIndexS"),
    (0, "V1600D", "ctcCfyPrecedenceS"),
)
if mibBuilder.loadTexts:
    onuClassifyPFEntry.setStatus("current")


class _OnuClassifySrvId_Type(Integer32):
    """Custom type onuClassifySrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuClassifySrvId_Type.__name__ = "Integer32"
_OnuClassifySrvId_Object = MibTableColumn
onuClassifySrvId = _OnuClassifySrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 1),
    _OnuClassifySrvId_Type()
)
onuClassifySrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuClassifySrvId.setStatus("current")


class _CfyPortIndexS_Type(Integer32):
    """Custom type cfyPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CfyPortIndexS_Type.__name__ = "Integer32"
_CfyPortIndexS_Object = MibTableColumn
cfyPortIndexS = _CfyPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 2),
    _CfyPortIndexS_Type()
)
cfyPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfyPortIndexS.setStatus("current")


class _CtcCfyPrecedenceS_Type(Integer32):
    """Custom type ctcCfyPrecedenceS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CtcCfyPrecedenceS_Type.__name__ = "Integer32"
_CtcCfyPrecedenceS_Object = MibTableColumn
ctcCfyPrecedenceS = _CtcCfyPrecedenceS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 3),
    _CtcCfyPrecedenceS_Type()
)
ctcCfyPrecedenceS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyPrecedenceS.setStatus("current")


class _CtcCfyPriS_Type(Integer32):
    """Custom type ctcCfyPriS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CtcCfyPriS_Type.__name__ = "Integer32"
_CtcCfyPriS_Object = MibTableColumn
ctcCfyPriS = _CtcCfyPriS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 4),
    _CtcCfyPriS_Type()
)
ctcCfyPriS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyPriS.setStatus("current")


class _CtcCfyDstMacEqualS_Type(Integer32):
    """Custom type ctcCfyDstMacEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyDstMacEqualS_Type.__name__ = "Integer32"
_CtcCfyDstMacEqualS_Object = MibTableColumn
ctcCfyDstMacEqualS = _CtcCfyDstMacEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 5),
    _CtcCfyDstMacEqualS_Type()
)
ctcCfyDstMacEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyDstMacEqualS.setStatus("current")
_CtcCfyDstMacValueS_Type = OctetString
_CtcCfyDstMacValueS_Object = MibTableColumn
ctcCfyDstMacValueS = _CtcCfyDstMacValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 6),
    _CtcCfyDstMacValueS_Type()
)
ctcCfyDstMacValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyDstMacValueS.setStatus("current")


class _CtcCfySrcMacEqualS_Type(Integer32):
    """Custom type ctcCfySrcMacEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfySrcMacEqualS_Type.__name__ = "Integer32"
_CtcCfySrcMacEqualS_Object = MibTableColumn
ctcCfySrcMacEqualS = _CtcCfySrcMacEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 7),
    _CtcCfySrcMacEqualS_Type()
)
ctcCfySrcMacEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfySrcMacEqualS.setStatus("current")
_CtcCfySrcMacValueS_Type = OctetString
_CtcCfySrcMacValueS_Object = MibTableColumn
ctcCfySrcMacValueS = _CtcCfySrcMacValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 8),
    _CtcCfySrcMacValueS_Type()
)
ctcCfySrcMacValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfySrcMacValueS.setStatus("current")


class _CtcCfyVlanEqualS_Type(Integer32):
    """Custom type ctcCfyVlanEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyVlanEqualS_Type.__name__ = "Integer32"
_CtcCfyVlanEqualS_Object = MibTableColumn
ctcCfyVlanEqualS = _CtcCfyVlanEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 9),
    _CtcCfyVlanEqualS_Type()
)
ctcCfyVlanEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyVlanEqualS.setStatus("current")


class _CtcCfyVlanValueS_Type(Integer32):
    """Custom type ctcCfyVlanValueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_CtcCfyVlanValueS_Type.__name__ = "Integer32"
_CtcCfyVlanValueS_Object = MibTableColumn
ctcCfyVlanValueS = _CtcCfyVlanValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 10),
    _CtcCfyVlanValueS_Type()
)
ctcCfyVlanValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyVlanValueS.setStatus("current")


class _CtcCfyCosEqualS_Type(Integer32):
    """Custom type ctcCfyCosEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyCosEqualS_Type.__name__ = "Integer32"
_CtcCfyCosEqualS_Object = MibTableColumn
ctcCfyCosEqualS = _CtcCfyCosEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 11),
    _CtcCfyCosEqualS_Type()
)
ctcCfyCosEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyCosEqualS.setStatus("current")


class _CtcCfyCosValueS_Type(Integer32):
    """Custom type ctcCfyCosValueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_CtcCfyCosValueS_Type.__name__ = "Integer32"
_CtcCfyCosValueS_Object = MibTableColumn
ctcCfyCosValueS = _CtcCfyCosValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 12),
    _CtcCfyCosValueS_Type()
)
ctcCfyCosValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyCosValueS.setStatus("current")


class _CtcCfyEthTypeEqualS_Type(Integer32):
    """Custom type ctcCfyEthTypeEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyEthTypeEqualS_Type.__name__ = "Integer32"
_CtcCfyEthTypeEqualS_Object = MibTableColumn
ctcCfyEthTypeEqualS = _CtcCfyEthTypeEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 13),
    _CtcCfyEthTypeEqualS_Type()
)
ctcCfyEthTypeEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyEthTypeEqualS.setStatus("current")
_CtcCfyEthTypeValueS_Type = OctetString
_CtcCfyEthTypeValueS_Object = MibTableColumn
ctcCfyEthTypeValueS = _CtcCfyEthTypeValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 14),
    _CtcCfyEthTypeValueS_Type()
)
ctcCfyEthTypeValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyEthTypeValueS.setStatus("current")


class _CtcCfySrcIpEqualS_Type(Integer32):
    """Custom type ctcCfySrcIpEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfySrcIpEqualS_Type.__name__ = "Integer32"
_CtcCfySrcIpEqualS_Object = MibTableColumn
ctcCfySrcIpEqualS = _CtcCfySrcIpEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 15),
    _CtcCfySrcIpEqualS_Type()
)
ctcCfySrcIpEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfySrcIpEqualS.setStatus("current")
_CtcCfySrcIpValueS_Type = IpAddress
_CtcCfySrcIpValueS_Object = MibTableColumn
ctcCfySrcIpValueS = _CtcCfySrcIpValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 16),
    _CtcCfySrcIpValueS_Type()
)
ctcCfySrcIpValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfySrcIpValueS.setStatus("current")


class _CtcCfyDestIpEqualS_Type(Integer32):
    """Custom type ctcCfyDestIpEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyDestIpEqualS_Type.__name__ = "Integer32"
_CtcCfyDestIpEqualS_Object = MibTableColumn
ctcCfyDestIpEqualS = _CtcCfyDestIpEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 17),
    _CtcCfyDestIpEqualS_Type()
)
ctcCfyDestIpEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyDestIpEqualS.setStatus("current")
_CtcCfyDestIpValueS_Type = IpAddress
_CtcCfyDestIpValueS_Object = MibTableColumn
ctcCfyDestIpValueS = _CtcCfyDestIpValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 18),
    _CtcCfyDestIpValueS_Type()
)
ctcCfyDestIpValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyDestIpValueS.setStatus("current")


class _CtcCfyProEqualS_Type(Integer32):
    """Custom type ctcCfyProEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyProEqualS_Type.__name__ = "Integer32"
_CtcCfyProEqualS_Object = MibTableColumn
ctcCfyProEqualS = _CtcCfyProEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 19),
    _CtcCfyProEqualS_Type()
)
ctcCfyProEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyProEqualS.setStatus("current")


class _CtcCfyProValueS_Type(Integer32):
    """Custom type ctcCfyProValueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_CtcCfyProValueS_Type.__name__ = "Integer32"
_CtcCfyProValueS_Object = MibTableColumn
ctcCfyProValueS = _CtcCfyProValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 20),
    _CtcCfyProValueS_Type()
)
ctcCfyProValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyProValueS.setStatus("current")


class _CtcCfyTosDscpEuqalS_Type(Integer32):
    """Custom type ctcCfyTosDscpEuqalS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyTosDscpEuqalS_Type.__name__ = "Integer32"
_CtcCfyTosDscpEuqalS_Object = MibTableColumn
ctcCfyTosDscpEuqalS = _CtcCfyTosDscpEuqalS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 21),
    _CtcCfyTosDscpEuqalS_Type()
)
ctcCfyTosDscpEuqalS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyTosDscpEuqalS.setStatus("current")


class _CtcCfyTosDscpValueS_Type(Integer32):
    """Custom type ctcCfyTosDscpValueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_CtcCfyTosDscpValueS_Type.__name__ = "Integer32"
_CtcCfyTosDscpValueS_Object = MibTableColumn
ctcCfyTosDscpValueS = _CtcCfyTosDscpValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 22),
    _CtcCfyTosDscpValueS_Type()
)
ctcCfyTosDscpValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyTosDscpValueS.setStatus("current")


class _CtcCfySrcPortEqualS_Type(Integer32):
    """Custom type ctcCfySrcPortEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfySrcPortEqualS_Type.__name__ = "Integer32"
_CtcCfySrcPortEqualS_Object = MibTableColumn
ctcCfySrcPortEqualS = _CtcCfySrcPortEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 23),
    _CtcCfySrcPortEqualS_Type()
)
ctcCfySrcPortEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfySrcPortEqualS.setStatus("current")


class _CtcCfySrcPortValueS_Type(Integer32):
    """Custom type ctcCfySrcPortValueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CtcCfySrcPortValueS_Type.__name__ = "Integer32"
_CtcCfySrcPortValueS_Object = MibTableColumn
ctcCfySrcPortValueS = _CtcCfySrcPortValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 24),
    _CtcCfySrcPortValueS_Type()
)
ctcCfySrcPortValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfySrcPortValueS.setStatus("current")


class _CtcCfyDestPortEqualS_Type(Integer32):
    """Custom type ctcCfyDestPortEqualS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("equal", 1),
          ("unequal", 2))
    )


_CtcCfyDestPortEqualS_Type.__name__ = "Integer32"
_CtcCfyDestPortEqualS_Object = MibTableColumn
ctcCfyDestPortEqualS = _CtcCfyDestPortEqualS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 25),
    _CtcCfyDestPortEqualS_Type()
)
ctcCfyDestPortEqualS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyDestPortEqualS.setStatus("current")


class _CtcCfyDestPortValueS_Type(Integer32):
    """Custom type ctcCfyDestPortValueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CtcCfyDestPortValueS_Type.__name__ = "Integer32"
_CtcCfyDestPortValueS_Object = MibTableColumn
ctcCfyDestPortValueS = _CtcCfyDestPortValueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 26),
    _CtcCfyDestPortValueS_Type()
)
ctcCfyDestPortValueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ctcCfyDestPortValueS.setStatus("current")


class _OnuCfyQueueS_Type(Integer32):
    """Custom type onuCfyQueueS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_OnuCfyQueueS_Type.__name__ = "Integer32"
_OnuCfyQueueS_Object = MibTableColumn
onuCfyQueueS = _OnuCfyQueueS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 26, 1, 27),
    _OnuCfyQueueS_Type()
)
onuCfyQueueS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuCfyQueueS.setStatus("current")
_OnuMacAgetimePFTable_Object = MibTable
onuMacAgetimePFTable = _OnuMacAgetimePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 27)
)
if mibBuilder.loadTexts:
    onuMacAgetimePFTable.setStatus("current")
_OnuMacAgetimePFEntry_Object = MibTableRow
onuMacAgetimePFEntry = _OnuMacAgetimePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 27, 1)
)
onuMacAgetimePFEntry.setIndexNames(
    (0, "V1600D", "onuMacAgetimeSrvId"),
)
if mibBuilder.loadTexts:
    onuMacAgetimePFEntry.setStatus("current")


class _OnuMacAgetimeSrvId_Type(Integer32):
    """Custom type onuMacAgetimeSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuMacAgetimeSrvId_Type.__name__ = "Integer32"
_OnuMacAgetimeSrvId_Object = MibTableColumn
onuMacAgetimeSrvId = _OnuMacAgetimeSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 27, 1, 1),
    _OnuMacAgetimeSrvId_Type()
)
onuMacAgetimeSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMacAgetimeSrvId.setStatus("current")


class _OnuMacAgetimeS_Type(Integer32):
    """Custom type onuMacAgetimeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuMacAgetimeS_Type.__name__ = "Integer32"
_OnuMacAgetimeS_Object = MibTableColumn
onuMacAgetimeS = _OnuMacAgetimeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 27, 1, 2),
    _OnuMacAgetimeS_Type()
)
onuMacAgetimeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMacAgetimeS.setStatus("current")
_OnuPonProtectPFTable_Object = MibTable
onuPonProtectPFTable = _OnuPonProtectPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 28)
)
if mibBuilder.loadTexts:
    onuPonProtectPFTable.setStatus("current")
_OnuPonProtectPFEntry_Object = MibTableRow
onuPonProtectPFEntry = _OnuPonProtectPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 28, 1)
)
onuPonProtectPFEntry.setIndexNames(
    (0, "V1600D", "onuPonProtectSrvId"),
)
if mibBuilder.loadTexts:
    onuPonProtectPFEntry.setStatus("current")


class _OnuPonProtectSrvId_Type(Integer32):
    """Custom type onuPonProtectSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPonProtectSrvId_Type.__name__ = "Integer32"
_OnuPonProtectSrvId_Object = MibTableColumn
onuPonProtectSrvId = _OnuPonProtectSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 28, 1, 1),
    _OnuPonProtectSrvId_Type()
)
onuPonProtectSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPonProtectSrvId.setStatus("current")


class _OnuPonProtectLosOpS_Type(Integer32):
    """Custom type onuPonProtectLosOpS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPonProtectLosOpS_Type.__name__ = "Integer32"
_OnuPonProtectLosOpS_Object = MibTableColumn
onuPonProtectLosOpS = _OnuPonProtectLosOpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 28, 1, 2),
    _OnuPonProtectLosOpS_Type()
)
onuPonProtectLosOpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPonProtectLosOpS.setStatus("current")


class _OnuPonProtectLosMpcpS_Type(Integer32):
    """Custom type onuPonProtectLosMpcpS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPonProtectLosMpcpS_Type.__name__ = "Integer32"
_OnuPonProtectLosMpcpS_Object = MibTableColumn
onuPonProtectLosMpcpS = _OnuPonProtectLosMpcpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 28, 1, 3),
    _OnuPonProtectLosMpcpS_Type()
)
onuPonProtectLosMpcpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPonProtectLosMpcpS.setStatus("current")
_OnuPowerSavePFTable_Object = MibTable
onuPowerSavePFTable = _OnuPowerSavePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 29)
)
if mibBuilder.loadTexts:
    onuPowerSavePFTable.setStatus("current")
_OnuPowerSavePFEntry_Object = MibTableRow
onuPowerSavePFEntry = _OnuPowerSavePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 29, 1)
)
onuPowerSavePFEntry.setIndexNames(
    (0, "V1600D", "onuPowerSaveSrvId"),
)
if mibBuilder.loadTexts:
    onuPowerSavePFEntry.setStatus("current")


class _OnuPowerSaveSrvId_Type(Integer32):
    """Custom type onuPowerSaveSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPowerSaveSrvId_Type.__name__ = "Integer32"
_OnuPowerSaveSrvId_Object = MibTableColumn
onuPowerSaveSrvId = _OnuPowerSaveSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 29, 1, 1),
    _OnuPowerSaveSrvId_Type()
)
onuPowerSaveSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPowerSaveSrvId.setStatus("current")


class _OnuPSEarlyWakeupS_Type(Integer32):
    """Custom type onuPSEarlyWakeupS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPSEarlyWakeupS_Type.__name__ = "Integer32"
_OnuPSEarlyWakeupS_Object = MibTableColumn
onuPSEarlyWakeupS = _OnuPSEarlyWakeupS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 29, 1, 2),
    _OnuPSEarlyWakeupS_Type()
)
onuPSEarlyWakeupS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPSEarlyWakeupS.setStatus("current")


class _OnuPSSleepDurationMaxS_Type(Integer32):
    """Custom type onuPSSleepDurationMaxS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPSSleepDurationMaxS_Type.__name__ = "Integer32"
_OnuPSSleepDurationMaxS_Object = MibTableColumn
onuPSSleepDurationMaxS = _OnuPSSleepDurationMaxS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 29, 1, 3),
    _OnuPSSleepDurationMaxS_Type()
)
onuPSSleepDurationMaxS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPSSleepDurationMaxS.setStatus("current")
_OnuSleepPFTable_Object = MibTable
onuSleepPFTable = _OnuSleepPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30)
)
if mibBuilder.loadTexts:
    onuSleepPFTable.setStatus("current")
_OnuSleepPFEntry_Object = MibTableRow
onuSleepPFEntry = _OnuSleepPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30, 1)
)
onuSleepPFEntry.setIndexNames(
    (0, "V1600D", "onuSleepSrvId"),
)
if mibBuilder.loadTexts:
    onuSleepPFEntry.setStatus("current")


class _OnuSleepSrvId_Type(Integer32):
    """Custom type onuSleepSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSleepSrvId_Type.__name__ = "Integer32"
_OnuSleepSrvId_Object = MibTableColumn
onuSleepSrvId = _OnuSleepSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30, 1, 1),
    _OnuSleepSrvId_Type()
)
onuSleepSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSleepSrvId.setStatus("current")


class _OnuSleepDurationS_Type(Integer32):
    """Custom type onuSleepDurationS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuSleepDurationS_Type.__name__ = "Integer32"
_OnuSleepDurationS_Object = MibTableColumn
onuSleepDurationS = _OnuSleepDurationS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30, 1, 2),
    _OnuSleepDurationS_Type()
)
onuSleepDurationS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSleepDurationS.setStatus("current")


class _OnuWakeDurationS_Type(Integer32):
    """Custom type onuWakeDurationS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuWakeDurationS_Type.__name__ = "Integer32"
_OnuWakeDurationS_Object = MibTableColumn
onuWakeDurationS = _OnuWakeDurationS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30, 1, 3),
    _OnuWakeDurationS_Type()
)
onuWakeDurationS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuWakeDurationS.setStatus("current")


class _OnuSleepFlagS_Type(Integer32):
    """Custom type onuSleepFlagS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("add", 2),
          ("change", 3))
    )


_OnuSleepFlagS_Type.__name__ = "Integer32"
_OnuSleepFlagS_Object = MibTableColumn
onuSleepFlagS = _OnuSleepFlagS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30, 1, 4),
    _OnuSleepFlagS_Type()
)
onuSleepFlagS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSleepFlagS.setStatus("current")


class _OnuSleepModeS_Type(Integer32):
    """Custom type onuSleepModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("tx_sleep_only", 2),
          ("tx_and_rx_sleep", 3))
    )


_OnuSleepModeS_Type.__name__ = "Integer32"
_OnuSleepModeS_Object = MibTableColumn
onuSleepModeS = _OnuSleepModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 30, 1, 5),
    _OnuSleepModeS_Type()
)
onuSleepModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuSleepModeS.setStatus("current")
_OnuDisableLoopPFTable_Object = MibTable
onuDisableLoopPFTable = _OnuDisableLoopPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 31)
)
if mibBuilder.loadTexts:
    onuDisableLoopPFTable.setStatus("current")
_OnuDisableLoopPFEntry_Object = MibTableRow
onuDisableLoopPFEntry = _OnuDisableLoopPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 31, 1)
)
onuDisableLoopPFEntry.setIndexNames(
    (0, "V1600D", "onuDisableLoopSrvId"),
    (0, "V1600D", "disableLoopPortIndexS"),
)
if mibBuilder.loadTexts:
    onuDisableLoopPFEntry.setStatus("current")


class _OnuDisableLoopSrvId_Type(Integer32):
    """Custom type onuDisableLoopSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuDisableLoopSrvId_Type.__name__ = "Integer32"
_OnuDisableLoopSrvId_Object = MibTableColumn
onuDisableLoopSrvId = _OnuDisableLoopSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 31, 1, 1),
    _OnuDisableLoopSrvId_Type()
)
onuDisableLoopSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuDisableLoopSrvId.setStatus("current")


class _DisableLoopPortIndexS_Type(Integer32):
    """Custom type disableLoopPortIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DisableLoopPortIndexS_Type.__name__ = "Integer32"
_DisableLoopPortIndexS_Object = MibTableColumn
disableLoopPortIndexS = _DisableLoopPortIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 31, 1, 2),
    _DisableLoopPortIndexS_Type()
)
disableLoopPortIndexS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    disableLoopPortIndexS.setStatus("current")


class _OnuDisableLoopS_Type(Integer32):
    """Custom type onuDisableLoopS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDisableLoopS_Type.__name__ = "Integer32"
_OnuDisableLoopS_Object = MibTableColumn
onuDisableLoopS = _OnuDisableLoopS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 31, 1, 3),
    _OnuDisableLoopS_Type()
)
onuDisableLoopS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuDisableLoopS.setStatus("current")
_OnuPortStatPFTable_Object = MibTable
onuPortStatPFTable = _OnuPortStatPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 32)
)
if mibBuilder.loadTexts:
    onuPortStatPFTable.setStatus("current")
_OnuPortStatPFEntry_Object = MibTableRow
onuPortStatPFEntry = _OnuPortStatPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 32, 1)
)
onuPortStatPFEntry.setIndexNames(
    (0, "V1600D", "onuPortStatSrvId"),
    (0, "V1600D", "onuPortStatPortIdS"),
)
if mibBuilder.loadTexts:
    onuPortStatPFEntry.setStatus("current")


class _OnuPortStatSrvId_Type(Integer32):
    """Custom type onuPortStatSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPortStatSrvId_Type.__name__ = "Integer32"
_OnuPortStatSrvId_Object = MibTableColumn
onuPortStatSrvId = _OnuPortStatSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 32, 1, 1),
    _OnuPortStatSrvId_Type()
)
onuPortStatSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatSrvId.setStatus("current")


class _OnuPortStatPortIdS_Type(Integer32):
    """Custom type onuPortStatPortIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_OnuPortStatPortIdS_Type.__name__ = "Integer32"
_OnuPortStatPortIdS_Object = MibTableColumn
onuPortStatPortIdS = _OnuPortStatPortIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 32, 1, 2),
    _OnuPortStatPortIdS_Type()
)
onuPortStatPortIdS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatPortIdS.setStatus("current")


class _OnuPortStatStatusS_Type(Integer32):
    """Custom type onuPortStatStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPortStatStatusS_Type.__name__ = "Integer32"
_OnuPortStatStatusS_Object = MibTableColumn
onuPortStatStatusS = _OnuPortStatStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 32, 1, 3),
    _OnuPortStatStatusS_Type()
)
onuPortStatStatusS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatStatusS.setStatus("current")


class _OnuPortStatCountS_Type(Integer32):
    """Custom type onuPortStatCountS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPortStatCountS_Type.__name__ = "Integer32"
_OnuPortStatCountS_Object = MibTableColumn
onuPortStatCountS = _OnuPortStatCountS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 32, 1, 4),
    _OnuPortStatCountS_Type()
)
onuPortStatCountS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPortStatCountS.setStatus("current")
_OnuPortStatClearPFTable_Object = MibTable
onuPortStatClearPFTable = _OnuPortStatClearPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 33)
)
if mibBuilder.loadTexts:
    onuPortStatClearPFTable.setStatus("current")
_OnuPortStatClearPFEntry_Object = MibTableRow
onuPortStatClearPFEntry = _OnuPortStatClearPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 33, 1)
)
onuPortStatClearPFEntry.setIndexNames(
    (0, "V1600D", "onuPortStatClearSrvId"),
    (0, "V1600D", "onuPortStatClearPortIdS"),
)
if mibBuilder.loadTexts:
    onuPortStatClearPFEntry.setStatus("current")


class _OnuPortStatClearSrvId_Type(Integer32):
    """Custom type onuPortStatClearSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPortStatClearSrvId_Type.__name__ = "Integer32"
_OnuPortStatClearSrvId_Object = MibTableColumn
onuPortStatClearSrvId = _OnuPortStatClearSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 33, 1, 1),
    _OnuPortStatClearSrvId_Type()
)
onuPortStatClearSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortStatClearSrvId.setStatus("current")


class _OnuPortStatClearPortIdS_Type(Integer32):
    """Custom type onuPortStatClearPortIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_OnuPortStatClearPortIdS_Type.__name__ = "Integer32"
_OnuPortStatClearPortIdS_Object = MibTableColumn
onuPortStatClearPortIdS = _OnuPortStatClearPortIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 33, 1, 2),
    _OnuPortStatClearPortIdS_Type()
)
onuPortStatClearPortIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPortStatClearPortIdS.setStatus("current")
_OnuIgmpAdminPFTable_Object = MibTable
onuIgmpAdminPFTable = _OnuIgmpAdminPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 34)
)
if mibBuilder.loadTexts:
    onuIgmpAdminPFTable.setStatus("current")
_OnuIgmpAdminPFEntry_Object = MibTableRow
onuIgmpAdminPFEntry = _OnuIgmpAdminPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 34, 1)
)
onuIgmpAdminPFEntry.setIndexNames(
    (0, "V1600D", "onuIgmpAdminSrvID"),
)
if mibBuilder.loadTexts:
    onuIgmpAdminPFEntry.setStatus("current")


class _OnuIgmpAdminSrvID_Type(Integer32):
    """Custom type onuIgmpAdminSrvID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuIgmpAdminSrvID_Type.__name__ = "Integer32"
_OnuIgmpAdminSrvID_Object = MibTableColumn
onuIgmpAdminSrvID = _OnuIgmpAdminSrvID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 34, 1, 1),
    _OnuIgmpAdminSrvID_Type()
)
onuIgmpAdminSrvID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuIgmpAdminSrvID.setStatus("current")


class _OnuIgmpAdminEnableS_Type(Integer32):
    """Custom type onuIgmpAdminEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuIgmpAdminEnableS_Type.__name__ = "Integer32"
_OnuIgmpAdminEnableS_Object = MibTableColumn
onuIgmpAdminEnableS = _OnuIgmpAdminEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 34, 1, 2),
    _OnuIgmpAdminEnableS_Type()
)
onuIgmpAdminEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuIgmpAdminEnableS.setStatus("current")
_OnuCatvStatusPFTable_Object = MibTable
onuCatvStatusPFTable = _OnuCatvStatusPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 35)
)
if mibBuilder.loadTexts:
    onuCatvStatusPFTable.setStatus("current")
_OnuCatvStatusPFEntry_Object = MibTableRow
onuCatvStatusPFEntry = _OnuCatvStatusPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 35, 1)
)
onuCatvStatusPFEntry.setIndexNames(
    (0, "V1600D", "onuCatvSatusSrvId"),
)
if mibBuilder.loadTexts:
    onuCatvStatusPFEntry.setStatus("current")


class _OnuCatvSatusSrvId_Type(Integer32):
    """Custom type onuCatvSatusSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuCatvSatusSrvId_Type.__name__ = "Integer32"
_OnuCatvSatusSrvId_Object = MibTableColumn
onuCatvSatusSrvId = _OnuCatvSatusSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 35, 1, 1),
    _OnuCatvSatusSrvId_Type()
)
onuCatvSatusSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCatvSatusSrvId.setStatus("current")


class _OnuCatvStatusS_Type(Integer32):
    """Custom type onuCatvStatusS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuCatvStatusS_Type.__name__ = "Integer32"
_OnuCatvStatusS_Object = MibTableColumn
onuCatvStatusS = _OnuCatvStatusS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 35, 1, 2),
    _OnuCatvStatusS_Type()
)
onuCatvStatusS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCatvStatusS.setStatus("current")
_OnuCtcoamSkipPFTable_Object = MibTable
onuCtcoamSkipPFTable = _OnuCtcoamSkipPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 36)
)
if mibBuilder.loadTexts:
    onuCtcoamSkipPFTable.setStatus("current")
_OnuCtcoamSkipPFEntry_Object = MibTableRow
onuCtcoamSkipPFEntry = _OnuCtcoamSkipPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 36, 1)
)
onuCtcoamSkipPFEntry.setIndexNames(
    (0, "V1600D", "onuCtcOamSkipSrvId"),
)
if mibBuilder.loadTexts:
    onuCtcoamSkipPFEntry.setStatus("current")


class _OnuCtcOamSkipSrvId_Type(Integer32):
    """Custom type onuCtcOamSkipSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuCtcOamSkipSrvId_Type.__name__ = "Integer32"
_OnuCtcOamSkipSrvId_Object = MibTableColumn
onuCtcOamSkipSrvId = _OnuCtcOamSkipSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 36, 1, 1),
    _OnuCtcOamSkipSrvId_Type()
)
onuCtcOamSkipSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCtcOamSkipSrvId.setStatus("current")


class _OnuCtcoamSkipS_Type(Integer32):
    """Custom type onuCtcoamSkipS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuCtcoamSkipS_Type.__name__ = "Integer32"
_OnuCtcoamSkipS_Object = MibTableColumn
onuCtcoamSkipS = _OnuCtcoamSkipS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 36, 1, 2),
    _OnuCtcoamSkipS_Type()
)
onuCtcoamSkipS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuCtcoamSkipS.setStatus("current")
_OnuWifiSwichPFTable_Object = MibTable
onuWifiSwichPFTable = _OnuWifiSwichPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37)
)
if mibBuilder.loadTexts:
    onuWifiSwichPFTable.setStatus("current")
_OnuWifiSwichPFEntry_Object = MibTableRow
onuWifiSwichPFEntry = _OnuWifiSwichPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1)
)
onuWifiSwichPFEntry.setIndexNames(
    (0, "V1600D", "onuWifiSwichSrvId"),
)
if mibBuilder.loadTexts:
    onuWifiSwichPFEntry.setStatus("current")


class _OnuWifiSwichSrvId_Type(Integer32):
    """Custom type onuWifiSwichSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuWifiSwichSrvId_Type.__name__ = "Integer32"
_OnuWifiSwichSrvId_Object = MibTableColumn
onuWifiSwichSrvId = _OnuWifiSwichSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 1),
    _OnuWifiSwichSrvId_Type()
)
onuWifiSwichSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichSrvId.setStatus("current")


class _OnuWifiSwichActive_Type(Integer32):
    """Custom type onuWifiSwichActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deactive", 0),
          ("active", 1))
    )


_OnuWifiSwichActive_Type.__name__ = "Integer32"
_OnuWifiSwichActive_Object = MibTableColumn
onuWifiSwichActive = _OnuWifiSwichActive_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 2),
    _OnuWifiSwichActive_Type()
)
onuWifiSwichActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichActive.setStatus("current")


class _OnuWifiSwichAPModuleS_Type(Integer32):
    """Custom type onuWifiSwichAPModuleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuWifiSwichAPModuleS_Type.__name__ = "Integer32"
_OnuWifiSwichAPModuleS_Object = MibTableColumn
onuWifiSwichAPModuleS = _OnuWifiSwichAPModuleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 3),
    _OnuWifiSwichAPModuleS_Type()
)
onuWifiSwichAPModuleS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichAPModuleS.setStatus("current")


class _OnuWifiSwichCountry_Type(Integer32):
    """Custom type onuWifiSwichCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_OnuWifiSwichCountry_Type.__name__ = "Integer32"
_OnuWifiSwichCountry_Object = MibTableColumn
onuWifiSwichCountry = _OnuWifiSwichCountry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 4),
    _OnuWifiSwichCountry_Type()
)
onuWifiSwichCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichCountry.setStatus("current")


class _OnuWifiSwichChannelS_Type(Integer32):
    """Custom type onuWifiSwichChannelS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_OnuWifiSwichChannelS_Type.__name__ = "Integer32"
_OnuWifiSwichChannelS_Object = MibTableColumn
onuWifiSwichChannelS = _OnuWifiSwichChannelS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 5),
    _OnuWifiSwichChannelS_Type()
)
onuWifiSwichChannelS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichChannelS.setStatus("current")


class _OnuWifiSwichStandardS_Type(Integer32):
    """Custom type onuWifiSwichStandardS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4))
    )


_OnuWifiSwichStandardS_Type.__name__ = "Integer32"
_OnuWifiSwichStandardS_Object = MibTableColumn
onuWifiSwichStandardS = _OnuWifiSwichStandardS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 6),
    _OnuWifiSwichStandardS_Type()
)
onuWifiSwichStandardS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichStandardS.setStatus("current")


class _OnuWifiSwitchPower_Type(Integer32):
    """Custom type onuWifiSwitchPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_OnuWifiSwitchPower_Type.__name__ = "Integer32"
_OnuWifiSwitchPower_Object = MibTableColumn
onuWifiSwitchPower = _OnuWifiSwitchPower_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 7),
    _OnuWifiSwitchPower_Type()
)
onuWifiSwitchPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchPower.setStatus("current")


class _OnuWifiSwichChannelWidth_Type(Integer32):
    """Custom type onuWifiSwichChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s20_40", 3))
    )


_OnuWifiSwichChannelWidth_Type.__name__ = "Integer32"
_OnuWifiSwichChannelWidth_Object = MibTableColumn
onuWifiSwichChannelWidth = _OnuWifiSwichChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 37, 1, 8),
    _OnuWifiSwichChannelWidth_Type()
)
onuWifiSwichChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwichChannelWidth.setStatus("current")
_OnuWifiSsidPFTable_Object = MibTable
onuWifiSsidPFTable = _OnuWifiSsidPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38)
)
if mibBuilder.loadTexts:
    onuWifiSsidPFTable.setStatus("current")
_OnuWifiSsidPFEntry_Object = MibTableRow
onuWifiSsidPFEntry = _OnuWifiSsidPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1)
)
onuWifiSsidPFEntry.setIndexNames(
    (0, "V1600D", "onuWifiSsidSrvId"),
    (0, "V1600D", "onuWifiSsidIdS"),
)
if mibBuilder.loadTexts:
    onuWifiSsidPFEntry.setStatus("current")


class _OnuWifiSsidSrvId_Type(Integer32):
    """Custom type onuWifiSsidSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuWifiSsidSrvId_Type.__name__ = "Integer32"
_OnuWifiSsidSrvId_Object = MibTableColumn
onuWifiSsidSrvId = _OnuWifiSsidSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 1),
    _OnuWifiSsidSrvId_Type()
)
onuWifiSsidSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidSrvId.setStatus("current")


class _OnuWifiSsidIdS_Type(Integer32):
    """Custom type onuWifiSsidIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_OnuWifiSsidIdS_Type.__name__ = "Integer32"
_OnuWifiSsidIdS_Object = MibTableColumn
onuWifiSsidIdS = _OnuWifiSsidIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 2),
    _OnuWifiSsidIdS_Type()
)
onuWifiSsidIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidIdS.setStatus("current")
_OnuWifiSsidNameS_Type = OctetString
_OnuWifiSsidNameS_Object = MibTableColumn
onuWifiSsidNameS = _OnuWifiSsidNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 3),
    _OnuWifiSsidNameS_Type()
)
onuWifiSsidNameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidNameS.setStatus("current")


class _OnuWifiSsidEnableS_Type(Integer32):
    """Custom type onuWifiSsidEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuWifiSsidEnableS_Type.__name__ = "Integer32"
_OnuWifiSsidEnableS_Object = MibTableColumn
onuWifiSsidEnableS = _OnuWifiSsidEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 4),
    _OnuWifiSsidEnableS_Type()
)
onuWifiSsidEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidEnableS.setStatus("current")


class _OnuWifiSsidHideS_Type(Integer32):
    """Custom type onuWifiSsidHideS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuWifiSsidHideS_Type.__name__ = "Integer32"
_OnuWifiSsidHideS_Object = MibTableColumn
onuWifiSsidHideS = _OnuWifiSsidHideS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 5),
    _OnuWifiSsidHideS_Type()
)
onuWifiSsidHideS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidHideS.setStatus("current")


class _OnuWifiSsidAuthMode_Type(Integer32):
    """Custom type onuWifiSsidAuthMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("open", 1),
          ("shared", 2),
          ("wepauto", 3),
          ("wpapsk", 4),
          ("wpa", 5),
          ("wpa2psk", 6),
          ("wpa2", 7),
          ("wpa_wpa2", 8),
          ("wpapsk_wpa2psk", 9))
    )


_OnuWifiSsidAuthMode_Type.__name__ = "Integer32"
_OnuWifiSsidAuthMode_Object = MibTableColumn
onuWifiSsidAuthMode = _OnuWifiSsidAuthMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 6),
    _OnuWifiSsidAuthMode_Type()
)
onuWifiSsidAuthMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidAuthMode.setStatus("current")


class _OnuWifiSsidEncryTpeS_Type(Integer32):
    """Custom type onuWifiSsidEncryTpeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("wep", 2),
          ("tkip", 3),
          ("aes", 4),
          ("tkipaes", 5))
    )


_OnuWifiSsidEncryTpeS_Type.__name__ = "Integer32"
_OnuWifiSsidEncryTpeS_Object = MibTableColumn
onuWifiSsidEncryTpeS = _OnuWifiSsidEncryTpeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 7),
    _OnuWifiSsidEncryTpeS_Type()
)
onuWifiSsidEncryTpeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSsidEncryTpeS.setStatus("current")
_SsidPreshareKeyS_Type = OctetString
_SsidPreshareKeyS_Object = MibTableColumn
ssidPreshareKeyS = _SsidPreshareKeyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 8),
    _SsidPreshareKeyS_Type()
)
ssidPreshareKeyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidPreshareKeyS.setStatus("current")


class _SsidWpaRekeyIntervalS_Type(Integer32):
    """Custom type ssidWpaRekeyIntervalS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4194303),
    )


_SsidWpaRekeyIntervalS_Type.__name__ = "Integer32"
_SsidWpaRekeyIntervalS_Object = MibTableColumn
ssidWpaRekeyIntervalS = _SsidWpaRekeyIntervalS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 9),
    _SsidWpaRekeyIntervalS_Type()
)
ssidWpaRekeyIntervalS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWpaRekeyIntervalS.setStatus("current")


class _SsidRadiusServIpTypeS_Type(Integer32):
    """Custom type ssidRadiusServIpTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("ipv4", 1),
          ("ipv6", 2),
          ("ipv4z", 3),
          ("ipv6z", 4),
          ("dns", 16))
    )


_SsidRadiusServIpTypeS_Type.__name__ = "Integer32"
_SsidRadiusServIpTypeS_Object = MibTableColumn
ssidRadiusServIpTypeS = _SsidRadiusServIpTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 10),
    _SsidRadiusServIpTypeS_Type()
)
ssidRadiusServIpTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusServIpTypeS.setStatus("current")
_SsidRadiusServIp_Type = OctetString
_SsidRadiusServIp_Object = MibTableColumn
ssidRadiusServIp = _SsidRadiusServIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 11),
    _SsidRadiusServIp_Type()
)
ssidRadiusServIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusServIp.setStatus("current")


class _SsidRadiusServIpPrefixLenS_Type(Integer32):
    """Custom type ssidRadiusServIpPrefixLenS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SsidRadiusServIpPrefixLenS_Type.__name__ = "Integer32"
_SsidRadiusServIpPrefixLenS_Object = MibTableColumn
ssidRadiusServIpPrefixLenS = _SsidRadiusServIpPrefixLenS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 12),
    _SsidRadiusServIpPrefixLenS_Type()
)
ssidRadiusServIpPrefixLenS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusServIpPrefixLenS.setStatus("current")


class _SsidRadiusPortS_Type(Integer32):
    """Custom type ssidRadiusPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SsidRadiusPortS_Type.__name__ = "Integer32"
_SsidRadiusPortS_Object = MibTableColumn
ssidRadiusPortS = _SsidRadiusPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 13),
    _SsidRadiusPortS_Type()
)
ssidRadiusPortS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusPortS.setStatus("current")


class _SsidRadiusKeyS_Type(OctetString):
    """Custom type ssidRadiusKeyS based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SsidRadiusKeyS_Type.__name__ = "OctetString"
_SsidRadiusKeyS_Object = MibTableColumn
ssidRadiusKeyS = _SsidRadiusKeyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 14),
    _SsidRadiusKeyS_Type()
)
ssidRadiusKeyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidRadiusKeyS.setStatus("current")


class _SsidWepEncryptionLevelS_Type(Integer32):
    """Custom type ssidWepEncryptionLevelS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("s64bit", 1),
          ("s128bit", 2))
    )


_SsidWepEncryptionLevelS_Type.__name__ = "Integer32"
_SsidWepEncryptionLevelS_Object = MibTableColumn
ssidWepEncryptionLevelS = _SsidWepEncryptionLevelS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 15),
    _SsidWepEncryptionLevelS_Type()
)
ssidWepEncryptionLevelS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepEncryptionLevelS.setStatus("current")


class _SsidWepKeyIndexS_Type(Integer32):
    """Custom type ssidWepKeyIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_SsidWepKeyIndexS_Type.__name__ = "Integer32"
_SsidWepKeyIndexS_Object = MibTableColumn
ssidWepKeyIndexS = _SsidWepKeyIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 16),
    _SsidWepKeyIndexS_Type()
)
ssidWepKeyIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKeyIndexS.setStatus("current")
_SsidWepKey1S_Type = OctetString
_SsidWepKey1S_Object = MibTableColumn
ssidWepKey1S = _SsidWepKey1S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 17),
    _SsidWepKey1S_Type()
)
ssidWepKey1S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey1S.setStatus("current")
_SsidWepKey2S_Type = OctetString
_SsidWepKey2S_Object = MibTableColumn
ssidWepKey2S = _SsidWepKey2S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 18),
    _SsidWepKey2S_Type()
)
ssidWepKey2S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey2S.setStatus("current")
_SsidWepKey3S_Type = OctetString
_SsidWepKey3S_Object = MibTableColumn
ssidWepKey3S = _SsidWepKey3S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 19),
    _SsidWepKey3S_Type()
)
ssidWepKey3S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey3S.setStatus("current")
_SsidWepKey4S_Type = OctetString
_SsidWepKey4S_Object = MibTableColumn
ssidWepKey4S = _SsidWepKey4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 38, 1, 20),
    _SsidWepKey4S_Type()
)
ssidWepKey4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ssidWepKey4S.setStatus("current")
_OnuWanConnPFTable_Object = MibTable
onuWanConnPFTable = _OnuWanConnPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39)
)
if mibBuilder.loadTexts:
    onuWanConnPFTable.setStatus("current")
_OnuWanConnPFEntry_Object = MibTableRow
onuWanConnPFEntry = _OnuWanConnPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1)
)
onuWanConnPFEntry.setIndexNames(
    (0, "V1600D", "wanConnSrvId"),
    (0, "V1600D", "wanConnIndexS"),
)
if mibBuilder.loadTexts:
    onuWanConnPFEntry.setStatus("current")


class _WanConnSrvId_Type(Integer32):
    """Custom type wanConnSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WanConnSrvId_Type.__name__ = "Integer32"
_WanConnSrvId_Object = MibTableColumn
wanConnSrvId = _WanConnSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 1),
    _WanConnSrvId_Type()
)
wanConnSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnSrvId.setStatus("current")


class _WanConnIndexS_Type(Integer32):
    """Custom type wanConnIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_WanConnIndexS_Type.__name__ = "Integer32"
_WanConnIndexS_Object = MibTableColumn
wanConnIndexS = _WanConnIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 2),
    _WanConnIndexS_Type()
)
wanConnIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnIndexS.setStatus("current")


class _WanConnBindLanS_Type(Integer32):
    """Custom type wanConnBindLanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WanConnBindLanS_Type.__name__ = "Integer32"
_WanConnBindLanS_Object = MibTableColumn
wanConnBindLanS = _WanConnBindLanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 3),
    _WanConnBindLanS_Type()
)
wanConnBindLanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnBindLanS.setStatus("current")


class _WanConnBindSsidS_Type(Integer32):
    """Custom type wanConnBindSsidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WanConnBindSsidS_Type.__name__ = "Integer32"
_WanConnBindSsidS_Object = MibTableColumn
wanConnBindSsidS = _WanConnBindSsidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 4),
    _WanConnBindSsidS_Type()
)
wanConnBindSsidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnBindSsidS.setStatus("current")


class _WanModeS_Type(Integer32):
    """Custom type wanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("other", 100))
    )


_WanModeS_Type.__name__ = "Integer32"
_WanModeS_Object = MibTableColumn
wanModeS = _WanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 5),
    _WanModeS_Type()
)
wanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanModeS.setStatus("current")


class _WanConnTypeS_Type(Integer32):
    """Custom type wanConnTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_WanConnTypeS_Type.__name__ = "Integer32"
_WanConnTypeS_Object = MibTableColumn
wanConnTypeS = _WanConnTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 6),
    _WanConnTypeS_Type()
)
wanConnTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnTypeS.setStatus("current")


class _WanConnVlanIdS_Type(Integer32):
    """Custom type wanConnVlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_WanConnVlanIdS_Type.__name__ = "Integer32"
_WanConnVlanIdS_Object = MibTableColumn
wanConnVlanIdS = _WanConnVlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 7),
    _WanConnVlanIdS_Type()
)
wanConnVlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnVlanIdS.setStatus("current")


class _WanConnVlanCosS_Type(Integer32):
    """Custom type wanConnVlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WanConnVlanCosS_Type.__name__ = "Integer32"
_WanConnVlanCosS_Object = MibTableColumn
wanConnVlanCosS = _WanConnVlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 8),
    _WanConnVlanCosS_Type()
)
wanConnVlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnVlanCosS.setStatus("current")


class _WanConnNatEnableS_Type(Integer32):
    """Custom type wanConnNatEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WanConnNatEnableS_Type.__name__ = "Integer32"
_WanConnNatEnableS_Object = MibTableColumn
wanConnNatEnableS = _WanConnNatEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 9),
    _WanConnNatEnableS_Type()
)
wanConnNatEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnNatEnableS.setStatus("current")


class _WanConnModeS_Type(Integer32):
    """Custom type wanConnModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_WanConnModeS_Type.__name__ = "Integer32"
_WanConnModeS_Object = MibTableColumn
wanConnModeS = _WanConnModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 10),
    _WanConnModeS_Type()
)
wanConnModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnModeS.setStatus("current")
_WanConnIpAddressS_Type = IpAddress
_WanConnIpAddressS_Object = MibTableColumn
wanConnIpAddressS = _WanConnIpAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 11),
    _WanConnIpAddressS_Type()
)
wanConnIpAddressS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnIpAddressS.setStatus("current")
_WanConnIpMaskS_Type = IpAddress
_WanConnIpMaskS_Object = MibTableColumn
wanConnIpMaskS = _WanConnIpMaskS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 12),
    _WanConnIpMaskS_Type()
)
wanConnIpMaskS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnIpMaskS.setStatus("current")
_WanConnGatewayS_Type = IpAddress
_WanConnGatewayS_Object = MibTableColumn
wanConnGatewayS = _WanConnGatewayS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 13),
    _WanConnGatewayS_Type()
)
wanConnGatewayS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnGatewayS.setStatus("current")
_WanConnMasterDns_Type = IpAddress
_WanConnMasterDns_Object = MibTableColumn
wanConnMasterDns = _WanConnMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 14),
    _WanConnMasterDns_Type()
)
wanConnMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnMasterDns.setStatus("current")
_WanConnSlaveDns_Type = IpAddress
_WanConnSlaveDns_Object = MibTableColumn
wanConnSlaveDns = _WanConnSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 15),
    _WanConnSlaveDns_Type()
)
wanConnSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnSlaveDns.setStatus("current")


class _WanConnPppoeProxyS_Type(Integer32):
    """Custom type wanConnPppoeProxyS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WanConnPppoeProxyS_Type.__name__ = "Integer32"
_WanConnPppoeProxyS_Object = MibTableColumn
wanConnPppoeProxyS = _WanConnPppoeProxyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 16),
    _WanConnPppoeProxyS_Type()
)
wanConnPppoeProxyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnPppoeProxyS.setStatus("current")
_WanConnPppoeUsernameS_Type = OctetString
_WanConnPppoeUsernameS_Object = MibTableColumn
wanConnPppoeUsernameS = _WanConnPppoeUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 17),
    _WanConnPppoeUsernameS_Type()
)
wanConnPppoeUsernameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnPppoeUsernameS.setStatus("current")
_WanConnPppoePasswordS_Type = OctetString
_WanConnPppoePasswordS_Object = MibTableColumn
wanConnPppoePasswordS = _WanConnPppoePasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 18),
    _WanConnPppoePasswordS_Type()
)
wanConnPppoePasswordS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnPppoePasswordS.setStatus("current")
_WanConnPppoeSerName_Type = OctetString
_WanConnPppoeSerName_Object = MibTableColumn
wanConnPppoeSerName = _WanConnPppoeSerName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 19),
    _WanConnPppoeSerName_Type()
)
wanConnPppoeSerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnPppoeSerName.setStatus("current")


class _WanConnPppoeModeS_Type(Integer32):
    """Custom type wanConnPppoeModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("connectWhenPayload", 1))
    )


_WanConnPppoeModeS_Type.__name__ = "Integer32"
_WanConnPppoeModeS_Object = MibTableColumn
wanConnPppoeModeS = _WanConnPppoeModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 20),
    _WanConnPppoeModeS_Type()
)
wanConnPppoeModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnPppoeModeS.setStatus("current")


class _WanConnQosEnableS_Type(Integer32):
    """Custom type wanConnQosEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WanConnQosEnableS_Type.__name__ = "Integer32"
_WanConnQosEnableS_Object = MibTableColumn
wanConnQosEnableS = _WanConnQosEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 21),
    _WanConnQosEnableS_Type()
)
wanConnQosEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnQosEnableS.setStatus("current")


class _WanConnVlanModeS_Type(Integer32):
    """Custom type wanConnVlanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_WanConnVlanModeS_Type.__name__ = "Integer32"
_WanConnVlanModeS_Object = MibTableColumn
wanConnVlanModeS = _WanConnVlanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 22),
    _WanConnVlanModeS_Type()
)
wanConnVlanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnVlanModeS.setStatus("current")


class _WanConnTranslationEnableS_Type(Integer32):
    """Custom type wanConnTranslationEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WanConnTranslationEnableS_Type.__name__ = "Integer32"
_WanConnTranslationEnableS_Object = MibTableColumn
wanConnTranslationEnableS = _WanConnTranslationEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 23),
    _WanConnTranslationEnableS_Type()
)
wanConnTranslationEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnTranslationEnableS.setStatus("current")


class _WanConnTranslationVlanS_Type(Integer32):
    """Custom type wanConnTranslationVlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_WanConnTranslationVlanS_Type.__name__ = "Integer32"
_WanConnTranslationVlanS_Object = MibTableColumn
wanConnTranslationVlanS = _WanConnTranslationVlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 24),
    _WanConnTranslationVlanS_Type()
)
wanConnTranslationVlanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnTranslationVlanS.setStatus("current")


class _WanConnTranslationCosS_Type(Integer32):
    """Custom type wanConnTranslationCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WanConnTranslationCosS_Type.__name__ = "Integer32"
_WanConnTranslationCosS_Object = MibTableColumn
wanConnTranslationCosS = _WanConnTranslationCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 25),
    _WanConnTranslationCosS_Type()
)
wanConnTranslationCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnTranslationCosS.setStatus("current")


class _WanConnQinqEnableS_Type(Integer32):
    """Custom type wanConnQinqEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_WanConnQinqEnableS_Type.__name__ = "Integer32"
_WanConnQinqEnableS_Object = MibTableColumn
wanConnQinqEnableS = _WanConnQinqEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 26),
    _WanConnQinqEnableS_Type()
)
wanConnQinqEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnQinqEnableS.setStatus("current")


class _WanConnQinqTpidS_Type(Integer32):
    """Custom type wanConnQinqTpidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_WanConnQinqTpidS_Type.__name__ = "Integer32"
_WanConnQinqTpidS_Object = MibTableColumn
wanConnQinqTpidS = _WanConnQinqTpidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 27),
    _WanConnQinqTpidS_Type()
)
wanConnQinqTpidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnQinqTpidS.setStatus("current")


class _WanConnSvlanIdS_Type(Integer32):
    """Custom type wanConnSvlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_WanConnSvlanIdS_Type.__name__ = "Integer32"
_WanConnSvlanIdS_Object = MibTableColumn
wanConnSvlanIdS = _WanConnSvlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 28),
    _WanConnSvlanIdS_Type()
)
wanConnSvlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnSvlanIdS.setStatus("current")


class _WanConnSvlanCosS_Type(Integer32):
    """Custom type wanConnSvlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WanConnSvlanCosS_Type.__name__ = "Integer32"
_WanConnSvlanCosS_Object = MibTableColumn
wanConnSvlanCosS = _WanConnSvlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 29),
    _WanConnSvlanCosS_Type()
)
wanConnSvlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnSvlanCosS.setStatus("current")


class _WanConnRouteMtuS_Type(Integer32):
    """Custom type wanConnRouteMtuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(576, 1500),
    )


_WanConnRouteMtuS_Type.__name__ = "Integer32"
_WanConnRouteMtuS_Object = MibTableColumn
wanConnRouteMtuS = _WanConnRouteMtuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 39, 1, 30),
    _WanConnRouteMtuS_Type()
)
wanConnRouteMtuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wanConnRouteMtuS.setStatus("current")
_PortMacLimitPFTable_Object = MibTable
portMacLimitPFTable = _PortMacLimitPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 40)
)
if mibBuilder.loadTexts:
    portMacLimitPFTable.setStatus("current")
_PortMacLimitPFEntry_Object = MibTableRow
portMacLimitPFEntry = _PortMacLimitPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 40, 1)
)
portMacLimitPFEntry.setIndexNames(
    (0, "V1600D", "portMacLimitSrvId"),
    (0, "V1600D", "portMacLimitEthNoS"),
)
if mibBuilder.loadTexts:
    portMacLimitPFEntry.setStatus("current")


class _PortMacLimitSrvId_Type(Integer32):
    """Custom type portMacLimitSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortMacLimitSrvId_Type.__name__ = "Integer32"
_PortMacLimitSrvId_Object = MibTableColumn
portMacLimitSrvId = _PortMacLimitSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 40, 1, 1),
    _PortMacLimitSrvId_Type()
)
portMacLimitSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portMacLimitSrvId.setStatus("current")


class _PortMacLimitEthNoS_Type(Integer32):
    """Custom type portMacLimitEthNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortMacLimitEthNoS_Type.__name__ = "Integer32"
_PortMacLimitEthNoS_Object = MibTableColumn
portMacLimitEthNoS = _PortMacLimitEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 40, 1, 2),
    _PortMacLimitEthNoS_Type()
)
portMacLimitEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portMacLimitEthNoS.setStatus("current")


class _PortMacLimitS_Type(Integer32):
    """Custom type portMacLimitS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortMacLimitS_Type.__name__ = "Integer32"
_PortMacLimitS_Object = MibTableColumn
portMacLimitS = _PortMacLimitS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 40, 1, 3),
    _PortMacLimitS_Type()
)
portMacLimitS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portMacLimitS.setStatus("current")
_PortPkgSuppressPFTable_Object = MibTable
portPkgSuppressPFTable = _PortPkgSuppressPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41)
)
if mibBuilder.loadTexts:
    portPkgSuppressPFTable.setStatus("current")
_PortPkgSuppressPFEntry_Object = MibTableRow
portPkgSuppressPFEntry = _PortPkgSuppressPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41, 1)
)
portPkgSuppressPFEntry.setIndexNames(
    (0, "V1600D", "portPkgSuppressSrvId"),
    (0, "V1600D", "portPkgSuppressEthNoS"),
)
if mibBuilder.loadTexts:
    portPkgSuppressPFEntry.setStatus("current")


class _PortPkgSuppressSrvId_Type(Integer32):
    """Custom type portPkgSuppressSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortPkgSuppressSrvId_Type.__name__ = "Integer32"
_PortPkgSuppressSrvId_Object = MibTableColumn
portPkgSuppressSrvId = _PortPkgSuppressSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41, 1, 1),
    _PortPkgSuppressSrvId_Type()
)
portPkgSuppressSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPkgSuppressSrvId.setStatus("current")


class _PortPkgSuppressEthNoS_Type(Integer32):
    """Custom type portPkgSuppressEthNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PortPkgSuppressEthNoS_Type.__name__ = "Integer32"
_PortPkgSuppressEthNoS_Object = MibTableColumn
portPkgSuppressEthNoS = _PortPkgSuppressEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41, 1, 2),
    _PortPkgSuppressEthNoS_Type()
)
portPkgSuppressEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPkgSuppressEthNoS.setStatus("current")


class _PortPkgSuppressBroadcastS_Type(Integer32):
    """Custom type portPkgSuppressBroadcastS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PortPkgSuppressBroadcastS_Type.__name__ = "Integer32"
_PortPkgSuppressBroadcastS_Object = MibTableColumn
portPkgSuppressBroadcastS = _PortPkgSuppressBroadcastS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41, 1, 3),
    _PortPkgSuppressBroadcastS_Type()
)
portPkgSuppressBroadcastS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPkgSuppressBroadcastS.setStatus("current")


class _PortPkgSuppressMulticastS_Type(Integer32):
    """Custom type portPkgSuppressMulticastS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PortPkgSuppressMulticastS_Type.__name__ = "Integer32"
_PortPkgSuppressMulticastS_Object = MibTableColumn
portPkgSuppressMulticastS = _PortPkgSuppressMulticastS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41, 1, 4),
    _PortPkgSuppressMulticastS_Type()
)
portPkgSuppressMulticastS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPkgSuppressMulticastS.setStatus("current")


class _PortPkgSuppressUnkownS_Type(Integer32):
    """Custom type portPkgSuppressUnkownS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024000),
    )


_PortPkgSuppressUnkownS_Type.__name__ = "Integer32"
_PortPkgSuppressUnkownS_Object = MibTableColumn
portPkgSuppressUnkownS = _PortPkgSuppressUnkownS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 41, 1, 5),
    _PortPkgSuppressUnkownS_Type()
)
portPkgSuppressUnkownS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portPkgSuppressUnkownS.setStatus("current")
_PortIsolateTable_Object = MibTable
portIsolateTable = _PortIsolateTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 42)
)
if mibBuilder.loadTexts:
    portIsolateTable.setStatus("current")
_PortIsolateEntry_Object = MibTableRow
portIsolateEntry = _PortIsolateEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 42, 1)
)
portIsolateEntry.setIndexNames(
    (0, "V1600D", "portIsolateSrvId"),
)
if mibBuilder.loadTexts:
    portIsolateEntry.setStatus("current")


class _PortIsolateSrvId_Type(Integer32):
    """Custom type portIsolateSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PortIsolateSrvId_Type.__name__ = "Integer32"
_PortIsolateSrvId_Object = MibTableColumn
portIsolateSrvId = _PortIsolateSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 42, 1, 1),
    _PortIsolateSrvId_Type()
)
portIsolateSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portIsolateSrvId.setStatus("current")


class _PortIsolateS_Type(Integer32):
    """Custom type portIsolateS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PortIsolateS_Type.__name__ = "Integer32"
_PortIsolateS_Object = MibTableColumn
portIsolateS = _PortIsolateS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 42, 1, 2),
    _PortIsolateS_Type()
)
portIsolateS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portIsolateS.setStatus("current")
_PortModeControlTable_Object = MibTable
portModeControlTable = _PortModeControlTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 43)
)
if mibBuilder.loadTexts:
    portModeControlTable.setStatus("current")
_PortModeControlEntry_Object = MibTableRow
portModeControlEntry = _PortModeControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 43, 1)
)
portModeControlEntry.setIndexNames(
    (0, "V1600D", "portModeControlSrvId"),
    (0, "V1600D", "portModeControlEthNoS"),
)
if mibBuilder.loadTexts:
    portModeControlEntry.setStatus("current")
_PortModeControlSrvId_Type = Integer32
_PortModeControlSrvId_Object = MibTableColumn
portModeControlSrvId = _PortModeControlSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 43, 1, 1),
    _PortModeControlSrvId_Type()
)
portModeControlSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portModeControlSrvId.setStatus("current")
_PortModeControlEthNoS_Type = Integer32
_PortModeControlEthNoS_Object = MibTableColumn
portModeControlEthNoS = _PortModeControlEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 43, 1, 2),
    _PortModeControlEthNoS_Type()
)
portModeControlEthNoS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portModeControlEthNoS.setStatus("current")


class _PortModeControlS_Type(Integer32):
    """Custom type portModeControlS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("s10hd", 1),
          ("s10fd", 2),
          ("s100hd", 3),
          ("s100fd", 4),
          ("s1000hd", 5),
          ("s1000fd", 6),
          ("s10000fd", 7))
    )


_PortModeControlS_Type.__name__ = "Integer32"
_PortModeControlS_Object = MibTableColumn
portModeControlS = _PortModeControlS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 43, 1, 3),
    _PortModeControlS_Type()
)
portModeControlS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portModeControlS.setStatus("current")
_OnuDhcpServerTable_Object = MibTable
onuDhcpServerTable = _OnuDhcpServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44)
)
if mibBuilder.loadTexts:
    onuDhcpServerTable.setStatus("current")
_OnuDhcpServerEntry_Object = MibTableRow
onuDhcpServerEntry = _OnuDhcpServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1)
)
onuDhcpServerEntry.setIndexNames(
    (0, "V1600D", "onuDhcpSrvId"),
)
if mibBuilder.loadTexts:
    onuDhcpServerEntry.setStatus("current")
_OnuDhcpSrvId_Type = Integer32
_OnuDhcpSrvId_Object = MibTableColumn
onuDhcpSrvId = _OnuDhcpSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 1),
    _OnuDhcpSrvId_Type()
)
onuDhcpSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpSrvId.setStatus("current")
_OnuDhcpLanIp_Type = IpAddress
_OnuDhcpLanIp_Object = MibTableColumn
onuDhcpLanIp = _OnuDhcpLanIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 2),
    _OnuDhcpLanIp_Type()
)
onuDhcpLanIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpLanIp.setStatus("current")
_OnuDhcpMask_Type = IpAddress
_OnuDhcpMask_Object = MibTableColumn
onuDhcpMask = _OnuDhcpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 3),
    _OnuDhcpMask_Type()
)
onuDhcpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpMask.setStatus("current")


class _OnuDhcpServerEable_Type(Integer32):
    """Custom type onuDhcpServerEable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_OnuDhcpServerEable_Type.__name__ = "Integer32"
_OnuDhcpServerEable_Object = MibTableColumn
onuDhcpServerEable = _OnuDhcpServerEable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 4),
    _OnuDhcpServerEable_Type()
)
onuDhcpServerEable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpServerEable.setStatus("current")
_OnuDhcpLease_Type = Unsigned32
_OnuDhcpLease_Object = MibTableColumn
onuDhcpLease = _OnuDhcpLease_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 5),
    _OnuDhcpLease_Type()
)
onuDhcpLease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpLease.setStatus("current")
_OnuDhcpBeginIp_Type = IpAddress
_OnuDhcpBeginIp_Object = MibTableColumn
onuDhcpBeginIp = _OnuDhcpBeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 6),
    _OnuDhcpBeginIp_Type()
)
onuDhcpBeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpBeginIp.setStatus("current")
_OnuDhcpEndIp_Type = IpAddress
_OnuDhcpEndIp_Object = MibTableColumn
onuDhcpEndIp = _OnuDhcpEndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 7),
    _OnuDhcpEndIp_Type()
)
onuDhcpEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpEndIp.setStatus("current")


class _OnuDhcpPoolType_Type(Integer32):
    """Custom type onuDhcpPoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_OnuDhcpPoolType_Type.__name__ = "Integer32"
_OnuDhcpPoolType_Object = MibTableColumn
onuDhcpPoolType = _OnuDhcpPoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 8),
    _OnuDhcpPoolType_Type()
)
onuDhcpPoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpPoolType.setStatus("current")
_OnuDhcpMasterDns_Type = IpAddress
_OnuDhcpMasterDns_Object = MibTableColumn
onuDhcpMasterDns = _OnuDhcpMasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 9),
    _OnuDhcpMasterDns_Type()
)
onuDhcpMasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpMasterDns.setStatus("current")
_OnuDhcpSlaveDns_Type = IpAddress
_OnuDhcpSlaveDns_Object = MibTableColumn
onuDhcpSlaveDns = _OnuDhcpSlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 10),
    _OnuDhcpSlaveDns_Type()
)
onuDhcpSlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpSlaveDns.setStatus("current")
_OnuDhcpGateway_Type = IpAddress
_OnuDhcpGateway_Object = MibTableColumn
onuDhcpGateway = _OnuDhcpGateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 11),
    _OnuDhcpGateway_Type()
)
onuDhcpGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpGateway.setStatus("current")
_OnuDhcpRelayIp_Type = IpAddress
_OnuDhcpRelayIp_Object = MibTableColumn
onuDhcpRelayIp = _OnuDhcpRelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 44, 1, 12),
    _OnuDhcpRelayIp_Type()
)
onuDhcpRelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpRelayIp.setStatus("current")
_OnuDhcpOption82Table_Object = MibTable
onuDhcpOption82Table = _OnuDhcpOption82Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 45)
)
if mibBuilder.loadTexts:
    onuDhcpOption82Table.setStatus("current")
_OnuDhcpOption82Entry_Object = MibTableRow
onuDhcpOption82Entry = _OnuDhcpOption82Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 45, 1)
)
onuDhcpOption82Entry.setIndexNames(
    (0, "V1600D", "onuDhcpOption82SrvId"),
)
if mibBuilder.loadTexts:
    onuDhcpOption82Entry.setStatus("current")


class _OnuDhcpOption82SrvId_Type(Integer32):
    """Custom type onuDhcpOption82SrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuDhcpOption82SrvId_Type.__name__ = "Integer32"
_OnuDhcpOption82SrvId_Object = MibTableColumn
onuDhcpOption82SrvId = _OnuDhcpOption82SrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 45, 1, 1),
    _OnuDhcpOption82SrvId_Type()
)
onuDhcpOption82SrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpOption82SrvId.setStatus("current")


class _OnuDhcpOption82Enable_Type(Integer32):
    """Custom type onuDhcpOption82Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDhcpOption82Enable_Type.__name__ = "Integer32"
_OnuDhcpOption82Enable_Object = MibTableColumn
onuDhcpOption82Enable = _OnuDhcpOption82Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 45, 1, 2),
    _OnuDhcpOption82Enable_Type()
)
onuDhcpOption82Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpOption82Enable.setStatus("current")
_OnuPPPoETable_Object = MibTable
onuPPPoETable = _OnuPPPoETable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 46)
)
if mibBuilder.loadTexts:
    onuPPPoETable.setStatus("current")
_OnuPPPoEEntry_Object = MibTableRow
onuPPPoEEntry = _OnuPPPoEEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 46, 1)
)
onuPPPoEEntry.setIndexNames(
    (0, "V1600D", "onuPPPoESrvId"),
)
if mibBuilder.loadTexts:
    onuPPPoEEntry.setStatus("current")


class _OnuPPPoESrvId_Type(Integer32):
    """Custom type onuPPPoESrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPPPoESrvId_Type.__name__ = "Integer32"
_OnuPPPoESrvId_Object = MibTableColumn
onuPPPoESrvId = _OnuPPPoESrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 46, 1, 1),
    _OnuPPPoESrvId_Type()
)
onuPPPoESrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPPPoESrvId.setStatus("current")


class _OnuPPPoEEnable_Type(Integer32):
    """Custom type onuPPPoEEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuPPPoEEnable_Type.__name__ = "Integer32"
_OnuPPPoEEnable_Object = MibTableColumn
onuPPPoEEnable = _OnuPPPoEEnable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 46, 1, 2),
    _OnuPPPoEEnable_Type()
)
onuPPPoEEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuPPPoEEnable.setStatus("current")
_OnuDhcpV6Table_Object = MibTable
onuDhcpV6Table = _OnuDhcpV6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 47)
)
if mibBuilder.loadTexts:
    onuDhcpV6Table.setStatus("current")
_OnuDhcpV6Entry_Object = MibTableRow
onuDhcpV6Entry = _OnuDhcpV6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 47, 1)
)
onuDhcpV6Entry.setIndexNames(
    (0, "V1600D", "onuDhcpV6SrvId"),
)
if mibBuilder.loadTexts:
    onuDhcpV6Entry.setStatus("current")


class _OnuDhcpV6SrvId_Type(Integer32):
    """Custom type onuDhcpV6SrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuDhcpV6SrvId_Type.__name__ = "Integer32"
_OnuDhcpV6SrvId_Object = MibTableColumn
onuDhcpV6SrvId = _OnuDhcpV6SrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 47, 1, 1),
    _OnuDhcpV6SrvId_Type()
)
onuDhcpV6SrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpV6SrvId.setStatus("current")


class _OnuDhcpV6Option18Enable_Type(Integer32):
    """Custom type onuDhcpV6Option18Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDhcpV6Option18Enable_Type.__name__ = "Integer32"
_OnuDhcpV6Option18Enable_Object = MibTableColumn
onuDhcpV6Option18Enable = _OnuDhcpV6Option18Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 47, 1, 2),
    _OnuDhcpV6Option18Enable_Type()
)
onuDhcpV6Option18Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpV6Option18Enable.setStatus("current")


class _OnuDhcpV6Option37Enable_Type(Integer32):
    """Custom type onuDhcpV6Option37Enable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDhcpV6Option37Enable_Type.__name__ = "Integer32"
_OnuDhcpV6Option37Enable_Object = MibTableColumn
onuDhcpV6Option37Enable = _OnuDhcpV6Option37Enable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 47, 1, 3),
    _OnuDhcpV6Option37Enable_Type()
)
onuDhcpV6Option37Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpV6Option37Enable.setStatus("current")
_OnuUsernameTable_Object = MibTable
onuUsernameTable = _OnuUsernameTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48)
)
if mibBuilder.loadTexts:
    onuUsernameTable.setStatus("current")
_OnuUsernameEntry_Object = MibTableRow
onuUsernameEntry = _OnuUsernameEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1)
)
onuUsernameEntry.setIndexNames(
    (0, "V1600D", "onuUsernamenSrvId"),
)
if mibBuilder.loadTexts:
    onuUsernameEntry.setStatus("current")
_OnuUsernamenSrvId_Type = Integer32
_OnuUsernamenSrvId_Object = MibTableColumn
onuUsernamenSrvId = _OnuUsernamenSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 1),
    _OnuUsernamenSrvId_Type()
)
onuUsernamenSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuUsernamenSrvId.setStatus("current")


class _AdminCtl_Type(Integer32):
    """Custom type adminCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AdminCtl_Type.__name__ = "Integer32"
_AdminCtl_Object = MibTableColumn
adminCtl = _AdminCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 2),
    _AdminCtl_Type()
)
adminCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminCtl.setStatus("current")
_AdminNameStr_Type = OctetString
_AdminNameStr_Object = MibTableColumn
adminNameStr = _AdminNameStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 3),
    _AdminNameStr_Type()
)
adminNameStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminNameStr.setStatus("current")
_AdminPwdStr_Type = OctetString
_AdminPwdStr_Object = MibTableColumn
adminPwdStr = _AdminPwdStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 4),
    _AdminPwdStr_Type()
)
adminPwdStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminPwdStr.setStatus("current")


class _UserCtl_Type(Integer32):
    """Custom type userCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_UserCtl_Type.__name__ = "Integer32"
_UserCtl_Object = MibTableColumn
userCtl = _UserCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 5),
    _UserCtl_Type()
)
userCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userCtl.setStatus("current")
_UserNameStr_Type = OctetString
_UserNameStr_Object = MibTableColumn
userNameStr = _UserNameStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 6),
    _UserNameStr_Type()
)
userNameStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userNameStr.setStatus("current")
_UserPwdStr_Type = OctetString
_UserPwdStr_Object = MibTableColumn
userPwdStr = _UserPwdStr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 48, 1, 7),
    _UserPwdStr_Type()
)
userPwdStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userPwdStr.setStatus("current")
_OnuFirewallTable_Object = MibTable
onuFirewallTable = _OnuFirewallTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 49)
)
if mibBuilder.loadTexts:
    onuFirewallTable.setStatus("current")
_OnuFirewallEntry_Object = MibTableRow
onuFirewallEntry = _OnuFirewallEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 49, 1)
)
onuFirewallEntry.setIndexNames(
    (0, "V1600D", "onuFirewallSrvId"),
)
if mibBuilder.loadTexts:
    onuFirewallEntry.setStatus("current")
_OnuFirewallSrvId_Type = Integer32
_OnuFirewallSrvId_Object = MibTableColumn
onuFirewallSrvId = _OnuFirewallSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 49, 1, 1),
    _OnuFirewallSrvId_Type()
)
onuFirewallSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuFirewallSrvId.setStatus("current")


class _FirewallLevel_Type(Integer32):
    """Custom type firewallLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("low", 1),
          ("middle", 2),
          ("high", 3))
    )


_FirewallLevel_Type.__name__ = "Integer32"
_FirewallLevel_Object = MibTableColumn
firewallLevel = _FirewallLevel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 49, 1, 2),
    _FirewallLevel_Type()
)
firewallLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firewallLevel.setStatus("current")
_OnuAclTable_Object = MibTable
onuAclTable = _OnuAclTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50)
)
if mibBuilder.loadTexts:
    onuAclTable.setStatus("current")
_OnuAclEntry_Object = MibTableRow
onuAclEntry = _OnuAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1)
)
onuAclEntry.setIndexNames(
    (0, "V1600D", "onuAclSrvId"),
    (0, "V1600D", "onuAclProtocolType"),
)
if mibBuilder.loadTexts:
    onuAclEntry.setStatus("current")
_OnuAclSrvId_Type = Integer32
_OnuAclSrvId_Object = MibTableColumn
onuAclSrvId = _OnuAclSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 1),
    _OnuAclSrvId_Type()
)
onuAclSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclSrvId.setStatus("current")


class _OnuAclProtocolType_Type(Integer32):
    """Custom type onuAclProtocolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("telnet", 0),
          ("ftp", 1),
          ("http", 2),
          ("https", 3),
          ("tftp", 4),
          ("ping", 5))
    )


_OnuAclProtocolType_Type.__name__ = "Integer32"
_OnuAclProtocolType_Object = MibTableColumn
onuAclProtocolType = _OnuAclProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 2),
    _OnuAclProtocolType_Type()
)
onuAclProtocolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclProtocolType.setStatus("current")


class _OnuAclCtl_Type(Integer32):
    """Custom type onuAclCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAclCtl_Type.__name__ = "Integer32"
_OnuAclCtl_Object = MibTableColumn
onuAclCtl = _OnuAclCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 3),
    _OnuAclCtl_Type()
)
onuAclCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclCtl.setStatus("current")


class _OnuAclLanCtl_Type(Integer32):
    """Custom type onuAclLanCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAclLanCtl_Type.__name__ = "Integer32"
_OnuAclLanCtl_Object = MibTableColumn
onuAclLanCtl = _OnuAclLanCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 4),
    _OnuAclLanCtl_Type()
)
onuAclLanCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclLanCtl.setStatus("current")


class _OnuAclWanCtl_Type(Integer32):
    """Custom type onuAclWanCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAclWanCtl_Type.__name__ = "Integer32"
_OnuAclWanCtl_Object = MibTableColumn
onuAclWanCtl = _OnuAclWanCtl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 5),
    _OnuAclWanCtl_Type()
)
onuAclWanCtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclWanCtl.setStatus("current")


class _OnuAclIPv4Ctl_Type(Integer32):
    """Custom type onuAclIPv4Ctl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAclIPv4Ctl_Type.__name__ = "Integer32"
_OnuAclIPv4Ctl_Object = MibTableColumn
onuAclIPv4Ctl = _OnuAclIPv4Ctl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 6),
    _OnuAclIPv4Ctl_Type()
)
onuAclIPv4Ctl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclIPv4Ctl.setStatus("current")
_OnuAclIPv4Addr_Type = IpAddress
_OnuAclIPv4Addr_Object = MibTableColumn
onuAclIPv4Addr = _OnuAclIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 7),
    _OnuAclIPv4Addr_Type()
)
onuAclIPv4Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclIPv4Addr.setStatus("current")
_OnuAclIPv4Mask_Type = IpAddress
_OnuAclIPv4Mask_Object = MibTableColumn
onuAclIPv4Mask = _OnuAclIPv4Mask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 8),
    _OnuAclIPv4Mask_Type()
)
onuAclIPv4Mask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclIPv4Mask.setStatus("current")


class _OnuAclIPv6Ctl_Type(Integer32):
    """Custom type onuAclIPv6Ctl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuAclIPv6Ctl_Type.__name__ = "Integer32"
_OnuAclIPv6Ctl_Object = MibTableColumn
onuAclIPv6Ctl = _OnuAclIPv6Ctl_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 9),
    _OnuAclIPv6Ctl_Type()
)
onuAclIPv6Ctl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclIPv6Ctl.setStatus("current")
_OnuAclIPv6Addr_Type = OctetString
_OnuAclIPv6Addr_Object = MibTableColumn
onuAclIPv6Addr = _OnuAclIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 10),
    _OnuAclIPv6Addr_Type()
)
onuAclIPv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclIPv6Addr.setStatus("current")


class _OnuAclPort_Type(Unsigned32):
    """Custom type onuAclPort based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuAclPort_Type.__name__ = "Unsigned32"
_OnuAclPort_Object = MibTableColumn
onuAclPort = _OnuAclPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 50, 1, 11),
    _OnuAclPort_Type()
)
onuAclPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuAclPort.setStatus("current")
_OnuWifiSwitch1PFTable_Object = MibTable
onuWifiSwitch1PFTable = _OnuWifiSwitch1PFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51)
)
if mibBuilder.loadTexts:
    onuWifiSwitch1PFTable.setStatus("current")
_OnuWifiSwitch1PFEntry_Object = MibTableRow
onuWifiSwitch1PFEntry = _OnuWifiSwitch1PFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1)
)
onuWifiSwitch1PFEntry.setIndexNames(
    (0, "V1600D", "onuWifiSwitchSrvId"),
)
if mibBuilder.loadTexts:
    onuWifiSwitch1PFEntry.setStatus("current")


class _OnuWifiSwitchSrvId_Type(Integer32):
    """Custom type onuWifiSwitchSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuWifiSwitchSrvId_Type.__name__ = "Integer32"
_OnuWifiSwitchSrvId_Object = MibTableColumn
onuWifiSwitchSrvId = _OnuWifiSwitchSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 1),
    _OnuWifiSwitchSrvId_Type()
)
onuWifiSwitchSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchSrvId.setStatus("current")


class _OnuWifiSwitchActive_Type(Integer32):
    """Custom type onuWifiSwitchActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("deactive", 0),
          ("active", 1))
    )


_OnuWifiSwitchActive_Type.__name__ = "Integer32"
_OnuWifiSwitchActive_Object = MibTableColumn
onuWifiSwitchActive = _OnuWifiSwitchActive_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 2),
    _OnuWifiSwitchActive_Type()
)
onuWifiSwitchActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchActive.setStatus("current")


class _OnuWifiSwitchAPModuleS_Type(Integer32):
    """Custom type onuWifiSwitchAPModuleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuWifiSwitchAPModuleS_Type.__name__ = "Integer32"
_OnuWifiSwitchAPModuleS_Object = MibTableColumn
onuWifiSwitchAPModuleS = _OnuWifiSwitchAPModuleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 3),
    _OnuWifiSwitchAPModuleS_Type()
)
onuWifiSwitchAPModuleS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchAPModuleS.setStatus("current")


class _OnuWifiSwitchCountry_Type(Integer32):
    """Custom type onuWifiSwitchCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ETSI", 0),
          ("FCC", 1),
          ("IC", 2),
          ("SPAIN", 3),
          ("FRANCE", 4),
          ("MKK", 5),
          ("ISREAL", 6),
          ("MKK2", 7),
          ("MKK3", 8),
          ("RUSSIAN", 9),
          ("CN", 10),
          ("Global", 11),
          ("World-wide", 12),
          ("mkk1", 13),
          ("ncc", 14))
    )


_OnuWifiSwitchCountry_Type.__name__ = "Integer32"
_OnuWifiSwitchCountry_Object = MibTableColumn
onuWifiSwitchCountry = _OnuWifiSwitchCountry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 4),
    _OnuWifiSwitchCountry_Type()
)
onuWifiSwitchCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchCountry.setStatus("current")


class _OnuWifiSwitchChannelS_Type(Integer32):
    """Custom type onuWifiSwitchChannelS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 13),
    )


_OnuWifiSwitchChannelS_Type.__name__ = "Integer32"
_OnuWifiSwitchChannelS_Object = MibTableColumn
onuWifiSwitchChannelS = _OnuWifiSwitchChannelS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 5),
    _OnuWifiSwitchChannelS_Type()
)
onuWifiSwitchChannelS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchChannelS.setStatus("current")


class _OnuWifiSwitchStandardS_Type(Integer32):
    """Custom type onuWifiSwitchStandardS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("s80211b", 0),
          ("s80211g", 1),
          ("s80211bg", 2),
          ("s80211n", 3),
          ("s80211bgn", 4),
          ("s8011ac", 5),
          ("s8011a", 6),
          ("s8011an", 7),
          ("s8011nac", 8),
          ("s8011anac", 9))
    )


_OnuWifiSwitchStandardS_Type.__name__ = "Integer32"
_OnuWifiSwitchStandardS_Object = MibTableColumn
onuWifiSwitchStandardS = _OnuWifiSwitchStandardS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 6),
    _OnuWifiSwitchStandardS_Type()
)
onuWifiSwitchStandardS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchStandardS.setStatus("current")


class _OnuWifiSwitchPower1_Type(Integer32):
    """Custom type onuWifiSwitchPower1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_OnuWifiSwitchPower1_Type.__name__ = "Integer32"
_OnuWifiSwitchPower1_Object = MibTableColumn
onuWifiSwitchPower1 = _OnuWifiSwitchPower1_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 7),
    _OnuWifiSwitchPower1_Type()
)
onuWifiSwitchPower1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchPower1.setStatus("current")


class _OnuWifiSwitchChannelWidth_Type(Integer32):
    """Custom type onuWifiSwitchChannelWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("s20", 0),
          ("s40", 1),
          ("s80", 2),
          ("s20_40", 3))
    )


_OnuWifiSwitchChannelWidth_Type.__name__ = "Integer32"
_OnuWifiSwitchChannelWidth_Object = MibTableColumn
onuWifiSwitchChannelWidth = _OnuWifiSwitchChannelWidth_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 8),
    _OnuWifiSwitchChannelWidth_Type()
)
onuWifiSwitchChannelWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchChannelWidth.setStatus("current")


class _OnuWifiSwitchEasyMeshStatus_Type(Integer32):
    """Custom type onuWifiSwitchEasyMeshStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuWifiSwitchEasyMeshStatus_Type.__name__ = "Integer32"
_OnuWifiSwitchEasyMeshStatus_Object = MibTableColumn
onuWifiSwitchEasyMeshStatus = _OnuWifiSwitchEasyMeshStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 51, 1, 9),
    _OnuWifiSwitchEasyMeshStatus_Type()
)
onuWifiSwitchEasyMeshStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuWifiSwitchEasyMeshStatus.setStatus("current")
_OnuDhcpv6ServerTable_Object = MibTable
onuDhcpv6ServerTable = _OnuDhcpv6ServerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52)
)
if mibBuilder.loadTexts:
    onuDhcpv6ServerTable.setStatus("current")
_OnuDhcpv6ServerEntry_Object = MibTableRow
onuDhcpv6ServerEntry = _OnuDhcpv6ServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1)
)
onuDhcpv6ServerEntry.setIndexNames(
    (0, "V1600D", "onuDhcpv6SrvId"),
)
if mibBuilder.loadTexts:
    onuDhcpv6ServerEntry.setStatus("current")
_OnuDhcpv6SrvId_Type = Integer32
_OnuDhcpv6SrvId_Object = MibTableColumn
onuDhcpv6SrvId = _OnuDhcpv6SrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 1),
    _OnuDhcpv6SrvId_Type()
)
onuDhcpv6SrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6SrvId.setStatus("current")
_OnuDhcpv6LanIp_Type = OctetString
_OnuDhcpv6LanIp_Object = MibTableColumn
onuDhcpv6LanIp = _OnuDhcpv6LanIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 2),
    _OnuDhcpv6LanIp_Type()
)
onuDhcpv6LanIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6LanIp.setStatus("current")


class _OnuDhcpv6Prefixlen_Type(Integer32):
    """Custom type onuDhcpv6Prefixlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_OnuDhcpv6Prefixlen_Type.__name__ = "Integer32"
_OnuDhcpv6Prefixlen_Object = MibTableColumn
onuDhcpv6Prefixlen = _OnuDhcpv6Prefixlen_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 3),
    _OnuDhcpv6Prefixlen_Type()
)
onuDhcpv6Prefixlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6Prefixlen.setStatus("current")


class _OnuDhcpv6PrefixMode_Type(Integer32):
    """Custom type onuDhcpv6PrefixMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("static", 1))
    )


_OnuDhcpv6PrefixMode_Type.__name__ = "Integer32"
_OnuDhcpv6PrefixMode_Object = MibTableColumn
onuDhcpv6PrefixMode = _OnuDhcpv6PrefixMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 4),
    _OnuDhcpv6PrefixMode_Type()
)
onuDhcpv6PrefixMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6PrefixMode.setStatus("current")
_OnuDhcpv6PrefixModeIp_Type = OctetString
_OnuDhcpv6PrefixModeIp_Object = MibTableColumn
onuDhcpv6PrefixModeIp = _OnuDhcpv6PrefixModeIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 5),
    _OnuDhcpv6PrefixModeIp_Type()
)
onuDhcpv6PrefixModeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6PrefixModeIp.setStatus("current")


class _OnuDhcpv6ServerEable_Type(Integer32):
    """Custom type onuDhcpv6ServerEable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("relay", 2))
    )


_OnuDhcpv6ServerEable_Type.__name__ = "Integer32"
_OnuDhcpv6ServerEable_Object = MibTableColumn
onuDhcpv6ServerEable = _OnuDhcpv6ServerEable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 6),
    _OnuDhcpv6ServerEable_Type()
)
onuDhcpv6ServerEable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6ServerEable.setStatus("current")
_OnuDhcpv6Preference_Type = Unsigned32
_OnuDhcpv6Preference_Object = MibTableColumn
onuDhcpv6Preference = _OnuDhcpv6Preference_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 7),
    _OnuDhcpv6Preference_Type()
)
onuDhcpv6Preference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6Preference.setStatus("current")
_OnuDhcpv6BeginIp_Type = OctetString
_OnuDhcpv6BeginIp_Object = MibTableColumn
onuDhcpv6BeginIp = _OnuDhcpv6BeginIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 8),
    _OnuDhcpv6BeginIp_Type()
)
onuDhcpv6BeginIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6BeginIp.setStatus("current")
_OnuDhcpv6EndIp_Type = OctetString
_OnuDhcpv6EndIp_Object = MibTableColumn
onuDhcpv6EndIp = _OnuDhcpv6EndIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 9),
    _OnuDhcpv6EndIp_Type()
)
onuDhcpv6EndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6EndIp.setStatus("current")


class _OnuDhcpv6PoolType_Type(Integer32):
    """Custom type onuDhcpv6PoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pc", 0),
          ("camera", 1),
          ("stb", 2),
          ("ip_phone", 3))
    )


_OnuDhcpv6PoolType_Type.__name__ = "Integer32"
_OnuDhcpv6PoolType_Object = MibTableColumn
onuDhcpv6PoolType = _OnuDhcpv6PoolType_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 10),
    _OnuDhcpv6PoolType_Type()
)
onuDhcpv6PoolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6PoolType.setStatus("current")
_OnuDhcpv6MasterDns_Type = OctetString
_OnuDhcpv6MasterDns_Object = MibTableColumn
onuDhcpv6MasterDns = _OnuDhcpv6MasterDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 11),
    _OnuDhcpv6MasterDns_Type()
)
onuDhcpv6MasterDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6MasterDns.setStatus("current")
_OnuDhcpv6SlaveDns_Type = OctetString
_OnuDhcpv6SlaveDns_Object = MibTableColumn
onuDhcpv6SlaveDns = _OnuDhcpv6SlaveDns_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 12),
    _OnuDhcpv6SlaveDns_Type()
)
onuDhcpv6SlaveDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6SlaveDns.setStatus("current")
_OnuDhcpv6Gateway_Type = OctetString
_OnuDhcpv6Gateway_Object = MibTableColumn
onuDhcpv6Gateway = _OnuDhcpv6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 13),
    _OnuDhcpv6Gateway_Type()
)
onuDhcpv6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6Gateway.setStatus("current")
_OnuDhcpv6RelayIp_Type = OctetString
_OnuDhcpv6RelayIp_Object = MibTableColumn
onuDhcpv6RelayIp = _OnuDhcpv6RelayIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 14),
    _OnuDhcpv6RelayIp_Type()
)
onuDhcpv6RelayIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6RelayIp.setStatus("current")


class _OnuDhcpv6RA_Type(Integer32):
    """Custom type onuDhcpv6RA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDhcpv6RA_Type.__name__ = "Integer32"
_OnuDhcpv6RA_Object = MibTableColumn
onuDhcpv6RA = _OnuDhcpv6RA_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 15),
    _OnuDhcpv6RA_Type()
)
onuDhcpv6RA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6RA.setStatus("current")


class _OnuDhcpv6RAManage_Type(Integer32):
    """Custom type onuDhcpv6RAManage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDhcpv6RAManage_Type.__name__ = "Integer32"
_OnuDhcpv6RAManage_Object = MibTableColumn
onuDhcpv6RAManage = _OnuDhcpv6RAManage_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 16),
    _OnuDhcpv6RAManage_Type()
)
onuDhcpv6RAManage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6RAManage.setStatus("current")


class _OnuDhcpv6RAOther_Type(Integer32):
    """Custom type onuDhcpv6RAOther based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuDhcpv6RAOther_Type.__name__ = "Integer32"
_OnuDhcpv6RAOther_Object = MibTableColumn
onuDhcpv6RAOther = _OnuDhcpv6RAOther_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 17),
    _OnuDhcpv6RAOther_Type()
)
onuDhcpv6RAOther.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6RAOther.setStatus("current")


class _OnuDhcpv6RAMaxInterval_Type(Integer32):
    """Custom type onuDhcpv6RAMaxInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_OnuDhcpv6RAMaxInterval_Type.__name__ = "Integer32"
_OnuDhcpv6RAMaxInterval_Object = MibTableColumn
onuDhcpv6RAMaxInterval = _OnuDhcpv6RAMaxInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 18),
    _OnuDhcpv6RAMaxInterval_Type()
)
onuDhcpv6RAMaxInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6RAMaxInterval.setStatus("current")


class _OnuDhcpv6RAMinInterval_Type(Integer32):
    """Custom type onuDhcpv6RAMinInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_OnuDhcpv6RAMinInterval_Type.__name__ = "Integer32"
_OnuDhcpv6RAMinInterval_Object = MibTableColumn
onuDhcpv6RAMinInterval = _OnuDhcpv6RAMinInterval_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 19),
    _OnuDhcpv6RAMinInterval_Type()
)
onuDhcpv6RAMinInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6RAMinInterval.setStatus("current")
_OnuDhcpv6Valid_Type = Unsigned32
_OnuDhcpv6Valid_Object = MibTableColumn
onuDhcpv6Valid = _OnuDhcpv6Valid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 20),
    _OnuDhcpv6Valid_Type()
)
onuDhcpv6Valid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6Valid.setStatus("current")


class _OnuDhcpv6DnsMode_Type(Integer32):
    """Custom type onuDhcpv6DnsMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wanconnection", 0),
          ("static", 1),
          ("hgwproxy", 2))
    )


_OnuDhcpv6DnsMode_Type.__name__ = "Integer32"
_OnuDhcpv6DnsMode_Object = MibTableColumn
onuDhcpv6DnsMode = _OnuDhcpv6DnsMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 52, 1, 21),
    _OnuDhcpv6DnsMode_Type()
)
onuDhcpv6DnsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    onuDhcpv6DnsMode.setStatus("current")
_OnuWanConnV6Table_Object = MibTable
onuWanConnV6Table = _OnuWanConnV6Table_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53)
)
if mibBuilder.loadTexts:
    onuWanConnV6Table.setStatus("current")
_OnuWanConnV6Entry_Object = MibTableRow
onuWanConnV6Entry = _OnuWanConnV6Entry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1)
)
onuWanConnV6Entry.setIndexNames(
    (0, "V1600D", "v6wanConnSrvId"),
    (0, "V1600D", "v6wanConnIndexS"),
    (0, "V1600D", "v6wanConnBindLanS"),
)
if mibBuilder.loadTexts:
    onuWanConnV6Entry.setStatus("current")


class _V6wanConnSrvId_Type(Integer32):
    """Custom type v6wanConnSrvId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_V6wanConnSrvId_Type.__name__ = "Integer32"
_V6wanConnSrvId_Object = MibTableColumn
v6wanConnSrvId = _V6wanConnSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 1),
    _V6wanConnSrvId_Type()
)
v6wanConnSrvId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnSrvId.setStatus("current")


class _V6wanConnIndexS_Type(Integer32):
    """Custom type v6wanConnIndexS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_V6wanConnIndexS_Type.__name__ = "Integer32"
_V6wanConnIndexS_Object = MibTableColumn
v6wanConnIndexS = _V6wanConnIndexS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 2),
    _V6wanConnIndexS_Type()
)
v6wanConnIndexS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnIndexS.setStatus("current")


class _V6wanConnBindLanS_Type(Integer32):
    """Custom type v6wanConnBindLanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_V6wanConnBindLanS_Type.__name__ = "Integer32"
_V6wanConnBindLanS_Object = MibTableColumn
v6wanConnBindLanS = _V6wanConnBindLanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 3),
    _V6wanConnBindLanS_Type()
)
v6wanConnBindLanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnBindLanS.setStatus("current")


class _V6wanConnBindSsidS_Type(Integer32):
    """Custom type v6wanConnBindSsidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_V6wanConnBindSsidS_Type.__name__ = "Integer32"
_V6wanConnBindSsidS_Object = MibTableColumn
v6wanConnBindSsidS = _V6wanConnBindSsidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 4),
    _V6wanConnBindSsidS_Type()
)
v6wanConnBindSsidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnBindSsidS.setStatus("current")


class _V6WanModeS_Type(Integer32):
    """Custom type v6WanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              100)
        )
    )
    namedValues = NamedValues(
        *(("internet", 0),
          ("multicast", 1),
          ("tr069", 2),
          ("tr069_internet", 3),
          ("tr069_voip", 4),
          ("voip_internet", 5),
          ("tr069_voip_internet", 6),
          ("voip", 7),
          ("other", 100))
    )


_V6WanModeS_Type.__name__ = "Integer32"
_V6WanModeS_Object = MibTableColumn
v6WanModeS = _V6WanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 5),
    _V6WanModeS_Type()
)
v6WanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6WanModeS.setStatus("current")


class _V6wanConnTypeS_Type(Integer32):
    """Custom type v6wanConnTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 0),
          ("route", 1))
    )


_V6wanConnTypeS_Type.__name__ = "Integer32"
_V6wanConnTypeS_Object = MibTableColumn
v6wanConnTypeS = _V6wanConnTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 6),
    _V6wanConnTypeS_Type()
)
v6wanConnTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnTypeS.setStatus("current")


class _V6wanConnVlanIdS_Type(Integer32):
    """Custom type v6wanConnVlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_V6wanConnVlanIdS_Type.__name__ = "Integer32"
_V6wanConnVlanIdS_Object = MibTableColumn
v6wanConnVlanIdS = _V6wanConnVlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 7),
    _V6wanConnVlanIdS_Type()
)
v6wanConnVlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnVlanIdS.setStatus("current")


class _V6wanConnVlanCosS_Type(Integer32):
    """Custom type v6wanConnVlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_V6wanConnVlanCosS_Type.__name__ = "Integer32"
_V6wanConnVlanCosS_Object = MibTableColumn
v6wanConnVlanCosS = _V6wanConnVlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 8),
    _V6wanConnVlanCosS_Type()
)
v6wanConnVlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnVlanCosS.setStatus("current")


class _V6wanConnIpProtocolS_Type(Integer32):
    """Custom type v6wanConnIpProtocolS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 0),
          ("ipv6", 1),
          ("ipv4_ipv6", 2))
    )


_V6wanConnIpProtocolS_Type.__name__ = "Integer32"
_V6wanConnIpProtocolS_Object = MibTableColumn
v6wanConnIpProtocolS = _V6wanConnIpProtocolS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 9),
    _V6wanConnIpProtocolS_Type()
)
v6wanConnIpProtocolS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnIpProtocolS.setStatus("current")


class _V6WanConnModeS_Type(Integer32):
    """Custom type v6WanConnModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 0),
          ("static", 1),
          ("pppoe", 2))
    )


_V6WanConnModeS_Type.__name__ = "Integer32"
_V6WanConnModeS_Object = MibTableColumn
v6WanConnModeS = _V6WanConnModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 10),
    _V6WanConnModeS_Type()
)
v6WanConnModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6WanConnModeS.setStatus("current")
_V6wanConnIpAddressIpv4S_Type = IpAddress
_V6wanConnIpAddressIpv4S_Object = MibTableColumn
v6wanConnIpAddressIpv4S = _V6wanConnIpAddressIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 11),
    _V6wanConnIpAddressIpv4S_Type()
)
v6wanConnIpAddressIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnIpAddressIpv4S.setStatus("current")
_V6wanConnIpNetMaskIpv4S_Type = IpAddress
_V6wanConnIpNetMaskIpv4S_Object = MibTableColumn
v6wanConnIpNetMaskIpv4S = _V6wanConnIpNetMaskIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 12),
    _V6wanConnIpNetMaskIpv4S_Type()
)
v6wanConnIpNetMaskIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnIpNetMaskIpv4S.setStatus("current")
_V6wanConnGatewayIpv4S_Type = IpAddress
_V6wanConnGatewayIpv4S_Object = MibTableColumn
v6wanConnGatewayIpv4S = _V6wanConnGatewayIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 13),
    _V6wanConnGatewayIpv4S_Type()
)
v6wanConnGatewayIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnGatewayIpv4S.setStatus("current")


class _V6wanConnDnsEnableIpv4S_Type(Integer32):
    """Custom type v6wanConnDnsEnableIpv4S based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnDnsEnableIpv4S_Type.__name__ = "Integer32"
_V6wanConnDnsEnableIpv4S_Object = MibTableColumn
v6wanConnDnsEnableIpv4S = _V6wanConnDnsEnableIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 14),
    _V6wanConnDnsEnableIpv4S_Type()
)
v6wanConnDnsEnableIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDnsEnableIpv4S.setStatus("current")
_V6wanConnMasterDnsIpv4S_Type = IpAddress
_V6wanConnMasterDnsIpv4S_Object = MibTableColumn
v6wanConnMasterDnsIpv4S = _V6wanConnMasterDnsIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 15),
    _V6wanConnMasterDnsIpv4S_Type()
)
v6wanConnMasterDnsIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnMasterDnsIpv4S.setStatus("current")
_V6wanConnSlaveDnsIpv4S_Type = IpAddress
_V6wanConnSlaveDnsIpv4S_Object = MibTableColumn
v6wanConnSlaveDnsIpv4S = _V6wanConnSlaveDnsIpv4S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 16),
    _V6wanConnSlaveDnsIpv4S_Type()
)
v6wanConnSlaveDnsIpv4S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnSlaveDnsIpv4S.setStatus("current")


class _V6wanConnNatEnableS_Type(Integer32):
    """Custom type v6wanConnNatEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnNatEnableS_Type.__name__ = "Integer32"
_V6wanConnNatEnableS_Object = MibTableColumn
v6wanConnNatEnableS = _V6wanConnNatEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 17),
    _V6wanConnNatEnableS_Type()
)
v6wanConnNatEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnNatEnableS.setStatus("current")
_V6wanConnAddressIpv6S_Type = OctetString
_V6wanConnAddressIpv6S_Object = MibTableColumn
v6wanConnAddressIpv6S = _V6wanConnAddressIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 18),
    _V6wanConnAddressIpv6S_Type()
)
v6wanConnAddressIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnAddressIpv6S.setStatus("current")


class _V6wanConnPrefixLenIpv6S_Type(Integer32):
    """Custom type v6wanConnPrefixLenIpv6S based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_V6wanConnPrefixLenIpv6S_Type.__name__ = "Integer32"
_V6wanConnPrefixLenIpv6S_Object = MibTableColumn
v6wanConnPrefixLenIpv6S = _V6wanConnPrefixLenIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 19),
    _V6wanConnPrefixLenIpv6S_Type()
)
v6wanConnPrefixLenIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnPrefixLenIpv6S.setStatus("current")
_V6wanConnGatewayIpv6S_Type = OctetString
_V6wanConnGatewayIpv6S_Object = MibTableColumn
v6wanConnGatewayIpv6S = _V6wanConnGatewayIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 20),
    _V6wanConnGatewayIpv6S_Type()
)
v6wanConnGatewayIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnGatewayIpv6S.setStatus("current")


class _V6wanConnDnsEnableIpv6S_Type(Integer32):
    """Custom type v6wanConnDnsEnableIpv6S based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnDnsEnableIpv6S_Type.__name__ = "Integer32"
_V6wanConnDnsEnableIpv6S_Object = MibTableColumn
v6wanConnDnsEnableIpv6S = _V6wanConnDnsEnableIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 21),
    _V6wanConnDnsEnableIpv6S_Type()
)
v6wanConnDnsEnableIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDnsEnableIpv6S.setStatus("current")
_V6wanConnMsaterDnsIpv6S_Type = OctetString
_V6wanConnMsaterDnsIpv6S_Object = MibTableColumn
v6wanConnMsaterDnsIpv6S = _V6wanConnMsaterDnsIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 22),
    _V6wanConnMsaterDnsIpv6S_Type()
)
v6wanConnMsaterDnsIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnMsaterDnsIpv6S.setStatus("current")
_V6wanConnSlaveDnsIpv6S_Type = OctetString
_V6wanConnSlaveDnsIpv6S_Object = MibTableColumn
v6wanConnSlaveDnsIpv6S = _V6wanConnSlaveDnsIpv6S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 23),
    _V6wanConnSlaveDnsIpv6S_Type()
)
v6wanConnSlaveDnsIpv6S.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnSlaveDnsIpv6S.setStatus("current")


class _V6wanConnSlaacS_Type(Integer32):
    """Custom type v6wanConnSlaacS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnSlaacS_Type.__name__ = "Integer32"
_V6wanConnSlaacS_Object = MibTableColumn
v6wanConnSlaacS = _V6wanConnSlaacS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 24),
    _V6wanConnSlaacS_Type()
)
v6wanConnSlaacS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnSlaacS.setStatus("current")


class _V6wanConnPppoeProxyS_Type(Integer32):
    """Custom type v6wanConnPppoeProxyS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnPppoeProxyS_Type.__name__ = "Integer32"
_V6wanConnPppoeProxyS_Object = MibTableColumn
v6wanConnPppoeProxyS = _V6wanConnPppoeProxyS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 25),
    _V6wanConnPppoeProxyS_Type()
)
v6wanConnPppoeProxyS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnPppoeProxyS.setStatus("current")
_V6wanConnPppoeUsernameS_Type = OctetString
_V6wanConnPppoeUsernameS_Object = MibTableColumn
v6wanConnPppoeUsernameS = _V6wanConnPppoeUsernameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 26),
    _V6wanConnPppoeUsernameS_Type()
)
v6wanConnPppoeUsernameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnPppoeUsernameS.setStatus("current")
_V6wanConnPppoePasswordS_Type = OctetString
_V6wanConnPppoePasswordS_Object = MibTableColumn
v6wanConnPppoePasswordS = _V6wanConnPppoePasswordS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 27),
    _V6wanConnPppoePasswordS_Type()
)
v6wanConnPppoePasswordS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnPppoePasswordS.setStatus("current")
_V6wanConnPppoeSerNameS_Type = OctetString
_V6wanConnPppoeSerNameS_Object = MibTableColumn
v6wanConnPppoeSerNameS = _V6wanConnPppoeSerNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 28),
    _V6wanConnPppoeSerNameS_Type()
)
v6wanConnPppoeSerNameS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnPppoeSerNameS.setStatus("current")


class _V6wanConnPppoeModeS_Type(Integer32):
    """Custom type v6wanConnPppoeModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoConnect", 0),
          ("flowConnect", 1))
    )


_V6wanConnPppoeModeS_Type.__name__ = "Integer32"
_V6wanConnPppoeModeS_Object = MibTableColumn
v6wanConnPppoeModeS = _V6wanConnPppoeModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 29),
    _V6wanConnPppoeModeS_Type()
)
v6wanConnPppoeModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnPppoeModeS.setStatus("current")


class _V6wanConnDhcpv6ClientAddressS_Type(Integer32):
    """Custom type v6wanConnDhcpv6ClientAddressS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnDhcpv6ClientAddressS_Type.__name__ = "Integer32"
_V6wanConnDhcpv6ClientAddressS_Object = MibTableColumn
v6wanConnDhcpv6ClientAddressS = _V6wanConnDhcpv6ClientAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 30),
    _V6wanConnDhcpv6ClientAddressS_Type()
)
v6wanConnDhcpv6ClientAddressS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDhcpv6ClientAddressS.setStatus("current")


class _V6wanConnDhcpv6ClientPrefixS_Type(Integer32):
    """Custom type v6wanConnDhcpv6ClientPrefixS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnDhcpv6ClientPrefixS_Type.__name__ = "Integer32"
_V6wanConnDhcpv6ClientPrefixS_Object = MibTableColumn
v6wanConnDhcpv6ClientPrefixS = _V6wanConnDhcpv6ClientPrefixS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 31),
    _V6wanConnDhcpv6ClientPrefixS_Type()
)
v6wanConnDhcpv6ClientPrefixS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDhcpv6ClientPrefixS.setStatus("current")


class _V6wanConnDsLiteEnableS_Type(Integer32):
    """Custom type v6wanConnDsLiteEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnDsLiteEnableS_Type.__name__ = "Integer32"
_V6wanConnDsLiteEnableS_Object = MibTableColumn
v6wanConnDsLiteEnableS = _V6wanConnDsLiteEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 32),
    _V6wanConnDsLiteEnableS_Type()
)
v6wanConnDsLiteEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDsLiteEnableS.setStatus("current")


class _V6wanConnDsLiteAftrModeS_Type(Integer32):
    """Custom type v6wanConnDsLiteAftrModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dhcpv6", 0),
          ("manual", 1))
    )


_V6wanConnDsLiteAftrModeS_Type.__name__ = "Integer32"
_V6wanConnDsLiteAftrModeS_Object = MibTableColumn
v6wanConnDsLiteAftrModeS = _V6wanConnDsLiteAftrModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 33),
    _V6wanConnDsLiteAftrModeS_Type()
)
v6wanConnDsLiteAftrModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDsLiteAftrModeS.setStatus("current")


class _V6wanConnDsLiteAddressTypeS_Type(Integer32):
    """Custom type v6wanConnDsLiteAddressTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ipv6", 0),
          ("dns", 1))
    )


_V6wanConnDsLiteAddressTypeS_Type.__name__ = "Integer32"
_V6wanConnDsLiteAddressTypeS_Object = MibTableColumn
v6wanConnDsLiteAddressTypeS = _V6wanConnDsLiteAddressTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 34),
    _V6wanConnDsLiteAddressTypeS_Type()
)
v6wanConnDsLiteAddressTypeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDsLiteAddressTypeS.setStatus("current")
_V6wanConnDsLiteAddressS_Type = OctetString
_V6wanConnDsLiteAddressS_Object = MibTableColumn
v6wanConnDsLiteAddressS = _V6wanConnDsLiteAddressS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 35),
    _V6wanConnDsLiteAddressS_Type()
)
v6wanConnDsLiteAddressS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnDsLiteAddressS.setStatus("current")


class _V6wanConnQosEnableS_Type(Integer32):
    """Custom type v6wanConnQosEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnQosEnableS_Type.__name__ = "Integer32"
_V6wanConnQosEnableS_Object = MibTableColumn
v6wanConnQosEnableS = _V6wanConnQosEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 36),
    _V6wanConnQosEnableS_Type()
)
v6wanConnQosEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnQosEnableS.setStatus("current")


class _V6wanConnVlanModeS_Type(Integer32):
    """Custom type v6wanConnVlanModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("tag", 1),
          ("transparent", 2))
    )


_V6wanConnVlanModeS_Type.__name__ = "Integer32"
_V6wanConnVlanModeS_Object = MibTableColumn
v6wanConnVlanModeS = _V6wanConnVlanModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 37),
    _V6wanConnVlanModeS_Type()
)
v6wanConnVlanModeS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnVlanModeS.setStatus("current")


class _V6wanConnTranslationEnableS_Type(Integer32):
    """Custom type v6wanConnTranslationEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnTranslationEnableS_Type.__name__ = "Integer32"
_V6wanConnTranslationEnableS_Object = MibTableColumn
v6wanConnTranslationEnableS = _V6wanConnTranslationEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 38),
    _V6wanConnTranslationEnableS_Type()
)
v6wanConnTranslationEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnTranslationEnableS.setStatus("current")


class _V6wanConnTranslationVlanS_Type(Integer32):
    """Custom type v6wanConnTranslationVlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_V6wanConnTranslationVlanS_Type.__name__ = "Integer32"
_V6wanConnTranslationVlanS_Object = MibTableColumn
v6wanConnTranslationVlanS = _V6wanConnTranslationVlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 39),
    _V6wanConnTranslationVlanS_Type()
)
v6wanConnTranslationVlanS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnTranslationVlanS.setStatus("current")


class _V6wanConnTranslationCosS_Type(Integer32):
    """Custom type v6wanConnTranslationCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_V6wanConnTranslationCosS_Type.__name__ = "Integer32"
_V6wanConnTranslationCosS_Object = MibTableColumn
v6wanConnTranslationCosS = _V6wanConnTranslationCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 40),
    _V6wanConnTranslationCosS_Type()
)
v6wanConnTranslationCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnTranslationCosS.setStatus("current")


class _V6wanConnQinqEnableS_Type(Integer32):
    """Custom type v6wanConnQinqEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_V6wanConnQinqEnableS_Type.__name__ = "Integer32"
_V6wanConnQinqEnableS_Object = MibTableColumn
v6wanConnQinqEnableS = _V6wanConnQinqEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 41),
    _V6wanConnQinqEnableS_Type()
)
v6wanConnQinqEnableS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnQinqEnableS.setStatus("current")


class _V6wanConnQinqTpidS_Type(Integer32):
    """Custom type v6wanConnQinqTpidS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_V6wanConnQinqTpidS_Type.__name__ = "Integer32"
_V6wanConnQinqTpidS_Object = MibTableColumn
v6wanConnQinqTpidS = _V6wanConnQinqTpidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 42),
    _V6wanConnQinqTpidS_Type()
)
v6wanConnQinqTpidS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnQinqTpidS.setStatus("current")


class _V6wanConnSvlanIdS_Type(Integer32):
    """Custom type v6wanConnSvlanIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_V6wanConnSvlanIdS_Type.__name__ = "Integer32"
_V6wanConnSvlanIdS_Object = MibTableColumn
v6wanConnSvlanIdS = _V6wanConnSvlanIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 43),
    _V6wanConnSvlanIdS_Type()
)
v6wanConnSvlanIdS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnSvlanIdS.setStatus("current")


class _V6wanConnSvlanCosS_Type(Integer32):
    """Custom type v6wanConnSvlanCosS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_V6wanConnSvlanCosS_Type.__name__ = "Integer32"
_V6wanConnSvlanCosS_Object = MibTableColumn
v6wanConnSvlanCosS = _V6wanConnSvlanCosS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 44),
    _V6wanConnSvlanCosS_Type()
)
v6wanConnSvlanCosS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnSvlanCosS.setStatus("current")


class _V6wanConnRouteMtuS_Type(Integer32):
    """Custom type v6wanConnRouteMtuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(576, 1500),
    )


_V6wanConnRouteMtuS_Type.__name__ = "Integer32"
_V6wanConnRouteMtuS_Object = MibTableColumn
v6wanConnRouteMtuS = _V6wanConnRouteMtuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 53, 1, 45),
    _V6wanConnRouteMtuS_Type()
)
v6wanConnRouteMtuS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    v6wanConnRouteMtuS.setStatus("current")
_OnuTr069ManageTable_Object = MibTable
onuTr069ManageTable = _OnuTr069ManageTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54)
)
if mibBuilder.loadTexts:
    onuTr069ManageTable.setStatus("current")
_OnuTr069ManageEntry_Object = MibTableRow
onuTr069ManageEntry = _OnuTr069ManageEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1)
)
onuTr069ManageEntry.setIndexNames(
    (0, "V1600D", "onuMngSrvId"),
)
if mibBuilder.loadTexts:
    onuTr069ManageEntry.setStatus("current")
_OnuMngSrvId_Type = Integer32
_OnuMngSrvId_Object = MibTableColumn
onuMngSrvId = _OnuMngSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 1),
    _OnuMngSrvId_Type()
)
onuMngSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngSrvId.setStatus("current")
_OnuMngAcsAddress_Type = OctetString
_OnuMngAcsAddress_Object = MibTableColumn
onuMngAcsAddress = _OnuMngAcsAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 2),
    _OnuMngAcsAddress_Type()
)
onuMngAcsAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngAcsAddress.setStatus("current")
_OnuMngAcsUsername_Type = OctetString
_OnuMngAcsUsername_Object = MibTableColumn
onuMngAcsUsername = _OnuMngAcsUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 3),
    _OnuMngAcsUsername_Type()
)
onuMngAcsUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngAcsUsername.setStatus("current")
_OnuMngAcsPassword_Type = OctetString
_OnuMngAcsPassword_Object = MibTableColumn
onuMngAcsPassword = _OnuMngAcsPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 4),
    _OnuMngAcsPassword_Type()
)
onuMngAcsPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngAcsPassword.setStatus("current")


class _OnuMngCertificateEn_Type(Integer32):
    """Custom type onuMngCertificateEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuMngCertificateEn_Type.__name__ = "Integer32"
_OnuMngCertificateEn_Object = MibTableColumn
onuMngCertificateEn = _OnuMngCertificateEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 5),
    _OnuMngCertificateEn_Type()
)
onuMngCertificateEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngCertificateEn.setStatus("current")


class _OnuMngInformEn_Type(Integer32):
    """Custom type onuMngInformEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuMngInformEn_Type.__name__ = "Integer32"
_OnuMngInformEn_Object = MibTableColumn
onuMngInformEn = _OnuMngInformEn_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 6),
    _OnuMngInformEn_Type()
)
onuMngInformEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngInformEn.setStatus("current")
_OnuMngInformIntervalTime_Type = Unsigned32
_OnuMngInformIntervalTime_Object = MibTableColumn
onuMngInformIntervalTime = _OnuMngInformIntervalTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 7),
    _OnuMngInformIntervalTime_Type()
)
onuMngInformIntervalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngInformIntervalTime.setStatus("current")
_OnuMngRevConnUsername_Type = OctetString
_OnuMngRevConnUsername_Object = MibTableColumn
onuMngRevConnUsername = _OnuMngRevConnUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 8),
    _OnuMngRevConnUsername_Type()
)
onuMngRevConnUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngRevConnUsername.setStatus("current")
_OnuMngRevConnPassword_Type = OctetString
_OnuMngRevConnPassword_Object = MibTableColumn
onuMngRevConnPassword = _OnuMngRevConnPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 9),
    _OnuMngRevConnPassword_Type()
)
onuMngRevConnPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngRevConnPassword.setStatus("current")


class _OnuMngStatus_Type(Integer32):
    """Custom type onuMngStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuMngStatus_Type.__name__ = "Integer32"
_OnuMngStatus_Object = MibTableColumn
onuMngStatus = _OnuMngStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 54, 1, 10),
    _OnuMngStatus_Type()
)
onuMngStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuMngStatus.setStatus("current")
_OnuTr069StunTable_Object = MibTable
onuTr069StunTable = _OnuTr069StunTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55)
)
if mibBuilder.loadTexts:
    onuTr069StunTable.setStatus("current")
_OnuTr069StunEntry_Object = MibTableRow
onuTr069StunEntry = _OnuTr069StunEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1)
)
onuTr069StunEntry.setIndexNames(
    (0, "V1600D", "onuStunSrvId"),
)
if mibBuilder.loadTexts:
    onuTr069StunEntry.setStatus("current")
_OnuStunSrvId_Type = Integer32
_OnuStunSrvId_Object = MibTableColumn
onuStunSrvId = _OnuStunSrvId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1, 1),
    _OnuStunSrvId_Type()
)
onuStunSrvId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStunSrvId.setStatus("current")
_OnuStunServerAddress_Type = OctetString
_OnuStunServerAddress_Object = MibTableColumn
onuStunServerAddress = _OnuStunServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1, 2),
    _OnuStunServerAddress_Type()
)
onuStunServerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStunServerAddress.setStatus("current")
_OnuStunServerPort_Type = Integer32
_OnuStunServerPort_Object = MibTableColumn
onuStunServerPort = _OnuStunServerPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1, 3),
    _OnuStunServerPort_Type()
)
onuStunServerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStunServerPort.setStatus("current")
_OnuStunServerUsername_Type = OctetString
_OnuStunServerUsername_Object = MibTableColumn
onuStunServerUsername = _OnuStunServerUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1, 4),
    _OnuStunServerUsername_Type()
)
onuStunServerUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStunServerUsername.setStatus("current")
_OnuStunServerPassword_Type = OctetString
_OnuStunServerPassword_Object = MibTableColumn
onuStunServerPassword = _OnuStunServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1, 5),
    _OnuStunServerPassword_Type()
)
onuStunServerPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStunServerPassword.setStatus("current")


class _OnuStunStatus_Type(Integer32):
    """Custom type onuStunStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OnuStunStatus_Type.__name__ = "Integer32"
_OnuStunStatus_Object = MibTableColumn
onuStunStatus = _OnuStunStatus_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 2, 55, 1, 6),
    _OnuStunStatus_Type()
)
onuStunStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuStunStatus.setStatus("current")
_VoipProfileShow_ObjectIdentity = ObjectIdentity
voipProfileShow = _VoipProfileShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3)
)
_OnuPotsCountPFTable_Object = MibTable
onuPotsCountPFTable = _OnuPotsCountPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 1)
)
if mibBuilder.loadTexts:
    onuPotsCountPFTable.setStatus("current")
_OnuPotsCountPFEntry_Object = MibTableRow
onuPotsCountPFEntry = _OnuPotsCountPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 1, 1)
)
onuPotsCountPFEntry.setIndexNames(
    (0, "V1600D", "onuPotsCountVoipId"),
)
if mibBuilder.loadTexts:
    onuPotsCountPFEntry.setStatus("current")


class _OnuPotsCountVoipId_Type(Integer32):
    """Custom type onuPotsCountVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OnuPotsCountVoipId_Type.__name__ = "Integer32"
_OnuPotsCountVoipId_Object = MibTableColumn
onuPotsCountVoipId = _OnuPotsCountVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 1, 1, 1),
    _OnuPotsCountVoipId_Type()
)
onuPotsCountVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPotsCountVoipId.setStatus("current")


class _OnuPotsCountS_Type(Integer32):
    """Custom type onuPotsCountS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_OnuPotsCountS_Type.__name__ = "Integer32"
_OnuPotsCountS_Object = MibTableColumn
onuPotsCountS = _OnuPotsCountS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 1, 1, 2),
    _OnuPotsCountS_Type()
)
onuPotsCountS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    onuPotsCountS.setStatus("current")
_VoipGlobalPFTable_Object = MibTable
voipGlobalPFTable = _VoipGlobalPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2)
)
if mibBuilder.loadTexts:
    voipGlobalPFTable.setStatus("current")
_VoipGlobalPFEntry_Object = MibTableRow
voipGlobalPFEntry = _VoipGlobalPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1)
)
voipGlobalPFEntry.setIndexNames(
    (0, "V1600D", "voipGlobalVoipId"),
)
if mibBuilder.loadTexts:
    voipGlobalPFEntry.setStatus("current")


class _VoipGlobalVoipId_Type(Integer32):
    """Custom type voipGlobalVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VoipGlobalVoipId_Type.__name__ = "Integer32"
_VoipGlobalVoipId_Object = MibTableColumn
voipGlobalVoipId = _VoipGlobalVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 1),
    _VoipGlobalVoipId_Type()
)
voipGlobalVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalVoipId.setStatus("current")


class _VoipGlobalIpModeS_Type(Integer32):
    """Custom type voipGlobalIpModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("staticip", 0),
          ("dhcp", 1),
          ("pppoe", 2))
    )


_VoipGlobalIpModeS_Type.__name__ = "Integer32"
_VoipGlobalIpModeS_Object = MibTableColumn
voipGlobalIpModeS = _VoipGlobalIpModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 2),
    _VoipGlobalIpModeS_Type()
)
voipGlobalIpModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalIpModeS.setStatus("current")
_VoipGlobalIpAddrS_Type = IpAddress
_VoipGlobalIpAddrS_Object = MibTableColumn
voipGlobalIpAddrS = _VoipGlobalIpAddrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 3),
    _VoipGlobalIpAddrS_Type()
)
voipGlobalIpAddrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalIpAddrS.setStatus("current")
_VoipGlobalIpMaskS_Type = IpAddress
_VoipGlobalIpMaskS_Object = MibTableColumn
voipGlobalIpMaskS = _VoipGlobalIpMaskS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 4),
    _VoipGlobalIpMaskS_Type()
)
voipGlobalIpMaskS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalIpMaskS.setStatus("current")
_VoipGlobalIpGwS_Type = IpAddress
_VoipGlobalIpGwS_Object = MibTableColumn
voipGlobalIpGwS = _VoipGlobalIpGwS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 5),
    _VoipGlobalIpGwS_Type()
)
voipGlobalIpGwS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalIpGwS.setStatus("current")


class _VoipGlobalPppoeModeS_Type(Integer32):
    """Custom type voipGlobalPppoeModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("chap", 2),
          ("pap", 3))
    )


_VoipGlobalPppoeModeS_Type.__name__ = "Integer32"
_VoipGlobalPppoeModeS_Object = MibTableColumn
voipGlobalPppoeModeS = _VoipGlobalPppoeModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 6),
    _VoipGlobalPppoeModeS_Type()
)
voipGlobalPppoeModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalPppoeModeS.setStatus("current")
_VoipGlobalPppoeUsrS_Type = OctetString
_VoipGlobalPppoeUsrS_Object = MibTableColumn
voipGlobalPppoeUsrS = _VoipGlobalPppoeUsrS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 7),
    _VoipGlobalPppoeUsrS_Type()
)
voipGlobalPppoeUsrS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalPppoeUsrS.setStatus("current")
_VoipGlobalPppoePwS_Type = OctetString
_VoipGlobalPppoePwS_Object = MibTableColumn
voipGlobalPppoePwS = _VoipGlobalPppoePwS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 8),
    _VoipGlobalPppoePwS_Type()
)
voipGlobalPppoePwS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalPppoePwS.setStatus("current")


class _VoipGlobalModeS_Type(Integer32):
    """Custom type voipGlobalModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 1),
          ("tag", 2),
          ("vlan_stacking", 3))
    )


_VoipGlobalModeS_Type.__name__ = "Integer32"
_VoipGlobalModeS_Object = MibTableColumn
voipGlobalModeS = _VoipGlobalModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 9),
    _VoipGlobalModeS_Type()
)
voipGlobalModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalModeS.setStatus("current")


class _VoipGlobalCvlanS_Type(Integer32):
    """Custom type voipGlobalCvlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipGlobalCvlanS_Type.__name__ = "Integer32"
_VoipGlobalCvlanS_Object = MibTableColumn
voipGlobalCvlanS = _VoipGlobalCvlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 10),
    _VoipGlobalCvlanS_Type()
)
voipGlobalCvlanS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalCvlanS.setStatus("current")


class _VoipGlobalSvlanS_Type(Integer32):
    """Custom type voipGlobalSvlanS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipGlobalSvlanS_Type.__name__ = "Integer32"
_VoipGlobalSvlanS_Object = MibTableColumn
voipGlobalSvlanS = _VoipGlobalSvlanS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 11),
    _VoipGlobalSvlanS_Type()
)
voipGlobalSvlanS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalSvlanS.setStatus("current")


class _VoipGlobalPriS_Type(Integer32):
    """Custom type voipGlobalPriS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipGlobalPriS_Type.__name__ = "Integer32"
_VoipGlobalPriS_Object = MibTableColumn
voipGlobalPriS = _VoipGlobalPriS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 2, 1, 12),
    _VoipGlobalPriS_Type()
)
voipGlobalPriS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipGlobalPriS.setStatus("current")
_H248ProPFTable_Object = MibTable
h248ProPFTable = _H248ProPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3)
)
if mibBuilder.loadTexts:
    h248ProPFTable.setStatus("current")
_H248ProPFEntry_Object = MibTableRow
h248ProPFEntry = _H248ProPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1)
)
h248ProPFEntry.setIndexNames(
    (0, "V1600D", "h248ProVoipId"),
)
if mibBuilder.loadTexts:
    h248ProPFEntry.setStatus("current")


class _H248ProVoipId_Type(Integer32):
    """Custom type h248ProVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_H248ProVoipId_Type.__name__ = "Integer32"
_H248ProVoipId_Object = MibTableColumn
h248ProVoipId = _H248ProVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 1),
    _H248ProVoipId_Type()
)
h248ProVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProVoipId.setStatus("current")


class _H248ProMgPortS_Type(Integer32):
    """Custom type h248ProMgPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ProMgPortS_Type.__name__ = "Integer32"
_H248ProMgPortS_Object = MibTableColumn
h248ProMgPortS = _H248ProMgPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 2),
    _H248ProMgPortS_Type()
)
h248ProMgPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProMgPortS.setStatus("current")
_H248ProMgcIpS_Type = IpAddress
_H248ProMgcIpS_Object = MibTableColumn
h248ProMgcIpS = _H248ProMgcIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 3),
    _H248ProMgcIpS_Type()
)
h248ProMgcIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProMgcIpS.setStatus("current")


class _H248ProMgComPortS_Type(Integer32):
    """Custom type h248ProMgComPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ProMgComPortS_Type.__name__ = "Integer32"
_H248ProMgComPortS_Object = MibTableColumn
h248ProMgComPortS = _H248ProMgComPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 4),
    _H248ProMgComPortS_Type()
)
h248ProMgComPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProMgComPortS.setStatus("current")
_H248ProBakMgcIpS_Type = IpAddress
_H248ProBakMgcIpS_Object = MibTableColumn
h248ProBakMgcIpS = _H248ProBakMgcIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 5),
    _H248ProBakMgcIpS_Type()
)
h248ProBakMgcIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProBakMgcIpS.setStatus("current")


class _H248ProBakMgcPortS_Type(Integer32):
    """Custom type h248ProBakMgcPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ProBakMgcPortS_Type.__name__ = "Integer32"
_H248ProBakMgcPortS_Object = MibTableColumn
h248ProBakMgcPortS = _H248ProBakMgcPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 6),
    _H248ProBakMgcPortS_Type()
)
h248ProBakMgcPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProBakMgcPortS.setStatus("current")


class _H248ProRegModeS_Type(Integer32):
    """Custom type h248ProRegModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip_addr", 0),
          ("realm_name", 1),
          ("device_name", 2))
    )


_H248ProRegModeS_Type.__name__ = "Integer32"
_H248ProRegModeS_Object = MibTableColumn
h248ProRegModeS = _H248ProRegModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 7),
    _H248ProRegModeS_Type()
)
h248ProRegModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProRegModeS.setStatus("current")
_H248ProMIDS_Type = OctetString
_H248ProMIDS_Object = MibTableColumn
h248ProMIDS = _H248ProMIDS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 8),
    _H248ProMIDS_Type()
)
h248ProMIDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProMIDS.setStatus("current")


class _H248ProHBModeS_Type(Integer32):
    """Custom type h248ProHBModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("h248", 1))
    )


_H248ProHBModeS_Type.__name__ = "Integer32"
_H248ProHBModeS_Object = MibTableColumn
h248ProHBModeS = _H248ProHBModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 9),
    _H248ProHBModeS_Type()
)
h248ProHBModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProHBModeS.setStatus("current")


class _H248ProHBCycleS_Type(Integer32):
    """Custom type h248ProHBCycleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ProHBCycleS_Type.__name__ = "Integer32"
_H248ProHBCycleS_Object = MibTableColumn
h248ProHBCycleS = _H248ProHBCycleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 10),
    _H248ProHBCycleS_Type()
)
h248ProHBCycleS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProHBCycleS.setStatus("current")


class _H248ProHBCountS_Type(Integer32):
    """Custom type h248ProHBCountS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_H248ProHBCountS_Type.__name__ = "Integer32"
_H248ProHBCountS_Object = MibTableColumn
h248ProHBCountS = _H248ProHBCountS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 3, 1, 11),
    _H248ProHBCountS_Type()
)
h248ProHBCountS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248ProHBCountS.setStatus("current")
_H248RtpTidPFTable_Object = MibTable
h248RtpTidPFTable = _H248RtpTidPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4)
)
if mibBuilder.loadTexts:
    h248RtpTidPFTable.setStatus("current")
_H248RtpTidPFEntry_Object = MibTableRow
h248RtpTidPFEntry = _H248RtpTidPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1)
)
h248RtpTidPFEntry.setIndexNames(
    (0, "V1600D", "h248RtpTidVoipId"),
)
if mibBuilder.loadTexts:
    h248RtpTidPFEntry.setStatus("current")


class _H248RtpTidVoipId_Type(Integer32):
    """Custom type h248RtpTidVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_H248RtpTidVoipId_Type.__name__ = "Integer32"
_H248RtpTidVoipId_Object = MibTableColumn
h248RtpTidVoipId = _H248RtpTidVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 1),
    _H248RtpTidVoipId_Type()
)
h248RtpTidVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidVoipId.setStatus("current")


class _H248RtpTidNumberS_Type(Integer32):
    """Custom type h248RtpTidNumberS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_H248RtpTidNumberS_Type.__name__ = "Integer32"
_H248RtpTidNumberS_Object = MibTableColumn
h248RtpTidNumberS = _H248RtpTidNumberS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 2),
    _H248RtpTidNumberS_Type()
)
h248RtpTidNumberS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidNumberS.setStatus("current")
_H248RtpTidPrefixS_Type = OctetString
_H248RtpTidPrefixS_Object = MibTableColumn
h248RtpTidPrefixS = _H248RtpTidPrefixS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 3),
    _H248RtpTidPrefixS_Type()
)
h248RtpTidPrefixS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidPrefixS.setStatus("current")


class _H248RtpTidBegin0S_Type(Unsigned32):
    """Custom type h248RtpTidBegin0S based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_H248RtpTidBegin0S_Type.__name__ = "Unsigned32"
_H248RtpTidBegin0S_Object = MibTableColumn
h248RtpTidBegin0S = _H248RtpTidBegin0S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 4),
    _H248RtpTidBegin0S_Type()
)
h248RtpTidBegin0S.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidBegin0S.setStatus("current")


class _H248RtpTidBegin1S_Type(Unsigned32):
    """Custom type h248RtpTidBegin1S based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_H248RtpTidBegin1S_Type.__name__ = "Unsigned32"
_H248RtpTidBegin1S_Object = MibTableColumn
h248RtpTidBegin1S = _H248RtpTidBegin1S_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 5),
    _H248RtpTidBegin1S_Type()
)
h248RtpTidBegin1S.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidBegin1S.setStatus("current")


class _H248RtpTidModeS_Type(Integer32):
    """Custom type h248RtpTidModeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("align", 1),
          ("unalign", 2))
    )


_H248RtpTidModeS_Type.__name__ = "Integer32"
_H248RtpTidModeS_Object = MibTableColumn
h248RtpTidModeS = _H248RtpTidModeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 6),
    _H248RtpTidModeS_Type()
)
h248RtpTidModeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidModeS.setStatus("current")


class _H248RtpTidDGLengthS_Type(Integer32):
    """Custom type h248RtpTidDGLengthS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_H248RtpTidDGLengthS_Type.__name__ = "Integer32"
_H248RtpTidDGLengthS_Object = MibTableColumn
h248RtpTidDGLengthS = _H248RtpTidDGLengthS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 4, 1, 7),
    _H248RtpTidDGLengthS_Type()
)
h248RtpTidDGLengthS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248RtpTidDGLengthS.setStatus("current")
_H248UserTidPFTable_Object = MibTable
h248UserTidPFTable = _H248UserTidPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 5)
)
if mibBuilder.loadTexts:
    h248UserTidPFTable.setStatus("current")
_H248UserTidPFEntry_Object = MibTableRow
h248UserTidPFEntry = _H248UserTidPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 5, 1)
)
h248UserTidPFEntry.setIndexNames(
    (0, "V1600D", "h248UserTidVoipId"),
    (0, "V1600D", "h248UserTidPotsNoS"),
)
if mibBuilder.loadTexts:
    h248UserTidPFEntry.setStatus("current")


class _H248UserTidVoipId_Type(Integer32):
    """Custom type h248UserTidVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_H248UserTidVoipId_Type.__name__ = "Integer32"
_H248UserTidVoipId_Object = MibTableColumn
h248UserTidVoipId = _H248UserTidVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 5, 1, 1),
    _H248UserTidVoipId_Type()
)
h248UserTidVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTidVoipId.setStatus("current")


class _H248UserTidPotsNoS_Type(Integer32):
    """Custom type h248UserTidPotsNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_H248UserTidPotsNoS_Type.__name__ = "Integer32"
_H248UserTidPotsNoS_Object = MibTableColumn
h248UserTidPotsNoS = _H248UserTidPotsNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 5, 1, 2),
    _H248UserTidPotsNoS_Type()
)
h248UserTidPotsNoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTidPotsNoS.setStatus("current")
_H248UserTidS_Type = OctetString
_H248UserTidS_Object = MibTableColumn
h248UserTidS = _H248UserTidS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 5, 1, 3),
    _H248UserTidS_Type()
)
h248UserTidS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    h248UserTidS.setStatus("current")
_SipProPFTable_Object = MibTable
sipProPFTable = _SipProPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6)
)
if mibBuilder.loadTexts:
    sipProPFTable.setStatus("current")
_SipProPFEntry_Object = MibTableRow
sipProPFEntry = _SipProPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1)
)
sipProPFEntry.setIndexNames(
    (0, "V1600D", "sipProVoipId"),
)
if mibBuilder.loadTexts:
    sipProPFEntry.setStatus("current")


class _SipProVoipId_Type(Integer32):
    """Custom type sipProVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipProVoipId_Type.__name__ = "Integer32"
_SipProVoipId_Object = MibTableColumn
sipProVoipId = _SipProVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 1),
    _SipProVoipId_Type()
)
sipProVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProVoipId.setStatus("current")


class _SipProMgPortS_Type(Integer32):
    """Custom type sipProMgPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipProMgPortS_Type.__name__ = "Integer32"
_SipProMgPortS_Object = MibTableColumn
sipProMgPortS = _SipProMgPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 2),
    _SipProMgPortS_Type()
)
sipProMgPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProMgPortS.setStatus("current")
_SipProProxySrvIpS_Type = IpAddress
_SipProProxySrvIpS_Object = MibTableColumn
sipProProxySrvIpS = _SipProProxySrvIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 3),
    _SipProProxySrvIpS_Type()
)
sipProProxySrvIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProProxySrvIpS.setStatus("current")


class _SipProProxySrvPortS_Type(Integer32):
    """Custom type sipProProxySrvPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipProProxySrvPortS_Type.__name__ = "Integer32"
_SipProProxySrvPortS_Object = MibTableColumn
sipProProxySrvPortS = _SipProProxySrvPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 4),
    _SipProProxySrvPortS_Type()
)
sipProProxySrvPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProProxySrvPortS.setStatus("current")
_SipProBKProxySrvIpS_Type = IpAddress
_SipProBKProxySrvIpS_Object = MibTableColumn
sipProBKProxySrvIpS = _SipProBKProxySrvIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 5),
    _SipProBKProxySrvIpS_Type()
)
sipProBKProxySrvIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProBKProxySrvIpS.setStatus("current")


class _SipProBKProxySrvPortS_Type(Integer32):
    """Custom type sipProBKProxySrvPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipProBKProxySrvPortS_Type.__name__ = "Integer32"
_SipProBKProxySrvPortS_Object = MibTableColumn
sipProBKProxySrvPortS = _SipProBKProxySrvPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 6),
    _SipProBKProxySrvPortS_Type()
)
sipProBKProxySrvPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProBKProxySrvPortS.setStatus("current")
_SipProRegSrvIpS_Type = OctetString
_SipProRegSrvIpS_Object = MibTableColumn
sipProRegSrvIpS = _SipProRegSrvIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 7),
    _SipProRegSrvIpS_Type()
)
sipProRegSrvIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProRegSrvIpS.setStatus("current")


class _SipProRegSrvPortS_Type(Integer32):
    """Custom type sipProRegSrvPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipProRegSrvPortS_Type.__name__ = "Integer32"
_SipProRegSrvPortS_Object = MibTableColumn
sipProRegSrvPortS = _SipProRegSrvPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 8),
    _SipProRegSrvPortS_Type()
)
sipProRegSrvPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProRegSrvPortS.setStatus("current")
_SipProBKRegSrvIpS_Type = IpAddress
_SipProBKRegSrvIpS_Object = MibTableColumn
sipProBKRegSrvIpS = _SipProBKRegSrvIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 9),
    _SipProBKRegSrvIpS_Type()
)
sipProBKRegSrvIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProBKRegSrvIpS.setStatus("current")


class _SipProBKRegSrvPortS_Type(Integer32):
    """Custom type sipProBKRegSrvPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipProBKRegSrvPortS_Type.__name__ = "Integer32"
_SipProBKRegSrvPortS_Object = MibTableColumn
sipProBKRegSrvPortS = _SipProBKRegSrvPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 10),
    _SipProBKRegSrvPortS_Type()
)
sipProBKRegSrvPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProBKRegSrvPortS.setStatus("current")
_SipProOutBoundServIpS_Type = IpAddress
_SipProOutBoundServIpS_Object = MibTableColumn
sipProOutBoundServIpS = _SipProOutBoundServIpS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 11),
    _SipProOutBoundServIpS_Type()
)
sipProOutBoundServIpS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProOutBoundServIpS.setStatus("current")


class _SipProOutBoundServPortS_Type(Integer32):
    """Custom type sipProOutBoundServPortS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipProOutBoundServPortS_Type.__name__ = "Integer32"
_SipProOutBoundServPortS_Object = MibTableColumn
sipProOutBoundServPortS = _SipProOutBoundServPortS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 12),
    _SipProOutBoundServPortS_Type()
)
sipProOutBoundServPortS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProOutBoundServPortS.setStatus("current")


class _SipProRegInterS_Type(Integer32):
    """Custom type sipProRegInterS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipProRegInterS_Type.__name__ = "Integer32"
_SipProRegInterS_Object = MibTableColumn
sipProRegInterS = _SipProRegInterS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 13),
    _SipProRegInterS_Type()
)
sipProRegInterS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProRegInterS.setStatus("current")


class _SipProHBEnableS_Type(Integer32):
    """Custom type sipProHBEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SipProHBEnableS_Type.__name__ = "Integer32"
_SipProHBEnableS_Object = MibTableColumn
sipProHBEnableS = _SipProHBEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 14),
    _SipProHBEnableS_Type()
)
sipProHBEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProHBEnableS.setStatus("current")


class _SipProHBCycleS_Type(Integer32):
    """Custom type sipProHBCycleS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipProHBCycleS_Type.__name__ = "Integer32"
_SipProHBCycleS_Object = MibTableColumn
sipProHBCycleS = _SipProHBCycleS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 15),
    _SipProHBCycleS_Type()
)
sipProHBCycleS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProHBCycleS.setStatus("current")


class _SipProHBCountS_Type(Integer32):
    """Custom type sipProHBCountS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipProHBCountS_Type.__name__ = "Integer32"
_SipProHBCountS_Object = MibTableColumn
sipProHBCountS = _SipProHBCountS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 6, 1, 16),
    _SipProHBCountS_Type()
)
sipProHBCountS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipProHBCountS.setStatus("current")
_SipUserPFTable_Object = MibTable
sipUserPFTable = _SipUserPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7)
)
if mibBuilder.loadTexts:
    sipUserPFTable.setStatus("current")
_SipUserPFEntry_Object = MibTableRow
sipUserPFEntry = _SipUserPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7, 1)
)
sipUserPFEntry.setIndexNames(
    (0, "V1600D", "sipUserVoipId"),
    (0, "V1600D", "sipUserPotsNoS"),
)
if mibBuilder.loadTexts:
    sipUserPFEntry.setStatus("current")


class _SipUserVoipId_Type(Integer32):
    """Custom type sipUserVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipUserVoipId_Type.__name__ = "Integer32"
_SipUserVoipId_Object = MibTableColumn
sipUserVoipId = _SipUserVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7, 1, 1),
    _SipUserVoipId_Type()
)
sipUserVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserVoipId.setStatus("current")


class _SipUserPotsNoS_Type(Integer32):
    """Custom type sipUserPotsNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SipUserPotsNoS_Type.__name__ = "Integer32"
_SipUserPotsNoS_Object = MibTableColumn
sipUserPotsNoS = _SipUserPotsNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7, 1, 2),
    _SipUserPotsNoS_Type()
)
sipUserPotsNoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserPotsNoS.setStatus("current")
_SipUserAccountS_Type = OctetString
_SipUserAccountS_Object = MibTableColumn
sipUserAccountS = _SipUserAccountS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7, 1, 3),
    _SipUserAccountS_Type()
)
sipUserAccountS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserAccountS.setStatus("current")
_SipUserNameS_Type = OctetString
_SipUserNameS_Object = MibTableColumn
sipUserNameS = _SipUserNameS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7, 1, 4),
    _SipUserNameS_Type()
)
sipUserNameS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserNameS.setStatus("current")
_SipUserPwS_Type = OctetString
_SipUserPwS_Object = MibTableColumn
sipUserPwS = _SipUserPwS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 7, 1, 5),
    _SipUserPwS_Type()
)
sipUserPwS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipUserPwS.setStatus("current")
_SipDigitPFTable_Object = MibTable
sipDigitPFTable = _SipDigitPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 8)
)
if mibBuilder.loadTexts:
    sipDigitPFTable.setStatus("current")
_SipDigitPFEntry_Object = MibTableRow
sipDigitPFEntry = _SipDigitPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 8, 1)
)
sipDigitPFEntry.setIndexNames(
    (0, "V1600D", "sipDigitVoipID"),
)
if mibBuilder.loadTexts:
    sipDigitPFEntry.setStatus("current")


class _SipDigitVoipID_Type(Integer32):
    """Custom type sipDigitVoipID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipDigitVoipID_Type.__name__ = "Integer32"
_SipDigitVoipID_Object = MibTableColumn
sipDigitVoipID = _SipDigitVoipID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 8, 1, 1),
    _SipDigitVoipID_Type()
)
sipDigitVoipID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitVoipID.setStatus("current")


class _SipDigitNumS_Type(Integer32):
    """Custom type sipDigitNumS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SipDigitNumS_Type.__name__ = "Integer32"
_SipDigitNumS_Object = MibTableColumn
sipDigitNumS = _SipDigitNumS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 8, 1, 2),
    _SipDigitNumS_Type()
)
sipDigitNumS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitNumS.setStatus("current")


class _SipDigitNumBlockS_Type(Integer32):
    """Custom type sipDigitNumBlockS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SipDigitNumBlockS_Type.__name__ = "Integer32"
_SipDigitNumBlockS_Object = MibTableColumn
sipDigitNumBlockS = _SipDigitNumBlockS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 8, 1, 3),
    _SipDigitNumBlockS_Type()
)
sipDigitNumBlockS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitNumBlockS.setStatus("current")
_SipDigitMapS_Type = OctetString
_SipDigitMapS_Object = MibTableColumn
sipDigitMapS = _SipDigitMapS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 8, 1, 4),
    _SipDigitMapS_Type()
)
sipDigitMapS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipDigitMapS.setStatus("current")
_VoipFaxModemPFTable_Object = MibTable
voipFaxModemPFTable = _VoipFaxModemPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 9)
)
if mibBuilder.loadTexts:
    voipFaxModemPFTable.setStatus("current")
_VoipFaxModemPFEntry_Object = MibTableRow
voipFaxModemPFEntry = _VoipFaxModemPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 9, 1)
)
voipFaxModemPFEntry.setIndexNames(
    (0, "V1600D", "voipFaxModemVoipId"),
)
if mibBuilder.loadTexts:
    voipFaxModemPFEntry.setStatus("current")


class _VoipFaxModemVoipId_Type(Integer32):
    """Custom type voipFaxModemVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VoipFaxModemVoipId_Type.__name__ = "Integer32"
_VoipFaxModemVoipId_Object = MibTableColumn
voipFaxModemVoipId = _VoipFaxModemVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 9, 1, 1),
    _VoipFaxModemVoipId_Type()
)
voipFaxModemVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipFaxModemVoipId.setStatus("current")


class _VoipFaxModemT38EnS_Type(Integer32):
    """Custom type voipFaxModemT38EnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VoipFaxModemT38EnS_Type.__name__ = "Integer32"
_VoipFaxModemT38EnS_Object = MibTableColumn
voipFaxModemT38EnS = _VoipFaxModemT38EnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 9, 1, 2),
    _VoipFaxModemT38EnS_Type()
)
voipFaxModemT38EnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipFaxModemT38EnS.setStatus("current")


class _VoipFaxModemControlS_Type(Integer32):
    """Custom type voipFaxModemControlS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("negotiation", 1),
          ("auto_vbd", 2))
    )


_VoipFaxModemControlS_Type.__name__ = "Integer32"
_VoipFaxModemControlS_Object = MibTableColumn
voipFaxModemControlS = _VoipFaxModemControlS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 9, 1, 3),
    _VoipFaxModemControlS_Type()
)
voipFaxModemControlS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipFaxModemControlS.setStatus("current")
_VoipPotsManagePFTable_Object = MibTable
voipPotsManagePFTable = _VoipPotsManagePFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 10)
)
if mibBuilder.loadTexts:
    voipPotsManagePFTable.setStatus("current")
_VoipPotsManagePFEntry_Object = MibTableRow
voipPotsManagePFEntry = _VoipPotsManagePFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 10, 1)
)
voipPotsManagePFEntry.setIndexNames(
    (0, "V1600D", "voipPotsManageVoipId"),
    (0, "V1600D", "voipPotsManagNoS"),
)
if mibBuilder.loadTexts:
    voipPotsManagePFEntry.setStatus("current")


class _VoipPotsManageVoipId_Type(Integer32):
    """Custom type voipPotsManageVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VoipPotsManageVoipId_Type.__name__ = "Integer32"
_VoipPotsManageVoipId_Object = MibTableColumn
voipPotsManageVoipId = _VoipPotsManageVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 10, 1, 1),
    _VoipPotsManageVoipId_Type()
)
voipPotsManageVoipId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPotsManageVoipId.setStatus("current")


class _VoipPotsManagNoS_Type(Integer32):
    """Custom type voipPotsManagNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VoipPotsManagNoS_Type.__name__ = "Integer32"
_VoipPotsManagNoS_Object = MibTableColumn
voipPotsManagNoS = _VoipPotsManagNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 10, 1, 2),
    _VoipPotsManagNoS_Type()
)
voipPotsManagNoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPotsManagNoS.setStatus("current")


class _VoipPotsManageEnableS_Type(Integer32):
    """Custom type voipPotsManageEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VoipPotsManageEnableS_Type.__name__ = "Integer32"
_VoipPotsManageEnableS_Object = MibTableColumn
voipPotsManageEnableS = _VoipPotsManageEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 10, 1, 3),
    _VoipPotsManageEnableS_Type()
)
voipPotsManageEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voipPotsManageEnableS.setStatus("current")
_VoipTimerTable_Object = MibTable
voipTimerTable = _VoipTimerTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11)
)
if mibBuilder.loadTexts:
    voipTimerTable.setStatus("current")
_VoipTimerEntry_Object = MibTableRow
voipTimerEntry = _VoipTimerEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1)
)
voipTimerEntry.setIndexNames(
    (0, "V1600D", "voipTimerPfId"),
)
if mibBuilder.loadTexts:
    voipTimerEntry.setStatus("current")


class _VoipTimerPfId_Type(Integer32):
    """Custom type voipTimerPfId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VoipTimerPfId_Type.__name__ = "Integer32"
_VoipTimerPfId_Object = MibTableColumn
voipTimerPfId = _VoipTimerPfId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1, 1),
    _VoipTimerPfId_Type()
)
voipTimerPfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipTimerPfId.setStatus("current")


class _VoipMaxWaitTime_Type(Integer32):
    """Custom type voipMaxWaitTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_VoipMaxWaitTime_Type.__name__ = "Integer32"
_VoipMaxWaitTime_Object = MibTableColumn
voipMaxWaitTime = _VoipMaxWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1, 2),
    _VoipMaxWaitTime_Type()
)
voipMaxWaitTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipMaxWaitTime.setStatus("current")


class _VoipStartTimer_Type(Integer32):
    """Custom type voipStartTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VoipStartTimer_Type.__name__ = "Integer32"
_VoipStartTimer_Object = MibTableColumn
voipStartTimer = _VoipStartTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1, 3),
    _VoipStartTimer_Type()
)
voipStartTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipStartTimer.setStatus("current")


class _VoipLongTimer_Type(Integer32):
    """Custom type voipLongTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VoipLongTimer_Type.__name__ = "Integer32"
_VoipLongTimer_Object = MibTableColumn
voipLongTimer = _VoipLongTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1, 4),
    _VoipLongTimer_Type()
)
voipLongTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipLongTimer.setStatus("current")


class _VoipShortTimer_Type(Integer32):
    """Custom type voipShortTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VoipShortTimer_Type.__name__ = "Integer32"
_VoipShortTimer_Object = MibTableColumn
voipShortTimer = _VoipShortTimer_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1, 5),
    _VoipShortTimer_Type()
)
voipShortTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipShortTimer.setStatus("current")


class _VoipDigitMapNotify_Type(Integer32):
    """Custom type voipDigitMapNotify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VoipDigitMapNotify_Type.__name__ = "Integer32"
_VoipDigitMapNotify_Object = MibTableColumn
voipDigitMapNotify = _VoipDigitMapNotify_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 11, 1, 6),
    _VoipDigitMapNotify_Type()
)
voipDigitMapNotify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipDigitMapNotify.setStatus("current")
_PotsParamterTable_Object = MibTable
potsParamterTable = _PotsParamterTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12)
)
if mibBuilder.loadTexts:
    potsParamterTable.setStatus("current")
_PotsParamterEntry_Object = MibTableRow
potsParamterEntry = _PotsParamterEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1)
)
potsParamterEntry.setIndexNames(
    (0, "V1600D", "potsPtPfId"),
    (0, "V1600D", "potsPtPotsNo"),
)
if mibBuilder.loadTexts:
    potsParamterEntry.setStatus("current")


class _PotsPtPfId_Type(Integer32):
    """Custom type potsPtPfId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PotsPtPfId_Type.__name__ = "Integer32"
_PotsPtPfId_Object = MibTableColumn
potsPtPfId = _PotsPtPfId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 1),
    _PotsPtPfId_Type()
)
potsPtPfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtPfId.setStatus("current")


class _PotsPtPotsNo_Type(Integer32):
    """Custom type potsPtPotsNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PotsPtPotsNo_Type.__name__ = "Integer32"
_PotsPtPotsNo_Object = MibTableColumn
potsPtPotsNo = _PotsPtPotsNo_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 2),
    _PotsPtPotsNo_Type()
)
potsPtPotsNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtPotsNo.setStatus("current")


class _PotsPtVad_Type(Integer32):
    """Custom type potsPtVad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PotsPtVad_Type.__name__ = "Integer32"
_PotsPtVad_Object = MibTableColumn
potsPtVad = _PotsPtVad_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 3),
    _PotsPtVad_Type()
)
potsPtVad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtVad.setStatus("current")


class _PotsPtEchoCancel_Type(Integer32):
    """Custom type potsPtEchoCancel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_PotsPtEchoCancel_Type.__name__ = "Integer32"
_PotsPtEchoCancel_Object = MibTableColumn
potsPtEchoCancel = _PotsPtEchoCancel_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 4),
    _PotsPtEchoCancel_Type()
)
potsPtEchoCancel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtEchoCancel.setStatus("current")


class _PotsPtInputGain_Type(Integer32):
    """Custom type potsPtInputGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PotsPtInputGain_Type.__name__ = "Integer32"
_PotsPtInputGain_Object = MibTableColumn
potsPtInputGain = _PotsPtInputGain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 5),
    _PotsPtInputGain_Type()
)
potsPtInputGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtInputGain.setStatus("current")


class _PotsPtOutputGain_Type(Integer32):
    """Custom type potsPtOutputGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32, 32),
    )


_PotsPtOutputGain_Type.__name__ = "Integer32"
_PotsPtOutputGain_Object = MibTableColumn
potsPtOutputGain = _PotsPtOutputGain_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 6),
    _PotsPtOutputGain_Type()
)
potsPtOutputGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtOutputGain.setStatus("current")


class _PotsPtDtmfMode_Type(Integer32):
    """Custom type potsPtDtmfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("transparent", 0),
          ("rfc2833", 1),
          ("rfc2833_redundancy", 2),
          ("outband", 3))
    )


_PotsPtDtmfMode_Type.__name__ = "Integer32"
_PotsPtDtmfMode_Object = MibTableColumn
potsPtDtmfMode = _PotsPtDtmfMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 12, 1, 7),
    _PotsPtDtmfMode_Type()
)
potsPtDtmfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    potsPtDtmfMode.setStatus("current")
_VoipParamTable_Object = MibTable
voipParamTable = _VoipParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13)
)
if mibBuilder.loadTexts:
    voipParamTable.setStatus("current")
_VoipParamEntry_Object = MibTableRow
voipParamEntry = _VoipParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1)
)
voipParamEntry.setIndexNames(
    (0, "V1600D", "voipParamVoipId"),
)
if mibBuilder.loadTexts:
    voipParamEntry.setStatus("current")


class _VoipParamVoipId_Type(Integer32):
    """Custom type voipParamVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VoipParamVoipId_Type.__name__ = "Integer32"
_VoipParamVoipId_Object = MibTableColumn
voipParamVoipId = _VoipParamVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 1),
    _VoipParamVoipId_Type()
)
voipParamVoipId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamVoipId.setStatus("current")


class _VoipParamIpMode_Type(Integer32):
    """Custom type voipParamIpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dhcp", 2),
          ("pppoe", 3))
    )


_VoipParamIpMode_Type.__name__ = "Integer32"
_VoipParamIpMode_Object = MibTableColumn
voipParamIpMode = _VoipParamIpMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 2),
    _VoipParamIpMode_Type()
)
voipParamIpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamIpMode.setStatus("current")
_VoipParamIp_Type = IpAddress
_VoipParamIp_Object = MibTableColumn
voipParamIp = _VoipParamIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 3),
    _VoipParamIp_Type()
)
voipParamIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamIp.setStatus("current")
_VoipParamMask_Type = IpAddress
_VoipParamMask_Object = MibTableColumn
voipParamMask = _VoipParamMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 4),
    _VoipParamMask_Type()
)
voipParamMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamMask.setStatus("current")
_VoipParamGw_Type = IpAddress
_VoipParamGw_Object = MibTableColumn
voipParamGw = _VoipParamGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 5),
    _VoipParamGw_Type()
)
voipParamGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamGw.setStatus("current")
_VoipRtpIp_Type = IpAddress
_VoipRtpIp_Object = MibTableColumn
voipRtpIp = _VoipRtpIp_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 6),
    _VoipRtpIp_Type()
)
voipRtpIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpIp.setStatus("current")
_VoipRtpMask_Type = IpAddress
_VoipRtpMask_Object = MibTableColumn
voipRtpMask = _VoipRtpMask_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 7),
    _VoipRtpMask_Type()
)
voipRtpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpMask.setStatus("current")
_VoipRtpGw_Type = IpAddress
_VoipRtpGw_Object = MibTableColumn
voipRtpGw = _VoipRtpGw_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 8),
    _VoipRtpGw_Type()
)
voipRtpGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpGw.setStatus("current")
_VoipDnsMaster_Type = IpAddress
_VoipDnsMaster_Object = MibTableColumn
voipDnsMaster = _VoipDnsMaster_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 9),
    _VoipDnsMaster_Type()
)
voipDnsMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipDnsMaster.setStatus("current")
_VoipDnsSlave_Type = IpAddress
_VoipDnsSlave_Object = MibTableColumn
voipDnsSlave = _VoipDnsSlave_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 10),
    _VoipDnsSlave_Type()
)
voipDnsSlave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipDnsSlave.setStatus("current")


class _VoipDhcpOption60En_Type(Integer32):
    """Custom type voipDhcpOption60En based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VoipDhcpOption60En_Type.__name__ = "Integer32"
_VoipDhcpOption60En_Object = MibTableColumn
voipDhcpOption60En = _VoipDhcpOption60En_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 11),
    _VoipDhcpOption60En_Type()
)
voipDhcpOption60En.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipDhcpOption60En.setStatus("current")
_VoipDhcpOption60Base_Type = OctetString
_VoipDhcpOption60Base_Object = MibTableColumn
voipDhcpOption60Base = _VoipDhcpOption60Base_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 12),
    _VoipDhcpOption60Base_Type()
)
voipDhcpOption60Base.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipDhcpOption60Base.setStatus("current")
_VoipDhcpOption60Val_Type = OctetString
_VoipDhcpOption60Val_Object = MibTableColumn
voipDhcpOption60Val = _VoipDhcpOption60Val_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 13),
    _VoipDhcpOption60Val_Type()
)
voipDhcpOption60Val.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipDhcpOption60Val.setStatus("current")


class _VoipParamPPPoEMode_Type(Integer32):
    """Custom type voipParamPPPoEMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("chap", 2),
          ("pap", 3))
    )


_VoipParamPPPoEMode_Type.__name__ = "Integer32"
_VoipParamPPPoEMode_Object = MibTableColumn
voipParamPPPoEMode = _VoipParamPPPoEMode_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 14),
    _VoipParamPPPoEMode_Type()
)
voipParamPPPoEMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipParamPPPoEMode.setStatus("current")
_VoipPPPoEUsername_Type = OctetString
_VoipPPPoEUsername_Object = MibTableColumn
voipPPPoEUsername = _VoipPPPoEUsername_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 15),
    _VoipPPPoEUsername_Type()
)
voipPPPoEUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPPPoEUsername.setStatus("current")
_VoipPPPoEPassword_Type = OctetString
_VoipPPPoEPassword_Object = MibTableColumn
voipPPPoEPassword = _VoipPPPoEPassword_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 16),
    _VoipPPPoEPassword_Type()
)
voipPPPoEPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipPPPoEPassword.setStatus("current")
_VoipSVlanTpid_Type = Integer32
_VoipSVlanTpid_Object = MibTableColumn
voipSVlanTpid = _VoipSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 17),
    _VoipSVlanTpid_Type()
)
voipSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipSVlanTpid.setStatus("current")


class _VoipSVlanId_Type(Integer32):
    """Custom type voipSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipSVlanId_Type.__name__ = "Integer32"
_VoipSVlanId_Object = MibTableColumn
voipSVlanId = _VoipSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 18),
    _VoipSVlanId_Type()
)
voipSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipSVlanId.setStatus("current")


class _VoipSVlanCos_Type(Integer32):
    """Custom type voipSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipSVlanCos_Type.__name__ = "Integer32"
_VoipSVlanCos_Object = MibTableColumn
voipSVlanCos = _VoipSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 19),
    _VoipSVlanCos_Type()
)
voipSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipSVlanCos.setStatus("current")
_VoipCVlanTpid_Type = Integer32
_VoipCVlanTpid_Object = MibTableColumn
voipCVlanTpid = _VoipCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 20),
    _VoipCVlanTpid_Type()
)
voipCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipCVlanTpid.setStatus("current")


class _VoipCVlanId_Type(Integer32):
    """Custom type voipCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipCVlanId_Type.__name__ = "Integer32"
_VoipCVlanId_Object = MibTableColumn
voipCVlanId = _VoipCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 21),
    _VoipCVlanId_Type()
)
voipCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipCVlanId.setStatus("current")


class _VoipCVlanCos_Type(Integer32):
    """Custom type voipCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipCVlanCos_Type.__name__ = "Integer32"
_VoipCVlanCos_Object = MibTableColumn
voipCVlanCos = _VoipCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 22),
    _VoipCVlanCos_Type()
)
voipCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipCVlanCos.setStatus("current")
_VoipRtpSVlanTpid_Type = Integer32
_VoipRtpSVlanTpid_Object = MibTableColumn
voipRtpSVlanTpid = _VoipRtpSVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 23),
    _VoipRtpSVlanTpid_Type()
)
voipRtpSVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpSVlanTpid.setStatus("current")


class _VoipRtpSVlanId_Type(Integer32):
    """Custom type voipRtpSVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipRtpSVlanId_Type.__name__ = "Integer32"
_VoipRtpSVlanId_Object = MibTableColumn
voipRtpSVlanId = _VoipRtpSVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 24),
    _VoipRtpSVlanId_Type()
)
voipRtpSVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpSVlanId.setStatus("current")


class _VoipRtpSVlanCos_Type(Integer32):
    """Custom type voipRtpSVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipRtpSVlanCos_Type.__name__ = "Integer32"
_VoipRtpSVlanCos_Object = MibTableColumn
voipRtpSVlanCos = _VoipRtpSVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 25),
    _VoipRtpSVlanCos_Type()
)
voipRtpSVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpSVlanCos.setStatus("current")
_VoipRtpCVlanTpid_Type = Integer32
_VoipRtpCVlanTpid_Object = MibTableColumn
voipRtpCVlanTpid = _VoipRtpCVlanTpid_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 26),
    _VoipRtpCVlanTpid_Type()
)
voipRtpCVlanTpid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpCVlanTpid.setStatus("current")


class _VoipRtpCVlanId_Type(Integer32):
    """Custom type voipRtpCVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VoipRtpCVlanId_Type.__name__ = "Integer32"
_VoipRtpCVlanId_Object = MibTableColumn
voipRtpCVlanId = _VoipRtpCVlanId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 27),
    _VoipRtpCVlanId_Type()
)
voipRtpCVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpCVlanId.setStatus("current")


class _VoipRtpCVlanCos_Type(Integer32):
    """Custom type voipRtpCVlanCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoipRtpCVlanCos_Type.__name__ = "Integer32"
_VoipRtpCVlanCos_Object = MibTableColumn
voipRtpCVlanCos = _VoipRtpCVlanCos_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 13, 1, 28),
    _VoipRtpCVlanCos_Type()
)
voipRtpCVlanCos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voipRtpCVlanCos.setStatus("current")
_VoipSipParamTable_Object = MibTable
voipSipParamTable = _VoipSipParamTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14)
)
if mibBuilder.loadTexts:
    voipSipParamTable.setStatus("current")
_VoipSipParamEntry_Object = MibTableRow
voipSipParamEntry = _VoipSipParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1)
)
voipSipParamEntry.setIndexNames(
    (0, "V1600D", "sipVoipId"),
)
if mibBuilder.loadTexts:
    voipSipParamEntry.setStatus("current")


class _SipVoipId_Type(Integer32):
    """Custom type sipVoipId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipVoipId_Type.__name__ = "Integer32"
_SipVoipId_Object = MibTableColumn
sipVoipId = _SipVoipId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 1),
    _SipVoipId_Type()
)
sipVoipId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipVoipId.setStatus("current")
_SipProxyServName_Type = OctetString
_SipProxyServName_Object = MibTableColumn
sipProxyServName = _SipProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 2),
    _SipProxyServName_Type()
)
sipProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipProxyServName.setStatus("current")


class _SipProxyServPort_Type(Integer32):
    """Custom type sipProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipProxyServPort_Type.__name__ = "Integer32"
_SipProxyServPort_Object = MibTableColumn
sipProxyServPort = _SipProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 3),
    _SipProxyServPort_Type()
)
sipProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipProxyServPort.setStatus("current")
_SipBakProxyServName_Type = OctetString
_SipBakProxyServName_Object = MibTableColumn
sipBakProxyServName = _SipBakProxyServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 4),
    _SipBakProxyServName_Type()
)
sipBakProxyServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipBakProxyServName.setStatus("current")


class _SipBakProxyServPort_Type(Integer32):
    """Custom type sipBakProxyServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipBakProxyServPort_Type.__name__ = "Integer32"
_SipBakProxyServPort_Object = MibTableColumn
sipBakProxyServPort = _SipBakProxyServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 5),
    _SipBakProxyServPort_Type()
)
sipBakProxyServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipBakProxyServPort.setStatus("current")
_SipRegServName_Type = OctetString
_SipRegServName_Object = MibTableColumn
sipRegServName = _SipRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 6),
    _SipRegServName_Type()
)
sipRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipRegServName.setStatus("current")


class _SipRegServPort_Type(Integer32):
    """Custom type sipRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipRegServPort_Type.__name__ = "Integer32"
_SipRegServPort_Object = MibTableColumn
sipRegServPort = _SipRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 7),
    _SipRegServPort_Type()
)
sipRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipRegServPort.setStatus("current")
_SipBakRegServName_Type = OctetString
_SipBakRegServName_Object = MibTableColumn
sipBakRegServName = _SipBakRegServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 8),
    _SipBakRegServName_Type()
)
sipBakRegServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipBakRegServName.setStatus("current")


class _SipBakRegServPort_Type(Integer32):
    """Custom type sipBakRegServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipBakRegServPort_Type.__name__ = "Integer32"
_SipBakRegServPort_Object = MibTableColumn
sipBakRegServPort = _SipBakRegServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 9),
    _SipBakRegServPort_Type()
)
sipBakRegServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipBakRegServPort.setStatus("current")
_SipOutBndServName_Type = OctetString
_SipOutBndServName_Object = MibTableColumn
sipOutBndServName = _SipOutBndServName_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 10),
    _SipOutBndServName_Type()
)
sipOutBndServName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipOutBndServName.setStatus("current")


class _SipOutBndServPort_Type(Integer32):
    """Custom type sipOutBndServPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipOutBndServPort_Type.__name__ = "Integer32"
_SipOutBndServPort_Object = MibTableColumn
sipOutBndServPort = _SipOutBndServPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 11),
    _SipOutBndServPort_Type()
)
sipOutBndServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipOutBndServPort.setStatus("current")


class _SipMgPort_Type(Integer32):
    """Custom type sipMgPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SipMgPort_Type.__name__ = "Integer32"
_SipMgPort_Object = MibTableColumn
sipMgPort = _SipMgPort_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 12),
    _SipMgPort_Type()
)
sipMgPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipMgPort.setStatus("current")


class _SipRegInterValue_Type(Integer32):
    """Custom type sipRegInterValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_SipRegInterValue_Type.__name__ = "Integer32"
_SipRegInterValue_Object = MibTableColumn
sipRegInterValue = _SipRegInterValue_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 13),
    _SipRegInterValue_Type()
)
sipRegInterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipRegInterValue.setStatus("current")


class _SipHBeatCfg_Type(Integer32):
    """Custom type sipHBeatCfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("active", 1),
          ("passive", 2))
    )


_SipHBeatCfg_Type.__name__ = "Integer32"
_SipHBeatCfg_Object = MibTableColumn
sipHBeatCfg = _SipHBeatCfg_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 14),
    _SipHBeatCfg_Type()
)
sipHBeatCfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipHBeatCfg.setStatus("current")


class _SipHBeatCycle_Type(Integer32):
    """Custom type sipHBeatCycle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65525),
    )


_SipHBeatCycle_Type.__name__ = "Integer32"
_SipHBeatCycle_Object = MibTableColumn
sipHBeatCycle = _SipHBeatCycle_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 15),
    _SipHBeatCycle_Type()
)
sipHBeatCycle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipHBeatCycle.setStatus("current")


class _SipHBeatCount_Type(Integer32):
    """Custom type sipHBeatCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SipHBeatCount_Type.__name__ = "Integer32"
_SipHBeatCount_Object = MibTableColumn
sipHBeatCount = _SipHBeatCount_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 3, 14, 1, 16),
    _SipHBeatCount_Type()
)
sipHBeatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sipHBeatCount.setStatus("current")
_AlarmProfileShow_ObjectIdentity = ObjectIdentity
alarmProfileShow = _AlarmProfileShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4)
)
_AlarmOnuPFTable_Object = MibTable
alarmOnuPFTable = _AlarmOnuPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 1)
)
if mibBuilder.loadTexts:
    alarmOnuPFTable.setStatus("current")
_AlarmOnuPFEntry_Object = MibTableRow
alarmOnuPFEntry = _AlarmOnuPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 1, 1)
)
alarmOnuPFEntry.setIndexNames(
    (0, "V1600D", "alarmOnuAlarmId"),
    (0, "V1600D", "alarmOnunTypeS"),
)
if mibBuilder.loadTexts:
    alarmOnuPFEntry.setStatus("current")


class _AlarmOnuAlarmId_Type(Integer32):
    """Custom type alarmOnuAlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmOnuAlarmId_Type.__name__ = "Integer32"
_AlarmOnuAlarmId_Object = MibTableColumn
alarmOnuAlarmId = _AlarmOnuAlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 1, 1, 1),
    _AlarmOnuAlarmId_Type()
)
alarmOnuAlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuAlarmId.setStatus("current")


class _AlarmOnunTypeS_Type(Integer32):
    """Custom type alarmOnunTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("equipmentAlarm", 1),
          ("powerAlarm", 2),
          ("batteryMissing", 3),
          ("batteryFailure", 4),
          ("physicalIntrusion", 5),
          ("onuSelfTestFailure", 6),
          ("iadConnectionFailure", 7),
          ("ponIfSwitch", 8),
          ("sleepStatusUpdate", 9))
    )


_AlarmOnunTypeS_Type.__name__ = "Integer32"
_AlarmOnunTypeS_Object = MibTableColumn
alarmOnunTypeS = _AlarmOnunTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 1, 1, 2),
    _AlarmOnunTypeS_Type()
)
alarmOnunTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnunTypeS.setStatus("current")


class _AlarmOnuEnableS_Type(Integer32):
    """Custom type alarmOnuEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmOnuEnableS_Type.__name__ = "Integer32"
_AlarmOnuEnableS_Object = MibTableColumn
alarmOnuEnableS = _AlarmOnuEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 1, 1, 3),
    _AlarmOnuEnableS_Type()
)
alarmOnuEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuEnableS.setStatus("current")
_AlarmOnuThrPFTable_Object = MibTable
alarmOnuThrPFTable = _AlarmOnuThrPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2)
)
if mibBuilder.loadTexts:
    alarmOnuThrPFTable.setStatus("current")
_AlarmOnuThrPFEntry_Object = MibTableRow
alarmOnuThrPFEntry = _AlarmOnuThrPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2, 1)
)
alarmOnuThrPFEntry.setIndexNames(
    (0, "V1600D", "alarmOnuThrAlarmId"),
    (0, "V1600D", "alarmOnuThrTypeS"),
)
if mibBuilder.loadTexts:
    alarmOnuThrPFEntry.setStatus("current")


class _AlarmOnuThrAlarmId_Type(Integer32):
    """Custom type alarmOnuThrAlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmOnuThrAlarmId_Type.__name__ = "Integer32"
_AlarmOnuThrAlarmId_Object = MibTableColumn
alarmOnuThrAlarmId = _AlarmOnuThrAlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2, 1, 1),
    _AlarmOnuThrAlarmId_Type()
)
alarmOnuThrAlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuThrAlarmId.setStatus("current")


class _AlarmOnuThrTypeS_Type(Integer32):
    """Custom type alarmOnuThrTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("onuTempHighAlarm", 1),
          ("onuTempLowAlarm", 2),
          ("batteryVoltLow", 3))
    )


_AlarmOnuThrTypeS_Type.__name__ = "Integer32"
_AlarmOnuThrTypeS_Object = MibTableColumn
alarmOnuThrTypeS = _AlarmOnuThrTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2, 1, 2),
    _AlarmOnuThrTypeS_Type()
)
alarmOnuThrTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuThrTypeS.setStatus("current")


class _AlarmOnuThrEnS_Type(Integer32):
    """Custom type alarmOnuThrEnS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmOnuThrEnS_Type.__name__ = "Integer32"
_AlarmOnuThrEnS_Object = MibTableColumn
alarmOnuThrEnS = _AlarmOnuThrEnS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2, 1, 3),
    _AlarmOnuThrEnS_Type()
)
alarmOnuThrEnS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuThrEnS.setStatus("current")
_AlarmOnuThrAlarmS_Type = Integer32
_AlarmOnuThrAlarmS_Object = MibTableColumn
alarmOnuThrAlarmS = _AlarmOnuThrAlarmS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2, 1, 4),
    _AlarmOnuThrAlarmS_Type()
)
alarmOnuThrAlarmS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuThrAlarmS.setStatus("current")
_AlarmOnuThrClearS_Type = Integer32
_AlarmOnuThrClearS_Object = MibTableColumn
alarmOnuThrClearS = _AlarmOnuThrClearS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 2, 1, 5),
    _AlarmOnuThrClearS_Type()
)
alarmOnuThrClearS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOnuThrClearS.setStatus("current")
_AlarmPonPFTable_Object = MibTable
alarmPonPFTable = _AlarmPonPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3)
)
if mibBuilder.loadTexts:
    alarmPonPFTable.setStatus("current")
_AlarmPonPFEntry_Object = MibTableRow
alarmPonPFEntry = _AlarmPonPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3, 1)
)
alarmPonPFEntry.setIndexNames(
    (0, "V1600D", "alarmPonAlarmId"),
    (0, "V1600D", "alarmPonTypeS"),
)
if mibBuilder.loadTexts:
    alarmPonPFEntry.setStatus("current")


class _AlarmPonAlarmId_Type(Integer32):
    """Custom type alarmPonAlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPonAlarmId_Type.__name__ = "Integer32"
_AlarmPonAlarmId_Object = MibTableColumn
alarmPonAlarmId = _AlarmPonAlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3, 1, 1),
    _AlarmPonAlarmId_Type()
)
alarmPonAlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonAlarmId.setStatus("current")


class _AlarmPonTypeS_Type(Integer32):
    """Custom type alarmPonTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("rxPowerHighAlarm", 1),
          ("rxPowerLowAlarm", 2),
          ("txPowerHighAlarm", 3),
          ("txPowerLowAlarm", 4),
          ("txBiasHighAlarm", 5),
          ("txBiasLowAlarm", 6),
          ("vccHighAlarm", 7),
          ("vccLowAlarm", 8),
          ("tempHighAlarm", 9),
          ("tempLowAlarm", 10),
          ("rxPowerHighWarn", 11),
          ("rxPowerLowWarn", 12),
          ("txPowerHighWarn", 13),
          ("txPowerLowWarn", 14),
          ("txBiasHighWarn", 15),
          ("txBiasLowWarn", 16),
          ("vccHighWarn", 17),
          ("vccLowWarn", 18),
          ("tempHighWarn", 19),
          ("tempLowWarn", 20))
    )


_AlarmPonTypeS_Type.__name__ = "Integer32"
_AlarmPonTypeS_Object = MibTableColumn
alarmPonTypeS = _AlarmPonTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3, 1, 2),
    _AlarmPonTypeS_Type()
)
alarmPonTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonTypeS.setStatus("current")


class _AlarmPonEnableS_Type(Integer32):
    """Custom type alarmPonEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPonEnableS_Type.__name__ = "Integer32"
_AlarmPonEnableS_Object = MibTableColumn
alarmPonEnableS = _AlarmPonEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3, 1, 3),
    _AlarmPonEnableS_Type()
)
alarmPonEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonEnableS.setStatus("current")
_AlarmPonAlarmS_Type = Integer32
_AlarmPonAlarmS_Object = MibTableColumn
alarmPonAlarmS = _AlarmPonAlarmS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3, 1, 4),
    _AlarmPonAlarmS_Type()
)
alarmPonAlarmS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonAlarmS.setStatus("current")
_AlarmPonClearS_Type = Integer32
_AlarmPonClearS_Object = MibTableColumn
alarmPonClearS = _AlarmPonClearS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 3, 1, 5),
    _AlarmPonClearS_Type()
)
alarmPonClearS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonClearS.setStatus("current")
_AlarmPonStatPFTable_Object = MibTable
alarmPonStatPFTable = _AlarmPonStatPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 4)
)
if mibBuilder.loadTexts:
    alarmPonStatPFTable.setStatus("current")
_AlarmPonStatPFEntry_Object = MibTableRow
alarmPonStatPFEntry = _AlarmPonStatPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 4, 1)
)
alarmPonStatPFEntry.setIndexNames(
    (0, "V1600D", "alarmPonStatAlarmId"),
    (0, "V1600D", "alarmPonStatTypeS"),
)
if mibBuilder.loadTexts:
    alarmPonStatPFEntry.setStatus("current")


class _AlarmPonStatAlarmId_Type(Integer32):
    """Custom type alarmPonStatAlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPonStatAlarmId_Type.__name__ = "Integer32"
_AlarmPonStatAlarmId_Object = MibTableColumn
alarmPonStatAlarmId = _AlarmPonStatAlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 4, 1, 1),
    _AlarmPonStatAlarmId_Type()
)
alarmPonStatAlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonStatAlarmId.setStatus("current")


class _AlarmPonStatTypeS_Type(Integer32):
    """Custom type alarmPonStatTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32)
        )
    )
    namedValues = NamedValues(
        *(("downstreamDropEventsAlarm", 1),
          ("upstreamDropEventsAlarm", 2),
          ("downstreamCRCErrorFramesAlarm", 3),
          ("upstreamCRCErrorFramesAlarm", 4),
          ("downstreamUndersizeFramesAlarm", 5),
          ("upstreamUndersizeFramesAlarm", 6),
          ("downstreamOversizeFramesAlarm", 7),
          ("upstreamOversizeFramesAlarm", 8),
          ("downstreamFragmentsAlarm", 9),
          ("upstreamFragmentsAlarm", 10),
          ("downstreamJabbersAlarm", 11),
          ("upstreamJabbersAlarm", 12),
          ("downstreamDiscardsAlarm", 13),
          ("upstreamDiscardsAlarm", 14),
          ("downstreamErrorsAlarm", 15),
          ("upstreamErrorsAlarm", 16),
          ("downstreamDropEventsWarning", 17),
          ("upstreamDropEventsWarning", 18),
          ("downstreamCRCErrorFramesWarning", 19),
          ("upstreamCRCErrorFramesWarning", 20),
          ("downstreamUndersizeFramesWarning", 21),
          ("upstreamUndersizeFramesWarning", 22),
          ("downstreamOversizeFramesWarning", 23),
          ("upstreamOversizeFramesWarning", 24),
          ("downstreamFragmentsWarning", 25),
          ("upstreamFragmentsWarning", 26),
          ("downstreamJabbersWarning", 27),
          ("upstreamJabbersWarning", 28),
          ("downstreamDiscardsWarning", 29),
          ("upstreamDiscardsWarning", 30),
          ("downstreamErrorsWarning", 31),
          ("upstreamErrorsWarning", 32))
    )


_AlarmPonStatTypeS_Type.__name__ = "Integer32"
_AlarmPonStatTypeS_Object = MibTableColumn
alarmPonStatTypeS = _AlarmPonStatTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 4, 1, 2),
    _AlarmPonStatTypeS_Type()
)
alarmPonStatTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonStatTypeS.setStatus("current")


class _AlarmPonStatEnableS_Type(Integer32):
    """Custom type alarmPonStatEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPonStatEnableS_Type.__name__ = "Integer32"
_AlarmPonStatEnableS_Object = MibTableColumn
alarmPonStatEnableS = _AlarmPonStatEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 4, 1, 3),
    _AlarmPonStatEnableS_Type()
)
alarmPonStatEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonStatEnableS.setStatus("current")


class _AlarmPonStatThldS_Type(Integer32):
    """Custom type alarmPonStatThldS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPonStatThldS_Type.__name__ = "Integer32"
_AlarmPonStatThldS_Object = MibTableColumn
alarmPonStatThldS = _AlarmPonStatThldS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 4, 1, 4),
    _AlarmPonStatThldS_Type()
)
alarmPonStatThldS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPonStatThldS.setStatus("current")
_AlarmPortPFTable_Object = MibTable
alarmPortPFTable = _AlarmPortPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 5)
)
if mibBuilder.loadTexts:
    alarmPortPFTable.setStatus("current")
_AlarmPortPFEntry_Object = MibTableRow
alarmPortPFEntry = _AlarmPortPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 5, 1)
)
alarmPortPFEntry.setIndexNames(
    (0, "V1600D", "alarmPortAlarmId"),
    (0, "V1600D", "alarmPortNoS"),
    (0, "V1600D", "alarmPortTpyeS"),
)
if mibBuilder.loadTexts:
    alarmPortPFEntry.setStatus("current")


class _AlarmPortAlarmId_Type(Integer32):
    """Custom type alarmPortAlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPortAlarmId_Type.__name__ = "Integer32"
_AlarmPortAlarmId_Object = MibTableColumn
alarmPortAlarmId = _AlarmPortAlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 5, 1, 1),
    _AlarmPortAlarmId_Type()
)
alarmPortAlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortAlarmId.setStatus("current")


class _AlarmPortNoS_Type(Integer32):
    """Custom type alarmPortNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AlarmPortNoS_Type.__name__ = "Integer32"
_AlarmPortNoS_Object = MibTableColumn
alarmPortNoS = _AlarmPortNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 5, 1, 2),
    _AlarmPortNoS_Type()
)
alarmPortNoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortNoS.setStatus("current")


class _AlarmPortTpyeS_Type(Integer32):
    """Custom type alarmPortTpyeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ethPortAutoNegFailure", 1),
          ("ethPortLos", 2),
          ("ethPortFailure", 3),
          ("ethPortLoopback", 4),
          ("ethPortCongestion", 5))
    )


_AlarmPortTpyeS_Type.__name__ = "Integer32"
_AlarmPortTpyeS_Object = MibTableColumn
alarmPortTpyeS = _AlarmPortTpyeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 5, 1, 3),
    _AlarmPortTpyeS_Type()
)
alarmPortTpyeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortTpyeS.setStatus("current")


class _AlarmPortEnableS_Type(Integer32):
    """Custom type alarmPortEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPortEnableS_Type.__name__ = "Integer32"
_AlarmPortEnableS_Object = MibTableColumn
alarmPortEnableS = _AlarmPortEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 5, 1, 4),
    _AlarmPortEnableS_Type()
)
alarmPortEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortEnableS.setStatus("current")
_AlarmPortStatPFTable_Object = MibTable
alarmPortStatPFTable = _AlarmPortStatPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6)
)
if mibBuilder.loadTexts:
    alarmPortStatPFTable.setStatus("current")
_AlarmPortStatPFEntry_Object = MibTableRow
alarmPortStatPFEntry = _AlarmPortStatPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6, 1)
)
alarmPortStatPFEntry.setIndexNames(
    (0, "V1600D", "alarmPortStatAlarmID"),
    (0, "V1600D", "alarmPortStatEthNoS"),
    (0, "V1600D", "alarmPortStatTypeS"),
)
if mibBuilder.loadTexts:
    alarmPortStatPFEntry.setStatus("current")


class _AlarmPortStatAlarmID_Type(Integer32):
    """Custom type alarmPortStatAlarmID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPortStatAlarmID_Type.__name__ = "Integer32"
_AlarmPortStatAlarmID_Object = MibTableColumn
alarmPortStatAlarmID = _AlarmPortStatAlarmID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6, 1, 1),
    _AlarmPortStatAlarmID_Type()
)
alarmPortStatAlarmID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortStatAlarmID.setStatus("current")


class _AlarmPortStatEthNoS_Type(Integer32):
    """Custom type alarmPortStatEthNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AlarmPortStatEthNoS_Type.__name__ = "Integer32"
_AlarmPortStatEthNoS_Object = MibTableColumn
alarmPortStatEthNoS = _AlarmPortStatEthNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6, 1, 2),
    _AlarmPortStatEthNoS_Type()
)
alarmPortStatEthNoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortStatEthNoS.setStatus("current")


class _AlarmPortStatTypeS_Type(Integer32):
    """Custom type alarmPortStatTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34)
        )
    )
    namedValues = NamedValues(
        *(("downstreamDropEventsAlarm", 1),
          ("upstreamDropEventsAlarm", 2),
          ("downstreamCRCErrorFramesAlarm", 3),
          ("upstreamCRCErrorFramesAlarm", 4),
          ("downstreamUndersizeFramesAlarm", 5),
          ("upstreamUndersizeFramesAlarm", 6),
          ("downstreamOversizeFramesAlarm", 7),
          ("upstreamOversizeFramesAlarm", 8),
          ("downstreamFragmentsAlarm", 9),
          ("upstreamFragmentsAlarm", 10),
          ("downstreamJabbersAlarm", 11),
          ("upstreamJabbersAlarm", 12),
          ("downstreamDiscardsAlarm", 13),
          ("upstreamDiscardsAlarm", 14),
          ("downstreamErrorsAlarm", 15),
          ("upstreamErrorsAlarm", 16),
          ("statusChangeTimesAlarm", 17),
          ("downstreamDropEventsWarning", 18),
          ("upstreamDropEventsWarning", 19),
          ("downstreamCRCErrorFramesWarning", 20),
          ("upstreamCRCErrorFramesWarning", 21),
          ("downstreamUndersizeFramesWarning", 22),
          ("upstreamUndersizeFramesWarning", 23),
          ("downstreamOversizeFramesWarning", 24),
          ("upstreamOversizeFramesWarning", 25),
          ("downstreamFragmentsWarning", 26),
          ("upstreamFragmentsWarning", 27),
          ("downstreamJabbersWarning", 28),
          ("upstreamJabbersWarning", 29),
          ("downstreamDiscardsWarning", 30),
          ("upstreamDiscardsWarning", 31),
          ("downstreamErrorsWarning", 32),
          ("upstreamErrorsWarning", 33),
          ("statusChangeTimesWarning", 34))
    )


_AlarmPortStatTypeS_Type.__name__ = "Integer32"
_AlarmPortStatTypeS_Object = MibTableColumn
alarmPortStatTypeS = _AlarmPortStatTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6, 1, 3),
    _AlarmPortStatTypeS_Type()
)
alarmPortStatTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortStatTypeS.setStatus("current")


class _AlarmPortStatEnableS_Type(Integer32):
    """Custom type alarmPortStatEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPortStatEnableS_Type.__name__ = "Integer32"
_AlarmPortStatEnableS_Object = MibTableColumn
alarmPortStatEnableS = _AlarmPortStatEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6, 1, 4),
    _AlarmPortStatEnableS_Type()
)
alarmPortStatEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortStatEnableS.setStatus("current")


class _AlarmPortStatTrldS_Type(Integer32):
    """Custom type alarmPortStatTrldS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPortStatTrldS_Type.__name__ = "Integer32"
_AlarmPortStatTrldS_Object = MibTableColumn
alarmPortStatTrldS = _AlarmPortStatTrldS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 6, 1, 5),
    _AlarmPortStatTrldS_Type()
)
alarmPortStatTrldS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPortStatTrldS.setStatus("current")
_AlarmPotsPFTable_Object = MibTable
alarmPotsPFTable = _AlarmPotsPFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 7)
)
if mibBuilder.loadTexts:
    alarmPotsPFTable.setStatus("current")
_AlarmPotsPFEntry_Object = MibTableRow
alarmPotsPFEntry = _AlarmPotsPFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 7, 1)
)
alarmPotsPFEntry.setIndexNames(
    (0, "V1600D", "alarmPotsAlarmId"),
    (0, "V1600D", "alarmPotsNoS"),
)
if mibBuilder.loadTexts:
    alarmPotsPFEntry.setStatus("current")


class _AlarmPotsAlarmId_Type(Integer32):
    """Custom type alarmPotsAlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmPotsAlarmId_Type.__name__ = "Integer32"
_AlarmPotsAlarmId_Object = MibTableColumn
alarmPotsAlarmId = _AlarmPotsAlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 7, 1, 1),
    _AlarmPotsAlarmId_Type()
)
alarmPotsAlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPotsAlarmId.setStatus("current")


class _AlarmPotsNoS_Type(Integer32):
    """Custom type alarmPotsNoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_AlarmPotsNoS_Type.__name__ = "Integer32"
_AlarmPotsNoS_Object = MibTableColumn
alarmPotsNoS = _AlarmPotsNoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 7, 1, 2),
    _AlarmPotsNoS_Type()
)
alarmPotsNoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPotsNoS.setStatus("current")


class _AlarmPotsFailEnableS_Type(Integer32):
    """Custom type alarmPotsFailEnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_AlarmPotsFailEnableS_Type.__name__ = "Integer32"
_AlarmPotsFailEnableS_Object = MibTableColumn
alarmPotsFailEnableS = _AlarmPotsFailEnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 7, 1, 3),
    _AlarmPotsFailEnableS_Type()
)
alarmPotsFailEnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmPotsFailEnableS.setStatus("current")
_AlarmE1PFTable_Object = MibTable
alarmE1PFTable = _AlarmE1PFTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 8)
)
if mibBuilder.loadTexts:
    alarmE1PFTable.setStatus("current")
_AlarmE1PFEntry_Object = MibTableRow
alarmE1PFEntry = _AlarmE1PFEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 8, 1)
)
alarmE1PFEntry.setIndexNames(
    (0, "V1600D", "alarmE1AlarmId"),
    (0, "V1600D", "alarmE1NoS"),
    (0, "V1600D", "alarmE1TypeS"),
)
if mibBuilder.loadTexts:
    alarmE1PFEntry.setStatus("current")


class _AlarmE1AlarmId_Type(Integer32):
    """Custom type alarmE1AlarmId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AlarmE1AlarmId_Type.__name__ = "Integer32"
_AlarmE1AlarmId_Object = MibTableColumn
alarmE1AlarmId = _AlarmE1AlarmId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 8, 1, 1),
    _AlarmE1AlarmId_Type()
)
alarmE1AlarmId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmE1AlarmId.setStatus("current")


class _AlarmE1NoS_Type(Integer32):
    """Custom type alarmE1NoS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_AlarmE1NoS_Type.__name__ = "Integer32"
_AlarmE1NoS_Object = MibTableColumn
alarmE1NoS = _AlarmE1NoS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 8, 1, 2),
    _AlarmE1NoS_Type()
)
alarmE1NoS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmE1NoS.setStatus("current")


class _AlarmE1TypeS_Type(Integer32):
    """Custom type alarmE1TypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e1PortFailure", 1),
          ("e1TimingUnlock", 2),
          ("e1Los", 3))
    )


_AlarmE1TypeS_Type.__name__ = "Integer32"
_AlarmE1TypeS_Object = MibTableColumn
alarmE1TypeS = _AlarmE1TypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 8, 1, 3),
    _AlarmE1TypeS_Type()
)
alarmE1TypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmE1TypeS.setStatus("current")


class _AlarmE1EnableS_Type(Integer32):
    """Custom type alarmE1EnableS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AlarmE1EnableS_Type.__name__ = "Integer32"
_AlarmE1EnableS_Object = MibTableColumn
alarmE1EnableS = _AlarmE1EnableS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 4, 8, 1, 4),
    _AlarmE1EnableS_Type()
)
alarmE1EnableS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmE1EnableS.setStatus("current")
_ProfileManualBindShow_ObjectIdentity = ObjectIdentity
profileManualBindShow = _ProfileManualBindShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5)
)
_ProfileBindTable_Object = MibTable
profileBindTable = _ProfileBindTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5, 1)
)
if mibBuilder.loadTexts:
    profileBindTable.setStatus("current")
_ProfileBindEntry_Object = MibTableRow
profileBindEntry = _ProfileBindEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5, 1, 1)
)
profileBindEntry.setIndexNames(
    (0, "V1600D", "profileBindPonS"),
    (0, "V1600D", "profileBindOnuS"),
    (0, "V1600D", "profileBindTypeS"),
)
if mibBuilder.loadTexts:
    profileBindEntry.setStatus("current")


class _ProfileBindPonS_Type(Integer32):
    """Custom type profileBindPonS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ProfileBindPonS_Type.__name__ = "Integer32"
_ProfileBindPonS_Object = MibTableColumn
profileBindPonS = _ProfileBindPonS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5, 1, 1, 1),
    _ProfileBindPonS_Type()
)
profileBindPonS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileBindPonS.setStatus("current")


class _ProfileBindOnuS_Type(Integer32):
    """Custom type profileBindOnuS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ProfileBindOnuS_Type.__name__ = "Integer32"
_ProfileBindOnuS_Object = MibTableColumn
profileBindOnuS = _ProfileBindOnuS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5, 1, 1, 2),
    _ProfileBindOnuS_Type()
)
profileBindOnuS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileBindOnuS.setStatus("current")


class _ProfileBindTypeS_Type(Integer32):
    """Custom type profileBindTypeS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dba", 1),
          ("srv", 2),
          ("voip", 3),
          ("alarm", 4))
    )


_ProfileBindTypeS_Type.__name__ = "Integer32"
_ProfileBindTypeS_Object = MibTableColumn
profileBindTypeS = _ProfileBindTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5, 1, 1, 3),
    _ProfileBindTypeS_Type()
)
profileBindTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileBindTypeS.setStatus("current")


class _ProfileBindIdS_Type(Integer32):
    """Custom type profileBindIdS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ProfileBindIdS_Type.__name__ = "Integer32"
_ProfileBindIdS_Object = MibTableColumn
profileBindIdS = _ProfileBindIdS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 5, 1, 1, 4),
    _ProfileBindIdS_Type()
)
profileBindIdS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileBindIdS.setStatus("current")
_ProfileAutoBindShow_ObjectIdentity = ObjectIdentity
profileAutoBindShow = _ProfileAutoBindShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6)
)
_ProfileAutoBindTable_Object = MibTable
profileAutoBindTable = _ProfileAutoBindTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1)
)
if mibBuilder.loadTexts:
    profileAutoBindTable.setStatus("current")
_ProfileAutoBindEntry_Object = MibTableRow
profileAutoBindEntry = _ProfileAutoBindEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1)
)
profileAutoBindEntry.setIndexNames(
    (0, "V1600D", "profileAutoBindId"),
)
if mibBuilder.loadTexts:
    profileAutoBindEntry.setStatus("current")
_ProfileAutoBindId_Type = Integer32
_ProfileAutoBindId_Object = MibTableColumn
profileAutoBindId = _ProfileAutoBindId_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1, 1),
    _ProfileAutoBindId_Type()
)
profileAutoBindId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileAutoBindId.setStatus("current")


class _ProfileAutoBindDbaS_Type(Integer32):
    """Custom type profileAutoBindDbaS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ProfileAutoBindDbaS_Type.__name__ = "Integer32"
_ProfileAutoBindDbaS_Object = MibTableColumn
profileAutoBindDbaS = _ProfileAutoBindDbaS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1, 2),
    _ProfileAutoBindDbaS_Type()
)
profileAutoBindDbaS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileAutoBindDbaS.setStatus("current")


class _ProfileAutoBindSrvS_Type(Integer32):
    """Custom type profileAutoBindSrvS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ProfileAutoBindSrvS_Type.__name__ = "Integer32"
_ProfileAutoBindSrvS_Object = MibTableColumn
profileAutoBindSrvS = _ProfileAutoBindSrvS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1, 3),
    _ProfileAutoBindSrvS_Type()
)
profileAutoBindSrvS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileAutoBindSrvS.setStatus("current")


class _ProfileAutoBindVoipS_Type(Integer32):
    """Custom type profileAutoBindVoipS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ProfileAutoBindVoipS_Type.__name__ = "Integer32"
_ProfileAutoBindVoipS_Object = MibTableColumn
profileAutoBindVoipS = _ProfileAutoBindVoipS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1, 4),
    _ProfileAutoBindVoipS_Type()
)
profileAutoBindVoipS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileAutoBindVoipS.setStatus("current")


class _ProfileAutoBindAlarmS_Type(Integer32):
    """Custom type profileAutoBindAlarmS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ProfileAutoBindAlarmS_Type.__name__ = "Integer32"
_ProfileAutoBindAlarmS_Object = MibTableColumn
profileAutoBindAlarmS = _ProfileAutoBindAlarmS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1, 5),
    _ProfileAutoBindAlarmS_Type()
)
profileAutoBindAlarmS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileAutoBindAlarmS.setStatus("current")
_ProfileOnuTypeS_Type = OctetString
_ProfileOnuTypeS_Object = MibTableColumn
profileOnuTypeS = _ProfileOnuTypeS_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 6, 1, 1, 6),
    _ProfileOnuTypeS_Type()
)
profileOnuTypeS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    profileOnuTypeS.setStatus("current")
_ProfileShow_ObjectIdentity = ObjectIdentity
profileShow = _ProfileShow_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7)
)
_ProfileTable_Object = MibTable
profileTable = _ProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7, 1)
)
if mibBuilder.loadTexts:
    profileTable.setStatus("current")
_ProfileEntry_Object = MibTableRow
profileEntry = _ProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7, 1, 1)
)
profileEntry.setIndexNames(
    (0, "V1600D", "profileIdexShow"),
)
if mibBuilder.loadTexts:
    profileEntry.setStatus("current")
_ProfileIdexShow_Type = Integer32
_ProfileIdexShow_Object = MibTableColumn
profileIdexShow = _ProfileIdexShow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7, 1, 1, 1),
    _ProfileIdexShow_Type()
)
profileIdexShow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileIdexShow.setStatus("current")


class _ProfileTypeShow_Type(Integer32):
    """Custom type profileTypeShow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dba", 1),
          ("srv", 2),
          ("voip", 3),
          ("alarm", 4))
    )


_ProfileTypeShow_Type.__name__ = "Integer32"
_ProfileTypeShow_Object = MibTableColumn
profileTypeShow = _ProfileTypeShow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7, 1, 1, 2),
    _ProfileTypeShow_Type()
)
profileTypeShow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileTypeShow.setStatus("current")


class _ProfileIdShow_Type(Integer32):
    """Custom type profileIdShow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_ProfileIdShow_Type.__name__ = "Integer32"
_ProfileIdShow_Object = MibTableColumn
profileIdShow = _ProfileIdShow_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7, 1, 1, 3),
    _ProfileIdShow_Type()
)
profileIdShow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileIdShow.setStatus("current")
_ProfileIdDescr_Type = OctetString
_ProfileIdDescr_Object = MibTableColumn
profileIdDescr = _ProfileIdDescr_Object(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 12, 9, 7, 1, 1, 4),
    _ProfileIdDescr_Type()
)
profileIdDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileIdDescr.setStatus("current")
_EnterpriseID_ObjectIdentity = ObjectIdentity
enterpriseID = _EnterpriseID_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 37950, 2)
)
_SnmpEnterpriseID_Type = Unsigned32
_SnmpEnterpriseID_Object = MibScalar
snmpEnterpriseID = _SnmpEnterpriseID_Object(
    (1, 3, 6, 1, 4, 1, 37950, 2, 1),
    _SnmpEnterpriseID_Type()
)
snmpEnterpriseID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpEnterpriseID.setStatus("current")

# Managed Objects groups


# Notification objects

dataAlarmTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 37950, 1, 1, 5, 10, 13, 6, 1)
)
dataAlarmTrap.setObjects(
      *(("V1600D", "dataUpLinkPort"),
        ("V1600D", "dataPon"),
        ("V1600D", "dataOnu"),
        ("V1600D", "dataOnuPort"),
        ("V1600D", "dataTrapOID"),
        ("V1600D", "dataTrapClass"),
        ("V1600D", "dataMac"),
        ("V1600D", "dataTime"),
        ("V1600D", "dateAlarmLevel"),
        ("V1600D", "dataValue"),
        ("V1600D", "dataAlarmType"),
        ("V1600D", "dataSynOID"))
)
if mibBuilder.loadTexts:
    dataAlarmTrap.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "V1600D",
    **{"vsolution": vsolution,
       "business": business,
       "devices": devices,
       "v1600d": v1600d,
       "v1600dSwitch": v1600dSwitch,
       "v1600dPort": v1600dPort,
       "upLinkPort": upLinkPort,
       "uplinkPortConfigTable": uplinkPortConfigTable,
       "uplinkPortConfigEntry": uplinkPortConfigEntry,
       "upLinkPortIndex": upLinkPortIndex,
       "upLinkPortDescr": upLinkPortDescr,
       "upLinkPortType": upLinkPortType,
       "upLinkPortAdminStatus": upLinkPortAdminStatus,
       "upLinkPortAutoNegotiation": upLinkPortAutoNegotiation,
       "upLinkPortSpeed": upLinkPortSpeed,
       "upLinkPortDuplex": upLinkPortDuplex,
       "upLinkPortFlowControl": upLinkPortFlowControl,
       "upLinkPortMacLearnEn": upLinkPortMacLearnEn,
       "upLinkPortPriEn": upLinkPortPriEn,
       "upLinkPortPriValue": upLinkPortPriValue,
       "upLinkPortIngressRate": upLinkPortIngressRate,
       "upLinkPortEgressRate": upLinkPortEgressRate,
       "upLinkPortBCStromCtrl": upLinkPortBCStromCtrl,
       "upLinkPortMCStromCtrl": upLinkPortMCStromCtrl,
       "upLinkPortUCStromCtrl": upLinkPortUCStromCtrl,
       "upLinkPortIsolate": upLinkPortIsolate,
       "upLinkPortPvid": upLinkPortPvid,
       "uplinkPortJumboFrameEn": uplinkPortJumboFrameEn,
       "upLinkPortDescr2": upLinkPortDescr2,
       "uplinkPortHardwareSpeed": uplinkPortHardwareSpeed,
       "uplinkPortMode": uplinkPortMode,
       "uplinkPortMacAddrLearnState": uplinkPortMacAddrLearnState,
       "uplinkPortPerformanceDataTable": uplinkPortPerformanceDataTable,
       "uplinkPortPerformanceDataEntry": uplinkPortPerformanceDataEntry,
       "upLinkPIndex": upLinkPIndex,
       "upLinkPortDownOctets": upLinkPortDownOctets,
       "upLinkDownSpeed": upLinkDownSpeed,
       "upLinkPortDownMaxBand": upLinkPortDownMaxBand,
       "upLinkPortDownProportion": upLinkPortDownProportion,
       "upLinkPortDownUcastPkts": upLinkPortDownUcastPkts,
       "upLinkPortDownMulicastPkts": upLinkPortDownMulicastPkts,
       "upLinkPortDownBrocastPkts": upLinkPortDownBrocastPkts,
       "upLinkPortDownPackets": upLinkPortDownPackets,
       "upLinkPortDownNormalOctets": upLinkPortDownNormalOctets,
       "upLinkPortDownErrOctets": upLinkPortDownErrOctets,
       "upLinkPortDownPausePkts": upLinkPortDownPausePkts,
       "upLinkPortUpOctets": upLinkPortUpOctets,
       "upLinkPortUpSpeed": upLinkPortUpSpeed,
       "upLinkPortUpMaxBand": upLinkPortUpMaxBand,
       "upLinkPortUpProportion": upLinkPortUpProportion,
       "upLinkPortUpUcastPkts": upLinkPortUpUcastPkts,
       "upLinkPortUpMulicastPkts": upLinkPortUpMulicastPkts,
       "upLinkPortUpBrocastPkts": upLinkPortUpBrocastPkts,
       "upLinkPortUpPackets": upLinkPortUpPackets,
       "upLinkPortUpNormalOctets": upLinkPortUpNormalOctets,
       "upLinkPortUpErrOctets": upLinkPortUpErrOctets,
       "upLinkPortUpPausePkts": upLinkPortUpPausePkts,
       "upLinkPortDroppedPkts": upLinkPortDroppedPkts,
       "upLinkPortCrcError": upLinkPortCrcError,
       "upLinkPortJabber": upLinkPortJabber,
       "upLinkPortOverSize": upLinkPortOverSize,
       "upLinkPortUnderSize": upLinkPortUnderSize,
       "upLinkPortCollision": upLinkPortCollision,
       "upLinkPort64OctetFrames": upLinkPort64OctetFrames,
       "upLinkPort65To127OctetFrames": upLinkPort65To127OctetFrames,
       "upLinkPort128To255OctetFrames": upLinkPort128To255OctetFrames,
       "upLinkPort256To511OctetFrames": upLinkPort256To511OctetFrames,
       "upLinkPort512To1023OctetFrames": upLinkPort512To1023OctetFrames,
       "upLinkPortOver1024OctetFrames": upLinkPortOver1024OctetFrames,
       "uplinkPortDownBytes": uplinkPortDownBytes,
       "uplinkPortUpBytes": uplinkPortUpBytes,
       "uplinkPortLinkTable": uplinkPortLinkTable,
       "uplinkPortLinkEntry": uplinkPortLinkEntry,
       "portNumIndex": portNumIndex,
       "portLinkStatus": portLinkStatus,
       "uplinkPortLinkSpeed": uplinkPortLinkSpeed,
       "uplinkPortPerfThresholdTable": uplinkPortPerfThresholdTable,
       "uplinkPortPerfThresholdEntry": uplinkPortPerfThresholdEntry,
       "porIndex": porIndex,
       "uplinkPortCRCThreshold": uplinkPortCRCThreshold,
       "uplinkPortOpticalTransTable": uplinkPortOpticalTransTable,
       "uplinkPortOpticalTransEntry": uplinkPortOpticalTransEntry,
       "transceiverPortIndex": transceiverPortIndex,
       "transceiverTempperature": transceiverTempperature,
       "transceiverVoltage": transceiverVoltage,
       "transceiverBiasCurrent": transceiverBiasCurrent,
       "transceiverTransmitPower": transceiverTransmitPower,
       "transceiverReceivedPower": transceiverReceivedPower,
       "uplinkPortAggregationTable": uplinkPortAggregationTable,
       "uplinkPortAggregationEntry": uplinkPortAggregationEntry,
       "upLinkAIndex": upLinkAIndex,
       "uplinkPortAggregation": uplinkPortAggregation,
       "uplinkPortTimeout": uplinkPortTimeout,
       "uplinkPortChannelGroupID": uplinkPortChannelGroupID,
       "uplinkPortLacpMode": uplinkPortLacpMode,
       "uplinkPortPriority": uplinkPortPriority,
       "uplinkPortAggregationCfg": uplinkPortAggregationCfg,
       "upLinkAIndexS": upLinkAIndexS,
       "uplinkPortAggregationS": uplinkPortAggregationS,
       "uplinkPortTimeoutS": uplinkPortTimeoutS,
       "uplinkPortChannelGroupIDS": uplinkPortChannelGroupIDS,
       "uplinkPortLacpModeS": uplinkPortLacpModeS,
       "uplinkPortPriorityS": uplinkPortPriorityS,
       "uplinkPortCfgAction": uplinkPortCfgAction,
       "ponPort": ponPort,
       "ponPortConfigTable": ponPortConfigTable,
       "ponPortConfigEntry": ponPortConfigEntry,
       "ponPortIndex": ponPortIndex,
       "ponPortDescr": ponPortDescr,
       "ponPortAdminStatus": ponPortAdminStatus,
       "ponPortFlowControl": ponPortFlowControl,
       "ponPortIngressRate": ponPortIngressRate,
       "ponPortEgressRate": ponPortEgressRate,
       "ponPortBCStormCtrl": ponPortBCStormCtrl,
       "ponPortMCStromCtrl": ponPortMCStromCtrl,
       "ponPortUCStromCtrl": ponPortUCStromCtrl,
       "ponPortPriValue": ponPortPriValue,
       "ponPortPvid": ponPortPvid,
       "ponPortIsolate": ponPortIsolate,
       "ponPortJumboFrameEn": ponPortJumboFrameEn,
       "ponPortDescr2": ponPortDescr2,
       "ponPortMode": ponPortMode,
       "ponPortMacAddrLearnState": ponPortMacAddrLearnState,
       "ponPortPerformanceDataTable": ponPortPerformanceDataTable,
       "ponPortPerformanceDataEntry": ponPortPerformanceDataEntry,
       "ponPIndex": ponPIndex,
       "ponPortUpOctets": ponPortUpOctets,
       "ponPortUpSpeed": ponPortUpSpeed,
       "ponPortUpMaxBand": ponPortUpMaxBand,
       "ponPortUpProportion": ponPortUpProportion,
       "ponPortUpMPCP": ponPortUpMPCP,
       "ponPortTotalFrames": ponPortTotalFrames,
       "ponPortUpUnicastFrames": ponPortUpUnicastFrames,
       "ponPortUpBroadcastFrames": ponPortUpBroadcastFrames,
       "ponPortUpMulticastFrames": ponPortUpMulticastFrames,
       "ponPortUpCrc32Errors": ponPortUpCrc32Errors,
       "ponPortUpUndersizeFrames": ponPortUpUndersizeFrames,
       "ponPortUpOversizeFrames": ponPortUpOversizeFrames,
       "ponPortUpCollisions": ponPortUpCollisions,
       "ponPortUpFramesDropped": ponPortUpFramesDropped,
       "ponPortUp64OctetFrames": ponPortUp64OctetFrames,
       "ponPortUp65To127OctetFrames": ponPortUp65To127OctetFrames,
       "ponPortUp128To255OctetFrames": ponPortUp128To255OctetFrames,
       "ponPortUp256To511OctetFrames": ponPortUp256To511OctetFrames,
       "ponPortUp512To1023OctetFrames": ponPortUp512To1023OctetFrames,
       "ponPortUp1024To1518OctetFrames": ponPortUp1024To1518OctetFrames,
       "ponPortUpOver1519OctetFrames": ponPortUpOver1519OctetFrames,
       "ponPortDownOctets": ponPortDownOctets,
       "ponPortDownSpeed": ponPortDownSpeed,
       "ponPortDownMaxband": ponPortDownMaxband,
       "ponPortDownproportion": ponPortDownproportion,
       "ponPortDownMPCP": ponPortDownMPCP,
       "ponPortDownTotalFrames": ponPortDownTotalFrames,
       "ponPortDownUnicastFrames": ponPortDownUnicastFrames,
       "ponPortDownBroadcastFrames": ponPortDownBroadcastFrames,
       "ponPortDownMulticastFrames": ponPortDownMulticastFrames,
       "ponPortDownCrc32Errors": ponPortDownCrc32Errors,
       "ponPortDownUndersizeFrames": ponPortDownUndersizeFrames,
       "ponPortDownOversizeFrames": ponPortDownOversizeFrames,
       "ponPortDownCollisions": ponPortDownCollisions,
       "ponPortDownFramesDropped": ponPortDownFramesDropped,
       "ponPortDown64OctetFrames": ponPortDown64OctetFrames,
       "ponPortDown65To127OctetFrames": ponPortDown65To127OctetFrames,
       "ponPortDown128To255OctetFrames": ponPortDown128To255OctetFrames,
       "ponPortDown256To511OctetFrames": ponPortDown256To511OctetFrames,
       "ponPortDown512To1023OctetFrames": ponPortDown512To1023OctetFrames,
       "ponPortDown1024To1518OctetFrames": ponPortDown1024To1518OctetFrames,
       "ponPortDownOver1519OctetFrames": ponPortDownOver1519OctetFrames,
       "ponPortDownBytes": ponPortDownBytes,
       "ponPortUpBytes": ponPortUpBytes,
       "ponPortLinkTable": ponPortLinkTable,
       "ponPortLinkEntry": ponPortLinkEntry,
       "ponPortLinkIndex": ponPortLinkIndex,
       "ponPortLinkStatus": ponPortLinkStatus,
       "ponPortLinkSpeed": ponPortLinkSpeed,
       "ponConfigTable": ponConfigTable,
       "ponConfigEntry": ponConfigEntry,
       "ponIndex": ponIndex,
       "ponStauts": ponStauts,
       "ponEncrytionTime": ponEncrytionTime,
       "ponMaxRtt": ponMaxRtt,
       "ponP2pEnable": ponP2pEnable,
       "portMirror": portMirror,
       "mirrorSession": mirrorSession,
       "mirrorDstPort": mirrorDstPort,
       "mirrorSrcPort": mirrorSrcPort,
       "mirrorType": mirrorType,
       "mirrorAction": mirrorAction,
       "portMirrorTable": portMirrorTable,
       "portMirrorEntry": portMirrorEntry,
       "portMirrorIndex": portMirrorIndex,
       "portMirrorsession": portMirrorsession,
       "portMirrorDstPort": portMirrorDstPort,
       "portMirrorSrcPort": portMirrorSrcPort,
       "portMirrorType": portMirrorType,
       "portCountersClear": portCountersClear,
       "portLookbackDetect": portLookbackDetect,
       "portChannelGroup": portChannelGroup,
       "portChannelGroupCfg": portChannelGroupCfg,
       "portChannelGroupIndex": portChannelGroupIndex,
       "portChannelLoadBalance": portChannelLoadBalance,
       "portChannelPortId1": portChannelPortId1,
       "portChannelPortId2": portChannelPortId2,
       "portChannelPortId3": portChannelPortId3,
       "portChannelPortId4": portChannelPortId4,
       "portChannelAction": portChannelAction,
       "portChannelType": portChannelType,
       "portChannelGroupTable": portChannelGroupTable,
       "portChannelGroupEntry": portChannelGroupEntry,
       "portChannelGroupId": portChannelGroupId,
       "portChannelGroupLoadBalance": portChannelGroupLoadBalance,
       "portChannelGroupPortIdx1": portChannelGroupPortIdx1,
       "portChannelGroupPortIdx2": portChannelGroupPortIdx2,
       "portChannelGroupPortIdx3": portChannelGroupPortIdx3,
       "portChannelGroupPortIdx4": portChannelGroupPortIdx4,
       "portChannelGroupType": portChannelGroupType,
       "portCountersClean": portCountersClean,
       "portCountersCleanIndex": portCountersCleanIndex,
       "portCountersCleanAction": portCountersCleanAction,
       "v1600dVLAN": v1600dVLAN,
       "vlanCfg": vlanCfg,
       "vlanCfgItem": vlanCfgItem,
       "serviceName": serviceName,
       "startVid": startVid,
       "endVid": endVid,
       "upLinkPortNo": upLinkPortNo,
       "vlanTag": vlanTag,
       "vlanAction": vlanAction,
       "vlanCfgTable": vlanCfgTable,
       "vlanCfgEntry": vlanCfgEntry,
       "vlanConfigIndex": vlanConfigIndex,
       "vlanCfgServiceName": vlanCfgServiceName,
       "vlanCfgStartVid": vlanCfgStartVid,
       "vlanCfgEndVid": vlanCfgEndVid,
       "vlanCfgUplinkPortNo": vlanCfgUplinkPortNo,
       "vlanCfgTagMode": vlanCfgTagMode,
       "vlanIPCfg": vlanIPCfg,
       "vlanId": vlanId,
       "vlanIP": vlanIP,
       "vlanIPMask": vlanIPMask,
       "vlanIPAction": vlanIPAction,
       "vlanIPTable": vlanIPTable,
       "vlanIPEntry": vlanIPEntry,
       "vlanIdIndex": vlanIdIndex,
       "vlanIPAddr": vlanIPAddr,
       "vlanIPMaskAddr": vlanIPMaskAddr,
       "vlanQinq": vlanQinq,
       "vlanQinqEn": vlanQinqEn,
       "vlanQinqSetting": vlanQinqSetting,
       "qinqPortId": qinqPortId,
       "qinqCVlanId": qinqCVlanId,
       "qinqSVlanId": qinqSVlanId,
       "qinqModeSelect": qinqModeSelect,
       "qinqAction": qinqAction,
       "qinqCVlanIdRange": qinqCVlanIdRange,
       "vlanQinqTable": vlanQinqTable,
       "vlanQinqEntry": vlanQinqEntry,
       "qinqIndex": qinqIndex,
       "qinqPortIndex": qinqPortIndex,
       "qinqCVlanIndex": qinqCVlanIndex,
       "qinqSVlanIndex": qinqSVlanIndex,
       "qinqMode": qinqMode,
       "qinqCVlanRange": qinqCVlanRange,
       "vlanTable": vlanTable,
       "vlanEntry": vlanEntry,
       "vlanVid": vlanVid,
       "vlanName": vlanName,
       "vlanTagPort": vlanTagPort,
       "vlanUntagPort": vlanUntagPort,
       "vlanRowStatus": vlanRowStatus,
       "vlanDescr": vlanDescr,
       "vlanIPv6Cfg": vlanIPv6Cfg,
       "vlanid": vlanid,
       "ipv6Addr": ipv6Addr,
       "ipv6AddrPlen": ipv6AddrPlen,
       "ipv6Addrtype": ipv6Addrtype,
       "ipv6AddrAction": ipv6AddrAction,
       "vlanIPv6Table": vlanIPv6Table,
       "vlanIPv6Entry": vlanIPv6Entry,
       "ipv6Vlanid": ipv6Vlanid,
       "ipv6AddrIndex": ipv6AddrIndex,
       "ipv6Address": ipv6Address,
       "ipv6AddrPfxLen": ipv6AddrPfxLen,
       "ipv6AddrPrefixDescr": ipv6AddrPrefixDescr,
       "ipv6SlaacCfg": ipv6SlaacCfg,
       "ipv6SlaacVlanId": ipv6SlaacVlanId,
       "ipv6SlaacSuppressRaEnable": ipv6SlaacSuppressRaEnable,
       "ipv6SlaacInterval": ipv6SlaacInterval,
       "ipv6SlaacRALifetime": ipv6SlaacRALifetime,
       "ipv6SlaacReachabletime": ipv6SlaacReachabletime,
       "ipv6SlaachomeAgentCfgFlag": ipv6SlaachomeAgentCfgFlag,
       "ipv6SlaachomeAgentPreference": ipv6SlaachomeAgentPreference,
       "ipv6SlaachomeAgentLifeTime": ipv6SlaachomeAgentLifeTime,
       "ipv6SlaacAdvIntervalOption": ipv6SlaacAdvIntervalOption,
       "ipv6SlaacManaCfgFlag": ipv6SlaacManaCfgFlag,
       "ipv6SlaacOtherCfgFlag": ipv6SlaacOtherCfgFlag,
       "ipv6SlaacAddrPrefix": ipv6SlaacAddrPrefix,
       "ipv6SlaacAddrPrefixLength": ipv6SlaacAddrPrefixLength,
       "ipv6AddrPrefixValidLifeTime": ipv6AddrPrefixValidLifeTime,
       "ipv6AddrPrefixPreferrefLifetime": ipv6AddrPrefixPreferrefLifetime,
       "ipv6AddrPrefixOfflink": ipv6AddrPrefixOfflink,
       "ipv6AddrPrefixPreNoAutoCfg": ipv6AddrPrefixPreNoAutoCfg,
       "ipv6AddrPrefixRouterAddr": ipv6AddrPrefixRouterAddr,
       "ipv6SlaacRouterPrefer": ipv6SlaacRouterPrefer,
       "ipv6SlaacMTU": ipv6SlaacMTU,
       "ipv6SlaacAction": ipv6SlaacAction,
       "ipv6SlaacTable": ipv6SlaacTable,
       "ipv6SlaacEntry": ipv6SlaacEntry,
       "ipv6SlaacVlanid": ipv6SlaacVlanid,
       "ipv6SlaacIndex": ipv6SlaacIndex,
       "ipv6SlaacSuppressRaStatus": ipv6SlaacSuppressRaStatus,
       "ipv6SlaacRaInterval": ipv6SlaacRaInterval,
       "ipv6SlaacRaLifetime": ipv6SlaacRaLifetime,
       "ipv6SlaacReachableTime": ipv6SlaacReachableTime,
       "ipv6SlaachomeAgentCfgFg": ipv6SlaachomeAgentCfgFg,
       "ipv6SlaachomeAgentPre": ipv6SlaachomeAgentPre,
       "ipv6SlaachomeAgentLifetime": ipv6SlaachomeAgentLifetime,
       "ipv6SlaacAdvIntervalOpt": ipv6SlaacAdvIntervalOpt,
       "ipv6SlaacManaCfgFg": ipv6SlaacManaCfgFg,
       "ipv6SlaacOtherCfgFg": ipv6SlaacOtherCfgFg,
       "ipv6SlaacPrefix": ipv6SlaacPrefix,
       "ipv6AddrPfxAdvValidLifetime": ipv6AddrPfxAdvValidLifetime,
       "ipv6AddrPfxAdvPreferredLifetime": ipv6AddrPfxAdvPreferredLifetime,
       "ipv6AddrPfxOffLinkFlag": ipv6AddrPfxOffLinkFlag,
       "ipv6AddrPfxAutonomousFlag": ipv6AddrPfxAutonomousFlag,
       "ipv6AddrPfxRouterAddr": ipv6AddrPfxRouterAddr,
       "ipv6AddrPfxRouterPreference": ipv6AddrPfxRouterPreference,
       "ipv6AddrPfxMtu": ipv6AddrPfxMtu,
       "rdnssCfg": rdnssCfg,
       "rdnssVlan": rdnssVlan,
       "rdnssSeq": rdnssSeq,
       "rdnssLifetime": rdnssLifetime,
       "rdnsServer1": rdnsServer1,
       "rdnsServer2": rdnsServer2,
       "rdnsServer3": rdnsServer3,
       "rdnsAction": rdnsAction,
       "rdnssSuppressSt": rdnssSuppressSt,
       "rdnssTable": rdnssTable,
       "rdnssEntry": rdnssEntry,
       "rdnssIdx": rdnssIdx,
       "rdnssVlanId": rdnssVlanId,
       "rdnssSequence": rdnssSequence,
       "rDNSServer1": rDNSServer1,
       "rdnssServer2": rdnssServer2,
       "rdnssServer3": rdnssServer3,
       "rdnssLifeTime": rdnssLifeTime,
       "rdnssSuppressStatus": rdnssSuppressStatus,
       "vlanPortModeRange": vlanPortModeRange,
       "vlanPortModeCfg": vlanPortModeCfg,
       "portIndex": portIndex,
       "portTagMode": portTagMode,
       "portPvid": portPvid,
       "portTagRange": portTagRange,
       "portUntagRange": portUntagRange,
       "portAction": portAction,
       "vlanPortModeTable": vlanPortModeTable,
       "vlanPortModeEntry": vlanPortModeEntry,
       "portIndexS": portIndexS,
       "portIndexDescS": portIndexDescS,
       "portTagModeS": portTagModeS,
       "portPvidS": portPvidS,
       "portTagRangeS": portTagRangeS,
       "portUntagRangeS": portUntagRangeS,
       "vlanRangeCfg": vlanRangeCfg,
       "vlanRange": vlanRange,
       "vlanRangeAction": vlanRangeAction,
       "v1600dMacAddr": v1600dMacAddr,
       "agingTimer": agingTimer,
       "macAddrTable": macAddrTable,
       "macAddrEntry": macAddrEntry,
       "macAddrIndex": macAddrIndex,
       "macVlanId": macVlanId,
       "macAddr": macAddr,
       "macType": macType,
       "macPortId": macPortId,
       "portMacAddrLimitTable": portMacAddrLimitTable,
       "portMacAddrLimitEntry": portMacAddrLimitEntry,
       "portMacLimitIdx": portMacLimitIdx,
       "portMacAddrLimit": portMacAddrLimit,
       "macFlappingCfg": macFlappingCfg,
       "macFlappingStatus": macFlappingStatus,
       "macPortRange": macPortRange,
       "macFlappingMode": macFlappingMode,
       "macFlappingInterval": macFlappingInterval,
       "macFlappingSupThr": macFlappingSupThr,
       "macFlappingSupAgeTime": macFlappingSupAgeTime,
       "macFlappingInfoClean": macFlappingInfoClean,
       "macFlappingTable": macFlappingTable,
       "macFlappingEntry": macFlappingEntry,
       "macFlappingindex": macFlappingindex,
       "macFlappingMacAddr": macFlappingMacAddr,
       "macFlappingVlanId": macFlappingVlanId,
       "macFlappingSourcePort": macFlappingSourcePort,
       "macFlappingCurrentPort": macFlappingCurrentPort,
       "macFlappingBeginTime": macFlappingBeginTime,
       "macFlappingLastTime": macFlappingLastTime,
       "macFlappingTimes": macFlappingTimes,
       "macFlappingSuppressionTable": macFlappingSuppressionTable,
       "macFlappingSuppressionEntry": macFlappingSuppressionEntry,
       "macFlappingSupIndex": macFlappingSupIndex,
       "macFlappingSupInterface": macFlappingSupInterface,
       "macFlappingSupMode": macFlappingSupMode,
       "macFlappingSupTimes": macFlappingSupTimes,
       "macFlappingSupSrcInterface": macFlappingSupSrcInterface,
       "macFlappingPortTable": macFlappingPortTable,
       "macFlappingPortEntry": macFlappingPortEntry,
       "macFlappingPortId": macFlappingPortId,
       "macFlappingPortStatus": macFlappingPortStatus,
       "macAddr1Table": macAddr1Table,
       "macAddr1Entry": macAddr1Entry,
       "macAddr1": macAddr1,
       "macVlanId1": macVlanId1,
       "macType1": macType1,
       "macPortId1": macPortId1,
       "macAddrStrTable": macAddrStrTable,
       "macAddrStrEntry": macAddrStrEntry,
       "macAddrStrIndex": macAddrStrIndex,
       "macVlanIdAddrTypePortId": macVlanIdAddrTypePortId,
       "v1600dQos": v1600dQos,
       "qosQueueScheduler": qosQueueScheduler,
       "wrrTable": wrrTable,
       "wrrEntry": wrrEntry,
       "wrrQueue": wrrQueue,
       "wrrWeight": wrrWeight,
       "spWrrTable": spWrrTable,
       "spWrrEntry": spWrrEntry,
       "spWrrQueue": spWrrQueue,
       "spWrrWeight": spWrrWeight,
       "v1600dIgmpsnooping": v1600dIgmpsnooping,
       "igmpSnoopingEn": igmpSnoopingEn,
       "igmpMrouterPortCfg": igmpMrouterPortCfg,
       "mrouterPort": mrouterPort,
       "mrouterVlan": mrouterVlan,
       "mrouterAction": mrouterAction,
       "igmpMrouterPortTable": igmpMrouterPortTable,
       "igmpMrouterPortEntry": igmpMrouterPortEntry,
       "igmpMrouterItem": igmpMrouterItem,
       "igmpMrouterPort": igmpMrouterPort,
       "igmpMrouterVlan": igmpMrouterVlan,
       "igmpPortTable": igmpPortTable,
       "igmpPortEntry": igmpPortEntry,
       "igmpPortIndex": igmpPortIndex,
       "groupCount": groupCount,
       "tagstrip": tagstrip,
       "fastLeave": fastLeave,
       "userVlanConfig": userVlanConfig,
       "userPort": userPort,
       "userVlanId": userVlanId,
       "groupVlanId": groupVlanId,
       "userAction": userAction,
       "userVlanTable": userVlanTable,
       "userVlanEntry": userVlanEntry,
       "userVlanIndex": userVlanIndex,
       "userVlanPortIndex": userVlanPortIndex,
       "userVlanIdIndex": userVlanIdIndex,
       "groupVlanIdIndex": groupVlanIdIndex,
       "igmpStaticGroupCfg": igmpStaticGroupCfg,
       "staticGroupPort": staticGroupPort,
       "staticGroupIp": staticGroupIp,
       "staticGroupVlan": staticGroupVlan,
       "staticGroupAction": staticGroupAction,
       "igmpStaticGroupTable": igmpStaticGroupTable,
       "igmpStaticGroupEntry": igmpStaticGroupEntry,
       "igmpStaticItem": igmpStaticItem,
       "igmpStaticPort": igmpStaticPort,
       "igmpStaticGroupIp": igmpStaticGroupIp,
       "igmpStaticGroupVlan": igmpStaticGroupVlan,
       "igmplastmemberCfg": igmplastmemberCfg,
       "querycount": querycount,
       "queryinterval": queryinterval,
       "queryresponse": queryresponse,
       "igmpGeneralCfg": igmpGeneralCfg,
       "queryPacket": queryPacket,
       "queryTime": queryTime,
       "igmpSourceIpCfg": igmpSourceIpCfg,
       "sourceip": sourceip,
       "igmpGroupMemberTable": igmpGroupMemberTable,
       "igmpGroupMemberEntry": igmpGroupMemberEntry,
       "igmpGroupMemberItem": igmpGroupMemberItem,
       "igmpGroupMemberGVlan": igmpGroupMemberGVlan,
       "igmpGroupMemberIp": igmpGroupMemberIp,
       "igmpGroupMemberPort": igmpGroupMemberPort,
       "igmpGroupMembeType": igmpGroupMembeType,
       "igmpGroupMemberUserVlan": igmpGroupMemberUserVlan,
       "v1600dARPProxy": v1600dARPProxy,
       "arpProxyCfg": arpProxyCfg,
       "arpProxyVlan": arpProxyVlan,
       "arpProxyConfig": arpProxyConfig,
       "arpProxyTable": arpProxyTable,
       "arpProxyEntry": arpProxyEntry,
       "arpProxyVlanId": arpProxyVlanId,
       "arpProxyState": arpProxyState,
       "v1600dDHCP": v1600dDHCP,
       "dhcpServer": dhcpServer,
       "dhcpCurrentState": dhcpCurrentState,
       "dhcpStartIP": dhcpStartIP,
       "dhcpEndIP": dhcpEndIP,
       "dhcpSubNetMask": dhcpSubNetMask,
       "dhcpGateWay": dhcpGateWay,
       "dhcpDNS1": dhcpDNS1,
       "dhcpDNS2": dhcpDNS2,
       "dhcpDNS3": dhcpDNS3,
       "dhcpWins": dhcpWins,
       "dhcpLeaseTime": dhcpLeaseTime,
       "dhcpInterfaceVlan": dhcpInterfaceVlan,
       "dhcpControl": dhcpControl,
       "dhcpCommit": dhcpCommit,
       "dhcpLeaseTable": dhcpLeaseTable,
       "dhcpLeaseEntry": dhcpLeaseEntry,
       "dhcpLeaseIndex": dhcpLeaseIndex,
       "dhcpLeaseIP": dhcpLeaseIP,
       "dhcpLeaseMACAddr": dhcpLeaseMACAddr,
       "dhcpLeaseTimeValue": dhcpLeaseTimeValue,
       "dhcpRelay": dhcpRelay,
       "relayServerConfig": relayServerConfig,
       "relayVlan": relayVlan,
       "relayServerIP": relayServerIP,
       "relayServerAction": relayServerAction,
       "relayServerTable": relayServerTable,
       "relayServerEntry": relayServerEntry,
       "relayServerVlan": relayServerVlan,
       "relayServerIPAddrList": relayServerIPAddrList,
       "dhcpSnooping": dhcpSnooping,
       "dhcpSNControl": dhcpSNControl,
       "dhcpSNVlan": dhcpSNVlan,
       "dhcpSNVlanId": dhcpSNVlanId,
       "dhcpSNVlanAction": dhcpSNVlanAction,
       "dhcpSNVlanList": dhcpSNVlanList,
       "dhcpSNOption82": dhcpSNOption82,
       "snOption82Control": snOption82Control,
       "snOption82Strategy": snOption82Strategy,
       "dhcpSNPortCfgTable": dhcpSNPortCfgTable,
       "dhcpSNPortCfgEntry": dhcpSNPortCfgEntry,
       "snPortIndex": snPortIndex,
       "snPortType": snPortType,
       "snPortUserCircuitID": snPortUserCircuitID,
       "snPortUserRemoteID": snPortUserRemoteID,
       "snPortRateLimit": snPortRateLimit,
       "dhcpSNErrorRecovery": dhcpSNErrorRecovery,
       "dhcpSNErrorRecoveryInterval": dhcpSNErrorRecoveryInterval,
       "dhcpSNBinding": dhcpSNBinding,
       "snBindingConfig": snBindingConfig,
       "snBindMAC": snBindMAC,
       "snBindVlan": snBindVlan,
       "snBindIP": snBindIP,
       "snBindPortIndex": snBindPortIndex,
       "snBindLease": snBindLease,
       "snBindAction": snBindAction,
       "snBindingTable": snBindingTable,
       "snBindingEntry": snBindingEntry,
       "snBindingid": snBindingid,
       "snBindingMAC": snBindingMAC,
       "snBindingIP": snBindingIP,
       "snBindingLease": snBindingLease,
       "snBindingType": snBindingType,
       "snBindingVlan": snBindingVlan,
       "snBindingPortIndex": snBindingPortIndex,
       "snBindingDeleteTime": snBindingDeleteTime,
       "v1600dStormControlCfg": v1600dStormControlCfg,
       "stormCtrPid": stormCtrPid,
       "broadcastStormCtrEn": broadcastStormCtrEn,
       "multicastStormCtrEn": multicastStormCtrEn,
       "unknownStormCtrEn": unknownStormCtrEn,
       "broadcastSpeed": broadcastSpeed,
       "multicastSpeed": multicastSpeed,
       "unknownSpeed": unknownSpeed,
       "stormCtrAction": stormCtrAction,
       "v1600dRstp": v1600dRstp,
       "rstpEn": rstpEn,
       "rstpCfg": rstpCfg,
       "maxAge": maxAge,
       "bridgePriority": bridgePriority,
       "bridgeMac": bridgeMac,
       "helloTime": helloTime,
       "forwardDelay": forwardDelay,
       "rstpPortCfgTable": rstpPortCfgTable,
       "rstpPortCfgEntry": rstpPortCfgEntry,
       "rstpPortId": rstpPortId,
       "rstpPortAdminStatus": rstpPortAdminStatus,
       "rstpPortPrioritySet": rstpPortPrioritySet,
       "rstpPortCostSet": rstpPortCostSet,
       "rstpPortOperEdgeSet": rstpPortOperEdgeSet,
       "rstpPortP2PSet": rstpPortP2PSet,
       "rstpInfo": rstpInfo,
       "rstpRootBridgeInfo": rstpRootBridgeInfo,
       "pathCostToRootBridge": pathCostToRootBridge,
       "rootPort": rootPort,
       "rootBridgePriority": rootBridgePriority,
       "rootBridgeMac": rootBridgeMac,
       "rootBridgeHelloTime": rootBridgeHelloTime,
       "rootBridgeMaxAge": rootBridgeMaxAge,
       "rootBridgeForwardDelay": rootBridgeForwardDelay,
       "rstpPortStatusTable": rstpPortStatusTable,
       "rstpPortStatusEntry": rstpPortStatusEntry,
       "rstpPortIndex": rstpPortIndex,
       "rstpPortRole": rstpPortRole,
       "rstpPortStatus": rstpPortStatus,
       "rstpPortCost": rstpPortCost,
       "rstpPortPriority": rstpPortPriority,
       "rstpPortP2P": rstpPortP2P,
       "v1600dAcl": v1600dAcl,
       "aclCfg": aclCfg,
       "stdIPFilterCfg": stdIPFilterCfg,
       "stdIpFilterId": stdIpFilterId,
       "stdIpFilterSrcIp": stdIpFilterSrcIp,
       "stdIpFilterSrcMask": stdIpFilterSrcMask,
       "stdIpFilterMode": stdIpFilterMode,
       "stdIpFilterAction": stdIpFilterAction,
       "extIPFilterCfg": extIPFilterCfg,
       "extIpFilterId": extIpFilterId,
       "extIpFilterProtocol": extIpFilterProtocol,
       "extIpFilterSrcIp": extIpFilterSrcIp,
       "extIpFilterSrcMask": extIpFilterSrcMask,
       "extIpFilterSrcPort": extIpFilterSrcPort,
       "extIpFilterDstIp": extIpFilterDstIp,
       "extIpFilterDstMask": extIpFilterDstMask,
       "extIpFilterDstPort": extIpFilterDstPort,
       "extIpFilterDscp": extIpFilterDscp,
       "extIpFilterMode": extIpFilterMode,
       "extIpFilterAction": extIpFilterAction,
       "macFilterCfg": macFilterCfg,
       "macFilterId": macFilterId,
       "macFilterSrcMac": macFilterSrcMac,
       "macFilterSrcMacMask": macFilterSrcMacMask,
       "macFilterDstMac": macFilterDstMac,
       "macFilterDstMacMask": macFilterDstMacMask,
       "macFilterVlanId": macFilterVlanId,
       "macFilterCos": macFilterCos,
       "macFilterEthType": macFilterEthType,
       "macFilterEthTypeMask": macFilterEthTypeMask,
       "macFilterMode": macFilterMode,
       "macFilterAction": macFilterAction,
       "portBaseAclCfg": portBaseAclCfg,
       "portBaseAclId": portBaseAclId,
       "portBaseFltMode": portBaseFltMode,
       "portBaseSrcMac": portBaseSrcMac,
       "portBaseSrcMacMask": portBaseSrcMacMask,
       "portBaseDstMac": portBaseDstMac,
       "portBaseDstMacMask": portBaseDstMacMask,
       "portBaseVlan": portBaseVlan,
       "portBaseVlanMask": portBaseVlanMask,
       "portBaseCos": portBaseCos,
       "portBaseEthernetType": portBaseEthernetType,
       "portBaseSrcIp": portBaseSrcIp,
       "portBaseSrcIpMask": portBaseSrcIpMask,
       "portBaseDstIp": portBaseDstIp,
       "portBaseDstIpMask": portBaseDstIpMask,
       "portBaseProtocol": portBaseProtocol,
       "portBaseProtocolMask": portBaseProtocolMask,
       "portBaseTosDscp": portBaseTosDscp,
       "portBaseTosDscpMask": portBaseTosDscpMask,
       "portBaseSrcPort": portBaseSrcPort,
       "portBaseSrcPortMask": portBaseSrcPortMask,
       "portBaseDstPort": portBaseDstPort,
       "portBaseDstPortMask": portBaseDstPortMask,
       "portBaseAction": portBaseAction,
       "qosBaseAclCfg": qosBaseAclCfg,
       "qosBaseAclId": qosBaseAclId,
       "qosBaseOutPacketPri": qosBaseOutPacketPri,
       "qosBaseHwTransQueue": qosBaseHwTransQueue,
       "qosBaseRulePri": qosBaseRulePri,
       "qosBaseSrcMac": qosBaseSrcMac,
       "qosBaseSrcMacMask": qosBaseSrcMacMask,
       "qosBaseDstMac": qosBaseDstMac,
       "qosBaseDstMacMask": qosBaseDstMacMask,
       "qosBaseVlan": qosBaseVlan,
       "qosBaseVlanMask": qosBaseVlanMask,
       "qosBaseCos": qosBaseCos,
       "qosEthernetType": qosEthernetType,
       "qosBaseSrcIp": qosBaseSrcIp,
       "qosBaseSrcIpMask": qosBaseSrcIpMask,
       "qosBaseDstIp": qosBaseDstIp,
       "qosBaseDstIpMask": qosBaseDstIpMask,
       "qosBaseProtocol": qosBaseProtocol,
       "qosBaseProtocolMask": qosBaseProtocolMask,
       "qosBaseTosDscp": qosBaseTosDscp,
       "qosBaseTosDscpMask": qosBaseTosDscpMask,
       "qosBaseSrcPort": qosBaseSrcPort,
       "qosBaseSrcPortMask": qosBaseSrcPortMask,
       "qosBaseDstPort": qosBaseDstPort,
       "qosBaseDstPortMask": qosBaseDstPortMask,
       "qosBaseAction": qosBaseAction,
       "aclTable": aclTable,
       "stdIpFilterTable": stdIpFilterTable,
       "stdIpFilterEntry": stdIpFilterEntry,
       "stdIpFltId": stdIpFltId,
       "stdIpFltSrcIp": stdIpFltSrcIp,
       "stdIpFltSrcMask": stdIpFltSrcMask,
       "stdIpFltMode": stdIpFltMode,
       "extIpFilterTable": extIpFilterTable,
       "extIpFilterEntry": extIpFilterEntry,
       "extIpFltId": extIpFltId,
       "extIpFltProtocol": extIpFltProtocol,
       "extIpFltSrcIp": extIpFltSrcIp,
       "extIpFltSrcMask": extIpFltSrcMask,
       "extIpFltSrcPort": extIpFltSrcPort,
       "extIpFltDstIp": extIpFltDstIp,
       "extIpFltDstMask": extIpFltDstMask,
       "extIpFltDstPort": extIpFltDstPort,
       "extIpFltDscp": extIpFltDscp,
       "extIpFltMode": extIpFltMode,
       "macFilterTable": macFilterTable,
       "macFilterEntry": macFilterEntry,
       "macFltId": macFltId,
       "macFltSrcMac": macFltSrcMac,
       "macFltSrcMacMask": macFltSrcMacMask,
       "macFltDstMac": macFltDstMac,
       "macFltDstMacMask": macFltDstMacMask,
       "macFltVlanId": macFltVlanId,
       "macFltCos": macFltCos,
       "macFltEthType": macFltEthType,
       "macFltEthTypeMask": macFltEthTypeMask,
       "macFltMode": macFltMode,
       "portBaseAclTable": portBaseAclTable,
       "portBaseAclEntry": portBaseAclEntry,
       "portBaseAclIndex": portBaseAclIndex,
       "portBaseAclFltMode": portBaseAclFltMode,
       "portBaseAclSrcMac": portBaseAclSrcMac,
       "portBaseAclSrcMacMask": portBaseAclSrcMacMask,
       "portBaseAclDstMac": portBaseAclDstMac,
       "portBaseAclDstMacMask": portBaseAclDstMacMask,
       "portBaseAclVlan": portBaseAclVlan,
       "portBaseAclVlanMask": portBaseAclVlanMask,
       "portBaseAclCos": portBaseAclCos,
       "portBaseAclEthernetType": portBaseAclEthernetType,
       "portBaseAclSrcIp": portBaseAclSrcIp,
       "portBaseAclSrcIpMask": portBaseAclSrcIpMask,
       "portBaseAclDstIp": portBaseAclDstIp,
       "portBaseAclDstIpMask": portBaseAclDstIpMask,
       "portBaseAclProtocol": portBaseAclProtocol,
       "portBaseAclProtocolMask": portBaseAclProtocolMask,
       "portBaseAclTosDscp": portBaseAclTosDscp,
       "portBaseAclTosDscpMask": portBaseAclTosDscpMask,
       "portBaseAclSrcPort": portBaseAclSrcPort,
       "portBaseAclSrcPortMask": portBaseAclSrcPortMask,
       "portBaseAclDstPort": portBaseAclDstPort,
       "portBaseAclDstPortMask": portBaseAclDstPortMask,
       "qosBaseAclTable": qosBaseAclTable,
       "qosBaseAclEntry": qosBaseAclEntry,
       "qosBaseAclIndex": qosBaseAclIndex,
       "qosBaseAclOutPacketPri": qosBaseAclOutPacketPri,
       "qosBaseAclHwTransQueue": qosBaseAclHwTransQueue,
       "qosBaseAclRulePri": qosBaseAclRulePri,
       "qosBaseAclSrcMac": qosBaseAclSrcMac,
       "qosBaseAclSrcMacMask": qosBaseAclSrcMacMask,
       "qosBaseAclDstMac": qosBaseAclDstMac,
       "qosBaseAclDstMacMask": qosBaseAclDstMacMask,
       "qosBaseAclVlan": qosBaseAclVlan,
       "qosBaseAclVlanMask": qosBaseAclVlanMask,
       "qosBaseAclCos": qosBaseAclCos,
       "qosBaseAclEthernetType": qosBaseAclEthernetType,
       "qosBaseAclSrcIp": qosBaseAclSrcIp,
       "qosBaseAclSrcIpMask": qosBaseAclSrcIpMask,
       "qosBaseAclDstIp": qosBaseAclDstIp,
       "qosBaseAclDstIpMask": qosBaseAclDstIpMask,
       "qosBaseAclProtocol": qosBaseAclProtocol,
       "qosBaseAclProtocolMask": qosBaseAclProtocolMask,
       "qosBaseAclTosDscp": qosBaseAclTosDscp,
       "qosBaseAclTosDscpMask": qosBaseAclTosDscpMask,
       "qosBaseAclSrcPort": qosBaseAclSrcPort,
       "qosBaseAclSrcPortMask": qosBaseAclSrcPortMask,
       "qosBaseAclDstPort": qosBaseAclDstPort,
       "qosBaseAclDstPortMask": qosBaseAclDstPortMask,
       "aclEffectTable": aclEffectTable,
       "aclEffectEntry": aclEffectEntry,
       "aclIndex": aclIndex,
       "aclPortList": aclPortList,
       "aclPortListEgress": aclPortListEgress,
       "ipv6aclCfg": ipv6aclCfg,
       "stdIPv6FilterCfg": stdIPv6FilterCfg,
       "stdIpv6FilterId": stdIpv6FilterId,
       "stdIpv6FilterSrcIpv6": stdIpv6FilterSrcIpv6,
       "stdIpv6FilterSrcPrefixlen": stdIpv6FilterSrcPrefixlen,
       "stdIpv6FilterMode": stdIpv6FilterMode,
       "stdIpv6FilterAction": stdIpv6FilterAction,
       "extIPv6FilterCfg": extIPv6FilterCfg,
       "extIpv6FilterId": extIpv6FilterId,
       "extIpv6FilterProtocol": extIpv6FilterProtocol,
       "extIpv6FilterSrcIpv6": extIpv6FilterSrcIpv6,
       "extIpv6FilterSrcPrefixlen": extIpv6FilterSrcPrefixlen,
       "extIpv6FilterSrcPort": extIpv6FilterSrcPort,
       "extIpv6FilterDstIpv6": extIpv6FilterDstIpv6,
       "extIpv6FilterDstPrefixlen": extIpv6FilterDstPrefixlen,
       "extIpv6FilterDstPort": extIpv6FilterDstPort,
       "extIpv6FilterDscp": extIpv6FilterDscp,
       "extIpv6FilterMode": extIpv6FilterMode,
       "extIpv6FilterAction": extIpv6FilterAction,
       "portBasev6AclCfg": portBasev6AclCfg,
       "portBasev6AclId": portBasev6AclId,
       "portBasev6FltMode": portBasev6FltMode,
       "portBasev6SrcMac": portBasev6SrcMac,
       "portBasev6SrcMacMask": portBasev6SrcMacMask,
       "portBasev6DstMac": portBasev6DstMac,
       "portBasev6DstMacMask": portBasev6DstMacMask,
       "portBasev6Vlan": portBasev6Vlan,
       "portBasev6VlanMask": portBasev6VlanMask,
       "portBasev6Cos": portBasev6Cos,
       "portBasev6EthernetType": portBasev6EthernetType,
       "portBasev6SrcIpv6": portBasev6SrcIpv6,
       "portBasev6SrcPrefixlen": portBasev6SrcPrefixlen,
       "portBasev6DstIpv6": portBasev6DstIpv6,
       "portBasev6DstPrefixlen": portBasev6DstPrefixlen,
       "portBasev6Protocol": portBasev6Protocol,
       "portBasev6ProtocolMask": portBasev6ProtocolMask,
       "portBasev6TosDscp": portBasev6TosDscp,
       "portBasev6TosDscpMask": portBasev6TosDscpMask,
       "portBasev6SrcPort": portBasev6SrcPort,
       "portBasev6SrcPortMask": portBasev6SrcPortMask,
       "portBasev6DstPort": portBasev6DstPort,
       "portBasev6DstPortMask": portBasev6DstPortMask,
       "portBasev6Action": portBasev6Action,
       "ipv6aclTable": ipv6aclTable,
       "stdIpv6FilterTable": stdIpv6FilterTable,
       "stdIpv6FilterEntry": stdIpv6FilterEntry,
       "stdIpv6FltId": stdIpv6FltId,
       "stdIpv6FltSrcIpv6": stdIpv6FltSrcIpv6,
       "stdIpv6FltSrcPrefixlen": stdIpv6FltSrcPrefixlen,
       "stdIpv6FltMode": stdIpv6FltMode,
       "extIpv6FilterTable": extIpv6FilterTable,
       "extIpv6FilterEntry": extIpv6FilterEntry,
       "extIpv6FltId": extIpv6FltId,
       "extIpv6FltProtocol": extIpv6FltProtocol,
       "extIpv6FltSrcIpv6": extIpv6FltSrcIpv6,
       "extIpv6FltSrcPrefixlen": extIpv6FltSrcPrefixlen,
       "extIpv6FltSrcPort": extIpv6FltSrcPort,
       "extIpv6FltDstIpv6": extIpv6FltDstIpv6,
       "extIpv6FltDstPrefixlen": extIpv6FltDstPrefixlen,
       "extIpv6FltDstPort": extIpv6FltDstPort,
       "extIpv6FltDscp": extIpv6FltDscp,
       "extIpv6FltMode": extIpv6FltMode,
       "portBasev6AclTable": portBasev6AclTable,
       "portBasev6AclEntry": portBasev6AclEntry,
       "portBasev6AclIndex": portBasev6AclIndex,
       "portBasev6AclFltMode": portBasev6AclFltMode,
       "portBasev6AclSrcMac": portBasev6AclSrcMac,
       "portBasev6AclSrcMacMask": portBasev6AclSrcMacMask,
       "portBasev6AclDstMac": portBasev6AclDstMac,
       "portBasev6AclDstMacMask": portBasev6AclDstMacMask,
       "portBasev6AclVlan": portBasev6AclVlan,
       "portBasev6AclVlanMask": portBasev6AclVlanMask,
       "portBasev6AclCos": portBasev6AclCos,
       "portBasev6AclEthernetType": portBasev6AclEthernetType,
       "portBasev6AclSrcIpv6": portBasev6AclSrcIpv6,
       "portBasev6AclSrcPrefixlen": portBasev6AclSrcPrefixlen,
       "portBasev6AclDstIpv6": portBasev6AclDstIpv6,
       "portBasev6AclDstPrefixlen": portBasev6AclDstPrefixlen,
       "portBasev6AclProtocol": portBasev6AclProtocol,
       "portBasev6AclProtocolMask": portBasev6AclProtocolMask,
       "portBasev6AclTosDscp": portBasev6AclTosDscp,
       "portBasev6AclTosDscpMask": portBasev6AclTosDscpMask,
       "portBasev6AclSrcPort": portBasev6AclSrcPort,
       "portBasev6AclSrcPortMask": portBasev6AclSrcPortMask,
       "portBasev6AclDstPort": portBasev6AclDstPort,
       "portBasev6AclDstPortMask": portBasev6AclDstPortMask,
       "ipv6aclEffectTable": ipv6aclEffectTable,
       "ipv6aclEffectEntry": ipv6aclEffectEntry,
       "ipv6aclIndex": ipv6aclIndex,
       "ipv6aclPortList": ipv6aclPortList,
       "ipv6aclPortListEgress": ipv6aclPortListEgress,
       "ipSourceGuard": ipSourceGuard,
       "sourceGuardPortindex": sourceGuardPortindex,
       "ipSourceGuardAction": ipSourceGuardAction,
       "ipSourceGuardVlan": ipSourceGuardVlan,
       "ipSourceGuardTable": ipSourceGuardTable,
       "ipSourceGuardEntry": ipSourceGuardEntry,
       "ipSourceGuardindex": ipSourceGuardindex,
       "ipSourceGuardInterface": ipSourceGuardInterface,
       "ipSourceGuardFilterType": ipSourceGuardFilterType,
       "ipSourceGuardFilterMode": ipSourceGuardFilterMode,
       "ipSourceGuardIPAddr": ipSourceGuardIPAddr,
       "ipSourceGuardMacAddr": ipSourceGuardMacAddr,
       "ipSourceGuardVlanId": ipSourceGuardVlanId,
       "ipSourceBind": ipSourceBind,
       "bindIPAddr": bindIPAddr,
       "bindIPMask": bindIPMask,
       "bindMacAddr": bindMacAddr,
       "bindVlanid": bindVlanid,
       "bindInterfacePortindex": bindInterfacePortindex,
       "bindAction": bindAction,
       "ipSourceBindTable": ipSourceBindTable,
       "ipSourceBindEntry": ipSourceBindEntry,
       "ipSourceBindindex": ipSourceBindindex,
       "ipSourceBindMacAddress": ipSourceBindMacAddress,
       "ipSourceBindIPAddress": ipSourceBindIPAddress,
       "ipSourceBindtype": ipSourceBindtype,
       "ipSourceBindVlanId": ipSourceBindVlanId,
       "ipSourceBindInterface": ipSourceBindInterface,
       "v1600dStaticRoute": v1600dStaticRoute,
       "staticRouteCfg": staticRouteCfg,
       "staticRouteIp": staticRouteIp,
       "staticRouteIpMask": staticRouteIpMask,
       "staticRouteIpGw": staticRouteIpGw,
       "staticRouteAction": staticRouteAction,
       "staticRouteTable": staticRouteTable,
       "staticRouteEntry": staticRouteEntry,
       "staticRouteItem": staticRouteItem,
       "staticRouteIpAddr": staticRouteIpAddr,
       "staticRouteMask": staticRouteMask,
       "staticRouteGw": staticRouteGw,
       "staticIPv6RouteCfg": staticIPv6RouteCfg,
       "ipv6RouteDestAddr": ipv6RouteDestAddr,
       "ipv6RouteDestAddrPLen": ipv6RouteDestAddrPLen,
       "ipv6RouteGwAddr": ipv6RouteGwAddr,
       "ipv6RouteAction": ipv6RouteAction,
       "staticIPv6RouteTable": staticIPv6RouteTable,
       "staticIPv6RouteEntry": staticIPv6RouteEntry,
       "ipv6RouteItem": ipv6RouteItem,
       "ipv6RouteDestin": ipv6RouteDestin,
       "ipv6RouteGw": ipv6RouteGw,
       "v1600dSysCfg": v1600dSysCfg,
       "restartSystem": restartSystem,
       "pingIP": pingIP,
       "cpuLoad": cpuLoad,
       "memoryLoad": memoryLoad,
       "systemInfo": systemInfo,
       "sysHostName": sysHostName,
       "sysContact": sysContact,
       "sysLocation": sysLocation,
       "sysFirmVersion": sysFirmVersion,
       "sysHardVersion": sysHardVersion,
       "mibSup": mibSup,
       "sysMac": sysMac,
       "sysRunningTime": sysRunningTime,
       "sysTemperature": sysTemperature,
       "sysTime": sysTime,
       "sysSerialNumber": sysSerialNumber,
       "sysLicenselimit": sysLicenselimit,
       "sysLicenseTime": sysLicenseTime,
       "sysSoftwareCreatedTime": sysSoftwareCreatedTime,
       "sysDeviceModel": sysDeviceModel,
       "arpTable": arpTable,
       "arpEntry": arpEntry,
       "arpIndex": arpIndex,
       "arpmacAddr": arpmacAddr,
       "arpIPAddr": arpIPAddr,
       "arpType": arpType,
       "snmpCfg": snmpCfg,
       "snmpv1v2Config": snmpv1v2Config,
       "communityNameSetting": communityNameSetting,
       "accessRightSetting": accessRightSetting,
       "communitycommit": communitycommit,
       "communityTable": communityTable,
       "communityEntry": communityEntry,
       "communityIndex": communityIndex,
       "communityName": communityName,
       "accessRight": accessRight,
       "snmpv1v2TrapConfig": snmpv1v2TrapConfig,
       "trapHostIpSetting": trapHostIpSetting,
       "trapUdpPortSetting": trapUdpPortSetting,
       "trapCommunityNameSetting": trapCommunityNameSetting,
       "trapVersionSetting": trapVersionSetting,
       "trapAction": trapAction,
       "snmpv1v2TrapTable": snmpv1v2TrapTable,
       "snmpv1v2TrapEntry": snmpv1v2TrapEntry,
       "trapIndex": trapIndex,
       "trapHostIp": trapHostIp,
       "trapUdpPort": trapUdpPort,
       "trapCommunityName": trapCommunityName,
       "trapVersion": trapVersion,
       "snmpv3ViewConfig": snmpv3ViewConfig,
       "snmpv3Viewname": snmpv3Viewname,
       "snmpv3Viewsubtree": snmpv3Viewsubtree,
       "snmpv3Viewtype": snmpv3Viewtype,
       "snmpv3ViewAction": snmpv3ViewAction,
       "snmpv3ViewTable": snmpv3ViewTable,
       "snmpv3ViewEntry": snmpv3ViewEntry,
       "snmpv3ViewIndex": snmpv3ViewIndex,
       "snmpv3ViewName": snmpv3ViewName,
       "snmpv3ViewSubtree": snmpv3ViewSubtree,
       "snmpv3ViewType": snmpv3ViewType,
       "snmpv3GroupConfig": snmpv3GroupConfig,
       "groupNameSetting": groupNameSetting,
       "accessLevelSetting": accessLevelSetting,
       "readViewSetting": readViewSetting,
       "writeViewSetting": writeViewSetting,
       "notifyViewSetting": notifyViewSetting,
       "groupCommit": groupCommit,
       "snmpv3GroupTable": snmpv3GroupTable,
       "snmpv3GroupEntry": snmpv3GroupEntry,
       "snmpv3GroupIndex": snmpv3GroupIndex,
       "snmpv3GroupName": snmpv3GroupName,
       "snmpv3GroupAccessLevel": snmpv3GroupAccessLevel,
       "snmpv3GroupReadView": snmpv3GroupReadView,
       "snmpv3GroupWriteView": snmpv3GroupWriteView,
       "snmpv3GroupNotifyView": snmpv3GroupNotifyView,
       "snmpv3UserConfig": snmpv3UserConfig,
       "userName": userName,
       "groupName": groupName,
       "authProtocol": authProtocol,
       "authPassword": authPassword,
       "privateType": privateType,
       "privatePassword": privatePassword,
       "snmpv3UserAction": snmpv3UserAction,
       "snmpv3UserTable": snmpv3UserTable,
       "snmpv3UserEntry": snmpv3UserEntry,
       "snmpv3UserIndex": snmpv3UserIndex,
       "snmpv3UserName": snmpv3UserName,
       "snmpv3UserGroupName": snmpv3UserGroupName,
       "snmpv3UserAuthType": snmpv3UserAuthType,
       "snmpv3UserPrivateType": snmpv3UserPrivateType,
       "snmpv3TrapConfig": snmpv3TrapConfig,
       "snmpv3trapHostIPSetting": snmpv3trapHostIPSetting,
       "snmpv3UDPPortSetting": snmpv3UDPPortSetting,
       "snmpv3trapUserName": snmpv3trapUserName,
       "snmpv3trapUserLevel": snmpv3trapUserLevel,
       "snmpv3tagList": snmpv3tagList,
       "snmpv3Timeout": snmpv3Timeout,
       "snmpv3RetryCount": snmpv3RetryCount,
       "snmpv3trapAction": snmpv3trapAction,
       "snmpv3TrapTable": snmpv3TrapTable,
       "snmpv3TrapEntry": snmpv3TrapEntry,
       "snmpv3TrapIndex": snmpv3TrapIndex,
       "snmpv3TrapHostIP": snmpv3TrapHostIP,
       "snmpv3TrapUDPPort": snmpv3TrapUDPPort,
       "snmpv3TrapVersion": snmpv3TrapVersion,
       "snmpv3TrapUserName": snmpv3TrapUserName,
       "snmpv3TrapTrapUserLevel": snmpv3TrapTrapUserLevel,
       "snmpv3TrapTagList": snmpv3TrapTagList,
       "snmpv3TrapTimeout": snmpv3TrapTimeout,
       "snmpv3TrapRetryCount": snmpv3TrapRetryCount,
       "snmpv1v2TrapIPv6Config": snmpv1v2TrapIPv6Config,
       "trapHostIpv6Setting": trapHostIpv6Setting,
       "trapIpv6UdpPortSetting": trapIpv6UdpPortSetting,
       "trapIpv6CommunityNameSetting": trapIpv6CommunityNameSetting,
       "trapIpv6VersionSetting": trapIpv6VersionSetting,
       "trapIpv6Action": trapIpv6Action,
       "snmpv1v2TrapIPv6Table": snmpv1v2TrapIPv6Table,
       "snmpv1v2TrapIPv6Entry": snmpv1v2TrapIPv6Entry,
       "trapIPv6Index": trapIPv6Index,
       "trapHostIPv6": trapHostIPv6,
       "trapIPv6UdpPort": trapIPv6UdpPort,
       "trapIPv6CommunityName": trapIPv6CommunityName,
       "trapIPv6Version": trapIPv6Version,
       "configFile": configFile,
       "restoreConfiguration": restoreConfiguration,
       "saveConfiguration": saveConfiguration,
       "uploadDownloadCfgFile": uploadDownloadCfgFile,
       "cfgFileName": cfgFileName,
       "tftpServerIPAddr": tftpServerIPAddr,
       "cfgFileAction": cfgFileAction,
       "ipv6UploadDownloadCfgFile": ipv6UploadDownloadCfgFile,
       "ipv6CfgFileName": ipv6CfgFileName,
       "tftpServerIPv6Addr": tftpServerIPv6Addr,
       "ipv6CfgFileAction": ipv6CfgFileAction,
       "autoSaveConfiguration": autoSaveConfiguration,
       "autoSaveType": autoSaveType,
       "autoSaveTimeoutValue": autoSaveTimeoutValue,
       "autoSaveFixTimeDay": autoSaveFixTimeDay,
       "autoSaveFixTimeHour": autoSaveFixTimeHour,
       "autoSaveFixTimeMinute": autoSaveFixTimeMinute,
       "autoSaveWeekMon": autoSaveWeekMon,
       "autoSaveWeekTues": autoSaveWeekTues,
       "autoSaveWeekWed": autoSaveWeekWed,
       "autoSaveWeekThur": autoSaveWeekThur,
       "autoSaveWeekFri": autoSaveWeekFri,
       "autoSaveWeekSat": autoSaveWeekSat,
       "autoSaveWeekSun": autoSaveWeekSun,
       "autoSaveWeekHour": autoSaveWeekHour,
       "autoSaveWeekMinute": autoSaveWeekMinute,
       "autoSaveAction": autoSaveAction,
       "autoSaveConfigTable": autoSaveConfigTable,
       "autoSaveConfigEntry": autoSaveConfigEntry,
       "autoSaveEnable": autoSaveEnable,
       "autoSaveTypeS": autoSaveTypeS,
       "autoSaveTimeoutValueS": autoSaveTimeoutValueS,
       "autoSaveFixTimeDayS": autoSaveFixTimeDayS,
       "autoSaveFixTimeHourS": autoSaveFixTimeHourS,
       "autoSaveFixTimeMinuteS": autoSaveFixTimeMinuteS,
       "autoSaveWeekMonS": autoSaveWeekMonS,
       "autoSaveWeekTuesS": autoSaveWeekTuesS,
       "autoSaveWeekWedS": autoSaveWeekWedS,
       "autoSaveWeekThurS": autoSaveWeekThurS,
       "autoSaveWeekFriS": autoSaveWeekFriS,
       "autoSaveWeekSatS": autoSaveWeekSatS,
       "autoSaveWeekSunS": autoSaveWeekSunS,
       "autoSaveWeekHourS": autoSaveWeekHourS,
       "autoSaveWeekMinuteS": autoSaveWeekMinuteS,
       "autoBackupConfiguration": autoBackupConfiguration,
       "autoBackupType": autoBackupType,
       "autoBackupTimeoutValue": autoBackupTimeoutValue,
       "autoBackupFixTimeDay": autoBackupFixTimeDay,
       "autoBackupFixTimeHour": autoBackupFixTimeHour,
       "autoBackupFixTimeMinute": autoBackupFixTimeMinute,
       "autoBackupWeekMon": autoBackupWeekMon,
       "autoBackupWeekTues": autoBackupWeekTues,
       "autoBackupWeekWed": autoBackupWeekWed,
       "autoBackupWeekThur": autoBackupWeekThur,
       "autoBackupWeekFri": autoBackupWeekFri,
       "autoBackupWeekSat": autoBackupWeekSat,
       "autoBackupWeekSun": autoBackupWeekSun,
       "autoBackupWeekHour": autoBackupWeekHour,
       "autoBackupWeekMinute": autoBackupWeekMinute,
       "autoBackupTftpServerIP": autoBackupTftpServerIP,
       "autoBackupAction": autoBackupAction,
       "autoBackupConfigTable": autoBackupConfigTable,
       "autoBackupConfigEntry": autoBackupConfigEntry,
       "autoBackupEnable": autoBackupEnable,
       "autoBackupTypeS": autoBackupTypeS,
       "autoBackupTimeoutValueS": autoBackupTimeoutValueS,
       "autoBackupFixTimeDayS": autoBackupFixTimeDayS,
       "autoBackupFixTimeHourS": autoBackupFixTimeHourS,
       "autoBackupFixTimeMinuteS": autoBackupFixTimeMinuteS,
       "autoBackupWeekMonS": autoBackupWeekMonS,
       "autoBackupWeekTuesS": autoBackupWeekTuesS,
       "autoBackupWeekWedS": autoBackupWeekWedS,
       "autoBackupWeekThurS": autoBackupWeekThurS,
       "autoBackupWeekFriS": autoBackupWeekFriS,
       "autoBackupWeekSatS": autoBackupWeekSatS,
       "autoBackupWeekSunS": autoBackupWeekSunS,
       "autoBackupWeekHourS": autoBackupWeekHourS,
       "autoBackupWeekMinuteS": autoBackupWeekMinuteS,
       "autoBackupTftpServerIPS": autoBackupTftpServerIPS,
       "systemUpgrade": systemUpgrade,
       "tftpServerIP": tftpServerIP,
       "fileType": fileType,
       "fileName": fileName,
       "upgradeCommit": upgradeCommit,
       "upgradeStatus": upgradeStatus,
       "auxPortCfg": auxPortCfg,
       "auxIP": auxIP,
       "auxIPMask": auxIPMask,
       "auxIPAction": auxIPAction,
       "auxIPGateway": auxIPGateway,
       "auxIPMasterDNS": auxIPMasterDNS,
       "auxIPSlaveDNS": auxIPSlaveDNS,
       "auxIPv6": auxIPv6,
       "auxIPv6Addr": auxIPv6Addr,
       "auxIPv6AddrLength": auxIPv6AddrLength,
       "auxIPv6AddrType": auxIPv6AddrType,
       "auxIPv6Gateway": auxIPv6Gateway,
       "auxIPv6AddrAction": auxIPv6AddrAction,
       "auxIPv6Table": auxIPv6Table,
       "auxIPv6Entry": auxIPv6Entry,
       "auxIPv6Address": auxIPv6Address,
       "auxIPv6AddressLength": auxIPv6AddressLength,
       "auxIPv6AddressType": auxIPv6AddressType,
       "auxIPv6GatewayAddr": auxIPv6GatewayAddr,
       "fanCfg": fanCfg,
       "fanMode": fanMode,
       "fanOpenTemperature": fanOpenTemperature,
       "rtcCfg": rtcCfg,
       "year": year,
       "month": month,
       "day": day,
       "hour": hour,
       "minute": minute,
       "second": second,
       "rtcAction": rtcAction,
       "syslogcfg": syslogcfg,
       "syslogServerIp": syslogServerIp,
       "syslogServerPort": syslogServerPort,
       "syslogFlashLevel": syslogFlashLevel,
       "restoreSyslog": restoreSyslog,
       "saveSyslog": saveSyslog,
       "uploadSyslog": uploadSyslog,
       "uploadSyslogName": uploadSyslogName,
       "tftpSeverSyslog": tftpSeverSyslog,
       "uploadAction": uploadAction,
       "syslogServerIpv6": syslogServerIpv6,
       "syslogServerIpv6Addr": syslogServerIpv6Addr,
       "syslogServerIpv6Port": syslogServerIpv6Port,
       "timeParam": timeParam,
       "timeZone": timeZone,
       "ntpServer": ntpServer,
       "timeZoneOffset": timeZoneOffset,
       "backupNtpServer": backupNtpServer,
       "dasParam": dasParam,
       "primaryDNS": primaryDNS,
       "secondDNS": secondDNS,
       "commit": commit,
       "loginAccessList": loginAccessList,
       "loginAccessListEn": loginAccessListEn,
       "loginAccessListCfg": loginAccessListCfg,
       "filterAction": filterAction,
       "protocol": protocol,
       "sourceIp": sourceIp,
       "ipMask": ipMask,
       "action": action,
       "loginAccessListTable": loginAccessListTable,
       "loginAccessListEntry": loginAccessListEntry,
       "filterActionS": filterActionS,
       "protocolS": protocolS,
       "sourceIpS": sourceIpS,
       "ipMaskS": ipMaskS,
       "ipv6loginAccessListCfg": ipv6loginAccessListCfg,
       "ipv6filterAction": ipv6filterAction,
       "ipv6protocol": ipv6protocol,
       "sourceIpv6": sourceIpv6,
       "prefixlen": prefixlen,
       "ipv6action": ipv6action,
       "ipv6loginAccessListTable": ipv6loginAccessListTable,
       "ipv6loginAccessListEntry": ipv6loginAccessListEntry,
       "ipv6filterActionS": ipv6filterActionS,
       "ipv6protocolS": ipv6protocolS,
       "sourceIpv6S": sourceIpv6S,
       "prefixlenS": prefixlenS,
       "ipv6DNS": ipv6DNS,
       "ipv6MasterDNS": ipv6MasterDNS,
       "ipv6SlaveDNS": ipv6SlaveDNS,
       "ipv6DNSAction": ipv6DNSAction,
       "systemIPv6Upgrade": systemIPv6Upgrade,
       "tftpServerIPv6": tftpServerIPv6,
       "filetype": filetype,
       "fileNAME": fileNAME,
       "ipv6UpgradeCommit": ipv6UpgradeCommit,
       "userManagement": userManagement,
       "userManagementCfg": userManagementCfg,
       "userNameC": userNameC,
       "userPassword": userPassword,
       "confirmPassword": confirmPassword,
       "userRole": userRole,
       "userCfgaction": userCfgaction,
       "userManagementTable": userManagementTable,
       "userManagementEntry": userManagementEntry,
       "userNameS": userNameS,
       "userRoleS": userRoleS,
       "netWorkSecurity": netWorkSecurity,
       "prevenceLevel": prevenceLevel,
       "ipFirstFragCheck": ipFirstFragCheck,
       "srcIpDstIpCheck": srcIpDstIpCheck,
       "srcMacDstMacCheck": srcMacDstMacCheck,
       "tcpFlagsSynFragCheck": tcpFlagsSynFragCheck,
       "tcpFlagsCrtl0Seq0Check": tcpFlagsCrtl0Seq0Check,
       "tcpFlagFinUrgPshSeq0Check": tcpFlagFinUrgPshSeq0Check,
       "tcpFlagsSynFinCheck": tcpFlagsSynFinCheck,
       "tcpSrcportEqDstportCheck": tcpSrcportEqDstportCheck,
       "udpSrcportEqDstportCheck": udpSrcportEqDstportCheck,
       "tcpHdrPartialCheck": tcpHdrPartialCheck,
       "tcpHdrPartialChecksize": tcpHdrPartialChecksize,
       "tcpHdrOffsetEq1Check": tcpHdrOffsetEq1Check,
       "iCMPv6PingSizeCheck": iCMPv6PingSizeCheck,
       "iCMPv6PingSizeChecksize": iCMPv6PingSizeChecksize,
       "iCMPv4PingSizeCheck": iCMPv4PingSizeCheck,
       "iCMPv4PingSizeChecksize": iCMPv4PingSizeChecksize,
       "iCMPFragPktCheck": iCMPFragPktCheck,
       "iPv6MinFragSizeCheck": iPv6MinFragSizeCheck,
       "ponDebug": ponDebug,
       "kernalDebug": kernalDebug,
       "normal": normal,
       "networkaction": networkaction,
       "d4lownetWorkSecurity": d4lownetWorkSecurity,
       "d4lowsrcMacDstMacCheck": d4lowsrcMacDstMacCheck,
       "d4lowsrcIpDstIpCheck": d4lowsrcIpDstIpCheck,
       "d4lowl4SrcportEqDstportCheck": d4lowl4SrcportEqDstportCheck,
       "d4lowtcpFlagsSynFinCheck": d4lowtcpFlagsSynFinCheck,
       "d4lowtcpFlagFinUrgPshSeq0Check": d4lowtcpFlagFinUrgPshSeq0Check,
       "d4lowtcpFlagsCrtl0Seq0Check": d4lowtcpFlagsCrtl0Seq0Check,
       "d4lowtcpFlagsSynFragCheck": d4lowtcpFlagsSynFragCheck,
       "d4lowtcpHdrPartialCheck": d4lowtcpHdrPartialCheck,
       "d4lowtcpHdrOffsetEq1Check": d4lowtcpHdrOffsetEq1Check,
       "d4lowiCMPFragPktCheck": d4lowiCMPFragPktCheck,
       "d4lownetworkaction": d4lownetworkaction,
       "powerBattery": powerBattery,
       "batteryChargeMode": batteryChargeMode,
       "batteryChargeStatus": batteryChargeStatus,
       "batteryRemainingPower": batteryRemainingPower,
       "powerModuleStateTable": powerModuleStateTable,
       "powerModuleStateEntry": powerModuleStateEntry,
       "powerID": powerID,
       "powerState": powerState,
       "v1600dAlarm": v1600dAlarm,
       "ponTransceiverTable": ponTransceiverTable,
       "ponTransceiverEntry": ponTransceiverEntry,
       "transceiverPonIndex": transceiverPonIndex,
       "tempperature": tempperature,
       "voltage": voltage,
       "biasCurrent": biasCurrent,
       "transmitPower": transmitPower,
       "alarmMsg": alarmMsg,
       "dataUpLinkPort": dataUpLinkPort,
       "dataPon": dataPon,
       "dataOnu": dataOnu,
       "dataOnuPort": dataOnuPort,
       "dataTrapOID": dataTrapOID,
       "dataTrapClass": dataTrapClass,
       "dataMac": dataMac,
       "dataTime": dataTime,
       "dateAlarmLevel": dateAlarmLevel,
       "dataValue": dataValue,
       "dataAlarmType": dataAlarmType,
       "dataSynOID": dataSynOID,
       "ponOpticalAlarmControl": ponOpticalAlarmControl,
       "ponOpticalAlarmDisCfg": ponOpticalAlarmDisCfg,
       "ponAlarmPonNo": ponAlarmPonNo,
       "ponOpticalType": ponOpticalType,
       "ponOpticalAlarmDis": ponOpticalAlarmDis,
       "ponOpticalDisAction": ponOpticalDisAction,
       "ponOpticalAlarmEnCfg": ponOpticalAlarmEnCfg,
       "ponOpticalAlarmPonNo": ponOpticalAlarmPonNo,
       "ponOpticalAlarmType": ponOpticalAlarmType,
       "ponOpticalAlarmEn": ponOpticalAlarmEn,
       "ponOpticalAlarmThld": ponOpticalAlarmThld,
       "ponOpticalClearThld": ponOpticalClearThld,
       "ponOpticalAlarmEnAction": ponOpticalAlarmEnAction,
       "ponOpticalAlarmTable": ponOpticalAlarmTable,
       "ponOpticalAlarmEntry": ponOpticalAlarmEntry,
       "ponAlarmPonIndex": ponAlarmPonIndex,
       "ponAlarmType": ponAlarmType,
       "ponOpticalAlarmStatus": ponOpticalAlarmStatus,
       "ponOpticalAlarmThldVal": ponOpticalAlarmThldVal,
       "ponOpticalClearThldVal": ponOpticalClearThldVal,
       "alarmCtrl": alarmCtrl,
       "alarmControlCfg": alarmControlCfg,
       "alarmControlType": alarmControlType,
       "alarmOutputType": alarmOutputType,
       "alarmControlEnable": alarmControlEnable,
       "alarmControlAction": alarmControlAction,
       "alarmControlTable": alarmControlTable,
       "alarmControlEntry": alarmControlEntry,
       "alarmControlId": alarmControlId,
       "alarmControlTypeS": alarmControlTypeS,
       "alarmPrintStatus": alarmPrintStatus,
       "alarmRecordStatus": alarmRecordStatus,
       "alarmTrapStatus": alarmTrapStatus,
       "alarmRemoteStatus": alarmRemoteStatus,
       "alarmControlThldCfg": alarmControlThldCfg,
       "alarmControlThldType": alarmControlThldType,
       "alarmOutputThldType": alarmOutputThldType,
       "alarmControlThldEnable": alarmControlThldEnable,
       "alarmControlThldAlarm": alarmControlThldAlarm,
       "alarmControlThldClear": alarmControlThldClear,
       "alarmControlThldAction": alarmControlThldAction,
       "alarmControlThldTable": alarmControlThldTable,
       "alarmControlThldEntry": alarmControlThldEntry,
       "alarmCtrlThldId": alarmCtrlThldId,
       "alarmCtrlThldType": alarmCtrlThldType,
       "alarmPrintThldStatus": alarmPrintThldStatus,
       "alarmRecordThldStatus": alarmRecordThldStatus,
       "alarmTrapThldStatus": alarmTrapThldStatus,
       "alarmRemoteThldStatus": alarmRemoteThldStatus,
       "alarmCtrlThldAlarm": alarmCtrlThldAlarm,
       "alarmCtrlThldClear": alarmCtrlThldClear,
       "alarmOID": alarmOID,
       "tempHigh": tempHigh,
       "tempLow": tempLow,
       "cpuUsageHigh": cpuUsageHigh,
       "memUsageHigh": memUsageHigh,
       "fan": fan,
       "downloadFileFailed": downloadFileFailed,
       "uploadFileFailed": uploadFileFailed,
       "upgradeFileFailled": upgradeFileFailled,
       "portUpdown": portUpdown,
       "portLoopback": portLoopback,
       "ponDeregister": ponDeregister,
       "ponRegisterFailed": ponRegisterFailed,
       "ponDisable": ponDisable,
       "ponTxPowerHigh": ponTxPowerHigh,
       "ponTxPowerLow": ponTxPowerLow,
       "ponTxBisaHigh": ponTxBisaHigh,
       "ponTxbiasLow": ponTxbiasLow,
       "ponVccHigh": ponVccHigh,
       "ponVccLow": ponVccLow,
       "ponTempHigh": ponTempHigh,
       "ponTempLow": ponTempLow,
       "ponLos": ponLos,
       "onuDeregister": onuDeregister,
       "onuLinkLost": onuLinkLost,
       "onuIllegalRegister": onuIllegalRegister,
       "onuAuthFailed": onuAuthFailed,
       "onuMacConflict": onuMacConflict,
       "onuLoidConflict": onuLoidConflict,
       "onuCriticalEvent": onuCriticalEvent,
       "onuDyingGasp": onuDyingGasp,
       "onuLinkFault": onuLinkFault,
       "onuLinkEvent": onuLinkEvent,
       "onuEventNotific": onuEventNotific,
       "onuOmLaoDetect": onuOmLaoDetect,
       "onuOmLolDetect": onuOmLolDetect,
       "alarmMax": alarmMax,
       "reset": reset,
       "configSave": configSave,
       "configErase": configErase,
       "dnLoadFileSuccess": dnLoadFileSuccess,
       "uploadFileSuccess": uploadFileSuccess,
       "upgradeFileSuccess": upgradeFileSuccess,
       "ponRegister": ponRegister,
       "ponEnable": ponEnable,
       "ponLosRecovery": ponLosRecovery,
       "onuRegister": onuRegister,
       "onuLinkDiscover": onuLinkDiscover,
       "onuAuthSuccess": onuAuthSuccess,
       "onuDeauthSuccess": onuDeauthSuccess,
       "onuUpgradeOver": onuUpgradeOver,
       "onuFinish": onuFinish,
       "onuPonRxPowerHigh": onuPonRxPowerHigh,
       "onuPonRxPowerLow": onuPonRxPowerLow,
       "onuPonTxPowerHigh": onuPonTxPowerHigh,
       "onuPonTxPowerLow": onuPonTxPowerLow,
       "onuPonTxBiasHigh": onuPonTxBiasHigh,
       "onuPonTxBiasLow": onuPonTxBiasLow,
       "onuPonVccHigh": onuPonVccHigh,
       "onuPonVccLow": onuPonVccLow,
       "onuPonTempHigh": onuPonTempHigh,
       "onuPonTempLow": onuPonTempLow,
       "onuPortAutoNegFailure": onuPortAutoNegFailure,
       "onuPortLos": onuPortLos,
       "onuPortFailure": onuPortFailure,
       "onuPortLoopback": onuPortLoopback,
       "onuPotsFailure": onuPotsFailure,
       "ospfAdjacencyChange": ospfAdjacencyChange,
       "illegalDhcpServer": illegalDhcpServer,
       "overDhcpRateLimit": overDhcpRateLimit,
       "ripAdjacencyChange": ripAdjacencyChange,
       "onuVlanPool": onuVlanPool,
       "onuNumLimit": onuNumLimit,
       "onuTimeLimit": onuTimeLimit,
       "timeChange": timeChange,
       "ponImageDnload": ponImageDnload,
       "macFlapping": macFlapping,
       "portLinkFlap": portLinkFlap,
       "ospf6AdjacencyChange": ospf6AdjacencyChange,
       "ripngAdjacencyChange": ripngAdjacencyChange,
       "ponPsg": ponPsg,
       "userLogin": userLogin,
       "userLogout": userLogout,
       "alarmTrap": alarmTrap,
       "dataAlarmTrap": dataAlarmTrap,
       "v1600dOltType": v1600dOltType,
       "oltType": oltType,
       "routeEnable": routeEnable,
       "protocolSupport": protocolSupport,
       "ipv6Enable": ipv6Enable,
       "oltTypeVersion": oltTypeVersion,
       "v1600dLoopback": v1600dLoopback,
       "loopbackEn": loopbackEn,
       "loopbackCfg": loopbackCfg,
       "mode": mode,
       "agingTime": agingTime,
       "range": range,
       "loopbackTable": loopbackTable,
       "loopbackEntry": loopbackEntry,
       "interfaceS": interfaceS,
       "modeS": modeS,
       "timeS": timeS,
       "srcInterface": srcInterface,
       "loopbackPortCfgTable": loopbackPortCfgTable,
       "loopbackPortCfgEntry": loopbackPortCfgEntry,
       "loopbackPort": loopbackPort,
       "loopbackStatus": loopbackStatus,
       "v1600dRip": v1600dRip,
       "ripGlobalCfg": ripGlobalCfg,
       "ripRouteEn": ripRouteEn,
       "updateTimer": updateTimer,
       "timeoutTimer": timeoutTimer,
       "garbageTimer": garbageTimer,
       "defMetric": defMetric,
       "distance": distance,
       "version": version,
       "keyChainCfg": keyChainCfg,
       "keyName": keyName,
       "keyId": keyId,
       "keyChainString": keyChainString,
       "keyAction": keyAction,
       "keyChainTable": keyChainTable,
       "keyChainEntry": keyChainEntry,
       "keyChainName": keyChainName,
       "keyChainId": keyChainId,
       "keyChainStr": keyChainStr,
       "offsetListCfg": offsetListCfg,
       "offsetListId": offsetListId,
       "offsetType": offsetType,
       "metricVal": metricVal,
       "vlanIfNum": vlanIfNum,
       "offsetListAction": offsetListAction,
       "offsetTable": offsetTable,
       "offsetEntry": offsetEntry,
       "id": id,
       "type": type,
       "metric": metric,
       "vlan": vlan,
       "ripRedistribute": ripRedistribute,
       "ripRedis": ripRedis,
       "ripRedisMetric": ripRedisMetric,
       "ripRedisAction": ripRedisAction,
       "ripRedistributeTable": ripRedistributeTable,
       "ripRedistributeEntry": ripRedistributeEntry,
       "ripRedistributeType": ripRedistributeType,
       "ripRedistributeMetric": ripRedistributeMetric,
       "ripDefaultRedistribute": ripDefaultRedistribute,
       "ripDefRedis": ripDefRedis,
       "ripVlanTable": ripVlanTable,
       "ripVlanEntry": ripVlanEntry,
       "ripVlanAddress": ripVlanAddress,
       "ripAuthType": ripAuthType,
       "ripAuthStr": ripAuthStr,
       "authKeyChain": authKeyChain,
       "sendVer": sendVer,
       "recvVer": recvVer,
       "ripVlanstatus": ripVlanstatus,
       "ripTable": ripTable,
       "ripEntry": ripEntry,
       "ripNetworkType": ripNetworkType,
       "ripNetwork": ripNetwork,
       "ripNextHop": ripNextHop,
       "ripMetric": ripMetric,
       "ripFrom": ripFrom,
       "ripTag": ripTag,
       "ripTime": ripTime,
       "ripPeerTable": ripPeerTable,
       "ripPeerEntry": ripPeerEntry,
       "ripPeerAddress": ripPeerAddress,
       "ripPeerVersion": ripPeerVersion,
       "ripPeerDistance": ripPeerDistance,
       "ripPeerRcvBadPackets": ripPeerRcvBadPackets,
       "ripPeerRcvBadRoutes": ripPeerRcvBadRoutes,
       "ripPeerLastUpdate": ripPeerLastUpdate,
       "v1600dOspf": v1600dOspf,
       "ospfGlobal": ospfGlobal,
       "ospfRouteEn": ospfRouteEn,
       "ospfGlobalRouterId": ospfGlobalRouterId,
       "ospfRedistribute": ospfRedistribute,
       "redistribute": redistribute,
       "redisMetric": redisMetric,
       "redisMetricType": redisMetricType,
       "redisRouteMap": redisRouteMap,
       "redisAction": redisAction,
       "ospfRedistributeTable": ospfRedistributeTable,
       "ospfRedistributeEntry": ospfRedistributeEntry,
       "redistributeType": redistributeType,
       "redistributeMetric": redistributeMetric,
       "metricType": metricType,
       "redistributeRouteMap": redistributeRouteMap,
       "ospfDefaultRedistribute": ospfDefaultRedistribute,
       "ospfDefRedis": ospfDefRedis,
       "always": always,
       "defRedisMetric": defRedisMetric,
       "defRedisMetricType": defRedisMetricType,
       "defRedisAction": defRedisAction,
       "ospfArea": ospfArea,
       "ospfRouteNetworking": ospfRouteNetworking,
       "network": network,
       "area": area,
       "ospfNetworkAction": ospfNetworkAction,
       "ospfRouteNetworkingTable": ospfRouteNetworkingTable,
       "ospfRouteNetworkingEntry": ospfRouteNetworkingEntry,
       "routerId": routerId,
       "ospfNetwork": ospfNetwork,
       "areaId": areaId,
       "ospfAreaTypeCfg": ospfAreaTypeCfg,
       "ospfAreaCfg": ospfAreaCfg,
       "areaTypeCfg": areaTypeCfg,
       "noSummaryCfg": noSummaryCfg,
       "areaActionCfg": areaActionCfg,
       "ospfAreaTypeTable": ospfAreaTypeTable,
       "ospfAreaTypeEntry": ospfAreaTypeEntry,
       "getArea": getArea,
       "areaType": areaType,
       "noSummary": noSummary,
       "ospfAreaSummaryCfg": ospfAreaSummaryCfg,
       "ospfSummaryArea": ospfSummaryArea,
       "ipAddress": ipAddress,
       "subnetMask": subnetMask,
       "areaSummaryAction": areaSummaryAction,
       "ospfSummaryTable": ospfSummaryTable,
       "ospfSummaryEntry": ospfSummaryEntry,
       "summaryArea": summaryArea,
       "summaryNetwork": summaryNetwork,
       "ospfInterface": ospfInterface,
       "ospfInterfaceTable": ospfInterfaceTable,
       "ospfInterfaceEntry": ospfInterfaceEntry,
       "ospfIfAddress": ospfIfAddress,
       "cost": cost,
       "interPri": interPri,
       "retransVal": retransVal,
       "transDelay": transDelay,
       "helloVal": helloVal,
       "deadVal": deadVal,
       "auth": auth,
       "key": key,
       "authString": authString,
       "ospfInformation": ospfInformation,
       "ospfNeighborTable": ospfNeighborTable,
       "ospfNeighborEntry": ospfNeighborEntry,
       "neighborId": neighborId,
       "priority": priority,
       "state": state,
       "deadTime": deadTime,
       "address": address,
       "interface": interface,
       "rxmtl": rxmtl,
       "rqstl": rqstl,
       "dbsml": dbsml,
       "ospfRoutingTable": ospfRoutingTable,
       "ospfNetworkRoutingTable": ospfNetworkRoutingTable,
       "ospfNetworkRoutingEntry": ospfNetworkRoutingEntry,
       "destinationType": destinationType,
       "routingNetwork": routingNetwork,
       "routingCost": routingCost,
       "routingArea": routingArea,
       "routingInterface": routingInterface,
       "ospfRouterRoutingTable": ospfRouterRoutingTable,
       "ospfRouterRoutingEntry": ospfRouterRoutingEntry,
       "routerDesType": routerDesType,
       "routerNetwork": routerNetwork,
       "routerCost": routerCost,
       "areaOrtype": areaOrtype,
       "routerInterface": routerInterface,
       "ospfExternalRoutingTable": ospfExternalRoutingTable,
       "ospfExternalRoutingEntry": ospfExternalRoutingEntry,
       "externalDesType": externalDesType,
       "externalNetwork": externalNetwork,
       "costOrTypeTwoCost": costOrTypeTwoCost,
       "externalTag": externalTag,
       "externalInterface": externalInterface,
       "ospfDatabaseTable": ospfDatabaseTable,
       "ospfDatabaseEntry": ospfDatabaseEntry,
       "lsaArea": lsaArea,
       "lsaType": lsaType,
       "linkId": linkId,
       "advRouter": advRouter,
       "age": age,
       "sequence": sequence,
       "ckSum": ckSum,
       "linkCount": linkCount,
       "route": route,
       "v1600dRouteList": v1600dRouteList,
       "accessListCfg": accessListCfg,
       "accessListMode": accessListMode,
       "accessListId": accessListId,
       "accessListFilterAction": accessListFilterAction,
       "accessListSrcType": accessListSrcType,
       "srcIpAddress": srcIpAddress,
       "srcSubnetMask": srcSubnetMask,
       "accessListDestType": accessListDestType,
       "destIpAddress": destIpAddress,
       "destSubnetMask": destSubnetMask,
       "accessListAction": accessListAction,
       "accessListTable": accessListTable,
       "accessListEntry": accessListEntry,
       "listId": listId,
       "listFilterAction": listFilterAction,
       "listSrcType": listSrcType,
       "listSrcIpAddress": listSrcIpAddress,
       "listSrcSubnetMask": listSrcSubnetMask,
       "listDestType": listDestType,
       "listDestIpAddress": listDestIpAddress,
       "listDestSubnetMask": listDestSubnetMask,
       "prefixListCfg": prefixListCfg,
       "prefixList": prefixList,
       "prefixListseq": prefixListseq,
       "prefixListFilterAction": prefixListFilterAction,
       "prefixListType": prefixListType,
       "prefixListIp": prefixListIp,
       "prefixListMask": prefixListMask,
       "prefixListGe": prefixListGe,
       "prefixListLe": prefixListLe,
       "prefixListAction": prefixListAction,
       "prefixListTable": prefixListTable,
       "prefixListEntry": prefixListEntry,
       "listName": listName,
       "listSequence": listSequence,
       "preListFilterAction": preListFilterAction,
       "preListType": preListType,
       "listNetwork": listNetwork,
       "listGe": listGe,
       "listLe": listLe,
       "routeMapCfg": routeMapCfg,
       "routeMap": routeMap,
       "filterType": filterType,
       "routeMapSequence": routeMapSequence,
       "routeMapType": routeMapType,
       "addressAccessList": addressAccessList,
       "addressPrefixList": addressPrefixList,
       "nexthopAccessList": nexthopAccessList,
       "nexthopPrefixList": nexthopPrefixList,
       "routeMapInterface": routeMapInterface,
       "matchTag": matchTag,
       "routeMapMetric": routeMapMetric,
       "routeMapMetricType": routeMapMetricType,
       "setTag": setTag,
       "routeMapAction": routeMapAction,
       "routeMapTable": routeMapTable,
       "routeMapEntry": routeMapEntry,
       "routeMapName": routeMapName,
       "mapFilterType": mapFilterType,
       "mapSequence": mapSequence,
       "clauses": clauses,
       "routeTable": routeTable,
       "routeEntry": routeEntry,
       "routeType": routeType,
       "routeNetwork": routeNetwork,
       "routeDistance": routeDistance,
       "routeMetric": routeMetric,
       "routeInterface": routeInterface,
       "routeTime": routeTime,
       "routeIPv6Table": routeIPv6Table,
       "routeIPv6Entry": routeIPv6Entry,
       "routeIPv6Type": routeIPv6Type,
       "routeIPv6Network": routeIPv6Network,
       "routeIPv6Distance": routeIPv6Distance,
       "routeIPv6Metric": routeIPv6Metric,
       "routeIPv6Interface": routeIPv6Interface,
       "routeIPv6Time": routeIPv6Time,
       "v1600dDHCPv6": v1600dDHCPv6,
       "dhcpv6Server": dhcpv6Server,
       "dhcpv6ServerPoolCfg": dhcpv6ServerPoolCfg,
       "dhcpv6ServerPoolname": dhcpv6ServerPoolname,
       "dhcpv6ServerPoolStartIpv6": dhcpv6ServerPoolStartIpv6,
       "dhcpv6ServerPoolEndIPv6": dhcpv6ServerPoolEndIPv6,
       "dhcpv6ServerPoolPfxValidTime": dhcpv6ServerPoolPfxValidTime,
       "dhcpv6ServerPoolPfxPreferredTime": dhcpv6ServerPoolPfxPreferredTime,
       "dhcpv6ServerPoolDNS": dhcpv6ServerPoolDNS,
       "dhcpv6ServerPoolDomain": dhcpv6ServerPoolDomain,
       "dhcpv6ServerPoolAction": dhcpv6ServerPoolAction,
       "dhcpv6ServerPoolInfRefreshTime": dhcpv6ServerPoolInfRefreshTime,
       "dhcpv6ServerPoolTable": dhcpv6ServerPoolTable,
       "dhcpv6ServerPoolEntry": dhcpv6ServerPoolEntry,
       "dhcpv6ServerPoolIndex": dhcpv6ServerPoolIndex,
       "dhcpv6ServerPoolName": dhcpv6ServerPoolName,
       "dhcpv6ServerPoolStartIPv6Addr": dhcpv6ServerPoolStartIPv6Addr,
       "dhcpv6ServerPoolEndIPv6Addr": dhcpv6ServerPoolEndIPv6Addr,
       "dhcpv6ServerPoolAddrValidLifetime": dhcpv6ServerPoolAddrValidLifetime,
       "dhcpv6ServerPoolAddrPreferredLifetime": dhcpv6ServerPoolAddrPreferredLifetime,
       "dhcpv6ServerPoolDNSServer": dhcpv6ServerPoolDNSServer,
       "dhcpv6ServerPoolDomainName": dhcpv6ServerPoolDomainName,
       "dhcpv6ServerPoolInfoRefrehTime": dhcpv6ServerPoolInfoRefrehTime,
       "dhcpv6ServerInterface": dhcpv6ServerInterface,
       "dhcpv6ServerBindingsClientInterfaceVlanid": dhcpv6ServerBindingsClientInterfaceVlanid,
       "dhcpv6ServerBindingsClientInterfacePool": dhcpv6ServerBindingsClientInterfacePool,
       "dhcpv6ServerPreferenceValue": dhcpv6ServerPreferenceValue,
       "dhcpv6ServerAllowClientshint": dhcpv6ServerAllowClientshint,
       "dhcpv6ServerRapidcommit": dhcpv6ServerRapidcommit,
       "dhcpv6ServerBindingsClientInterfaceAction": dhcpv6ServerBindingsClientInterfaceAction,
       "dhcpv6ServerInterfaceTable": dhcpv6ServerInterfaceTable,
       "dhcpv6ServerInterfaceEntry": dhcpv6ServerInterfaceEntry,
       "dhcpv6ServerBindingsClientInterfaceVlanId": dhcpv6ServerBindingsClientInterfaceVlanId,
       "dhcpv6ServerBindingsClientPoolName": dhcpv6ServerBindingsClientPoolName,
       "dhcpv6InterfacePreferenceValue": dhcpv6InterfacePreferenceValue,
       "dhcpv6ServerAllowClientsHint": dhcpv6ServerAllowClientsHint,
       "dhcpv6ServerRapidCommit": dhcpv6ServerRapidCommit,
       "dhcpv6ServerBindingsTable": dhcpv6ServerBindingsTable,
       "dhcpv6ServerBindingsEntry": dhcpv6ServerBindingsEntry,
       "dhcpv6ServerBindingsindex": dhcpv6ServerBindingsindex,
       "dhcpv6ServerBindingsClientAddress": dhcpv6ServerBindingsClientAddress,
       "dhcpv6ServerBindingsCLientDUID": dhcpv6ServerBindingsCLientDUID,
       "dhcpv6ServerBindingsClientPrefix": dhcpv6ServerBindingsClientPrefix,
       "dhcpv6ServerBindingsClientPfxValidTime": dhcpv6ServerBindingsClientPfxValidTime,
       "dhcpv6ServerBindingsClientPfxPreferrefTime": dhcpv6ServerBindingsClientPfxPreferrefTime,
       "dhcpv6ServerBindingsLeaseExpireTime": dhcpv6ServerBindingsLeaseExpireTime,
       "dhcpv6Duid": dhcpv6Duid,
       "dhcpv6DuidType": dhcpv6DuidType,
       "dhcpv6DuidEnterprise": dhcpv6DuidEnterprise,
       "dhcpv6DuidIdentifier": dhcpv6DuidIdentifier,
       "dhcpv6DuidAction": dhcpv6DuidAction,
       "dhcpv6DuidTable": dhcpv6DuidTable,
       "dhcpv6DuidEntry": dhcpv6DuidEntry,
       "dhcpv6DuidTableDuidType": dhcpv6DuidTableDuidType,
       "dhcpv6DuidTableDuid": dhcpv6DuidTableDuid,
       "dhcpv6Relay": dhcpv6Relay,
       "dhcpv6RelayCfg": dhcpv6RelayCfg,
       "dhcpv6RelayServerVlanId": dhcpv6RelayServerVlanId,
       "dhcpv6RelayServerAddr": dhcpv6RelayServerAddr,
       "dhcpv6RelayServerAction": dhcpv6RelayServerAction,
       "dhcpv6RelayServerTable": dhcpv6RelayServerTable,
       "dhcpv6RelayServerEntry": dhcpv6RelayServerEntry,
       "dhcpv6RelayServerVlanID": dhcpv6RelayServerVlanID,
       "dhcpv6RelayServerAddress": dhcpv6RelayServerAddress,
       "dhcp6Snooping": dhcp6Snooping,
       "dhcp6SnoopingEnable": dhcp6SnoopingEnable,
       "dhcp6SnoopingVLAN": dhcp6SnoopingVLAN,
       "dhcp6SnoopingVLANID": dhcp6SnoopingVLANID,
       "dhcp6SnoopingVLANAction": dhcp6SnoopingVLANAction,
       "dhcp6SnoopingVLANList": dhcp6SnoopingVLANList,
       "dhcp6SnoopingOption": dhcp6SnoopingOption,
       "dhcp6SnoopingOptionInterfaceEnable": dhcp6SnoopingOptionInterfaceEnable,
       "dhcp6SnoopingOptionInterfacePolicy": dhcp6SnoopingOptionInterfacePolicy,
       "dhcp6SnoopingOptionRemoteEnable": dhcp6SnoopingOptionRemoteEnable,
       "dhcp6SnoopingOptionRemotePolicy": dhcp6SnoopingOptionRemotePolicy,
       "dhcp6SnoopingOptionSubscriberEnable": dhcp6SnoopingOptionSubscriberEnable,
       "dhcp6SnoopingOptionSubscriberPolicy": dhcp6SnoopingOptionSubscriberPolicy,
       "dhcp6SnoopingOptionAction": dhcp6SnoopingOptionAction,
       "dhcp6SnoopingPortCfgTable": dhcp6SnoopingPortCfgTable,
       "dhcp6SnoopingPortCfgEntry": dhcp6SnoopingPortCfgEntry,
       "dhcp6SnoopingPortIndex": dhcp6SnoopingPortIndex,
       "dhcp6SnoopingPortType": dhcp6SnoopingPortType,
       "dhcp6SnoopingPortInterfaceid": dhcp6SnoopingPortInterfaceid,
       "dhcp6SnoopingPortRemoteid": dhcp6SnoopingPortRemoteid,
       "dhcp6SnoopingPortSubscriberd": dhcp6SnoopingPortSubscriberd,
       "dhcp6SnoopingPortRateLimit": dhcp6SnoopingPortRateLimit,
       "dhcp6SnoopingPortDeny": dhcp6SnoopingPortDeny,
       "dhcp6SnoopingPortCheck": dhcp6SnoopingPortCheck,
       "dhcp6SnoopingBinding": dhcp6SnoopingBinding,
       "dhcp6SnoopingBindingConfig": dhcp6SnoopingBindingConfig,
       "dhcp6SnoopingBindMAC": dhcp6SnoopingBindMAC,
       "dhcp6SnoopingBindVLAN": dhcp6SnoopingBindVLAN,
       "dhcp6SnoopingBindIPv6": dhcp6SnoopingBindIPv6,
       "dhcp6SnoopingBindPortIndex": dhcp6SnoopingBindPortIndex,
       "dhcp6SnoopingBindValidTime": dhcp6SnoopingBindValidTime,
       "dhcp6SnoopingBindPreferredTime": dhcp6SnoopingBindPreferredTime,
       "dhcp6SnoopingBindAction": dhcp6SnoopingBindAction,
       "dhcp6SnoopingBindingTable": dhcp6SnoopingBindingTable,
       "dhcp6SnoopingBindingEntry": dhcp6SnoopingBindingEntry,
       "dhcp6SnoopingBindingID": dhcp6SnoopingBindingID,
       "dhcp6SnoopingBindingMAC": dhcp6SnoopingBindingMAC,
       "dhcp6SnoopingBindingIPv6": dhcp6SnoopingBindingIPv6,
       "dhcp6SnoopingBindingPreferredTime": dhcp6SnoopingBindingPreferredTime,
       "dhcp6SnoopingBindingValidTime": dhcp6SnoopingBindingValidTime,
       "dhcp6SnoopingBindingType": dhcp6SnoopingBindingType,
       "dhcp6SnoopingBindingVLAN": dhcp6SnoopingBindingVLAN,
       "dhcp6SnoopingBindingInterface": dhcp6SnoopingBindingInterface,
       "v1600dIPv6MldSnooping": v1600dIPv6MldSnooping,
       "mldGlobalTable": mldGlobalTable,
       "mldGlobalEntry": mldGlobalEntry,
       "mldGlobalIndex": mldGlobalIndex,
       "mldLastListenQueryCount": mldLastListenQueryCount,
       "sendGeneralQueryPacket": sendGeneralQueryPacket,
       "generalQueryInterval": generalQueryInterval,
       "querySourceIp": querySourceIp,
       "mldStatus": mldStatus,
       "mldUserVlanCfg": mldUserVlanCfg,
       "mldUserPortIndexCfg": mldUserPortIndexCfg,
       "mldUserVlanIdCfg": mldUserVlanIdCfg,
       "mldGroupVlanIdCfg": mldGroupVlanIdCfg,
       "mldUserVlanAction": mldUserVlanAction,
       "mldUserVlanTable": mldUserVlanTable,
       "mldUserVlanEntry": mldUserVlanEntry,
       "mldUserPortIndex": mldUserPortIndex,
       "mldUserVlanId": mldUserVlanId,
       "mldGroupVlanId": mldGroupVlanId,
       "mldPortTable": mldPortTable,
       "mldPortEntry": mldPortEntry,
       "mldPortIndex": mldPortIndex,
       "mldPortFastLeave": mldPortFastLeave,
       "mldPortGroupLimit": mldPortGroupLimit,
       "mldMrouterPortCfg": mldMrouterPortCfg,
       "mldMrouterPort": mldMrouterPort,
       "mldMrouterVlan": mldMrouterVlan,
       "mldMrouterAction": mldMrouterAction,
       "mldMrouterPortTable": mldMrouterPortTable,
       "mldMrouterPortEntry": mldMrouterPortEntry,
       "mldMrouterItem": mldMrouterItem,
       "mldMrouterVlanId": mldMrouterVlanId,
       "mldMrouterType": mldMrouterType,
       "mldStaticGroupCfg": mldStaticGroupCfg,
       "mldStaticGroupPort": mldStaticGroupPort,
       "mldStaticGroupIpv6": mldStaticGroupIpv6,
       "mldStaticGroupVlan": mldStaticGroupVlan,
       "mldStaticGroupAction": mldStaticGroupAction,
       "mldStaticGroupTable": mldStaticGroupTable,
       "mldStaticGroupEntry": mldStaticGroupEntry,
       "mldStaticGroupVlanId": mldStaticGroupVlanId,
       "mldStaticGroupIpv6Addr": mldStaticGroupIpv6Addr,
       "mldStaticGroupType": mldStaticGroupType,
       "mldStaticGroupVersion": mldStaticGroupVersion,
       "mldStaticGroupPortLlist": mldStaticGroupPortLlist,
       "mldGroupMemberTable": mldGroupMemberTable,
       "mldGroupMemberEntry": mldGroupMemberEntry,
       "mldGroupMemberVlanId": mldGroupMemberVlanId,
       "mldGroupMemberIpv6": mldGroupMemberIpv6,
       "mldGroupMemberPortId": mldGroupMemberPortId,
       "mldGroupMemberType": mldGroupMemberType,
       "mldGroupMemberUserVlanId": mldGroupMemberUserVlanId,
       "v1600dSSH": v1600dSSH,
       "sshConnectInfoTable": sshConnectInfoTable,
       "sshConnectInfoEntry": sshConnectInfoEntry,
       "sshConnections": sshConnections,
       "sshVersion": sshVersion,
       "sshMode": sshMode,
       "sshEncryption": sshEncryption,
       "sshHmac": sshHmac,
       "sshState": sshState,
       "sshUsername": sshUsername,
       "sshEnable": sshEnable,
       "sshEn": sshEn,
       "sshversion": sshversion,
       "sshAuthRetries": sshAuthRetries,
       "sshTimeout": sshTimeout,
       "sshModulus": sshModulus,
       "sshEnableAction": sshEnableAction,
       "v3500DHCP": v3500DHCP,
       "v3500DHCPServer": v3500DHCPServer,
       "dhcpPool": dhcpPool,
       "dhcpPoolName": dhcpPoolName,
       "dhcpPoolLeasetime": dhcpPoolLeasetime,
       "dhcpPoolGw": dhcpPoolGw,
       "dhcpPoolDNS1": dhcpPoolDNS1,
       "dhcpPoolDNS2": dhcpPoolDNS2,
       "dhcpPoolDNS3": dhcpPoolDNS3,
       "dhcpPoolWins": dhcpPoolWins,
       "dhcpPoolNetwork": dhcpPoolNetwork,
       "dhcpPoolNetworkSubnet": dhcpPoolNetworkSubnet,
       "dhcpPoolAction": dhcpPoolAction,
       "dhcpPoolReservedAddr": dhcpPoolReservedAddr,
       "dhcpPoolReservedPoolname": dhcpPoolReservedPoolname,
       "dhcpPoolReservedAdd": dhcpPoolReservedAdd,
       "dhcpPoolClientMac": dhcpPoolClientMac,
       "dhcpPoolReservedAction": dhcpPoolReservedAction,
       "dhcpPoolExcludeAddr": dhcpPoolExcludeAddr,
       "dhcpPoolExcludePoolname": dhcpPoolExcludePoolname,
       "dhcpPoolExcludeLowAddr": dhcpPoolExcludeLowAddr,
       "dhcpPoolExcludeHighAddr": dhcpPoolExcludeHighAddr,
       "dhcpPoolExcludeAction": dhcpPoolExcludeAction,
       "dhcpPoolInterfaceEnable": dhcpPoolInterfaceEnable,
       "dhcpPoolVlan": dhcpPoolVlan,
       "dhcpServerPoolname": dhcpServerPoolname,
       "dhcpPoolEnable": dhcpPoolEnable,
       "dhcpPoolTable": dhcpPoolTable,
       "dhcpPoolEntry": dhcpPoolEntry,
       "poolName": poolName,
       "poolLeaseTime": poolLeaseTime,
       "poolStartIP": poolStartIP,
       "poolEndIP": poolEndIP,
       "poolSubnet": poolSubnet,
       "poolGateway": poolGateway,
       "poolDNS1": poolDNS1,
       "poolDNS2": poolDNS2,
       "poolDNS3": poolDNS3,
       "poolWins": poolWins,
       "dhcpPoolReservedAddrTable": dhcpPoolReservedAddrTable,
       "dhcpPoolReservedAddrEntry": dhcpPoolReservedAddrEntry,
       "reservedIndex": reservedIndex,
       "reservedPoolName": reservedPoolName,
       "reservedAddress": reservedAddress,
       "clientMacAddr": clientMacAddr,
       "dhcpPoolExcludeAddrTable": dhcpPoolExcludeAddrTable,
       "dhcpPoolExcludeAddrEntry": dhcpPoolExcludeAddrEntry,
       "excludePoolName": excludePoolName,
       "excludeIndex": excludeIndex,
       "excludeLowAddress": excludeLowAddress,
       "excludeHighAddress": excludeHighAddress,
       "dhcpPoolInterfaceEnableTable": dhcpPoolInterfaceEnableTable,
       "dhcpPoolInterfaceEnableEntry": dhcpPoolInterfaceEnableEntry,
       "dhcpPoolInterfaceVlan": dhcpPoolInterfaceVlan,
       "enabledPoolName": enabledPoolName,
       "dhcpBindingTable": dhcpBindingTable,
       "dhcpBindingEntry": dhcpBindingEntry,
       "dhcpBindingIndex": dhcpBindingIndex,
       "dhcpBindingClientMac": dhcpBindingClientMac,
       "dhcpBindingnAddr": dhcpBindingnAddr,
       "dhcpBindingLeaseTime": dhcpBindingLeaseTime,
       "dhcpBindingType": dhcpBindingType,
       "dhcpBindingHostName": dhcpBindingHostName,
       "v1600RIPng": v1600RIPng,
       "ripngGlobalCfg": ripngGlobalCfg,
       "ripngRouteEn": ripngRouteEn,
       "ripngUpdateTime": ripngUpdateTime,
       "ripngTimeout": ripngTimeout,
       "ripngGarbageTime": ripngGarbageTime,
       "ripngDefMetric": ripngDefMetric,
       "ripngRouteNetworking": ripngRouteNetworking,
       "ripngVlanid": ripngVlanid,
       "ripngIPv6Addr": ripngIPv6Addr,
       "ripngRouteAction": ripngRouteAction,
       "ripngRouteNetworkTable": ripngRouteNetworkTable,
       "ripngRouteNetworkEntry": ripngRouteNetworkEntry,
       "ripngRouteNetwork": ripngRouteNetwork,
       "ripngAggregate": ripngAggregate,
       "ripngAggreIPv6": ripngAggreIPv6,
       "ripngAggrePrefix": ripngAggrePrefix,
       "ripngAggreAction": ripngAggreAction,
       "ripngAggregateTable": ripngAggregateTable,
       "ripngAggregateEntry": ripngAggregateEntry,
       "ripngAggreNetwork": ripngAggreNetwork,
       "ripngRedistribute": ripngRedistribute,
       "ripngDefRedisEn": ripngDefRedisEn,
       "ripngRedisType": ripngRedisType,
       "ripngRedisMetric": ripngRedisMetric,
       "ripngRedisAction": ripngRedisAction,
       "ripngRedisTable": ripngRedisTable,
       "ripngRedisEntry": ripngRedisEntry,
       "ripngRedistributeType": ripngRedistributeType,
       "ripngRedistributeMetric": ripngRedistributeMetric,
       "ripngInterfaceTable": ripngInterfaceTable,
       "ripngInterfaceEntry": ripngInterfaceEntry,
       "ripngInterfaceID": ripngInterfaceID,
       "ripngInterSplitHorizon": ripngInterSplitHorizon,
       "ripngRouteTable": ripngRouteTable,
       "ripngRouteEntry": ripngRouteEntry,
       "ripngRouteType": ripngRouteType,
       "ripngRouteNetworks": ripngRouteNetworks,
       "ripngRouteNextHop": ripngRouteNextHop,
       "ripngRouteVia": ripngRouteVia,
       "ripngRouteMetric": ripngRouteMetric,
       "ripngRouteTag": ripngRouteTag,
       "ripngRouteTime": ripngRouteTime,
       "ripngRouteInfoSrcTable": ripngRouteInfoSrcTable,
       "ripngRouteInfoSrcEntry": ripngRouteInfoSrcEntry,
       "ripngGateway": ripngGateway,
       "ripngBadPackets": ripngBadPackets,
       "ripngBadRoutes": ripngBadRoutes,
       "ripngDistance": ripngDistance,
       "ripngLastUpdate": ripngLastUpdate,
       "v1600Tacacs": v1600Tacacs,
       "tacplusCfg": tacplusCfg,
       "tacAAAEnable": tacAAAEnable,
       "tacAuthen": tacAuthen,
       "tacAuthenLocal": tacAuthenLocal,
       "tacAuthenEnable": tacAuthenEnable,
       "tacAuthenEnableLocal": tacAuthenEnableLocal,
       "tacAuthorExec": tacAuthorExec,
       "tacAuthorExecLocal": tacAuthorExecLocal,
       "tacAuthorCmdLv": tacAuthorCmdLv,
       "tacAuthorCmdLvLocal": tacAuthorCmdLvLocal,
       "tacAuthorCmdEnable": tacAuthorCmdEnable,
       "tacAcctExec": tacAcctExec,
       "tacAcctCmdLv": tacAcctCmdLv,
       "tacAcctCmdEnable": tacAcctCmdEnable,
       "enableConsoleTac": enableConsoleTac,
       "enableWebTac": enableWebTac,
       "tacplusCfgTable": tacplusCfgTable,
       "tacplusCfgEntry": tacplusCfgEntry,
       "tacplusAAA": tacplusAAA,
       "tacplusAuthentication": tacplusAuthentication,
       "tacplusAuthenLocal": tacplusAuthenLocal,
       "tacplusAuthenEnable": tacplusAuthenEnable,
       "tacplusAuthenEnableLocal": tacplusAuthenEnableLocal,
       "tacplusAuthorExec": tacplusAuthorExec,
       "tacplusAuthorExecLocal": tacplusAuthorExecLocal,
       "tacplusAuthorCmdLv": tacplusAuthorCmdLv,
       "tacplusAuthorCmdLvLocal": tacplusAuthorCmdLvLocal,
       "tacplusAcctExec": tacplusAcctExec,
       "tacplusAcctCmdLv": tacplusAcctCmdLv,
       "tacplusConsoleStatus": tacplusConsoleStatus,
       "tacplusServerCfg": tacplusServerCfg,
       "tacServerHost": tacServerHost,
       "tacAddServer": tacAddServer,
       "tacSharedKey": tacSharedKey,
       "tacAddKey": tacAddKey,
       "tacplusServerTable": tacplusServerTable,
       "tacplusServerEntry": tacplusServerEntry,
       "tacplusServer": tacplusServer,
       "tacplusKey": tacplusKey,
       "v1600Radius": v1600Radius,
       "radiusCfg": radiusCfg,
       "radAAAEnable": radAAAEnable,
       "radAuthen": radAuthen,
       "radAuthenLocal": radAuthenLocal,
       "radAuthenEnable": radAuthenEnable,
       "radAuthenEnableLocal": radAuthenEnableLocal,
       "radAcctExec": radAcctExec,
       "enableConsoleRad": enableConsoleRad,
       "enableWebRad": enableWebRad,
       "radDot1xAuthen": radDot1xAuthen,
       "radDot1xAuthenLocal": radDot1xAuthenLocal,
       "radDot1xAuthor": radDot1xAuthor,
       "radDot1xAcct": radDot1xAcct,
       "radiusCfgTable": radiusCfgTable,
       "radiusCfgEntry": radiusCfgEntry,
       "radiusAAA": radiusAAA,
       "radiusAuthentication": radiusAuthentication,
       "radiusAuthenLocal": radiusAuthenLocal,
       "radiusAuthenEnable": radiusAuthenEnable,
       "radiusAuthenEnableLocal": radiusAuthenEnableLocal,
       "radiusAcctExec": radiusAcctExec,
       "radiusConsoleStatus": radiusConsoleStatus,
       "radiusWebStatus": radiusWebStatus,
       "radiusDot1xAuthen": radiusDot1xAuthen,
       "radiusDot1xAuthenLocal": radiusDot1xAuthenLocal,
       "radiusDot1xAuthor": radiusDot1xAuthor,
       "radiusDot1xAcct": radiusDot1xAcct,
       "radiusServerCfg": radiusServerCfg,
       "radServerHost": radServerHost,
       "radSharedKey": radSharedKey,
       "radAddAction": radAddAction,
       "radiusServerTable": radiusServerTable,
       "radiusServerEntry": radiusServerEntry,
       "radiusServer": radiusServer,
       "radiusKey": radiusKey,
       "v1600dMstp": v1600dMstp,
       "mstpEn": mstpEn,
       "mstpCfg": mstpCfg,
       "mstpHelloTime": mstpHelloTime,
       "mstpForwardDelay": mstpForwardDelay,
       "mstpMaxAge": mstpMaxAge,
       "mstpMaxHops": mstpMaxHops,
       "mstpCfgAction": mstpCfgAction,
       "mstpRegionCfg": mstpRegionCfg,
       "mstpFormatID": mstpFormatID,
       "mstpRegionName": mstpRegionName,
       "mstpRevisionLevel": mstpRevisionLevel,
       "mstpDigest": mstpDigest,
       "mstpRegionCfgAction": mstpRegionCfgAction,
       "mstpGuard": mstpGuard,
       "mstpBPDUFilter": mstpBPDUFilter,
       "mstpBPDUFilterRecovery": mstpBPDUFilterRecovery,
       "mstpBPDUGuard": mstpBPDUGuard,
       "mstpLoopGuard": mstpLoopGuard,
       "mstpGuardAction": mstpGuardAction,
       "mstpInstance": mstpInstance,
       "mstpInstanceID": mstpInstanceID,
       "mstpInstancePriority": mstpInstancePriority,
       "mstpVLANMapped": mstpVLANMapped,
       "mstpInstanceAction": mstpInstanceAction,
       "mstpInstanceTable": mstpInstanceTable,
       "mstpInstanceEntry": mstpInstanceEntry,
       "mstpInstanceId": mstpInstanceId,
       "mstpInstanceVLANMapped": mstpInstanceVLANMapped,
       "mstpPortTable": mstpPortTable,
       "mstpPortEntry": mstpPortEntry,
       "mstpPortInstanceID": mstpPortInstanceID,
       "mstpPortIfindex": mstpPortIfindex,
       "mstpPortstatus": mstpPortstatus,
       "mstpPortPriority": mstpPortPriority,
       "mstpPortPathCost": mstpPortPathCost,
       "mstpPortFast": mstpPortFast,
       "mstpPortP2P": mstpPortP2P,
       "mstpPortBPDUFilter": mstpPortBPDUFilter,
       "mstpPortBPDUGuard": mstpPortBPDUGuard,
       "mstpPortGuard": mstpPortGuard,
       "mstpInformation": mstpInformation,
       "mstpInstanceInfoTable": mstpInstanceInfoTable,
       "mstpInstanceInfoEntry": mstpInstanceInfoEntry,
       "mstpInfoInstanceID": mstpInfoInstanceID,
       "mstpInfoInstanceVlanMapped": mstpInfoInstanceVlanMapped,
       "mstpBridgeAddress": mstpBridgeAddress,
       "mstpBridgePriority": mstpBridgePriority,
       "mstpRootAddress": mstpRootAddress,
       "mstpRootPriority": mstpRootPriority,
       "mstpRegRootAddress": mstpRegRootAddress,
       "mstpRegRootPriority": mstpRegRootPriority,
       "mstpBridgeHelloTime": mstpBridgeHelloTime,
       "mstpBridgeForwardDelay": mstpBridgeForwardDelay,
       "mstpBridgeMaxAge": mstpBridgeMaxAge,
       "mstpBridgeMaxHops": mstpBridgeMaxHops,
       "mstpRootHelloTime": mstpRootHelloTime,
       "mstpRootForwardDelay": mstpRootForwardDelay,
       "mstpRootMaxAge": mstpRootMaxAge,
       "mstpInstancePortTable": mstpInstancePortTable,
       "mstpInstancePortEntry": mstpInstancePortEntry,
       "mstpInterfaceName": mstpInterfaceName,
       "mstpInstancePortRole": mstpInstancePortRole,
       "mstpInstancePortState": mstpInstancePortState,
       "mstpInstancePortPathCost": mstpInstancePortPathCost,
       "mstpInstancePortPriority": mstpInstancePortPriority,
       "mstpInstancePortNumber": mstpInstancePortNumber,
       "mstpInstancePortLinkType": mstpInstancePortLinkType,
       "v1600dNdSnooping": v1600dNdSnooping,
       "ndSnoopingCfg": ndSnoopingCfg,
       "ndSnoopingEnable": ndSnoopingEnable,
       "ndSnoopingDetect": ndSnoopingDetect,
       "ndSnoopingRetransmit": ndSnoopingRetransmit,
       "ndSnoopingInterval": ndSnoopingInterval,
       "ndSnoopingVLAN": ndSnoopingVLAN,
       "ndSnoopingVLANID": ndSnoopingVLANID,
       "ndSnoopingVLANAction": ndSnoopingVLANAction,
       "ndSnoopingVLANList": ndSnoopingVLANList,
       "ndSnoopingPortCfgTable": ndSnoopingPortCfgTable,
       "ndSnoopingPortCfgEntry": ndSnoopingPortCfgEntry,
       "ndSnoopingPortIndex": ndSnoopingPortIndex,
       "ndSnoopingPortType": ndSnoopingPortType,
       "ndSnoopingPortCfgNaCheck": ndSnoopingPortCfgNaCheck,
       "ndSnoopingPortCfgNsCheck": ndSnoopingPortCfgNsCheck,
       "ndSnoopingPortCfgRsCheck": ndSnoopingPortCfgRsCheck,
       "ndSnoopingEntry": ndSnoopingEntry,
       "ndSnoopingPrefixEntryTable": ndSnoopingPrefixEntryTable,
       "ndSnoopingPrefixEntryEntry": ndSnoopingPrefixEntryEntry,
       "ndSnoopingPrefixEntryID": ndSnoopingPrefixEntryID,
       "ndSnoopingPrefixEntryPrefix": ndSnoopingPrefixEntryPrefix,
       "ndSnoopingPrefixEntryPrefixlen": ndSnoopingPrefixEntryPrefixlen,
       "ndSnoopingPrefixEntryValidLifetime": ndSnoopingPrefixEntryValidLifetime,
       "ndSnoopingPrefixEntryPreferredLifetime": ndSnoopingPrefixEntryPreferredLifetime,
       "ndSnoopingPrefixEntryVlan": ndSnoopingPrefixEntryVlan,
       "ndSnoopingPrefixEntryInterface": ndSnoopingPrefixEntryInterface,
       "ndSnoopingBindingEntryTable": ndSnoopingBindingEntryTable,
       "ndSnoopingBindingEntryEntry": ndSnoopingBindingEntryEntry,
       "ndSnoopingBindingEntryID": ndSnoopingBindingEntryID,
       "ndSnoopingBindingEntryMac": ndSnoopingBindingEntryMac,
       "ndSnoopingBindingEntryIPv6": ndSnoopingBindingEntryIPv6,
       "ndSnoopingBindingEntryVlan": ndSnoopingBindingEntryVlan,
       "ndSnoopingBindingEntryInterface": ndSnoopingBindingEntryInterface,
       "v1600dDot1x": v1600dDot1x,
       "dot1xGlobalEn": dot1xGlobalEn,
       "dot1xPortEn": dot1xPortEn,
       "dot1xPortId": dot1xPortId,
       "dot1xPortAction": dot1xPortAction,
       "dot1xPortConfigTable": dot1xPortConfigTable,
       "dot1xPortConfigEntry": dot1xPortConfigEntry,
       "dot1xPort": dot1xPort,
       "dot1xAuthenType": dot1xAuthenType,
       "dot1xPortControl": dot1xPortControl,
       "dot1xMethodType": dot1xMethodType,
       "dot1xMaxUser": dot1xMaxUser,
       "dot1xGuestVlan": dot1xGuestVlan,
       "dot1xAuthFailVlan": dot1xAuthFailVlan,
       "dot1xTxTimer": dot1xTxTimer,
       "dot1xSuppTimer": dot1xSuppTimer,
       "dot1xHandshakeEnable": dot1xHandshakeEnable,
       "dot1xHandshakeTimer": dot1xHandshakeTimer,
       "radiusDot1xCfg": radiusDot1xCfg,
       "v1600dPim": v1600dPim,
       "pimMulticastRoutingEn": pimMulticastRoutingEn,
       "pimIgmpCfg": pimIgmpCfg,
       "pimIgmpQueryInterval": pimIgmpQueryInterval,
       "pimIgmpQueryMaxResTime": pimIgmpQueryMaxResTime,
       "pimIgmpQuerierTimeout": pimIgmpQuerierTimeout,
       "pmIgmpLastMenberInterval": pmIgmpLastMenberInterval,
       "pimIgmpRobustness": pimIgmpRobustness,
       "pimIgmpGroupCfg": pimIgmpGroupCfg,
       "igmpInterface": igmpInterface,
       "igmpGroupAddress": igmpGroupAddress,
       "igmpAddressMode": igmpAddressMode,
       "pimIgmpAction": pimIgmpAction,
       "pimGlobalCfg": pimGlobalCfg,
       "pimQueryInterval": pimQueryInterval,
       "pimSPTThresholdInfinity": pimSPTThresholdInfinity,
       "pimInterfaceCfg": pimInterfaceCfg,
       "pimInterface": pimInterface,
       "pimMode": pimMode,
       "pimDRPriority": pimDRPriority,
       "pimBSRBorder": pimBSRBorder,
       "pimInterfaceAction": pimInterfaceAction,
       "pimRPsCfg": pimRPsCfg,
       "pimRPsAddress": pimRPsAddress,
       "pimRPsAction": pimRPsAction,
       "pimCandidateRPCfg": pimCandidateRPCfg,
       "pimCRPInterface": pimCRPInterface,
       "pimCRPPriority": pimCRPPriority,
       "pimCRPAction": pimCRPAction,
       "pimCandidateBSRCfg": pimCandidateBSRCfg,
       "pimCBSRInterface": pimCBSRInterface,
       "pimCBSRPriority": pimCBSRPriority,
       "pimCBSRHashMaskLen": pimCBSRHashMaskLen,
       "pimCBSRAction": pimCBSRAction,
       "pimMRouteTable": pimMRouteTable,
       "pimMRouteEntry": pimMRouteEntry,
       "pimMRouteSource": pimMRouteSource,
       "pimMRouteGroup": pimMRouteGroup,
       "pimMRouteCRP": pimMRouteCRP,
       "pimMRouteUptime": pimMRouteUptime,
       "pimMRouteExpires": pimMRouteExpires,
       "pimMRouteRP": pimMRouteRP,
       "pimMRouteMode": pimMRouteMode,
       "pimMRouteIncomingInf": pimMRouteIncomingInf,
       "pimMRouteRPFNbr": pimMRouteRPFNbr,
       "pimMRouteOutgoingList": pimMRouteOutgoingList,
       "pimIpIgmpGroupTable": pimIpIgmpGroupTable,
       "pimIpIgmpGroupEntry": pimIpIgmpGroupEntry,
       "pimIpIgmpGroupAddress": pimIpIgmpGroupAddress,
       "pimIpIgmpGroupInterface": pimIpIgmpGroupInterface,
       "pimIpIgmpGroupUptime": pimIpIgmpGroupUptime,
       "pimIpIgmpGroupExpires": pimIpIgmpGroupExpires,
       "pimIpIgmpGroupLastReporter": pimIpIgmpGroupLastReporter,
       "pimIpIgmpInterfaceTable": pimIpIgmpInterfaceTable,
       "pimIpIgmpInterfaceEntry": pimIpIgmpInterfaceEntry,
       "pimIgmpInterfaceID": pimIgmpInterfaceID,
       "pimIgmpInterfaceAddress": pimIgmpInterfaceAddress,
       "pimIgmpInterfaceVersion": pimIgmpInterfaceVersion,
       "pimIgmpInterfaceQueryInterval": pimIgmpInterfaceQueryInterval,
       "pimIgmpInterfaceQuerierTimeout": pimIgmpInterfaceQuerierTimeout,
       "pimIgmpInterfaceMaxResponseTime": pimIgmpInterfaceMaxResponseTime,
       "pimIgmpInterfaceLastRespInterval": pimIgmpInterfaceLastRespInterval,
       "pimIgmpInterfaceTtl": pimIgmpInterfaceTtl,
       "pimIgmpInterfaceDR": pimIgmpInterfaceDR,
       "pimIgmpInterfaceQueryRouter": pimIgmpInterfaceQueryRouter,
       "pimIgmpInterfaceGroup": pimIgmpInterfaceGroup,
       "pimInfTable": pimInfTable,
       "pimInfEntry": pimInfEntry,
       "pimInfAddress": pimInfAddress,
       "pimInfID": pimInfID,
       "pimInfVersion": pimInfVersion,
       "pimInfMode": pimInfMode,
       "pimInfNbrCount": pimInfNbrCount,
       "pimInfQueryIntvl": pimInfQueryIntvl,
       "pimInfDRPriority": pimInfDRPriority,
       "pimInfDR": pimInfDR,
       "pimRPsTable": pimRPsTable,
       "pimRPsEntry": pimRPsEntry,
       "pimRPsIndex": pimRPsIndex,
       "pimRPGroup": pimRPGroup,
       "pimRPGroupMaskLen": pimRPGroupMaskLen,
       "pimRPAddr": pimRPAddr,
       "pimRPIncoming": pimRPIncoming,
       "pimRPPriority": pimRPPriority,
       "pimRPHoldtime": pimRPHoldtime,
       "pimRPType": pimRPType,
       "pimNbrTable": pimNbrTable,
       "pimNbrEntry": pimNbrEntry,
       "pimNbrAddress": pimNbrAddress,
       "pimNbrInterface": pimNbrInterface,
       "pimNbrExpires": pimNbrExpires,
       "pimNbrVersion": pimNbrVersion,
       "pimNbrDRPrio": pimNbrDRPrio,
       "pimNbrMode": pimNbrMode,
       "pimBSRRouterTable": pimBSRRouterTable,
       "pimBSRRouterEntry": pimBSRRouterEntry,
       "pimBSRAddress": pimBSRAddress,
       "pimBSRPriority": pimBSRPriority,
       "pimBSRMaskLen": pimBSRMaskLen,
       "pimBSRCandidateAddr": pimBSRCandidateAddr,
       "pimBSRCandidatePriority": pimBSRCandidatePriority,
       "pimBSRCandidateMaskLen": pimBSRCandidateMaskLen,
       "v1600dPPPoE": v1600dPPPoE,
       "pppoeIaCfg": pppoeIaCfg,
       "pppoeIaEnable": pppoeIaEnable,
       "pppoeIaVendorId": pppoeIaVendorId,
       "pppoeIaEncapsulation": pppoeIaEncapsulation,
       "pppoeIaPolicy": pppoeIaPolicy,
       "pppoeIaIgnoreReply": pppoeIaIgnoreReply,
       "pppoeIaCfgAction": pppoeIaCfgAction,
       "pppoeIaVlan": pppoeIaVlan,
       "pppoeIaVlanId": pppoeIaVlanId,
       "pppoeIaVlanAction": pppoeIaVlanAction,
       "pppoeIaVlanList": pppoeIaVlanList,
       "pppoeIaPortCfgTable": pppoeIaPortCfgTable,
       "pppoeIaPortCfgEntry": pppoeIaPortCfgEntry,
       "pppoeIaPortIndex": pppoeIaPortIndex,
       "pppoeIaPortType": pppoeIaPortType,
       "pppoeIaPortCircuitFormat": pppoeIaPortCircuitFormat,
       "pppoeIaPortCircuit": pppoeIaPortCircuit,
       "pppoeIaPortRemoteFormat": pppoeIaPortRemoteFormat,
       "pppoeIaPortRemote": pppoeIaPortRemote,
       "v1600dBsClient": v1600dBsClient,
       "bsServer": bsServer,
       "bsUsername": bsUsername,
       "bsPassword": bsPassword,
       "bsSlaveServer": bsSlaveServer,
       "v1600dOnuMgmt": v1600dOnuMgmt,
       "onuAuth": onuAuth,
       "authModeTable": authModeTable,
       "authModeEntry": authModeEntry,
       "onuAuthPonNo": onuAuthPonNo,
       "onuAuthMode": onuAuthMode,
       "whiteMaclistCfg": whiteMaclistCfg,
       "whiteMacPonNo": whiteMacPonNo,
       "whiteMacValue": whiteMacValue,
       "whiteMacAction": whiteMacAction,
       "whiteMaclistTable": whiteMaclistTable,
       "whiteMaclistEntry": whiteMaclistEntry,
       "whiteMacIndex": whiteMacIndex,
       "whiteMaclistPonNo": whiteMaclistPonNo,
       "whiteMaclistValue": whiteMaclistValue,
       "blackMaclistCfg": blackMaclistCfg,
       "blackMacPonNo": blackMacPonNo,
       "blackMacValue": blackMacValue,
       "blackMacAction": blackMacAction,
       "blackMaclistTable": blackMaclistTable,
       "blackMaclistEntry": blackMaclistEntry,
       "blackMacIndex": blackMacIndex,
       "blackMaclistPonNo": blackMaclistPonNo,
       "blackMaclistValue": blackMaclistValue,
       "loidListCfg": loidListCfg,
       "loidPonNo": loidPonNo,
       "loid": loid,
       "loidpw": loidpw,
       "loidAction": loidAction,
       "loidListTable": loidListTable,
       "loidListEntry": loidListEntry,
       "loidIndex": loidIndex,
       "loidListPonNo": loidListPonNo,
       "loidValue": loidValue,
       "loidpwValue": loidpwValue,
       "noAuthOnu": noAuthOnu,
       "ponNo": ponNo,
       "noAuthOnuId": noAuthOnuId,
       "onuListTable": onuListTable,
       "onuListEntry": onuListEntry,
       "onuIndex": onuIndex,
       "ponId": ponId,
       "llid": llid,
       "status": status,
       "macAddress": macAddress,
       "onuTypeCfg": onuTypeCfg,
       "onuVerdorId": onuVerdorId,
       "onuModelId": onuModelId,
       "onuTpyeLanPortNo": onuTpyeLanPortNo,
       "onuTypeValue": onuTypeValue,
       "onuTypeAction": onuTypeAction,
       "onuTypeTable": onuTypeTable,
       "onuTypeEntry": onuTypeEntry,
       "onuTypeIndex": onuTypeIndex,
       "onuVerdorID": onuVerdorID,
       "onuModelID": onuModelID,
       "onuTypeLanPortVal": onuTypeLanPortVal,
       "onuTypeVal": onuTypeVal,
       "onuAuthInfoTable": onuAuthInfoTable,
       "onuAuthInfoEntry": onuAuthInfoEntry,
       "authInfoIndex": authInfoIndex,
       "authInfoPonNo": authInfoPonNo,
       "authInfoOnuNo": authInfoOnuNo,
       "authInfoLlid": authInfoLlid,
       "lineStatus": lineStatus,
       "onuMacAddr": onuMacAddr,
       "onutype": onutype,
       "exchange": exchange,
       "authMode": authMode,
       "onuAuthInfoDescription": onuAuthInfoDescription,
       "onuAuthInfoLoid": onuAuthInfoLoid,
       "onuAuthInfoLoidPwd": onuAuthInfoLoidPwd,
       "onuAuthInfoRtt": onuAuthInfoRtt,
       "onuType2": onuType2,
       "onuAutoFindTable": onuAutoFindTable,
       "onuAutoFindEntry": onuAutoFindEntry,
       "onuAutoFindIndex": onuAutoFindIndex,
       "onuAutoFindPon": onuAutoFindPon,
       "onuAutoFindMac": onuAutoFindMac,
       "onuAutoFindTimeout": onuAutoFindTimeout,
       "onuAutoFindLoid": onuAutoFindLoid,
       "onuAutoFindLoidPwd": onuAutoFindLoidPwd,
       "deregisterOnu": deregisterOnu,
       "deregisterOnuPonIndex": deregisterOnuPonIndex,
       "deregisterOnuIndex": deregisterOnuIndex,
       "resetOnu": resetOnu,
       "resetOnuPonIndex": resetOnuPonIndex,
       "resetOnuIndex": resetOnuIndex,
       "onuDescription": onuDescription,
       "onuDescriptionPon": onuDescriptionPon,
       "onuDescriptionOnu": onuDescriptionOnu,
       "onuDescriptionStr": onuDescriptionStr,
       "onuDescriptionAction": onuDescriptionAction,
       "onuRttTable": onuRttTable,
       "onuRttEntry": onuRttEntry,
       "onuRttPon": onuRttPon,
       "onuRttOnu": onuRttOnu,
       "onuRttValue": onuRttValue,
       "onuEncryption": onuEncryption,
       "onuEncryptionPon": onuEncryptionPon,
       "onuEncryptionOnu": onuEncryptionOnu,
       "onuEncryptionEnable": onuEncryptionEnable,
       "onuEncryptionAction": onuEncryptionAction,
       "onuEncryptionTable": onuEncryptionTable,
       "onuEncryptionEntry": onuEncryptionEntry,
       "onuEncryptionPonS": onuEncryptionPonS,
       "onuEncryptionOnuS": onuEncryptionOnuS,
       "onuEncryptionEnableS": onuEncryptionEnableS,
       "onuStatisticsTable": onuStatisticsTable,
       "onuStatisticsEntry": onuStatisticsEntry,
       "onuStatisticsPon": onuStatisticsPon,
       "onuStatisticsOnu": onuStatisticsOnu,
       "statRxGoodOctets": statRxGoodOctets,
       "statRxUcastFrames": statRxUcastFrames,
       "statRxMcastFrames": statRxMcastFrames,
       "statRxBcastFrames": statRxBcastFrames,
       "statRxRegreqFrames": statRxRegreqFrames,
       "statRxRegackFrames": statRxRegackFrames,
       "statRxReportFrames": statRxReportFrames,
       "statTxGoodOctets": statTxGoodOctets,
       "statTxUcastFrames": statTxUcastFrames,
       "statTxMcastFrames": statTxMcastFrames,
       "statTxBcastFrames": statTxBcastFrames,
       "statTxGateFrames": statTxGateFrames,
       "statTxRegFrames": statTxRegFrames,
       "statTxOamFrames": statTxOamFrames,
       "statRxGoodOpi": statRxGoodOpi,
       "statRxBadCrc32": statRxBadCrc32,
       "statRxOamFrames": statRxOamFrames,
       "onuUpstream": onuUpstream,
       "onuUpstreamPon": onuUpstreamPon,
       "onuUpstreamOnu": onuUpstreamOnu,
       "onuUpstreamFir": onuUpstreamFir,
       "onuUpstreamCir": onuUpstreamCir,
       "onuUpstreamPir": onuUpstreamPir,
       "onuUpstreamWeight": onuUpstreamWeight,
       "onuUpstreamAction": onuUpstreamAction,
       "onuUpstreamTable": onuUpstreamTable,
       "onuUpstreamEntry": onuUpstreamEntry,
       "onuUpstreamPonS": onuUpstreamPonS,
       "onuUpstreamOnuS": onuUpstreamOnuS,
       "onuUpstreamFirS": onuUpstreamFirS,
       "onuUpstreamCirS": onuUpstreamCirS,
       "onuUpstreamPirS": onuUpstreamPirS,
       "onuUpstreamWeightS": onuUpstreamWeightS,
       "onuDownsteam": onuDownsteam,
       "onuDownsteamPon": onuDownsteamPon,
       "onuDownsteamOnu": onuDownsteamOnu,
       "onuDownsteamPir": onuDownsteamPir,
       "onuDownsteamWeight": onuDownsteamWeight,
       "onuDownsteamAction": onuDownsteamAction,
       "onuDownsteamTable": onuDownsteamTable,
       "onuDownsteamEntry": onuDownsteamEntry,
       "onuDownsteamPonS": onuDownsteamPonS,
       "onuDownsteamOnuS": onuDownsteamOnuS,
       "onuDownsteamPirS": onuDownsteamPirS,
       "onuDownsteamWeightS": onuDownsteamWeightS,
       "onuAuthInfo2Table": onuAuthInfo2Table,
       "onuAuthInfo2Entry": onuAuthInfo2Entry,
       "authInfoPonNo2": authInfoPonNo2,
       "authInfoOnuNo2": authInfoOnuNo2,
       "authInfoLlid2": authInfoLlid2,
       "lineStatus2": lineStatus2,
       "onuMacAddr2": onuMacAddr2,
       "onutype2": onutype2,
       "exchange2": exchange2,
       "authMode2": authMode2,
       "onuAuthInfoDescription2": onuAuthInfoDescription2,
       "onuAuthInfoLoid2": onuAuthInfoLoid2,
       "onuAuthInfoLoidPwd2": onuAuthInfoLoidPwd2,
       "onuAuthInfoRtt2": onuAuthInfoRtt2,
       "onutype22": onutype22,
       "onuAuthInfoStatus2": onuAuthInfoStatus2,
       "onuAuthInfo2DeregReason": onuAuthInfo2DeregReason,
       "onuAuthInfo2PriSupport": onuAuthInfo2PriSupport,
       "onuAuthInfoDistance2": onuAuthInfoDistance2,
       "onuAuthInfoLastRegTime": onuAuthInfoLastRegTime,
       "onuAuthInfoLastDeregTime": onuAuthInfoLastDeregTime,
       "onuAuthInfoAliveTime": onuAuthInfoAliveTime,
       "onuAuthInfoPriSupportNew": onuAuthInfoPriSupportNew,
       "onuMacTable": onuMacTable,
       "onuMacEntry": onuMacEntry,
       "onuMacPon": onuMacPon,
       "onuMacOnuId": onuMacOnuId,
       "onuMacNum": onuMacNum,
       "onuMacVlan": onuMacVlan,
       "onuMacAddress": onuMacAddress,
       "onuMacAge": onuMacAge,
       "onuNumberTable": onuNumberTable,
       "onuNumberEntry": onuNumberEntry,
       "onuNumberPon": onuNumberPon,
       "onuNumberAll": onuNumberAll,
       "onuNumberOnline": onuNumberOnline,
       "onuRecievePowerTable": onuRecievePowerTable,
       "onuRecievePowerEntry": onuRecievePowerEntry,
       "onuid": onuid,
       "onuMACAddr": onuMACAddr,
       "onuRecievepower": onuRecievepower,
       "onlineOnuAuthInfoTable": onlineOnuAuthInfoTable,
       "onlineOnuAuthInfoEntry": onlineOnuAuthInfoEntry,
       "onlineOnuAuthInfoPonNo": onlineOnuAuthInfoPonNo,
       "onlineOnuAuthInfoOnuNo": onlineOnuAuthInfoOnuNo,
       "onlineOnuAuthInfoLlid": onlineOnuAuthInfoLlid,
       "onlineOnulineStatus": onlineOnulineStatus,
       "onlineOnuMacAddr": onlineOnuMacAddr,
       "onlineOnutype": onlineOnutype,
       "onlineOnuExchange": onlineOnuExchange,
       "onlineOnuAuthMode": onlineOnuAuthMode,
       "onlineOnuAuthInfoDescription": onlineOnuAuthInfoDescription,
       "onlineOnuAuthInfoLoid": onlineOnuAuthInfoLoid,
       "onlineOnuAuthInfoLoidPwd": onlineOnuAuthInfoLoidPwd,
       "onlineOnuAuthInfoRtt": onlineOnuAuthInfoRtt,
       "onlineOnutype1": onlineOnutype1,
       "onlineOnuAuthInfoStatus": onlineOnuAuthInfoStatus,
       "onlineOnuAuthInfoDeregReason": onlineOnuAuthInfoDeregReason,
       "onlineOnuAuthInfoPriSupport": onlineOnuAuthInfoPriSupport,
       "onlineOnuAuthInfoDistance": onlineOnuAuthInfoDistance,
       "onlineOnuAuthInfoLastRegTime": onlineOnuAuthInfoLastRegTime,
       "onlineOnuAuthInfoLastDeregTime": onlineOnuAuthInfoLastDeregTime,
       "onlineOnuAuthInfoAliveTime": onlineOnuAuthInfoAliveTime,
       "onlineOnuAuthInfoPriSupportNew": onlineOnuAuthInfoPriSupportNew,
       "onuMacAddrLimit": onuMacAddrLimit,
       "onuMacLimitPon": onuMacLimitPon,
       "onuMacLimitOnu": onuMacLimitOnu,
       "onuMacLimitNum": onuMacLimitNum,
       "onuAuthInfo3Table": onuAuthInfo3Table,
       "onuAuthInfo3Entry": onuAuthInfo3Entry,
       "authInfoPonNo3": authInfoPonNo3,
       "authInfoOnuNo3": authInfoOnuNo3,
       "onuAuthInfo3Details": onuAuthInfo3Details,
       "onlineOnuAuthInfo3Table": onlineOnuAuthInfo3Table,
       "onlineOnuAuthInfo3Entry": onlineOnuAuthInfo3Entry,
       "onlineOnuAuthInfoPonNo3": onlineOnuAuthInfoPonNo3,
       "onlineOnuAuthInfoOnuNo3": onlineOnuAuthInfoOnuNo3,
       "onlineOnuAuthInfo3Details": onlineOnuAuthInfo3Details,
       "onuGlobalCfg": onuGlobalCfg,
       "onuInfo": onuInfo,
       "onuCtcInfoTable": onuCtcInfoTable,
       "onuCtcInfoEntry": onuCtcInfoEntry,
       "onuCtcInfoPonIndex": onuCtcInfoPonIndex,
       "onuCtcInfoOnuIndex": onuCtcInfoOnuIndex,
       "onuOamVersion": onuOamVersion,
       "onuOamOUI": onuOamOUI,
       "onuSnInfoTable": onuSnInfoTable,
       "onuSnInfoEntry": onuSnInfoEntry,
       "onuSnInfoPonIndex": onuSnInfoPonIndex,
       "onuSnInfoOnuIndex": onuSnInfoOnuIndex,
       "onuVendorId": onuVendorId,
       "onuModel": onuModel,
       "onuID": onuID,
       "onuHardwareVersion": onuHardwareVersion,
       "onuSoftwareVersion": onuSoftwareVersion,
       "fwVersionInfoTable": fwVersionInfoTable,
       "fwVersionInfoEntry": fwVersionInfoEntry,
       "fwVersionInfoPonIndex": fwVersionInfoPonIndex,
       "fwVersionInfoOnuIndex": fwVersionInfoOnuIndex,
       "fwVersion": fwVersion,
       "chipIdInfoTable": chipIdInfoTable,
       "chipIdInfoEntry": chipIdInfoEntry,
       "chipIdInfoPonIndex": chipIdInfoPonIndex,
       "chipIdInfoOnuIndex": chipIdInfoOnuIndex,
       "verderId": verderId,
       "chipModel": chipModel,
       "date": date,
       "cap1InfoTable": cap1InfoTable,
       "cap1InfoEntry": cap1InfoEntry,
       "cap1InfoPonIndex": cap1InfoPonIndex,
       "cap1InfoOnuIndex": cap1InfoOnuIndex,
       "serviceSupported": serviceSupported,
       "numGEPorts": numGEPorts,
       "geBitMap": geBitMap,
       "numFEPorts": numFEPorts,
       "feBitMap": feBitMap,
       "numPOTSPorts": numPOTSPorts,
       "numE1Ports": numE1Ports,
       "numUSQueues": numUSQueues,
       "maxQueueUSPort": maxQueueUSPort,
       "numDSQueues": numDSQueues,
       "maxQueueDSPort": maxQueueDSPort,
       "batteryBackup": batteryBackup,
       "cap2InfoTable": cap2InfoTable,
       "cap2InfoEntry": cap2InfoEntry,
       "cap2InfoPonIndex": cap2InfoPonIndex,
       "cap2InfoOnuIndex": cap2InfoOnuIndex,
       "onuType": onuType,
       "multiLLID": multiLLID,
       "protectionType": protectionType,
       "numPONIf": numPONIf,
       "numSlot": numSlot,
       "numInterfaceType": numInterfaceType,
       "interfaceTypePorts": interfaceTypePorts,
       "batBackup": batBackup,
       "cap3InfoTable": cap3InfoTable,
       "cap3InfoEntry": cap3InfoEntry,
       "cap3InfoPonIndex": cap3InfoPonIndex,
       "cap3InfoOnuIndex": cap3InfoOnuIndex,
       "ipv6Support": ipv6Support,
       "powerControl": powerControl,
       "opmDiagInfoTable": opmDiagInfoTable,
       "opmDiagInfoEntry": opmDiagInfoEntry,
       "opmDiagInfoPonIndex": opmDiagInfoPonIndex,
       "opmDiagInfoOnuIndex": opmDiagInfoOnuIndex,
       "temperature": temperature,
       "supplyVoltage": supplyVoltage,
       "txBias": txBias,
       "txPower": txPower,
       "rxPower": rxPower,
       "fecAbilityTable": fecAbilityTable,
       "fecAbilityEntry": fecAbilityEntry,
       "fecAbilityPonIndex": fecAbilityPonIndex,
       "fecAbilityOnuIndex": fecAbilityOnuIndex,
       "fecAbility": fecAbility,
       "fecMode": fecMode,
       "powerSavingCapTable": powerSavingCapTable,
       "powerSavingCapEntry": powerSavingCapEntry,
       "powerSavingCapPonIndex": powerSavingCapPonIndex,
       "powerSavingCapOnuIndex": powerSavingCapOnuIndex,
       "sleepmode": sleepmode,
       "earlywakeup": earlywakeup,
       "onuSnmpTable": onuSnmpTable,
       "onuSnmpEntry": onuSnmpEntry,
       "snmpPonNo": snmpPonNo,
       "snmpOnuNo": snmpOnuNo,
       "snmpVer": snmpVer,
       "snmpTrapIPaddr": snmpTrapIPaddr,
       "snmpTrapPort": snmpTrapPort,
       "snmpPort": snmpPort,
       "snmpSecuritName": snmpSecuritName,
       "snmpCommunityRead": snmpCommunityRead,
       "snmpCommunityWrite": snmpCommunityWrite,
       "onuSlaTable": onuSlaTable,
       "onuSlaEntry": onuSlaEntry,
       "slaPonNo": slaPonNo,
       "slaOnuNo": slaOnuNo,
       "slaOperActive": slaOperActive,
       "slaScheduleScheme": slaScheduleScheme,
       "slaHPriorityBoundary": slaHPriorityBoundary,
       "slaCycleLen": slaCycleLen,
       "slaNumService": slaNumService,
       "slaQueIdStr": slaQueIdStr,
       "slaFixPacketSizeStr": slaFixPacketSizeStr,
       "slaFixBandwidthStr": slaFixBandwidthStr,
       "slaGuarantBwStr": slaGuarantBwStr,
       "slaBestEffortBWStr": slaBestEffortBWStr,
       "slaWrrWeightStr": slaWrrWeightStr,
       "onuOpmDiagTable": onuOpmDiagTable,
       "onuOpmDiagEntry": onuOpmDiagEntry,
       "onuOpmDiagPonId": onuOpmDiagPonId,
       "onuOpmDiageOnuId": onuOpmDiageOnuId,
       "onuOpmDiagTemperatue": onuOpmDiagTemperatue,
       "onuOpmDiagVoltage": onuOpmDiagVoltage,
       "onuOpmDiagTxBias": onuOpmDiagTxBias,
       "onuOpmDiagTxPower": onuOpmDiagTxPower,
       "onuOpmDiagRxPower": onuOpmDiagRxPower,
       "onuOpmPowerTable": onuOpmPowerTable,
       "onuOpmPowerEntry": onuOpmPowerEntry,
       "onuOpmPowerIndex": onuOpmPowerIndex,
       "onuOpmPowerName": onuOpmPowerName,
       "onuOpmPowerRx": onuOpmPowerRx,
       "onuOpmPowerTx": onuOpmPowerTx,
       "onuUpgrade": onuUpgrade,
       "tftpDownloadFile": tftpDownloadFile,
       "filename": filename,
       "tftpServer": tftpServer,
       "tftpAction": tftpAction,
       "upgradeLoadOnuImg": upgradeLoadOnuImg,
       "filenameSet": filenameSet,
       "loadAction": loadAction,
       "ctcUpgradeCfg": ctcUpgradeCfg,
       "upgradePonNo": upgradePonNo,
       "upgradeOnuNo": upgradeOnuNo,
       "ctcUpgrade": ctcUpgrade,
       "upgradeOnuImage": upgradeOnuImage,
       "upgradeImage": upgradeImage,
       "upgradeIp": upgradeIp,
       "upgradeImageAction": upgradeImageAction,
       "upgradeOnuSelect": upgradeOnuSelect,
       "upgradePon": upgradePon,
       "upgradeOnu": upgradeOnu,
       "upgradeSelectAction": upgradeSelectAction,
       "upgradeOnuSelectTable": upgradeOnuSelectTable,
       "upgradeOnuSelectEntry": upgradeOnuSelectEntry,
       "upgradeOnuPonS": upgradeOnuPonS,
       "upgradeOnuSelectS": upgradeOnuSelectS,
       "upgreadOnuAction": upgreadOnuAction,
       "upgreadAction": upgreadAction,
       "upgradeOver": upgradeOver,
       "upgradeOnuStatusTable": upgradeOnuStatusTable,
       "upgradeOnuStatusEntry": upgradeOnuStatusEntry,
       "upgradeOnuStatusIndex": upgradeOnuStatusIndex,
       "upgreadeStatusPonS": upgreadeStatusPonS,
       "upgradeOnuLlid": upgradeOnuLlid,
       "upgradeOnuStatusS": upgradeOnuStatusS,
       "upgradeOnuStatusProcess": upgradeOnuStatusProcess,
       "autoUpgrade": autoUpgrade,
       "autoUpgradeCreate": autoUpgradeCreate,
       "autoForceMode": autoForceMode,
       "autoVendorID": autoVendorID,
       "autoModelID": autoModelID,
       "autoSoftwareVersion": autoSoftwareVersion,
       "autoImageName": autoImageName,
       "autoTftpServerIP": autoTftpServerIP,
       "autoCreateAction": autoCreateAction,
       "autoUpgradeDelete": autoUpgradeDelete,
       "deleteVendorID": deleteVendorID,
       "deleteModelID": deleteModelID,
       "autoDeleteAction": autoDeleteAction,
       "autoUpgradeTable": autoUpgradeTable,
       "autoUpgradeEntry": autoUpgradeEntry,
       "autoUpgradeIndex": autoUpgradeIndex,
       "autoForceModeS": autoForceModeS,
       "autoVendorIDS": autoVendorIDS,
       "autoModelIDS": autoModelIDS,
       "autoSoftwareVersionS": autoSoftwareVersionS,
       "autoImageNameS": autoImageNameS,
       "autoTftpServerIPS": autoTftpServerIPS,
       "autoUpgradeStatus": autoUpgradeStatus,
       "onuManagementIp": onuManagementIp,
       "mgmtIpPonNo": mgmtIpPonNo,
       "mgmtIpOnuNo": mgmtIpOnuNo,
       "mgmtIp": mgmtIp,
       "mgmtIpMask": mgmtIpMask,
       "mgmtIpGw": mgmtIpGw,
       "mgmtIpCVlan": mgmtIpCVlan,
       "mgmtIpSVlan": mgmtIpSVlan,
       "mgmtIpPri": mgmtIpPri,
       "mgmtIPAction": mgmtIPAction,
       "onuManagementIpTable": onuManagementIpTable,
       "onuManagementIpEntry": onuManagementIpEntry,
       "mgmtIPPonNo": mgmtIPPonNo,
       "mgmtIPOnuNo": mgmtIPOnuNo,
       "mgmtIP": mgmtIP,
       "mgmtIPMask": mgmtIPMask,
       "mgmtIPGw": mgmtIPGw,
       "mgmtIPCvlan": mgmtIPCvlan,
       "mgmtIPSvlan": mgmtIPSvlan,
       "mgmtIPPri": mgmtIPPri,
       "onuSnmpCfg": onuSnmpCfg,
       "onuSnmpPonNo": onuSnmpPonNo,
       "onuSnmpOnuNo": onuSnmpOnuNo,
       "onuSnmpTrapHostIp": onuSnmpTrapHostIp,
       "onuSnmpTrapUdpPort": onuSnmpTrapUdpPort,
       "onuSnmpPort": onuSnmpPort,
       "onuCommunityName": onuCommunityName,
       "onuRoCommunityName": onuRoCommunityName,
       "onuRwCommunityName": onuRwCommunityName,
       "onuCommunityAction": onuCommunityAction,
       "onuMultiLlid": onuMultiLlid,
       "llidPonNo": llidPonNo,
       "llidOnuNo": llidOnuNo,
       "llidNo": llidNo,
       "onuMainPonCfg": onuMainPonCfg,
       "ponNumber": ponNumber,
       "onuNumber": onuNumber,
       "onuMainPonNo": onuMainPonNo,
       "onuFecCfg": onuFecCfg,
       "onuFecPonNo": onuFecPonNo,
       "onuFecOnuNo": onuFecOnuNo,
       "onuFecEn": onuFecEn,
       "onuHoldoverCfg": onuHoldoverCfg,
       "holdoverPonNo": holdoverPonNo,
       "holdoverOnuNo": holdoverOnuNo,
       "holdover": holdover,
       "onuSlaCfg": onuSlaCfg,
       "onuSlaPonNo": onuSlaPonNo,
       "onuSlaOnuNo": onuSlaOnuNo,
       "onuSlaEn": onuSlaEn,
       "onuSlaMode": onuSlaMode,
       "highPriBoundary": highPriBoundary,
       "cycleLength": cycleLength,
       "numServices": numServices,
       "queueIdListStr": queueIdListStr,
       "fixPacketSizeListStr": fixPacketSizeListStr,
       "queweightListStr": queweightListStr,
       "fixBandwidthListStr": fixBandwidthListStr,
       "guaranteedBandwidthListStr": guaranteedBandwidthListStr,
       "besteffortBandwithListStr": besteffortBandwithListStr,
       "slaAction": slaAction,
       "onuIgmpCfg": onuIgmpCfg,
       "igmpMode": igmpMode,
       "igmpModePonNo": igmpModePonNo,
       "igmpModeOnuNo": igmpModeOnuNo,
       "onuIgmpMode": onuIgmpMode,
       "igmpFastLeave": igmpFastLeave,
       "igmpFastPonNo": igmpFastPonNo,
       "igmpFastOnuNo": igmpFastOnuNo,
       "onuIgmpFastLeave": onuIgmpFastLeave,
       "igmpCfgTable": igmpCfgTable,
       "igmpCfgEntry": igmpCfgEntry,
       "igmpCfgPonNo": igmpCfgPonNo,
       "igmpCfgOnuNo": igmpCfgOnuNo,
       "igmpCfgMode": igmpCfgMode,
       "igmpCfgFastLeave": igmpCfgFastLeave,
       "onuReset": onuReset,
       "onuResetPonNo": onuResetPonNo,
       "onuResetOnuNo": onuResetOnuNo,
       "onuResetAction": onuResetAction,
       "onuPowerSavingCfg": onuPowerSavingCfg,
       "onuPowerSavPonNo": onuPowerSavPonNo,
       "onuPowerSavOnuNo": onuPowerSavOnuNo,
       "earlyWakeupEn": earlyWakeupEn,
       "sleepDurationMax": sleepDurationMax,
       "powerSavAction": powerSavAction,
       "onuPowerSavParameter": onuPowerSavParameter,
       "onuPwSavPonNo": onuPwSavPonNo,
       "onuPwSavOnuNo": onuPwSavOnuNo,
       "sleepDuration": sleepDuration,
       "wakeDuration": wakeDuration,
       "sleepFlag": sleepFlag,
       "sleepMode": sleepMode,
       "onuPwSaveAction": onuPwSaveAction,
       "onuPonProtectCfg": onuPonProtectCfg,
       "ponProtectPonNo": ponProtectPonNo,
       "ponProtectOnuNo": ponProtectOnuNo,
       "losOptical": losOptical,
       "losMpcp": losMpcp,
       "ponProtectAction": ponProtectAction,
       "onuPonProtectTable": onuPonProtectTable,
       "onuPonProtectEntry": onuPonProtectEntry,
       "protectPonNo": protectPonNo,
       "protectPonOnuNo": protectPonOnuNo,
       "protectLostOptical": protectLostOptical,
       "protectLostMpcp": protectLostMpcp,
       "onuPonPowerOnOff": onuPonPowerOnOff,
       "onOffPonNo": onOffPonNo,
       "onOffOnuNo": onOffOnuNo,
       "laserAction": laserAction,
       "ponMac": ponMac,
       "transmitter": transmitter,
       "onOffAction": onOffAction,
       "onuMacAgingTime": onuMacAgingTime,
       "agingTimePonNo": agingTimePonNo,
       "agingTimeOnuNo": agingTimeOnuNo,
       "macAgetime": macAgetime,
       "onuInfoTable": onuInfoTable,
       "onuInfoEntry": onuInfoEntry,
       "onuInfoPonNo": onuInfoPonNo,
       "onuInfoOnuNo": onuInfoOnuNo,
       "onuInfoMacAgingTime": onuInfoMacAgingTime,
       "onuInfoHoldOver": onuInfoHoldOver,
       "onuInfoMainPon": onuInfoMainPon,
       "powerSavingTable": powerSavingTable,
       "powerSavingEntry": powerSavingEntry,
       "pSPonNo": pSPonNo,
       "pSOnuNo": pSOnuNo,
       "pSEarlyWakeupEn": pSEarlyWakeupEn,
       "pSSleepDurationMax": pSSleepDurationMax,
       "onuSleepControlTable": onuSleepControlTable,
       "onuSleepControlEntry": onuSleepControlEntry,
       "sleepCtlPonNo": sleepCtlPonNo,
       "sleepCtlOnuNo": sleepCtlOnuNo,
       "scSleepDuration": scSleepDuration,
       "scWakeDuration": scWakeDuration,
       "scSleepFlag": scSleepFlag,
       "scSleepMode": scSleepMode,
       "onuPriGlobal": onuPriGlobal,
       "onuPriGlobalCfg": onuPriGlobalCfg,
       "onuPriIgmpAdmin": onuPriIgmpAdmin,
       "priIgmpAdminPon": priIgmpAdminPon,
       "priIgmpAdminOnu": priIgmpAdminOnu,
       "priIgmpAdmin": priIgmpAdmin,
       "priIgmpAdminAction": priIgmpAdminAction,
       "onuPriCatvEnable": onuPriCatvEnable,
       "priCatvEnablePon": priCatvEnablePon,
       "priCatvEnableOnu": priCatvEnableOnu,
       "priCatvEnable": priCatvEnable,
       "priCatvAction": priCatvAction,
       "onuPriCtcoamSkip": onuPriCtcoamSkip,
       "priCtcoamSkipPon": priCtcoamSkipPon,
       "priCtcoamSkipOnu": priCtcoamSkipOnu,
       "priCtcoamSkip": priCtcoamSkip,
       "priCtcoamSkipAction": priCtcoamSkipAction,
       "onuPriWifiSwitch": onuPriWifiSwitch,
       "priWifiSwitchPon": priWifiSwitchPon,
       "priWifiSwitchOnu": priWifiSwitchOnu,
       "priWifiApModule": priWifiApModule,
       "priWifiContry": priWifiContry,
       "priWifiChannel": priWifiChannel,
       "priWifiStandard": priWifiStandard,
       "priWifiPower": priWifiPower,
       "priWifiSwitchAction": priWifiSwitchAction,
       "priWifiChannelWidth": priWifiChannelWidth,
       "onuPriWifiSsid": onuPriWifiSsid,
       "priSsidPon": priSsidPon,
       "proSsidOnu": proSsidOnu,
       "priSsidId": priSsidId,
       "priSsidName": priSsidName,
       "priSsidEnable": priSsidEnable,
       "priSsidHide": priSsidHide,
       "priSsidAuthMode": priSsidAuthMode,
       "priSsidEncrypTpye": priSsidEncrypTpye,
       "priSsidPresharedKey": priSsidPresharedKey,
       "priSsidPrekeyInterval": priSsidPrekeyInterval,
       "priSsidRadiusSeripType": priSsidRadiusSeripType,
       "priSsidRadiusSerip": priSsidRadiusSerip,
       "priSsidRadiusServipPrefixLen": priSsidRadiusServipPrefixLen,
       "priSsidRadiusPort": priSsidRadiusPort,
       "priSsidRadiusKey": priSsidRadiusKey,
       "priSsidWepEncrytionLevel": priSsidWepEncrytionLevel,
       "priSsidWepKeyIndex": priSsidWepKeyIndex,
       "priSsidWepKey1": priSsidWepKey1,
       "priSsidWepKey2": priSsidWepKey2,
       "priSsidWepKey3": priSsidWepKey3,
       "priSsidWepKey4": priSsidWepKey4,
       "priSsidAction": priSsidAction,
       "onuPriWanConn": onuPriWanConn,
       "priWanConnAdd": priWanConnAdd,
       "priWanAddPon": priWanAddPon,
       "priWanAddOnu": priWanAddOnu,
       "priConnType": priConnType,
       "priConnAddAction": priConnAddAction,
       "priWanConnDelete": priWanConnDelete,
       "priWanDeletePon": priWanDeletePon,
       "priWanDeleteOnu": priWanDeleteOnu,
       "priConnIndexD": priConnIndexD,
       "priConnDeleteAction": priConnDeleteAction,
       "priWanConnCfg": priWanConnCfg,
       "priConnPon": priConnPon,
       "priConnOnu": priConnOnu,
       "priConnIndex": priConnIndex,
       "priConnBindLan": priConnBindLan,
       "priConnBindSsid": priConnBindSsid,
       "priWanMode": priWanMode,
       "priConnTypeCfg": priConnTypeCfg,
       "priConnVlanId": priConnVlanId,
       "priConnCos": priConnCos,
       "priConnNatEnable": priConnNatEnable,
       "priConnModeCfg": priConnModeCfg,
       "priConnIpAddress": priConnIpAddress,
       "priConnIpMask": priConnIpMask,
       "priConnGateway": priConnGateway,
       "priConnMasterDns": priConnMasterDns,
       "priConnSlaveDns": priConnSlaveDns,
       "priConnPppoeProxy": priConnPppoeProxy,
       "priConnPppoeUsername": priConnPppoeUsername,
       "priConnPppoePassword": priConnPppoePassword,
       "priConnPppoeSerName": priConnPppoeSerName,
       "priConnPppoeMode": priConnPppoeMode,
       "priConnQosEnable": priConnQosEnable,
       "priConnVlanMode": priConnVlanMode,
       "priConnTranslationEnable": priConnTranslationEnable,
       "priConnTranslationVlan": priConnTranslationVlan,
       "priConnTranslationCos": priConnTranslationCos,
       "priConnQinqEnable": priConnQinqEnable,
       "priConnQinqTpid": priConnQinqTpid,
       "priConnWanSvlan": priConnWanSvlan,
       "priConnSvlanCos": priConnSvlanCos,
       "priConnCfgAction": priConnCfgAction,
       "priConnRouteMtu": priConnRouteMtu,
       "priWanConnCommit": priWanConnCommit,
       "priConnCommitPon": priConnCommitPon,
       "priConnCommitOnu": priConnCommitOnu,
       "priConnCommitAction": priConnCommitAction,
       "onuPriPortIsolate": onuPriPortIsolate,
       "priPortIsolatePon": priPortIsolatePon,
       "priPortIsolateOnu": priPortIsolateOnu,
       "priPortIsolate": priPortIsolate,
       "priPortIsolateAction": priPortIsolateAction,
       "onuPriFactoryReset": onuPriFactoryReset,
       "priFactoryResetPon": priFactoryResetPon,
       "priFactoryResetOnu": priFactoryResetOnu,
       "priFactoryReset": priFactoryReset,
       "onuPriMacClean": onuPriMacClean,
       "priMacCleanPon": priMacCleanPon,
       "priMacCleanOnu": priMacCleanOnu,
       "priMacClean": priMacClean,
       "onuPriSaveConfig": onuPriSaveConfig,
       "priSaveConfigPon": priSaveConfigPon,
       "priSaveConfigOnu": priSaveConfigOnu,
       "priSaveConfig": priSaveConfig,
       "onuPriVoipTimer": onuPriVoipTimer,
       "onuPriVoipPon": onuPriVoipPon,
       "onuPriVoipOnu": onuPriVoipOnu,
       "onuPriVoipWaitTime": onuPriVoipWaitTime,
       "onuPriVoipStartTimer": onuPriVoipStartTimer,
       "onuPriVoipLongTimer": onuPriVoipLongTimer,
       "onuPriVoipShortTimer": onuPriVoipShortTimer,
       "onuPriVoipDigitmapNotify": onuPriVoipDigitmapNotify,
       "onuPriVoipAction": onuPriVoipAction,
       "onuPriDhcpServer": onuPriDhcpServer,
       "onuPriDhcpServerPon": onuPriDhcpServerPon,
       "onuPriDhcpServerOnu": onuPriDhcpServerOnu,
       "onuPriDhcpLanIp": onuPriDhcpLanIp,
       "onuPriDhcpLanMask": onuPriDhcpLanMask,
       "onuPriDhcpEnable": onuPriDhcpEnable,
       "onuPriDhcpLease": onuPriDhcpLease,
       "onuPriDhcpBeginIp": onuPriDhcpBeginIp,
       "onuPriDhcpEndIp": onuPriDhcpEndIp,
       "onuPriDhcpPoolType": onuPriDhcpPoolType,
       "onuPriDhcpMasterDns": onuPriDhcpMasterDns,
       "onuPriDhcpSlaveDns": onuPriDhcpSlaveDns,
       "onuPriDhcpGateway": onuPriDhcpGateway,
       "onuPriDhcpRelayIp": onuPriDhcpRelayIp,
       "onuPriDhcpAction": onuPriDhcpAction,
       "onuPriDhcpOption82": onuPriDhcpOption82,
       "onuPriDhcpOption82Pon": onuPriDhcpOption82Pon,
       "onuPriDhcpOption82Onu": onuPriDhcpOption82Onu,
       "onuPriDhcpOption82Enable": onuPriDhcpOption82Enable,
       "onuPriDhcpOption82Action": onuPriDhcpOption82Action,
       "onuPriPPPoE": onuPriPPPoE,
       "onuPriPPPoEPon": onuPriPPPoEPon,
       "onuPriPPPoEOnu": onuPriPPPoEOnu,
       "onuPriPPPoEEnable": onuPriPPPoEEnable,
       "onuPriPPPoEAction": onuPriPPPoEAction,
       "onuPriDhcpV6": onuPriDhcpV6,
       "onuPriDhcpV6Pon": onuPriDhcpV6Pon,
       "onuPriDhcpV6Onu": onuPriDhcpV6Onu,
       "onuPriDhcpV6Option18Enable": onuPriDhcpV6Option18Enable,
       "onuPriDhcpV6Option37Enable": onuPriDhcpV6Option37Enable,
       "onuPriDhcpV6Action": onuPriDhcpV6Action,
       "onuPriVoipParam": onuPriVoipParam,
       "priVoipParamPon": priVoipParamPon,
       "priVoipParamOnu": priVoipParamOnu,
       "priIpMode": priIpMode,
       "priIp": priIp,
       "priMask": priMask,
       "priGw": priGw,
       "priRtpIp": priRtpIp,
       "priRtpMask": priRtpMask,
       "priRtpGw": priRtpGw,
       "priDnsMaster": priDnsMaster,
       "priDnsSlave": priDnsSlave,
       "priDhcpOption60Enable": priDhcpOption60Enable,
       "priDhcpOption60Base": priDhcpOption60Base,
       "priDhcpOption60Value": priDhcpOption60Value,
       "priPPPoEMode": priPPPoEMode,
       "priPPPoEUsername": priPPPoEUsername,
       "priPPPoEPassword": priPPPoEPassword,
       "priSVlanTpid": priSVlanTpid,
       "priSVlanId": priSVlanId,
       "priSVlanCos": priSVlanCos,
       "priCVlanTpid": priCVlanTpid,
       "priCVlanId": priCVlanId,
       "priCVlanCos": priCVlanCos,
       "priRtpSVlanTpid": priRtpSVlanTpid,
       "priRtpSVlanId": priRtpSVlanId,
       "priRtpSVlanCos": priRtpSVlanCos,
       "priRtpCVlanTpid": priRtpCVlanTpid,
       "priRtpCVlanId": priRtpCVlanId,
       "priRtpCVlanCos": priRtpCVlanCos,
       "priVoipParamAction": priVoipParamAction,
       "onuPriSipParam": onuPriSipParam,
       "priSipParamPon": priSipParamPon,
       "priSipParamOnu": priSipParamOnu,
       "priProxyServName": priProxyServName,
       "priProxyServPort": priProxyServPort,
       "priBakProxyServName": priBakProxyServName,
       "priBakProxyServPort": priBakProxyServPort,
       "priRegServName": priRegServName,
       "priRegServPort": priRegServPort,
       "priBakRegServName": priBakRegServName,
       "priBakRegServPort": priBakRegServPort,
       "priOutBndServName": priOutBndServName,
       "priOutBndServPort": priOutBndServPort,
       "priSipParamMgPort": priSipParamMgPort,
       "priRegInterval": priRegInterval,
       "priHBeatCfg": priHBeatCfg,
       "priHBeatCycle": priHBeatCycle,
       "priHBeatCount": priHBeatCount,
       "priSipGloParamAction": priSipGloParamAction,
       "onuPriSecurity": onuPriSecurity,
       "priPonID": priPonID,
       "priOnuID": priOnuID,
       "onuPriUsername": onuPriUsername,
       "priAdminCtl": priAdminCtl,
       "priAdminName": priAdminName,
       "priAdminPwd": priAdminPwd,
       "priUserCtl": priUserCtl,
       "priUserName": priUserName,
       "priUserPwd": priUserPwd,
       "priUsernameAction": priUsernameAction,
       "onuPriFirewall": onuPriFirewall,
       "priFirewall": priFirewall,
       "onuPriAcl": onuPriAcl,
       "priAclProtocol": priAclProtocol,
       "priAclCtl": priAclCtl,
       "priAclLanCtl": priAclLanCtl,
       "priAclWanCtl": priAclWanCtl,
       "priAclIPv4Ctl": priAclIPv4Ctl,
       "priAclIPv4Addr": priAclIPv4Addr,
       "priAclIPv4Mask": priAclIPv4Mask,
       "priAclIPv6Ctl": priAclIPv6Ctl,
       "priAclIPv6Addr": priAclIPv6Addr,
       "priAclIPv6Pfx": priAclIPv6Pfx,
       "priAclPortID": priAclPortID,
       "priAclAction": priAclAction,
       "onuPriAclCommit": onuPriAclCommit,
       "priAclCommit": priAclCommit,
       "onuPriDhcpv6Server": onuPriDhcpv6Server,
       "onuPriDhcpv6ServerPon": onuPriDhcpv6ServerPon,
       "onuPriDhcpv6ServerOnu": onuPriDhcpv6ServerOnu,
       "onuPriDhcpv6LanIp": onuPriDhcpv6LanIp,
       "onuPriDhcpv6LanPrefixlen": onuPriDhcpv6LanPrefixlen,
       "onuPriDhcpv6PrefixMode": onuPriDhcpv6PrefixMode,
       "onuPriDhcpv6PrefixModeIp": onuPriDhcpv6PrefixModeIp,
       "onuPriDhcpv6Enable": onuPriDhcpv6Enable,
       "onuPriDhcpv6Preference": onuPriDhcpv6Preference,
       "onuPriDhcpv6BeginIp": onuPriDhcpv6BeginIp,
       "onuPriDhcpv6EndIp": onuPriDhcpv6EndIp,
       "onuPriDhcpv6PoolType": onuPriDhcpv6PoolType,
       "onuPriDhcpv6MasterDns": onuPriDhcpv6MasterDns,
       "onuPriDhcpv6SlaveDns": onuPriDhcpv6SlaveDns,
       "onuPriDhcpv6Gateway": onuPriDhcpv6Gateway,
       "onuPriDhcpv6RelayIp": onuPriDhcpv6RelayIp,
       "onuPriDhcpv6RA": onuPriDhcpv6RA,
       "onuPriDhcpv6RAManage": onuPriDhcpv6RAManage,
       "onuPriDhcpv6RAOther": onuPriDhcpv6RAOther,
       "onuPriDhcpv6RAMaxInterval": onuPriDhcpv6RAMaxInterval,
       "onuPriDhcpv6RAMinInterval": onuPriDhcpv6RAMinInterval,
       "onuPriDhcpv6Action": onuPriDhcpv6Action,
       "onuPriDhcpv6Valid": onuPriDhcpv6Valid,
       "onuPriDhcpv6DnsMode": onuPriDhcpv6DnsMode,
       "onuPriWifiSwitch1": onuPriWifiSwitch1,
       "priWifiSwitchPon1": priWifiSwitchPon1,
       "priWifiSwitchOnu1": priWifiSwitchOnu1,
       "priWifiApModule1": priWifiApModule1,
       "priWifiContry1": priWifiContry1,
       "priWifiChannel1": priWifiChannel1,
       "priWifiStandard1": priWifiStandard1,
       "priWifiPower1": priWifiPower1,
       "priWifiSwitchAction1": priWifiSwitchAction1,
       "priWifiChannelWidth1": priWifiChannelWidth1,
       "priWifiEasyMeshStatus": priWifiEasyMeshStatus,
       "onuPriWanConnV6": onuPriWanConnV6,
       "priV6WanConnAdd": priV6WanConnAdd,
       "priV6WanAddPon": priV6WanAddPon,
       "priV6WanAddOnu": priV6WanAddOnu,
       "priV6ConnType": priV6ConnType,
       "priV6ConnAddAction": priV6ConnAddAction,
       "priV6WanConnDelete": priV6WanConnDelete,
       "priV6WanDeletePon": priV6WanDeletePon,
       "priV6WanDeleteOnu": priV6WanDeleteOnu,
       "priV6ConnIndexD": priV6ConnIndexD,
       "priV6ConnDeleteAction": priV6ConnDeleteAction,
       "priV6WanConnCfg": priV6WanConnCfg,
       "priV6ConnPon": priV6ConnPon,
       "priV6ConnOnu": priV6ConnOnu,
       "priV6ConnIndex": priV6ConnIndex,
       "priV6ConnBindLan": priV6ConnBindLan,
       "priV6ConnBindSsid": priV6ConnBindSsid,
       "priV6WanMode": priV6WanMode,
       "priV6ConnTypeCfg": priV6ConnTypeCfg,
       "priV6ConnVlanId": priV6ConnVlanId,
       "priV6ConnVlanCos": priV6ConnVlanCos,
       "priV6ConnIpProtocol": priV6ConnIpProtocol,
       "priV6ConnModeCfg": priV6ConnModeCfg,
       "priV6ConnIpAddressIpv4": priV6ConnIpAddressIpv4,
       "priV6ConnIpNetMaskIpv4": priV6ConnIpNetMaskIpv4,
       "priV6ConnGatewayIpv4": priV6ConnGatewayIpv4,
       "priV6ConnDnsEnableIpv4": priV6ConnDnsEnableIpv4,
       "priV6ConnMasterDnsIpv4": priV6ConnMasterDnsIpv4,
       "priV6ConnSlaveDnsIpv4": priV6ConnSlaveDnsIpv4,
       "priV6ConnNatEnable": priV6ConnNatEnable,
       "priV6ConnAddressIpv6": priV6ConnAddressIpv6,
       "priV6ConnPrefixLenIpv6": priV6ConnPrefixLenIpv6,
       "priV6ConnGatewayIpv6": priV6ConnGatewayIpv6,
       "priV6ConnDnsEnableIpv6": priV6ConnDnsEnableIpv6,
       "priV6ConnMasterDnsIpv6": priV6ConnMasterDnsIpv6,
       "priV6ConnSlaveDnsIpv6": priV6ConnSlaveDnsIpv6,
       "priV6ConnSlaac": priV6ConnSlaac,
       "priV6ConnPppoeProxy": priV6ConnPppoeProxy,
       "priV6ConnPppoeUsername": priV6ConnPppoeUsername,
       "priV6ConnPppoePassword": priV6ConnPppoePassword,
       "priV6ConnPppoeSerName": priV6ConnPppoeSerName,
       "priV6ConnPppoeMode": priV6ConnPppoeMode,
       "priV6ConnDhcpv6ClientAddress": priV6ConnDhcpv6ClientAddress,
       "priV6ConnDhcpv6ClientPrefix": priV6ConnDhcpv6ClientPrefix,
       "priV6ConnDsLiteEnable": priV6ConnDsLiteEnable,
       "priV6ConnDsLiteAftrMode": priV6ConnDsLiteAftrMode,
       "priV6ConnDsLiteAddressType": priV6ConnDsLiteAddressType,
       "priV6ConnDsLiteAddress": priV6ConnDsLiteAddress,
       "priV6ConnQosEnable": priV6ConnQosEnable,
       "priV6ConnVlanMode": priV6ConnVlanMode,
       "priV6ConnTranslationEnable": priV6ConnTranslationEnable,
       "priV6ConnTranslationVlan": priV6ConnTranslationVlan,
       "priV6ConnTranslationCos": priV6ConnTranslationCos,
       "priV6ConnQinqEnable": priV6ConnQinqEnable,
       "priV6ConnQinqTpid": priV6ConnQinqTpid,
       "priV6ConnSvlanId": priV6ConnSvlanId,
       "priV6ConnSvlanCos": priV6ConnSvlanCos,
       "priV6ConnRouteMtu": priV6ConnRouteMtu,
       "priV6ConnCfgAction": priV6ConnCfgAction,
       "priV6WanConnCommit": priV6WanConnCommit,
       "priV6ConnCommitPon": priV6ConnCommitPon,
       "priV6ConnCommitOnu": priV6ConnCommitOnu,
       "priV6ConnCommitAction": priV6ConnCommitAction,
       "onuPriTr069": onuPriTr069,
       "onuPriTr069Manage": onuPriTr069Manage,
       "priMngPonID": priMngPonID,
       "priMngOnuID": priMngOnuID,
       "priMngStatus": priMngStatus,
       "priMngAcsAddress": priMngAcsAddress,
       "priMngAcsUsername": priMngAcsUsername,
       "priMngAcsPassword": priMngAcsPassword,
       "priMngCertificateEn": priMngCertificateEn,
       "priMngInformEn": priMngInformEn,
       "priMngInformIntervalTime": priMngInformIntervalTime,
       "priMngRevConnUsername": priMngRevConnUsername,
       "priMngRevConnPassword": priMngRevConnPassword,
       "priMngAction": priMngAction,
       "onuPriTr069Stun": onuPriTr069Stun,
       "priStunPonID": priStunPonID,
       "priStunOnuID": priStunOnuID,
       "priStunStatus": priStunStatus,
       "priStunAddress": priStunAddress,
       "priStunPort": priStunPort,
       "priStunUsername": priStunUsername,
       "priStunPassword": priStunPassword,
       "priStunAction": priStunAction,
       "onuPriGlobalInfo": onuPriGlobalInfo,
       "priIgmpAdminTable": priIgmpAdminTable,
       "priIgmpAdminEntry": priIgmpAdminEntry,
       "priIgmpAdminPonS": priIgmpAdminPonS,
       "priIgmpAdminOnuS": priIgmpAdminOnuS,
       "priIgmpAdminEnableS": priIgmpAdminEnableS,
       "priCatvStatusTable": priCatvStatusTable,
       "priCatvStatusEntry": priCatvStatusEntry,
       "priCatvStatusPonS": priCatvStatusPonS,
       "priCatvSatusOnuS": priCatvSatusOnuS,
       "priCatvStatusS": priCatvStatusS,
       "priCtcoamSkipTable": priCtcoamSkipTable,
       "priCtcoamSkipEntry": priCtcoamSkipEntry,
       "priCtcoamSkipPonS": priCtcoamSkipPonS,
       "priCtcOamSkipOnuS": priCtcOamSkipOnuS,
       "priCtcoamSkipS": priCtcoamSkipS,
       "priWifiSwichTable": priWifiSwichTable,
       "priWifiSwichEntry": priWifiSwichEntry,
       "priWifiSwichPonS": priWifiSwichPonS,
       "priWifiSwichOnuS": priWifiSwichOnuS,
       "priWifiSwichAPModuleS": priWifiSwichAPModuleS,
       "priWifiSwichCountry": priWifiSwichCountry,
       "priWifiSwichChannelS": priWifiSwichChannelS,
       "priWifiSwichStandardS": priWifiSwichStandardS,
       "priWifiSwitchPower": priWifiSwitchPower,
       "priWifiSwichChannelWidth": priWifiSwichChannelWidth,
       "priWifiSsidTable": priWifiSsidTable,
       "priWifiSsidEntry": priWifiSsidEntry,
       "priWifiSsidPonS": priWifiSsidPonS,
       "priWifiSsidOnuS": priWifiSsidOnuS,
       "priWifiSsidIdS": priWifiSsidIdS,
       "priWifiSsidNameS": priWifiSsidNameS,
       "priWifiSsidEnableS": priWifiSsidEnableS,
       "priWifiSsidHideS": priWifiSsidHideS,
       "priWifiSsidAuthMode": priWifiSsidAuthMode,
       "priWifiSsidEncryTpeS": priWifiSsidEncryTpeS,
       "priSsidPreshareKeyS": priSsidPreshareKeyS,
       "priSsidWpaRekeyIntervalS": priSsidWpaRekeyIntervalS,
       "priSsidRadiusServIpTypeS": priSsidRadiusServIpTypeS,
       "priSsidRadiusServIp": priSsidRadiusServIp,
       "priSsidRadiusServIpPrefixLenS": priSsidRadiusServIpPrefixLenS,
       "priSsidRadiusPortS": priSsidRadiusPortS,
       "priSsidRadiusKeyS": priSsidRadiusKeyS,
       "priSsidWepEncryptionLevelS": priSsidWepEncryptionLevelS,
       "priSsidWepKeyIndexS": priSsidWepKeyIndexS,
       "priSsidWepKey1S": priSsidWepKey1S,
       "priSsidWepKey2S": priSsidWepKey2S,
       "priSsidWepKey3S": priSsidWepKey3S,
       "priSsidWepKey4S": priSsidWepKey4S,
       "priWanConnTable": priWanConnTable,
       "priWanConnEntry": priWanConnEntry,
       "priWanConnPonS": priWanConnPonS,
       "priWanConnOnuS": priWanConnOnuS,
       "priWanConnIndexS": priWanConnIndexS,
       "priWanConnBindLanS": priWanConnBindLanS,
       "priWanConnBindSsidS": priWanConnBindSsidS,
       "priWanModeS": priWanModeS,
       "priWanConnTypeS": priWanConnTypeS,
       "priWanConnVlanIdS": priWanConnVlanIdS,
       "priWanConnVlanCosS": priWanConnVlanCosS,
       "priWanConnNatEnableS": priWanConnNatEnableS,
       "priWanConnModeS": priWanConnModeS,
       "priWanConnIpAddressS": priWanConnIpAddressS,
       "priWanConnIpMaskS": priWanConnIpMaskS,
       "priWanConnGatewayS": priWanConnGatewayS,
       "priWanConnMasterDns": priWanConnMasterDns,
       "priWanConnSlaveDns": priWanConnSlaveDns,
       "priWanConnPppoeProxyS": priWanConnPppoeProxyS,
       "priWanConnPppoeUsernameS": priWanConnPppoeUsernameS,
       "priWanConnPppoePasswordS": priWanConnPppoePasswordS,
       "priWanConnPppoeSerName": priWanConnPppoeSerName,
       "priWanConnPppoeModeS": priWanConnPppoeModeS,
       "priWanConnQosEnableS": priWanConnQosEnableS,
       "priWanConnVlanModeS": priWanConnVlanModeS,
       "priWanConnTranslationEnableS": priWanConnTranslationEnableS,
       "priWanConnTranslationVlanS": priWanConnTranslationVlanS,
       "priWanConnTranslationCosS": priWanConnTranslationCosS,
       "priWanConnQinqEnableS": priWanConnQinqEnableS,
       "priWanConnQinqTpidS": priWanConnQinqTpidS,
       "priWanConnSvlanIdS": priWanConnSvlanIdS,
       "priWanConnSvlanCosS": priWanConnSvlanCosS,
       "priWanConnName": priWanConnName,
       "priWanConnStatus": priWanConnStatus,
       "priWanConnMacAddr": priWanConnMacAddr,
       "priWanConnRouteMtuS": priWanConnRouteMtuS,
       "priPortIsolateTable": priPortIsolateTable,
       "priPortIsolateEntry": priPortIsolateEntry,
       "priPortIsolatePonS": priPortIsolatePonS,
       "priPortIsolateOnuS": priPortIsolateOnuS,
       "priPortIsolateS": priPortIsolateS,
       "priVoipTimerTable": priVoipTimerTable,
       "priVoipTimerEntry": priVoipTimerEntry,
       "priVoipTimerPon": priVoipTimerPon,
       "priVoipTimerOnu": priVoipTimerOnu,
       "priVoipTimerWaitTimer": priVoipTimerWaitTimer,
       "priVoipTimerStartTimer": priVoipTimerStartTimer,
       "priVoipTimerLongTimer": priVoipTimerLongTimer,
       "priVoipTimerShortTimer": priVoipTimerShortTimer,
       "priVoipTimerDigitNotify": priVoipTimerDigitNotify,
       "priDhcpServerTable": priDhcpServerTable,
       "priDhcpServerEntry": priDhcpServerEntry,
       "priDhcpServerPon": priDhcpServerPon,
       "priDhcpServerOnu": priDhcpServerOnu,
       "priDhcpLanIp": priDhcpLanIp,
       "priDhcpLanMask": priDhcpLanMask,
       "priDhcpEnable": priDhcpEnable,
       "priDhcpLease": priDhcpLease,
       "priDhcpBeginIp": priDhcpBeginIp,
       "priDhcpEndIp": priDhcpEndIp,
       "priDhcpPoolType": priDhcpPoolType,
       "priDhcpMasterDns": priDhcpMasterDns,
       "priDhcpSlaveDns": priDhcpSlaveDns,
       "priDhcpGateway": priDhcpGateway,
       "priDhcpRelayIp": priDhcpRelayIp,
       "priDhcpOption82Table": priDhcpOption82Table,
       "priDhcpOption82Entry": priDhcpOption82Entry,
       "priDhcpOption82Pon": priDhcpOption82Pon,
       "priDhcpOption82Onu": priDhcpOption82Onu,
       "priDhcpOption82Enable": priDhcpOption82Enable,
       "priPPPoETable": priPPPoETable,
       "priPPPoEEntry": priPPPoEEntry,
       "priPPPoEPon": priPPPoEPon,
       "priPPPoEOnu": priPPPoEOnu,
       "priPPPoEEnable": priPPPoEEnable,
       "priDhcpV6Table": priDhcpV6Table,
       "priDhcpV6Entry": priDhcpV6Entry,
       "priDhcpV6Pon": priDhcpV6Pon,
       "priDhcpV6Onu": priDhcpV6Onu,
       "priDhcpV6Option18Enable": priDhcpV6Option18Enable,
       "priDhcpV6Option37Enable": priDhcpV6Option37Enable,
       "priVoipParamTable": priVoipParamTable,
       "priVoipParamEntry": priVoipParamEntry,
       "voipPTPon": voipPTPon,
       "voipPTOnu": voipPTOnu,
       "voipPTIpMode": voipPTIpMode,
       "voipPTIp": voipPTIp,
       "voipPTMask": voipPTMask,
       "voipPTGw": voipPTGw,
       "voipPTRtpIp": voipPTRtpIp,
       "voipPTRtpMask": voipPTRtpMask,
       "voipPTRtpGw": voipPTRtpGw,
       "voipPTDnsMaster": voipPTDnsMaster,
       "voipPTDnsSlave": voipPTDnsSlave,
       "voipPTDhcpOption60Enable": voipPTDhcpOption60Enable,
       "voipPTDhcpOption60Base": voipPTDhcpOption60Base,
       "voipPTDhcpOption60Value": voipPTDhcpOption60Value,
       "voipPTPPPoEMode": voipPTPPPoEMode,
       "voipPTPPPoEUsername": voipPTPPPoEUsername,
       "voipPTPPPoEPassword": voipPTPPPoEPassword,
       "voipPTSVlanTpid": voipPTSVlanTpid,
       "voipPTSVlanId": voipPTSVlanId,
       "voipPTSVlanCos": voipPTSVlanCos,
       "voipPTCVlanTpid": voipPTCVlanTpid,
       "voipPTCVlanId": voipPTCVlanId,
       "voipPTCVlanCos": voipPTCVlanCos,
       "voipPTRtpSVlanTpid": voipPTRtpSVlanTpid,
       "voipPTRtpSVlanId": voipPTRtpSVlanId,
       "voipPTRtpSVlanCos": voipPTRtpSVlanCos,
       "voipPTRtpCVlanTpid": voipPTRtpCVlanTpid,
       "voipPTRtpCVlanId": voipPTRtpCVlanId,
       "voipPTRtpCVlanCos": voipPTRtpCVlanCos,
       "priSipParamTable": priSipParamTable,
       "priSipParamEntry": priSipParamEntry,
       "sipPTPon": sipPTPon,
       "sipPTOnu": sipPTOnu,
       "sipPTProxyServName": sipPTProxyServName,
       "sipPTProxyServPort": sipPTProxyServPort,
       "sipPTBakProxyServName": sipPTBakProxyServName,
       "sipPTBakProxyServPort": sipPTBakProxyServPort,
       "sipPTRegServName": sipPTRegServName,
       "sipPTRegServPort": sipPTRegServPort,
       "sipPTBakRegServName": sipPTBakRegServName,
       "sipPTBakRegServPort": sipPTBakRegServPort,
       "sipPTOutBndServName": sipPTOutBndServName,
       "sipPTOutBndServPort": sipPTOutBndServPort,
       "sipPTMgPort": sipPTMgPort,
       "activeSipProxyServer": activeSipProxyServer,
       "sipPTRegInterValue": sipPTRegInterValue,
       "sipPTHBeatCfg": sipPTHBeatCfg,
       "sipPTHBeatCycle": sipPTHBeatCycle,
       "sipPTHBeatCount": sipPTHBeatCount,
       "priUsernameTable": priUsernameTable,
       "priUsernameEntry": priUsernameEntry,
       "usernamePon": usernamePon,
       "usernameOnu": usernameOnu,
       "priUsernameAdminCtl": priUsernameAdminCtl,
       "priUsernameAdminName": priUsernameAdminName,
       "priUsernameAdminPwd": priUsernameAdminPwd,
       "priUsernameUserCtl": priUsernameUserCtl,
       "priUsernameUserName": priUsernameUserName,
       "priUsernameUserPwd": priUsernameUserPwd,
       "priFirewallTable": priFirewallTable,
       "priFirewallEntry": priFirewallEntry,
       "priFirewallPon": priFirewallPon,
       "priFirewallOnu": priFirewallOnu,
       "priFirewallLevel": priFirewallLevel,
       "priAclTable": priAclTable,
       "priAclEntry": priAclEntry,
       "priAclPon": priAclPon,
       "priAclOnu": priAclOnu,
       "priAclProtocolType": priAclProtocolType,
       "priAclControl": priAclControl,
       "priAclLanControl": priAclLanControl,
       "priAclWanControl": priAclWanControl,
       "priAclIpv4Control": priAclIpv4Control,
       "priAclIPv4Address": priAclIPv4Address,
       "priAclIPv4MaskAddr": priAclIPv4MaskAddr,
       "priAclIpv6Control": priAclIpv6Control,
       "priAclIPv6Address": priAclIPv6Address,
       "priAclPort": priAclPort,
       "priDhcpv6ServerTable": priDhcpv6ServerTable,
       "priDhcpv6ServerEntry": priDhcpv6ServerEntry,
       "priDhcpv6ServerPon": priDhcpv6ServerPon,
       "priDhcpv6ServerOnu": priDhcpv6ServerOnu,
       "priDhcpv6LanIp": priDhcpv6LanIp,
       "priDhcpv6LanPrefixlen": priDhcpv6LanPrefixlen,
       "priDhcpv6PrefixMode": priDhcpv6PrefixMode,
       "priDhcpv6PrefixModeIp": priDhcpv6PrefixModeIp,
       "priDhcpv6Enable": priDhcpv6Enable,
       "priDhcpv6Preference": priDhcpv6Preference,
       "priDhcpv6BeginIp": priDhcpv6BeginIp,
       "priDhcpv6EndIp": priDhcpv6EndIp,
       "priDhcpv6PoolType": priDhcpv6PoolType,
       "priDhcpv6MasterDns": priDhcpv6MasterDns,
       "priDhcpv6SlaveDns": priDhcpv6SlaveDns,
       "priDhcpv6Gateway": priDhcpv6Gateway,
       "priDhcpv6RelayIp": priDhcpv6RelayIp,
       "priDhcpv6RA": priDhcpv6RA,
       "priDhcpv6RAManage": priDhcpv6RAManage,
       "priDhcpv6RAOther": priDhcpv6RAOther,
       "priDhcpv6RAMaxInterval": priDhcpv6RAMaxInterval,
       "priDhcpv6RAMinInterval": priDhcpv6RAMinInterval,
       "priDhcpv6Valid": priDhcpv6Valid,
       "priDhcpv6DnsMode": priDhcpv6DnsMode,
       "priWifiSwitchTable": priWifiSwitchTable,
       "priWifiSwitchEntry": priWifiSwitchEntry,
       "priWifiSwitchPonS": priWifiSwitchPonS,
       "priWifiSwitchOnuS": priWifiSwitchOnuS,
       "priWifiSwitchAPModuleS": priWifiSwitchAPModuleS,
       "priWifiSwitchCountry": priWifiSwitchCountry,
       "priWifiSwitchChannelS": priWifiSwitchChannelS,
       "priWifiSwitchStandardS": priWifiSwitchStandardS,
       "priWifiSwitchPower1": priWifiSwitchPower1,
       "priWifiSwitchChannelWidth": priWifiSwitchChannelWidth,
       "priWifiSwitchEasyMeshStatus": priWifiSwitchEasyMeshStatus,
       "priWanConnV6Table": priWanConnV6Table,
       "priWanConnV6Entry": priWanConnV6Entry,
       "priV6ConnPonS": priV6ConnPonS,
       "priV6ConnOnuS": priV6ConnOnuS,
       "priV6ConnIndexS": priV6ConnIndexS,
       "priV6ConnBindLanS": priV6ConnBindLanS,
       "priV6ConnBindSsidS": priV6ConnBindSsidS,
       "priV6WanModeS": priV6WanModeS,
       "priV6ConnTypeS": priV6ConnTypeS,
       "priV6ConnVlanIdS": priV6ConnVlanIdS,
       "priV6ConnVlanCosS": priV6ConnVlanCosS,
       "priV6ConnIpProtocolS": priV6ConnIpProtocolS,
       "priV6wanConnModeS": priV6wanConnModeS,
       "priV6ConnIpAddressIpv4S": priV6ConnIpAddressIpv4S,
       "priV6ConnIpNetMaskIpv4S": priV6ConnIpNetMaskIpv4S,
       "priV6ConnGatewayIpv4S": priV6ConnGatewayIpv4S,
       "priV6ConnDnsEnableIpv4S": priV6ConnDnsEnableIpv4S,
       "priV6ConnMasterDnsIpv4S": priV6ConnMasterDnsIpv4S,
       "priV6ConnSlaveDnsIpv4S": priV6ConnSlaveDnsIpv4S,
       "priV6ConnNatEnableS": priV6ConnNatEnableS,
       "priV6ConnAddressIpv6S": priV6ConnAddressIpv6S,
       "priV6ConnPrefixLenIpv6S": priV6ConnPrefixLenIpv6S,
       "priV6ConnGatewayIpv6S": priV6ConnGatewayIpv6S,
       "priV6ConnDnsEnableIpv6S": priV6ConnDnsEnableIpv6S,
       "priV6ConnMsaterDnsIpv6S": priV6ConnMsaterDnsIpv6S,
       "priV6ConnSlaveDnsIpv6S": priV6ConnSlaveDnsIpv6S,
       "priV6ConnSlaacS": priV6ConnSlaacS,
       "priV6ConnPppoeProxyS": priV6ConnPppoeProxyS,
       "priV6ConnPppoeUsernameS": priV6ConnPppoeUsernameS,
       "priV6ConnPppoePasswordS": priV6ConnPppoePasswordS,
       "priV6ConnPppoeSerNameS": priV6ConnPppoeSerNameS,
       "priV6ConnPppoeModeS": priV6ConnPppoeModeS,
       "priV6ConnDhcpv6ClientAddressS": priV6ConnDhcpv6ClientAddressS,
       "priV6ConnDhcpv6ClientPrefixS": priV6ConnDhcpv6ClientPrefixS,
       "priV6ConnDsLiteEnableS": priV6ConnDsLiteEnableS,
       "priV6ConnDsLiteAftrModeS": priV6ConnDsLiteAftrModeS,
       "priV6ConnDsLiteAddressTypeS": priV6ConnDsLiteAddressTypeS,
       "priV6ConnDsLiteAddressS": priV6ConnDsLiteAddressS,
       "priv6ConnQosEnableS": priv6ConnQosEnableS,
       "priV6ConnVlanModeS": priV6ConnVlanModeS,
       "priV6ConnTranslationEnableS": priV6ConnTranslationEnableS,
       "priV6ConnTranslationVlanS": priV6ConnTranslationVlanS,
       "priV6ConnTranslationCosS": priV6ConnTranslationCosS,
       "priV6ConnQinqEnableS": priV6ConnQinqEnableS,
       "priV6ConnQinqTpidS": priV6ConnQinqTpidS,
       "priV6ConnSvlanIdS": priV6ConnSvlanIdS,
       "priV6ConnSvlanCosS": priV6ConnSvlanCosS,
       "priV6ConnRouteMtuS": priV6ConnRouteMtuS,
       "priv6ConnNameS": priv6ConnNameS,
       "priV6ConnStatusS": priV6ConnStatusS,
       "priV6ConnMacAddrS": priV6ConnMacAddrS,
       "priTr069ManageTable": priTr069ManageTable,
       "priTr069ManageEntry": priTr069ManageEntry,
       "priMngPon": priMngPon,
       "priMngOnu": priMngOnu,
       "priMngAcsAddressS": priMngAcsAddressS,
       "priMngAcsUsernameS": priMngAcsUsernameS,
       "priMngAcsPasswordS": priMngAcsPasswordS,
       "priMngCertificateEnS": priMngCertificateEnS,
       "priMngInformEnS": priMngInformEnS,
       "priMngInformIntervalTimeS": priMngInformIntervalTimeS,
       "priMngRevConnUsernameS": priMngRevConnUsernameS,
       "priMngRevConnPasswordS": priMngRevConnPasswordS,
       "priMngStatusS": priMngStatusS,
       "priTr069StunTable": priTr069StunTable,
       "priTr069StunEntry": priTr069StunEntry,
       "priStunPon": priStunPon,
       "priStunOnu": priStunOnu,
       "priStunAddressS": priStunAddressS,
       "priStunPortS": priStunPortS,
       "priStunUsernameS": priStunUsernameS,
       "priStunPasswordS": priStunPasswordS,
       "priStunStatusS": priStunStatusS,
       "priWanConnCfgTable": priWanConnCfgTable,
       "priWanConnCfgEntry": priWanConnCfgEntry,
       "priWanConnCfgPon": priWanConnCfgPon,
       "priWanConnCfgOnu": priWanConnCfgOnu,
       "priWanConnCfgNum": priWanConnCfgNum,
       "priWanConnCfgV6Table": priWanConnCfgV6Table,
       "priWanConnCfgV6Entry": priWanConnCfgV6Entry,
       "priWanConnCfgV6Pon": priWanConnCfgV6Pon,
       "priWanConnCfgV6Onu": priWanConnCfgV6Onu,
       "priWanConnCfgV6Num": priWanConnCfgV6Num,
       "onuPriPort": onuPriPort,
       "onuPriPortCfg": onuPriPortCfg,
       "onuPriPortMacLimit": onuPriPortMacLimit,
       "priMacLimitPon": priMacLimitPon,
       "priMacLimitOnu": priMacLimitOnu,
       "priMacLimitEthNo": priMacLimitEthNo,
       "priMacLimit": priMacLimit,
       "priMacLimitAction": priMacLimitAction,
       "onuPriPortPkgSuppress": onuPriPortPkgSuppress,
       "priPkgSuppressPon": priPkgSuppressPon,
       "priPkgSuppressOnu": priPkgSuppressOnu,
       "priPkgSuppressEthNo": priPkgSuppressEthNo,
       "priPkgBroadcast": priPkgBroadcast,
       "priPkgMulticast": priPkgMulticast,
       "priPkgUnknown": priPkgUnknown,
       "priPkgSuppressAction": priPkgSuppressAction,
       "onuPriPortModeControl": onuPriPortModeControl,
       "priModeControlPon": priModeControlPon,
       "priModeControlOnu": priModeControlOnu,
       "priModeControlEthNo": priModeControlEthNo,
       "priModeControl": priModeControl,
       "priModeControlAction": priModeControlAction,
       "onuPriPotsParameter": onuPriPotsParameter,
       "priPotsParameterPon": priPotsParameterPon,
       "priPotsParameterOnu": priPotsParameterOnu,
       "priPotsParameterPotsNo": priPotsParameterPotsNo,
       "priPotsParameterVar": priPotsParameterVar,
       "priPotsParameterEchoCancle": priPotsParameterEchoCancle,
       "priPotsPtInutGain": priPotsPtInutGain,
       "priPotsPtOutputGain": priPotsPtOutputGain,
       "priPotsPtDtmfMode": priPotsPtDtmfMode,
       "priPotsPtAction": priPotsPtAction,
       "onuPriPotsAction": onuPriPotsAction,
       "priPotsActionPon": priPotsActionPon,
       "priPotsActionOnu": priPotsActionOnu,
       "priPotsActionPotsNo": priPotsActionPotsNo,
       "priPotsActionRegister": priPotsActionRegister,
       "priPotsActionAction": priPotsActionAction,
       "onuPriPortInfo": onuPriPortInfo,
       "priPortMacLimitTable": priPortMacLimitTable,
       "priPortMacLimitEntry": priPortMacLimitEntry,
       "priPortMacLimitPonS": priPortMacLimitPonS,
       "priPortMacLimitOnuS": priPortMacLimitOnuS,
       "priPortMacLimitEthNoS": priPortMacLimitEthNoS,
       "priPortMacLimitS": priPortMacLimitS,
       "priPortPkgSuppressTable": priPortPkgSuppressTable,
       "priPortPkgSuppressEntry": priPortPkgSuppressEntry,
       "priPortPkgSuppressPonS": priPortPkgSuppressPonS,
       "priPortPkgSuppressOnuS": priPortPkgSuppressOnuS,
       "priPortPkgSuppressEthNoS": priPortPkgSuppressEthNoS,
       "priPortPkgSuppressBroadcastS": priPortPkgSuppressBroadcastS,
       "priPortPkgSuppressMulticastS": priPortPkgSuppressMulticastS,
       "priPortPkgSuppressUnkownS": priPortPkgSuppressUnkownS,
       "priPortModeControlTable": priPortModeControlTable,
       "priPortModeControlEntry": priPortModeControlEntry,
       "priPortModeControlPonS": priPortModeControlPonS,
       "priPortModeControlOnuS": priPortModeControlOnuS,
       "priPortModeControlEthNoS": priPortModeControlEthNoS,
       "priPortModeControlS": priPortModeControlS,
       "priPortModeStatusTable": priPortModeStatusTable,
       "priPortModeStatusEntry": priPortModeStatusEntry,
       "priPortModeStatusPonS": priPortModeStatusPonS,
       "priPortModeStatusOnuS": priPortModeStatusOnuS,
       "priPortModeStatusEthNoS": priPortModeStatusEthNoS,
       "priPortModeStatusS": priPortModeStatusS,
       "priPotsParameterTable": priPotsParameterTable,
       "priPotsParameterEntry": priPotsParameterEntry,
       "priPortPtPonS": priPortPtPonS,
       "priPortPtOnuS": priPortPtOnuS,
       "priPortPtPotsNoS": priPortPtPotsNoS,
       "priPortPtVarS": priPortPtVarS,
       "priPortPtEchoCancleS": priPortPtEchoCancleS,
       "priPotsPtInputGainS": priPotsPtInputGainS,
       "priPotsPtOutputGainS": priPotsPtOutputGainS,
       "priPotsPtDtmfModeS": priPotsPtDtmfModeS,
       "priPortMacTable": priPortMacTable,
       "priPortMacEntry": priPortMacEntry,
       "priPortMacPonS": priPortMacPonS,
       "priPortMacOnuS": priPortMacOnuS,
       "priPortMacEthNoS": priPortMacEthNoS,
       "priPortMacIndex": priPortMacIndex,
       "learningMacNumber": learningMacNumber,
       "reportMacNumber": reportMacNumber,
       "priPortMacAddr": priPortMacAddr,
       "priPortMacVlan": priPortMacVlan,
       "onuPort": onuPort,
       "onuPortInfo": onuPortInfo,
       "onuPortInfoCfg": onuPortInfoCfg,
       "infoPonNo": infoPonNo,
       "infoOnuNo": infoOnuNo,
       "infoPortNo": infoPortNo,
       "infoAction": infoAction,
       "onuPortInfoDisplay": onuPortInfoDisplay,
       "displayPortNo": displayPortNo,
       "linkState": linkState,
       "flowControl": flowControl,
       "policyState": policyState,
       "policyCir": policyCir,
       "policyCbs": policyCbs,
       "policyEbs": policyEbs,
       "rateLimitState": rateLimitState,
       "rateLimitCir": rateLimitCir,
       "rateLimitPir": rateLimitPir,
       "onuPortAdminTable": onuPortAdminTable,
       "onuPortAdminEntry": onuPortAdminEntry,
       "onuPortAdminPonIndex": onuPortAdminPonIndex,
       "onuPortAdminOnuIndex": onuPortAdminOnuIndex,
       "onuPortAdminPortIndex": onuPortAdminPortIndex,
       "onuPortAdminVal": onuPortAdminVal,
       "onuPortAutoNegTable": onuPortAutoNegTable,
       "onuPortAutoNegEntry": onuPortAutoNegEntry,
       "onuPortAutoNegPonIndex": onuPortAutoNegPonIndex,
       "onuPortAutoNegOnuIndex": onuPortAutoNegOnuIndex,
       "onuPortAutoNegPortIndex": onuPortAutoNegPortIndex,
       "onuPortAutoNegVal": onuPortAutoNegVal,
       "onuPortFcTable": onuPortFcTable,
       "onuPortFcEntry": onuPortFcEntry,
       "onuPortFcPonIndex": onuPortFcPonIndex,
       "onuPortFcOnuIndex": onuPortFcOnuIndex,
       "onuPortFcPortIndex": onuPortFcPortIndex,
       "onuPortFcVal": onuPortFcVal,
       "portLoopdetectTable": portLoopdetectTable,
       "portLoopdetectEntry": portLoopdetectEntry,
       "portLoopdetectPonIndex": portLoopdetectPonIndex,
       "portLoopdetectOnuIndex": portLoopdetectOnuIndex,
       "portLoopdetectPortIndex": portLoopdetectPortIndex,
       "portLoopdetectVal": portLoopdetectVal,
       "onuPortUpstreamLimitTable": onuPortUpstreamLimitTable,
       "onuPortUpstreamLimitEntry": onuPortUpstreamLimitEntry,
       "onuPortUpstreamLimitPonIndex": onuPortUpstreamLimitPonIndex,
       "onuPortUpstreamLimitOnuIndex": onuPortUpstreamLimitOnuIndex,
       "onuPortUpstreamLimitPortIndex": onuPortUpstreamLimitPortIndex,
       "onuPortUpstreamLimitCir": onuPortUpstreamLimitCir,
       "onuPortUpstreamLimitCbs": onuPortUpstreamLimitCbs,
       "onuPortUpstreamLimitEbs": onuPortUpstreamLimitEbs,
       "onuPortDownstreamLimitTable": onuPortDownstreamLimitTable,
       "onuPortDownstreamLimitEntry": onuPortDownstreamLimitEntry,
       "onuPortDownstreamLimitPonIndex": onuPortDownstreamLimitPonIndex,
       "onuPortDownstreamLimitOnuIndex": onuPortDownstreamLimitOnuIndex,
       "onuPortDownstreamLimitPortIndex": onuPortDownstreamLimitPortIndex,
       "onuPortDownstreamLimitCir": onuPortDownstreamLimitCir,
       "onuPortDownstreamLimitPir": onuPortDownstreamLimitPir,
       "onuPortLinkstateTable": onuPortLinkstateTable,
       "onuPortLinkstateEntry": onuPortLinkstateEntry,
       "onuPortLinkstatePonIndex": onuPortLinkstatePonIndex,
       "onuPortLinkstateOnuIndex": onuPortLinkstateOnuIndex,
       "onuPortLinkstatePortIndex": onuPortLinkstatePortIndex,
       "onuPortLinkstateVal": onuPortLinkstateVal,
       "onuVlanPortTable": onuVlanPortTable,
       "onuVlanPortEntry": onuVlanPortEntry,
       "onuVlanPonIndex": onuVlanPonIndex,
       "onuVlanOnuIndex": onuVlanOnuIndex,
       "onuVlanPortIndex": onuVlanPortIndex,
       "onuVlanPortMode": onuVlanPortMode,
       "onuVlanPortPvid": onuVlanPortPvid,
       "onuVlanPortVlan": onuVlanPortVlan,
       "onuVlanPortPri": onuVlanPortPri,
       "onuPortStatEnTable": onuPortStatEnTable,
       "onuPortStatEnEntry": onuPortStatEnEntry,
       "onuPortStatEnPonIndex": onuPortStatEnPonIndex,
       "onuPortStatEnOnuIndex": onuPortStatEnOnuIndex,
       "onuPortStatEnPortIndex": onuPortStatEnPortIndex,
       "onuPortStatEn": onuPortStatEn,
       "onuPortStatEnPeriod": onuPortStatEnPeriod,
       "onuPortStatTable": onuPortStatTable,
       "onuPortStatEntry": onuPortStatEntry,
       "onuPortStatPonIndex": onuPortStatPonIndex,
       "onuPortStatOnuIndex": onuPortStatOnuIndex,
       "onuPortStatPortIndex": onuPortStatPortIndex,
       "statDnDropEvents": statDnDropEvents,
       "statUpDropEvents": statUpDropEvents,
       "statDnOctets": statDnOctets,
       "statUpOctets": statUpOctets,
       "statDnFrames": statDnFrames,
       "statUpFrames": statUpFrames,
       "statDnBcFrames": statDnBcFrames,
       "statUpBcFrames": statUpBcFrames,
       "statDnMcFrames": statDnMcFrames,
       "statUpMcFrames": statUpMcFrames,
       "statDnCrcErrFrames": statDnCrcErrFrames,
       "statUpCrcErrFrames": statUpCrcErrFrames,
       "statDnUndersizeFrames": statDnUndersizeFrames,
       "statUpUndersizeFrames": statUpUndersizeFrames,
       "statDnOversizeFrames": statDnOversizeFrames,
       "statUpOversizeFrames": statUpOversizeFrames,
       "statDnFragments": statDnFragments,
       "statUpFragments": statUpFragments,
       "statDnJabbers": statDnJabbers,
       "statUpJabbers": statUpJabbers,
       "statDn64OctetsFrames": statDn64OctetsFrames,
       "statDn65to127OctetsFrames": statDn65to127OctetsFrames,
       "statDn128to255OctetsFrames": statDn128to255OctetsFrames,
       "statDn256to511OctetsFrames": statDn256to511OctetsFrames,
       "statDn512to1023OctetsFrames": statDn512to1023OctetsFrames,
       "statDn1024to1518OctetsFrames": statDn1024to1518OctetsFrames,
       "statUp64OctetsFrames": statUp64OctetsFrames,
       "statUp65to127OctetsFrames": statUp65to127OctetsFrames,
       "statUp128to255OctetsFrames": statUp128to255OctetsFrames,
       "statUp256to511OctetsFrames": statUp256to511OctetsFrames,
       "statUp512to1023OctetsFrames": statUp512to1023OctetsFrames,
       "statUp1024to1518OctetsFrames": statUp1024to1518OctetsFrames,
       "statDnDiscardFrames": statDnDiscardFrames,
       "statUpDiscardFrames": statUpDiscardFrames,
       "statDnErrFrames": statDnErrFrames,
       "statUpErrFrames": statUpErrFrames,
       "statStatusChangeTimes": statStatusChangeTimes,
       "onuPortBasicTable": onuPortBasicTable,
       "onuPortBasicEntry": onuPortBasicEntry,
       "onuPortBasicPonIndex": onuPortBasicPonIndex,
       "onuPortBasicOnuIndex": onuPortBasicOnuIndex,
       "onuPortBasicPortIndex": onuPortBasicPortIndex,
       "onuPortBasicLinkStatus": onuPortBasicLinkStatus,
       "onuPortBasicAdminStatus": onuPortBasicAdminStatus,
       "onuPortBasicAutoNgt": onuPortBasicAutoNgt,
       "onuPortBasicFlowCtl": onuPortBasicFlowCtl,
       "onuPortBasicLoopback": onuPortBasicLoopback,
       "onuPortBasicPolicyState": onuPortBasicPolicyState,
       "onuPortBasicPolicyCir": onuPortBasicPolicyCir,
       "onuPortBasicPolicyCbs": onuPortBasicPolicyCbs,
       "onuPortBasicPolicyEbs": onuPortBasicPolicyEbs,
       "onuPortBasicRateState": onuPortBasicRateState,
       "onuPortBasicRateCir": onuPortBasicRateCir,
       "onuPortBasicRatePir": onuPortBasicRatePir,
       "onuPortDisLoopTable": onuPortDisLoopTable,
       "onuPortDisLoopEntry": onuPortDisLoopEntry,
       "onuPortDisLoopPon": onuPortDisLoopPon,
       "onuPortDisLoopOnu": onuPortDisLoopOnu,
       "onuPortDisLoopPort": onuPortDisLoopPort,
       "onuPortDisLoopEn": onuPortDisLoopEn,
       "onuPortCfg": onuPortCfg,
       "onuPortAdminCfg": onuPortAdminCfg,
       "portAdminPonNo": portAdminPonNo,
       "portAdminOnuNo": portAdminOnuNo,
       "portAdminPortNo": portAdminPortNo,
       "portAdmin": portAdmin,
       "onuPortAutoNegCfg": onuPortAutoNegCfg,
       "autoNegPonNo": autoNegPonNo,
       "autoNegOnuNo": autoNegOnuNo,
       "autoNegPortNo": autoNegPortNo,
       "portAutoNeg": portAutoNeg,
       "onuPortAutoNegRstCfg": onuPortAutoNegRstCfg,
       "autoNegRstPonNo": autoNegRstPonNo,
       "autoNegRstOnuNo": autoNegRstOnuNo,
       "autoNegRstPortNo": autoNegRstPortNo,
       "portAutoNegRestart": portAutoNegRestart,
       "onuPortFcCfg": onuPortFcCfg,
       "fcPonNo": fcPonNo,
       "fcOnuNo": fcOnuNo,
       "fcPortNo": fcPortNo,
       "portFlowControl": portFlowControl,
       "portLoopdetectCfg": portLoopdetectCfg,
       "loopPonNo": loopPonNo,
       "loopOnuNo": loopOnuNo,
       "loopPortNo": loopPortNo,
       "portLoopdetect": portLoopdetect,
       "portDisLoopCfg": portDisLoopCfg,
       "disLoopPonNo": disLoopPonNo,
       "disLoopOnuNo": disLoopOnuNo,
       "disLoopPortNo": disLoopPortNo,
       "portDisableLoopEn": portDisableLoopEn,
       "onuPortUpstreamLimit": onuPortUpstreamLimit,
       "upLimitPonNo": upLimitPonNo,
       "upLimitOnuNo": upLimitOnuNo,
       "upLimitPortNo": upLimitPortNo,
       "upLimitCir": upLimitCir,
       "upLimitCbs": upLimitCbs,
       "upLimitEbs": upLimitEbs,
       "upLimitAction": upLimitAction,
       "onuPortDownstreamLimit": onuPortDownstreamLimit,
       "downLimitPonNo": downLimitPonNo,
       "downLimitOnuNo": downLimitOnuNo,
       "downLimitPortNo": downLimitPortNo,
       "downLimitCir": downLimitCir,
       "downLimitPir": downLimitPir,
       "downLimitAction": downLimitAction,
       "onuPortVlan": onuPortVlan,
       "onuPortVlanMode": onuPortVlanMode,
       "vlanModePonNo": vlanModePonNo,
       "vlanModeOnuNo": vlanModeOnuNo,
       "vlanModePortNo": vlanModePortNo,
       "vlanMode": vlanMode,
       "onuPortVlanPvid": onuPortVlanPvid,
       "portPvidPonNo": portPvidPonNo,
       "portPvidOnuNo": portPvidOnuNo,
       "portPvidPortNo": portPvidPortNo,
       "portPvidValue": portPvidValue,
       "portPriValue": portPriValue,
       "pvidAction": pvidAction,
       "onuPortVlanTranslate": onuPortVlanTranslate,
       "translatePonNo": translatePonNo,
       "translateOnuNo": translateOnuNo,
       "translatePortNo": translatePortNo,
       "translateOldVlan": translateOldVlan,
       "translateNewVlan": translateNewVlan,
       "translateAction": translateAction,
       "onuPortVlanTransTable": onuPortVlanTransTable,
       "onuPortVlanTransEntry": onuPortVlanTransEntry,
       "vlanTransItem": vlanTransItem,
       "vlanTransPonNo": vlanTransPonNo,
       "vlanTransOnuNo": vlanTransOnuNo,
       "vlanTransPortNo": vlanTransPortNo,
       "vlanTransOldVlan": vlanTransOldVlan,
       "vlanTransNewVlan": vlanTransNewVlan,
       "onuPortVlanTrunk": onuPortVlanTrunk,
       "trunkPonNo": trunkPonNo,
       "trunkOnuNo": trunkOnuNo,
       "trunkPortNo": trunkPortNo,
       "trunkPortVid": trunkPortVid,
       "trunkPortVidAction": trunkPortVidAction,
       "onuPortVlanTrunkTable": onuPortVlanTrunkTable,
       "onuPortVlanTrunkEntry": onuPortVlanTrunkEntry,
       "vlanTrunkItem": vlanTrunkItem,
       "vlanTrunkPonNo": vlanTrunkPonNo,
       "vlanTrunkOnuNo": vlanTrunkOnuNo,
       "vlanTrunkPortNo": vlanTrunkPortNo,
       "vlanTrunkVid": vlanTrunkVid,
       "onuPortVlanAgg": onuPortVlanAgg,
       "onuVlanAggPonNo": onuVlanAggPonNo,
       "onuVlanAggOnuNo": onuVlanAggOnuNo,
       "onuVlanAggPortNo": onuVlanAggPortNo,
       "onuAggNewVlan": onuAggNewVlan,
       "onuAggOldVlan1": onuAggOldVlan1,
       "onuAggOldVlan2": onuAggOldVlan2,
       "onuAggOldVlan3": onuAggOldVlan3,
       "onuAggOldVlan4": onuAggOldVlan4,
       "onuAggOldVlan5": onuAggOldVlan5,
       "onuAggOldVlan6": onuAggOldVlan6,
       "onuAggOldVlan7": onuAggOldVlan7,
       "onuAggOldVlan8": onuAggOldVlan8,
       "onuAggAction": onuAggAction,
       "onuPortClassifyCfg": onuPortClassifyCfg,
       "classPonNo": classPonNo,
       "classOnuNo": classOnuNo,
       "classPortNo": classPortNo,
       "classPrecedence": classPrecedence,
       "classPri": classPri,
       "dstMacEqualSel": dstMacEqualSel,
       "dstMacValue": dstMacValue,
       "srcMacEqualSel": srcMacEqualSel,
       "srcMacValue": srcMacValue,
       "vlanEqualSel": vlanEqualSel,
       "vlanValue": vlanValue,
       "cosEqualSel": cosEqualSel,
       "cosValue": cosValue,
       "ethTypeEqualSel": ethTypeEqualSel,
       "ethTypeValue": ethTypeValue,
       "srcIpEqualSel": srcIpEqualSel,
       "srcIpValue": srcIpValue,
       "destIpEqualSel": destIpEqualSel,
       "destIpValue": destIpValue,
       "protocolEqualSel": protocolEqualSel,
       "protocolValue": protocolValue,
       "tosDscpEuqalSel": tosDscpEuqalSel,
       "tosDscpValue": tosDscpValue,
       "srcPortEqualSel": srcPortEqualSel,
       "srcPortValue": srcPortValue,
       "destPortEqualSel": destPortEqualSel,
       "destPortValue": destPortValue,
       "classAction": classAction,
       "classQueue": classQueue,
       "onuPortClassifyDel": onuPortClassifyDel,
       "classDelPonNo": classDelPonNo,
       "classDelOnuNo": classDelOnuNo,
       "classDelPortNo": classDelPortNo,
       "classDelPrecedence": classDelPrecedence,
       "classDelAction": classDelAction,
       "onuPortClassifyTable": onuPortClassifyTable,
       "onuPortClassifyEntry": onuPortClassifyEntry,
       "classifyItem": classifyItem,
       "classifyPonNo": classifyPonNo,
       "classifyOnuNo": classifyOnuNo,
       "classifyPortNo": classifyPortNo,
       "classifyPrecedence": classifyPrecedence,
       "classifyPri": classifyPri,
       "dstMacEqual": dstMacEqual,
       "dstMacVal": dstMacVal,
       "srcMacEqual": srcMacEqual,
       "srcMacVal": srcMacVal,
       "vlanEqual": vlanEqual,
       "vlanVal": vlanVal,
       "cosEqual": cosEqual,
       "cosVal": cosVal,
       "ethTypeEqual": ethTypeEqual,
       "ethTypeVal": ethTypeVal,
       "srcIpEqual": srcIpEqual,
       "srcIpVal": srcIpVal,
       "destIpEqual": destIpEqual,
       "destIpVal": destIpVal,
       "protocolEqual": protocolEqual,
       "protocolVal": protocolVal,
       "tosDscpEuqal": tosDscpEuqal,
       "tosDscpVal": tosDscpVal,
       "srcPortEqual": srcPortEqual,
       "srcPortVal": srcPortVal,
       "destPortEqual": destPortEqual,
       "destPortVal": destPortVal,
       "classifyQueue": classifyQueue,
       "onuPortIgmpCfg": onuPortIgmpCfg,
       "mcVlanCfg": mcVlanCfg,
       "mcVlanPonNo": mcVlanPonNo,
       "mcVlanOnuNo": mcVlanOnuNo,
       "mcVlanPortNo": mcVlanPortNo,
       "mcVlanVal": mcVlanVal,
       "mcVlanAction": mcVlanAction,
       "mcVlanTable": mcVlanTable,
       "mcVlanEntry": mcVlanEntry,
       "mVlanItem": mVlanItem,
       "mVlanPonNo": mVlanPonNo,
       "mVlanOnuNo": mVlanOnuNo,
       "mVlanPortNo": mVlanPortNo,
       "mVlanVal": mVlanVal,
       "mcMaxGroupCfg": mcMaxGroupCfg,
       "maxgrpPonNo": maxgrpPonNo,
       "maxgrpOnuNo": maxgrpOnuNo,
       "maxgrpPortNo": maxgrpPortNo,
       "maxgrpVal": maxgrpVal,
       "mcTagstrip": mcTagstrip,
       "tagstripPonNo": tagstripPonNo,
       "tagstripOnuNo": tagstripOnuNo,
       "tagstripPortNo": tagstripPortNo,
       "tagstripGroupVlan0": tagstripGroupVlan0,
       "tagstripUserVlan0": tagstripUserVlan0,
       "tagstripGroupVlan1": tagstripGroupVlan1,
       "tagstripUserVlan1": tagstripUserVlan1,
       "tagstripGroupVlan2": tagstripGroupVlan2,
       "tagstripUserVlan2": tagstripUserVlan2,
       "tagstripGroupVlan3": tagstripGroupVlan3,
       "tagstripUserVlan3": tagstripUserVlan3,
       "tagstripGroupVlan4": tagstripGroupVlan4,
       "tagstripUserVlan4": tagstripUserVlan4,
       "tagstripGroupVlan5": tagstripGroupVlan5,
       "tagstripUserVlan5": tagstripUserVlan5,
       "tagstripGroupVlan6": tagstripGroupVlan6,
       "tagstripUserVlan6": tagstripUserVlan6,
       "tagstripGroupVlan7": tagstripGroupVlan7,
       "tagstripUserVlan7": tagstripUserVlan7,
       "tagstripMode": tagstripMode,
       "mcVlanTagStripTable": mcVlanTagStripTable,
       "mcVlanTagStripEntry": mcVlanTagStripEntry,
       "mVlanTagsPonNo": mVlanTagsPonNo,
       "mVlanTagsOnuNo": mVlanTagsOnuNo,
       "mVlanTagsPortNo": mVlanTagsPortNo,
       "mVlanTagsMode": mVlanTagsMode,
       "mVlanTagsVlanTrans": mVlanTagsVlanTrans,
       "mcMaxGroupTable": mcMaxGroupTable,
       "mcMaxGroupEntry": mcMaxGroupEntry,
       "mcMaxGrpPonNo": mcMaxGrpPonNo,
       "mcMaxGrpOnuNo": mcMaxGrpOnuNo,
       "mcMaxGrpPortNo": mcMaxGrpPortNo,
       "mcMaxGrpVal": mcMaxGrpVal,
       "onuPortStatOnOff": onuPortStatOnOff,
       "statOnOffPonNo": statOnOffPonNo,
       "statOnOffOnuNo": statOnOffOnuNo,
       "statOnOffEthNo": statOnOffEthNo,
       "monitorStatus": monitorStatus,
       "statisticCycle": statisticCycle,
       "statOnOffAction": statOnOffAction,
       "onuPortStat": onuPortStat,
       "onuPortStatClr": onuPortStatClr,
       "clrStatPonNo": clrStatPonNo,
       "clrStatOnuNo": clrStatOnuNo,
       "clrStatPortNo": clrStatPortNo,
       "clrStatAction": clrStatAction,
       "onuPortStatQueryMode": onuPortStatQueryMode,
       "queryPonNo": queryPonNo,
       "queryOnuNo": queryOnuNo,
       "queryPortNo": queryPortNo,
       "queryMode": queryMode,
       "queryAction": queryAction,
       "onuPortStatDisplay": onuPortStatDisplay,
       "statDisplayPortNo": statDisplayPortNo,
       "dnDropEvents": dnDropEvents,
       "upDropEvents": upDropEvents,
       "dnOctets": dnOctets,
       "upOctets": upOctets,
       "dnFrames": dnFrames,
       "upFrames": upFrames,
       "dnBcFrames": dnBcFrames,
       "upBcFrames": upBcFrames,
       "dnMcFrames": dnMcFrames,
       "upMcFrames": upMcFrames,
       "dnCrcErrFrames": dnCrcErrFrames,
       "upCrcErrFrames": upCrcErrFrames,
       "dnUndersizeFrames": dnUndersizeFrames,
       "upUndersizeFrames": upUndersizeFrames,
       "dnOversizeFrames": dnOversizeFrames,
       "upOversizeFrames": upOversizeFrames,
       "dnFragments": dnFragments,
       "upFragments": upFragments,
       "dnJabbers": dnJabbers,
       "upJabbers": upJabbers,
       "dn64OctetsFrames": dn64OctetsFrames,
       "dn65to127OctetsFrames": dn65to127OctetsFrames,
       "dn128to255OctetsFrames": dn128to255OctetsFrames,
       "dn256to511OctetsFrames": dn256to511OctetsFrames,
       "dn512to1023OctetsFrames": dn512to1023OctetsFrames,
       "dn1024to1518OctetsFrames": dn1024to1518OctetsFrames,
       "up64OctetsFrames": up64OctetsFrames,
       "up65to127OctetsFrames": up65to127OctetsFrames,
       "up128to255OctetsFrames": up128to255OctetsFrames,
       "up256to511OctetsFrames": up256to511OctetsFrames,
       "up512to1023OctetsFrames": up512to1023OctetsFrames,
       "up1024to1518OctetsFrames": up1024to1518OctetsFrames,
       "dnDiscardFrames": dnDiscardFrames,
       "upDiscardFrames": upDiscardFrames,
       "dnErrFrames": dnErrFrames,
       "upErrFrames": upErrFrames,
       "statusChangeTimes": statusChangeTimes,
       "onuPortGlobalView": onuPortGlobalView,
       "globalViewPonNum": globalViewPonNum,
       "globalViewOnuNum": globalViewOnuNum,
       "globalViewPortNum": globalViewPortNum,
       "onuVoipCfg": onuVoipCfg,
       "voipInfo": voipInfo,
       "voipGlobalInfo": voipGlobalInfo,
       "voipGlobalIPTable": voipGlobalIPTable,
       "voipGlobalIPEntry": voipGlobalIPEntry,
       "voipGIPPonNo": voipGIPPonNo,
       "voipGIPOnuNo": voipGIPOnuNo,
       "voipGIPMode": voipGIPMode,
       "voipGIPAddr": voipGIPAddr,
       "voipGIPMask": voipGIPMask,
       "voipGIPGateway": voipGIPGateway,
       "voipGIPPPPoEMode": voipGIPPPPoEMode,
       "voipGIPPPPoEUserName": voipGIPPPPoEUserName,
       "voipGIPPPPoEPasswd": voipGIPPPPoEPasswd,
       "voipGIPTagFlag": voipGIPTagFlag,
       "voipGIPCVlan": voipGIPCVlan,
       "voipGIPSVlan": voipGIPSVlan,
       "voipGIPPriority": voipGIPPriority,
       "voipPortMngTable": voipPortMngTable,
       "voipPortMngEntry": voipPortMngEntry,
       "voipMngTPonNo": voipMngTPonNo,
       "voipMngTOnuNo": voipMngTOnuNo,
       "voipMngTPotsNo": voipMngTPotsNo,
       "voipMngTPortManage": voipMngTPortManage,
       "voipIADInfoTable": voipIADInfoTable,
       "voipIADInfoEntry": voipIADInfoEntry,
       "voipIADInfoPonNo": voipIADInfoPonNo,
       "voipIADInfoOnuNo": voipIADInfoOnuNo,
       "voipIADInfoMacAddr": voipIADInfoMacAddr,
       "voipIADInfoProtocolSupport": voipIADInfoProtocolSupport,
       "voipIADInfoSoftVersion": voipIADInfoSoftVersion,
       "voipIADInfoSoftTime": voipIADInfoSoftTime,
       "voipIADInfoUserCount": voipIADInfoUserCount,
       "voipPotsStatusTable": voipPotsStatusTable,
       "voipPotsStatusEntry": voipPotsStatusEntry,
       "voipPostStatusPonNo": voipPostStatusPonNo,
       "voipPostStatusOnuNo": voipPostStatusOnuNo,
       "voipPostStatusPotsNo": voipPostStatusPotsNo,
       "voipPostStatusPortStatus": voipPostStatusPortStatus,
       "voipPostStatusServicesState": voipPostStatusServicesState,
       "voipPostStatusCodecMode": voipPostStatusCodecMode,
       "voipH248Info": voipH248Info,
       "h248IADStatusTable": h248IADStatusTable,
       "h248IADStatusEntry": h248IADStatusEntry,
       "h248IADStatusPonNo": h248IADStatusPonNo,
       "h248IADStatusOnuNo": h248IADStatusOnuNo,
       "h248IADOperStatus": h248IADOperStatus,
       "h248ParamTable": h248ParamTable,
       "h248ParamEntry": h248ParamEntry,
       "h248ParamTPonNo": h248ParamTPonNo,
       "h248ParamTOnuNo": h248ParamTOnuNo,
       "h248ParamTMGPortNo": h248ParamTMGPortNo,
       "h248ParamTMGCIP": h248ParamTMGCIP,
       "h248ParamTMgcComPortNo": h248ParamTMgcComPortNo,
       "h248ParamTBackupMGCIP": h248ParamTBackupMGCIP,
       "h248ParamTBackupMgcComPortNo": h248ParamTBackupMgcComPortNo,
       "h248ParamTActiveMGC": h248ParamTActiveMGC,
       "h248ParamTRegMode": h248ParamTRegMode,
       "h248ParamTMID": h248ParamTMID,
       "h248ParamTHBMode": h248ParamTHBMode,
       "h248ParamTHBCycle": h248ParamTHBCycle,
       "h248ParamTHBCount": h248ParamTHBCount,
       "h248UserTidTable": h248UserTidTable,
       "h248UserTidEntry": h248UserTidEntry,
       "h248UserTIDPonNo": h248UserTIDPonNo,
       "h248UserTIDOnuNo": h248UserTIDOnuNo,
       "h248UserTIDPotsNo": h248UserTIDPotsNo,
       "h248UserTIDName": h248UserTIDName,
       "h248RTPTIDTable": h248RTPTIDTable,
       "h248RTPTIDEntry": h248RTPTIDEntry,
       "h248RTPTIDPonNo": h248RTPTIDPonNo,
       "h248RTPTIDOnuNo": h248RTPTIDOnuNo,
       "h248RTPTIDNumber": h248RTPTIDNumber,
       "h248RTPTIDFirstName": h248RTPTIDFirstName,
       "voipSipInfo": voipSipInfo,
       "sipParamTable": sipParamTable,
       "sipParamEntry": sipParamEntry,
       "sipPTPonNo": sipPTPonNo,
       "sipPTOnuNo": sipPTOnuNo,
       "sipPTMGPortNo": sipPTMGPortNo,
       "sipPTProxyServIp": sipPTProxyServIp,
       "sipPTPorxyServPortNo": sipPTPorxyServPortNo,
       "sipPTBackupProxyServIp": sipPTBackupProxyServIp,
       "sipPTBackupPorxyServPortNo": sipPTBackupPorxyServPortNo,
       "sipPTActiveProxyServer": sipPTActiveProxyServer,
       "sipPTRegServIp": sipPTRegServIp,
       "sipPTRegServPortNo": sipPTRegServPortNo,
       "sipPTBackupRegServIp": sipPTBackupRegServIp,
       "sipPTBackupRegServPortNo": sipPTBackupRegServPortNo,
       "sipPTOutBoundServIp": sipPTOutBoundServIp,
       "sipPTOutBoundServPortNo": sipPTOutBoundServPortNo,
       "sipPTRegInterval": sipPTRegInterval,
       "sipPTHeartbeatEn": sipPTHeartbeatEn,
       "sipPTHeartbeatCycle": sipPTHeartbeatCycle,
       "sipPTHeartbeatCount": sipPTHeartbeatCount,
       "sipUserParamTable": sipUserParamTable,
       "sipUserParamEntry": sipUserParamEntry,
       "sipUserParamPonNo": sipUserParamPonNo,
       "sipUserParamOnuNo": sipUserParamOnuNo,
       "sipUserParamPotsNo": sipUserParamPotsNo,
       "sipUserParamUserAccount": sipUserParamUserAccount,
       "sipUserParamUserName": sipUserParamUserName,
       "sipUserParamUserPasswd": sipUserParamUserPasswd,
       "faxModemCfgTable": faxModemCfgTable,
       "faxModemCfgEntry": faxModemCfgEntry,
       "faxModemPonNo": faxModemPonNo,
       "faxModemOnuNo": faxModemOnuNo,
       "faxModemVoiceT38En": faxModemVoiceT38En,
       "faxModemVoiceCtl": faxModemVoiceCtl,
       "sipDigitMapTable": sipDigitMapTable,
       "sipDigitMapEntry": sipDigitMapEntry,
       "sipDigitMapPonNo": sipDigitMapPonNo,
       "sipDigitMapOnuNo": sipDigitMapOnuNo,
       "sipDigitMap": sipDigitMap,
       "voipGlobalCfg": voipGlobalCfg,
       "voipGlobalIpCfg": voipGlobalIpCfg,
       "voipIpPonNo": voipIpPonNo,
       "voipIpOnuNo": voipIpOnuNo,
       "voipIpMode": voipIpMode,
       "voipStaticIpAddr": voipStaticIpAddr,
       "voipStaticIpMask": voipStaticIpMask,
       "voipStaticIpGw": voipStaticIpGw,
       "voipPPPoEMode": voipPPPoEMode,
       "voipPPPOEUserName": voipPPPOEUserName,
       "voipPPPOEPasswd": voipPPPOEPasswd,
       "voipTagFlag": voipTagFlag,
       "voipCVlan": voipCVlan,
       "voipSVlan": voipSVlan,
       "voipPriority": voipPriority,
       "staticIpAction": staticIpAction,
       "voipPortMng": voipPortMng,
       "voipMngPonNo": voipMngPonNo,
       "voipMngOnuNo": voipMngOnuNo,
       "voipMngPotsNo": voipMngPotsNo,
       "voipPortManage": voipPortManage,
       "voipH248Cfg": voipH248Cfg,
       "h248ProParam": h248ProParam,
       "ipRegModeCfg": ipRegModeCfg,
       "ipRegPonNo": ipRegPonNo,
       "ipRegOnuNo": ipRegOnuNo,
       "ipRegMode": ipRegMode,
       "ipRegAction": ipRegAction,
       "nameCfg": nameCfg,
       "namePonNo": namePonNo,
       "nameOnuNo": nameOnuNo,
       "nameSel": nameSel,
       "nameValue": nameValue,
       "nameAction": nameAction,
       "heartbeatCfg": heartbeatCfg,
       "heartbeatPonNo": heartbeatPonNo,
       "heartbeatOnuNo": heartbeatOnuNo,
       "heartbeatMode": heartbeatMode,
       "heartbeatCycle": heartbeatCycle,
       "heartbeatCount": heartbeatCount,
       "heartbeatAction": heartbeatAction,
       "mgcCfg": mgcCfg,
       "mgcPonNo": mgcPonNo,
       "mgcOnuNo": mgcOnuNo,
       "mgPort": mgPort,
       "mgcIp": mgcIp,
       "mgcPort": mgcPort,
       "bakMgcIp": bakMgcIp,
       "bakMgcPort": bakMgcPort,
       "mgcAction": mgcAction,
       "h248ParamCfg": h248ParamCfg,
       "h248ParamPonNo": h248ParamPonNo,
       "h248ParamOnuNo": h248ParamOnuNo,
       "h248ParamMGPortNo": h248ParamMGPortNo,
       "h248ParamMGCIP": h248ParamMGCIP,
       "h248ParamMgcComPortNo": h248ParamMgcComPortNo,
       "h248ParamBackupMGCIP": h248ParamBackupMGCIP,
       "h248ParamBackupMgcComPortNo": h248ParamBackupMgcComPortNo,
       "h248ParamRegMode": h248ParamRegMode,
       "h248ParamMID": h248ParamMID,
       "h248ParamHBMode": h248ParamHBMode,
       "h248ParamHBCycle": h248ParamHBCycle,
       "h248ParamHBCount": h248ParamHBCount,
       "h248ParamAction": h248ParamAction,
       "h248UserTid": h248UserTid,
       "userTidPonNo": userTidPonNo,
       "userTidOnuNo": userTidOnuNo,
       "userTidPotsNo": userTidPotsNo,
       "userTid": userTid,
       "userTidAction": userTidAction,
       "h248RtpTid": h248RtpTid,
       "rtpTidPonNo": rtpTidPonNo,
       "rtpTidOnuNo": rtpTidOnuNo,
       "rtpTidNumber": rtpTidNumber,
       "rtpTidPrefix": rtpTidPrefix,
       "digitBegin0": digitBegin0,
       "digitBegin1": digitBegin1,
       "rtpTidMode": rtpTidMode,
       "digitLength": digitLength,
       "rtpTidAction": rtpTidAction,
       "voipSipCfg": voipSipCfg,
       "sipProParam": sipProParam,
       "hbeatCfg": hbeatCfg,
       "hbeatPonNo": hbeatPonNo,
       "hbeatOnuNo": hbeatOnuNo,
       "hbeartEn": hbeartEn,
       "hbeatCycle": hbeatCycle,
       "hbeatCount": hbeatCount,
       "regInterVal": regInterVal,
       "hbeatAction": hbeatAction,
       "servIpCfg": servIpCfg,
       "servIpPonNo": servIpPonNo,
       "servIpOnuNo": servIpOnuNo,
       "mgPortVal": mgPortVal,
       "servIpVal": servIpVal,
       "servPortVal": servPortVal,
       "servIpAction": servIpAction,
       "proxyServCfg": proxyServCfg,
       "proxySrvPonNo": proxySrvPonNo,
       "proxySrvOnuNo": proxySrvOnuNo,
       "proxySrv": proxySrv,
       "proxySrvPort": proxySrvPort,
       "bakProxySrv": bakProxySrv,
       "bakProxySrvPort": bakProxySrvPort,
       "proxySrvAction": proxySrvAction,
       "regServCfg": regServCfg,
       "regSrvPonNo": regSrvPonNo,
       "regSrvOnuNo": regSrvOnuNo,
       "regSrv": regSrv,
       "regSrvPort": regSrvPort,
       "bakRegSrv": bakRegSrv,
       "bakRegSrvPort": bakRegSrvPort,
       "regSrvAction": regSrvAction,
       "sipParamCfg": sipParamCfg,
       "sipParamPonNo": sipParamPonNo,
       "sipParamOnuNo": sipParamOnuNo,
       "sipParamMGPortNo": sipParamMGPortNo,
       "sipParamSipProxyServIp": sipParamSipProxyServIp,
       "sipParamSipProxyServPortNo": sipParamSipProxyServPortNo,
       "sipParamBackupSipProxyServIp": sipParamBackupSipProxyServIp,
       "sipParamBackupSipProxyServPortNo": sipParamBackupSipProxyServPortNo,
       "sipParamSipRegServIp": sipParamSipRegServIp,
       "sipParamSipRegServPortNo": sipParamSipRegServPortNo,
       "sipParamBackupSipRegServIp": sipParamBackupSipRegServIp,
       "sipParamBackupSipRegServPortNo": sipParamBackupSipRegServPortNo,
       "sipParamOutBoundServIp": sipParamOutBoundServIp,
       "sipParamOutBoundServPortNo": sipParamOutBoundServPortNo,
       "sipParamRegInterval": sipParamRegInterval,
       "sipParamHeartbeatEn": sipParamHeartbeatEn,
       "sipParamHeartbeatCycle": sipParamHeartbeatCycle,
       "sipParamHeartbeatCount": sipParamHeartbeatCount,
       "sipParamAction": sipParamAction,
       "sipUserParam": sipUserParam,
       "sipUserPonNo": sipUserPonNo,
       "sipUserOnuNo": sipUserOnuNo,
       "sipUserPotsNo": sipUserPotsNo,
       "sipUserAccount": sipUserAccount,
       "sipUserName": sipUserName,
       "sipUserPw": sipUserPw,
       "sipUserAction": sipUserAction,
       "faxModemCfg": faxModemCfg,
       "faxPonNo": faxPonNo,
       "faxOnuNo": faxOnuNo,
       "t38En": t38En,
       "control": control,
       "faxModemAction": faxModemAction,
       "iadOperCfg": iadOperCfg,
       "iadOperPonNo": iadOperPonNo,
       "iadOperOnuNo": iadOperOnuNo,
       "iadOperation": iadOperation,
       "iadOperAction": iadOperAction,
       "sipDigitCfg": sipDigitCfg,
       "digitPonNo": digitPonNo,
       "digitOnuNo": digitOnuNo,
       "digBlockNum": digBlockNum,
       "digMapId": digMapId,
       "digitMap": digitMap,
       "sipDigitAction": sipDigitAction,
       "onuAlarmShow": onuAlarmShow,
       "onuAlarmPonTable": onuAlarmPonTable,
       "onuAlarmPonEntry": onuAlarmPonEntry,
       "onuAlarmPonIndex": onuAlarmPonIndex,
       "onuAlarmPonOnuIndex": onuAlarmPonOnuIndex,
       "onuAlarmPonType": onuAlarmPonType,
       "onuAlarmPonEnable": onuAlarmPonEnable,
       "onuAlarmPonAlarmThr": onuAlarmPonAlarmThr,
       "onuAlarmPonClearThr": onuAlarmPonClearThr,
       "onuAlarmPortTable": onuAlarmPortTable,
       "onuAlarmPortEntry": onuAlarmPortEntry,
       "onuAlarmPortPon": onuAlarmPortPon,
       "onuAlarmPortOnu": onuAlarmPortOnu,
       "onuAlarmPortPort": onuAlarmPortPort,
       "onuAlarmPortAutoEnable": onuAlarmPortAutoEnable,
       "onuAlarmPortLosEnable": onuAlarmPortLosEnable,
       "onuAlarmPortFailureEnable": onuAlarmPortFailureEnable,
       "onuAlarmPortLoopbackEnable": onuAlarmPortLoopbackEnable,
       "onuAlarmPortCongestEnable": onuAlarmPortCongestEnable,
       "onuProfileCfg": onuProfileCfg,
       "profileEdit": profileEdit,
       "profileTpye": profileTpye,
       "profileId": profileId,
       "profileAction": profileAction,
       "dbaProfileEdit": dbaProfileEdit,
       "dbaProfileNo": dbaProfileNo,
       "upstreamCfg": upstreamCfg,
       "upstreamFir": upstreamFir,
       "upstreamCir": upstreamCir,
       "upstreamPir": upstreamPir,
       "upstreamWeight": upstreamWeight,
       "upstreamAction": upstreamAction,
       "dnstreamCfg": dnstreamCfg,
       "dnstreamPir": dnstreamPir,
       "dnstreamWeight": dnstreamWeight,
       "dnstreamAction": dnstreamAction,
       "srvProfileEdit": srvProfileEdit,
       "srvProfileNo": srvProfileNo,
       "onuLanCountConfig": onuLanCountConfig,
       "lanCount": lanCount,
       "lanCountAction": lanCountAction,
       "onuFastLeaveConfig": onuFastLeaveConfig,
       "ctcFastLeave": ctcFastLeave,
       "ctcFastLeaveAction": ctcFastLeaveAction,
       "onuFecModeConfig": onuFecModeConfig,
       "ctcFecMode": ctcFecMode,
       "ctcFecModeAction": ctcFecModeAction,
       "ctcMcModeConfig": ctcMcModeConfig,
       "ctcMcMode": ctcMcMode,
       "ctcMcModeAction": ctcMcModeAction,
       "ctcMultiLlidConfig": ctcMultiLlidConfig,
       "ctcMultiLlid": ctcMultiLlid,
       "ctcMultiLlidAction": ctcMultiLlidAction,
       "ctcActivePonConfig": ctcActivePonConfig,
       "ctcActivePon": ctcActivePon,
       "ctcActivePonAction": ctcActivePonAction,
       "ctcHoldoverConfig": ctcHoldoverConfig,
       "ctcHoldover": ctcHoldover,
       "ctcHoldoverAction": ctcHoldoverAction,
       "onuMgmtIpCfg": onuMgmtIpCfg,
       "onuMgmtIpAddr": onuMgmtIpAddr,
       "onuMgmtIpMask": onuMgmtIpMask,
       "onuMgmtIpGw": onuMgmtIpGw,
       "onuMgmtCvlan": onuMgmtCvlan,
       "onuMgmtSvlan": onuMgmtSvlan,
       "onuMgmtPri": onuMgmtPri,
       "onuMgmtAction": onuMgmtAction,
       "onuSnmpProParam": onuSnmpProParam,
       "ctcSnmpHost": ctcSnmpHost,
       "ctcSnmpTrapPort": ctcSnmpTrapPort,
       "ctcSnmpPort": ctcSnmpPort,
       "ctcCommunityName": ctcCommunityName,
       "ctcRoCommunityName": ctcRoCommunityName,
       "ctcRwCommunityName": ctcRwCommunityName,
       "ctcSnmpAction": ctcSnmpAction,
       "onuSlaConfig": onuSlaConfig,
       "ctcSlaEn": ctcSlaEn,
       "ctcSlaMode": ctcSlaMode,
       "ctcQueueId": ctcQueueId,
       "ctcQueweight": ctcQueweight,
       "ctcGuaranteedBandwidth": ctcGuaranteedBandwidth,
       "ctcBesteffortBandwith": ctcBesteffortBandwith,
       "ctcSlaAction": ctcSlaAction,
       "onuCtcPause": onuCtcPause,
       "pauseEthNo": pauseEthNo,
       "ctcPauseEn": ctcPauseEn,
       "ctcPauseAction": ctcPauseAction,
       "onuCtcLoopdetect": onuCtcLoopdetect,
       "loopEthNo": loopEthNo,
       "ctcLoopdetectEn": ctcLoopdetectEn,
       "ctcLoopdetectAction": ctcLoopdetectAction,
       "onuMcTagstrip": onuMcTagstrip,
       "tagstripEthNo": tagstripEthNo,
       "ctcTagstripEn": ctcTagstripEn,
       "tagstripAction": tagstripAction,
       "onuMcVlanTrans": onuMcVlanTrans,
       "mcVlanTransEthNo": mcVlanTransEthNo,
       "ctcMcTransVlanStr": ctcMcTransVlanStr,
       "ctcMcTransAction": ctcMcTransAction,
       "onuPortPhyAdmin": onuPortPhyAdmin,
       "adminEthNo": adminEthNo,
       "ctcPortAdmin": ctcPortAdmin,
       "ctcPortAdminAction": ctcPortAdminAction,
       "onuPortAutoNegConfig": onuPortAutoNegConfig,
       "autoNegEthNo": autoNegEthNo,
       "ctcAutoNeg": ctcAutoNeg,
       "ctcAutoNegAction": ctcAutoNegAction,
       "onuPortMaxIgmpGrp": onuPortMaxIgmpGrp,
       "grpEthNo": grpEthNo,
       "ctcMcMaxGrp": ctcMcMaxGrp,
       "mcMaxGrpAction": mcMaxGrpAction,
       "onuPortUpLimit": onuPortUpLimit,
       "upLimitEthNo": upLimitEthNo,
       "ctcUpLimitCir": ctcUpLimitCir,
       "ctcUpLimitCbs": ctcUpLimitCbs,
       "ctcUpLimitEbs": ctcUpLimitEbs,
       "ctcUpLimitAction": ctcUpLimitAction,
       "onuPortDownLimit": onuPortDownLimit,
       "downLimitEthNo": downLimitEthNo,
       "ctcDownLimitCir": ctcDownLimitCir,
       "ctcDownLimitPir": ctcDownLimitPir,
       "ctcDownLimitAction": ctcDownLimitAction,
       "onuPortVlanConfig": onuPortVlanConfig,
       "portVlanMode": portVlanMode,
       "vlanModeEthNo": vlanModeEthNo,
       "ctcVlanMode": ctcVlanMode,
       "vlanModeAction": vlanModeAction,
       "portVlanPvid": portVlanPvid,
       "pvidEthNo": pvidEthNo,
       "ctcPvidVal": ctcPvidVal,
       "ctcTpidVal": ctcTpidVal,
       "ctcPvidAction": ctcPvidAction,
       "ctcPvidPriVal": ctcPvidPriVal,
       "portVlanTranslate": portVlanTranslate,
       "vlanTransEthNo": vlanTransEthNo,
       "ctcTransVlanStr": ctcTransVlanStr,
       "ctcTransAction": ctcTransAction,
       "portVlanTrunk": portVlanTrunk,
       "trunkEthNo": trunkEthNo,
       "ctcTrunkVidStr": ctcTrunkVidStr,
       "ctcTrunkVidAction": ctcTrunkVidAction,
       "portVlanAgg": portVlanAgg,
       "aggEthNo": aggEthNo,
       "ctcAggNewVlan": ctcAggNewVlan,
       "ctcAggVlanStr": ctcAggVlanStr,
       "ctcAggAction": ctcAggAction,
       "onuIgmpVlanConfig": onuIgmpVlanConfig,
       "mcVlanEthNo": mcVlanEthNo,
       "ctcMcVlanStr": ctcMcVlanStr,
       "ctcMcValnAction": ctcMcValnAction,
       "onuClassifyConfig": onuClassifyConfig,
       "onuClassifyAdd": onuClassifyAdd,
       "cfyEthNo": cfyEthNo,
       "ctcPrecedence": ctcPrecedence,
       "ctcPri": ctcPri,
       "ctcDstMacEqualSel": ctcDstMacEqualSel,
       "ctcDstMacValue": ctcDstMacValue,
       "ctcSrcMacEqualSel": ctcSrcMacEqualSel,
       "ctcSrcMacValue": ctcSrcMacValue,
       "ctcVlanEqualSel": ctcVlanEqualSel,
       "ctcVlanValue": ctcVlanValue,
       "ctcCosEqualSel": ctcCosEqualSel,
       "ctcCosValue": ctcCosValue,
       "ctcEthTypeEqualSel": ctcEthTypeEqualSel,
       "ctcEthTypeValue": ctcEthTypeValue,
       "ctcSrcIpEqualSel": ctcSrcIpEqualSel,
       "ctcSrcIpValue": ctcSrcIpValue,
       "ctcDestIpEqualSel": ctcDestIpEqualSel,
       "ctcDestIpValue": ctcDestIpValue,
       "ctcProEqualSel": ctcProEqualSel,
       "ctcProValue": ctcProValue,
       "ctcTosDscpEuqalSel": ctcTosDscpEuqalSel,
       "ctcTosDscpValue": ctcTosDscpValue,
       "ctcSrcPortEqualSel": ctcSrcPortEqualSel,
       "ctcSrcPortValue": ctcSrcPortValue,
       "ctcDestPortEqualSel": ctcDestPortEqualSel,
       "ctcDestPortValue": ctcDestPortValue,
       "ctcCfyAction": ctcCfyAction,
       "ctcQueue": ctcQueue,
       "onuClassifyDel": onuClassifyDel,
       "cfyDelEthNo": cfyDelEthNo,
       "ctcDelPrecedence": ctcDelPrecedence,
       "ctcCfyDelAction": ctcCfyDelAction,
       "onuMacAgetime": onuMacAgetime,
       "ctcAgetime": ctcAgetime,
       "agetimeAction": agetimeAction,
       "onuPonProtect": onuPonProtect,
       "ctcLosOptical": ctcLosOptical,
       "ctcLosMpcp": ctcLosMpcp,
       "ctcPonProtectAction": ctcPonProtectAction,
       "onuPowerSaveConfig": onuPowerSaveConfig,
       "ctcEarlyWakeupEn": ctcEarlyWakeupEn,
       "ctcSleepDurationMax": ctcSleepDurationMax,
       "onuPowerSaveAction": onuPowerSaveAction,
       "onuPwSavParameter": onuPwSavParameter,
       "ctcSleepDuration": ctcSleepDuration,
       "ctcWakeDuration": ctcWakeDuration,
       "ctcSleepFlag": ctcSleepFlag,
       "ctcSleepMode": ctcSleepMode,
       "onuPwSavAction": onuPwSavAction,
       "onuDisableLoopConfig": onuDisableLoopConfig,
       "disLoopEthNo": disLoopEthNo,
       "disableLoopEn": disableLoopEn,
       "disLoopEthAction": disLoopEthAction,
       "onuPortStatConfig": onuPortStatConfig,
       "portStatEthNo": portStatEthNo,
       "ctcMonitorStatus": ctcMonitorStatus,
       "ctcStatCycle": ctcStatCycle,
       "portStatAction": portStatAction,
       "onuPortStatClear": onuPortStatClear,
       "ctcClearEthNo": ctcClearEthNo,
       "ctcClearAction": ctcClearAction,
       "onuIgmpAdmin": onuIgmpAdmin,
       "igmpAdmin": igmpAdmin,
       "igmpAdminAction": igmpAdminAction,
       "onuCatvEnable": onuCatvEnable,
       "catvEnable": catvEnable,
       "catvEnableAction": catvEnableAction,
       "onuCtcoamSkip": onuCtcoamSkip,
       "ctcoamSkip": ctcoamSkip,
       "ctcoamSkipAction": ctcoamSkipAction,
       "onuWifiSwich": onuWifiSwich,
       "wlanApmoduleEnable": wlanApmoduleEnable,
       "wlanCountry": wlanCountry,
       "wlanChannel": wlanChannel,
       "wlanStandard": wlanStandard,
       "wlanPower": wlanPower,
       "wlanSwichAction": wlanSwichAction,
       "wlanChannelWidth": wlanChannelWidth,
       "onuWifiSsid": onuWifiSsid,
       "ssidId": ssidId,
       "ssidName": ssidName,
       "ssidEnable": ssidEnable,
       "ssidHide": ssidHide,
       "ssidAuthMode": ssidAuthMode,
       "ssidEncrypTpye": ssidEncrypTpye,
       "ssidPresharedKey": ssidPresharedKey,
       "ssidRekeyInterval": ssidRekeyInterval,
       "ssidRadiusServIpType": ssidRadiusServIpType,
       "ssidRadiusSerIp": ssidRadiusSerIp,
       "ssidRadiusServIpPrefixLen": ssidRadiusServIpPrefixLen,
       "ssidRadiusPort": ssidRadiusPort,
       "ssidRadiusKey": ssidRadiusKey,
       "ssidWepEncryptionLevel": ssidWepEncryptionLevel,
       "ssidWepKeyIndex": ssidWepKeyIndex,
       "ssidWepKey1": ssidWepKey1,
       "ssidWepKey2": ssidWepKey2,
       "ssidWepKey3": ssidWepKey3,
       "ssidWepKey4": ssidWepKey4,
       "ssidAction": ssidAction,
       "onuWanConn": onuWanConn,
       "wanConnAdd": wanConnAdd,
       "connType": connType,
       "connAddAction": connAddAction,
       "wanConnDelete": wanConnDelete,
       "connIndexD": connIndexD,
       "connDeleteAction": connDeleteAction,
       "wanConnCfg": wanConnCfg,
       "connIndex": connIndex,
       "connBindLan": connBindLan,
       "connBindSsid": connBindSsid,
       "wanMode": wanMode,
       "connTypeCfg": connTypeCfg,
       "connVlanId": connVlanId,
       "connCos": connCos,
       "connNatEnable": connNatEnable,
       "connModeCfg": connModeCfg,
       "connIpAddress": connIpAddress,
       "connIpMask": connIpMask,
       "connGateway": connGateway,
       "connMasterDns": connMasterDns,
       "connSlaveDns": connSlaveDns,
       "connPppoeProxy": connPppoeProxy,
       "connPppoeUsername": connPppoeUsername,
       "connPppoePassword": connPppoePassword,
       "connPppoeSerName": connPppoeSerName,
       "connPppoeMode": connPppoeMode,
       "connQosEnable": connQosEnable,
       "connVlanMode": connVlanMode,
       "connTranslationEnable": connTranslationEnable,
       "connTranslationVlan": connTranslationVlan,
       "connTranslationCos": connTranslationCos,
       "connQinqEnable": connQinqEnable,
       "connQinqTpid": connQinqTpid,
       "connWanSvlan": connWanSvlan,
       "connSvlanCos": connSvlanCos,
       "connCfgAction": connCfgAction,
       "connRouteMtu": connRouteMtu,
       "wanConnCommit": wanConnCommit,
       "connCommitAction": connCommitAction,
       "onuPortMacLimit": onuPortMacLimit,
       "macLimitEthNo": macLimitEthNo,
       "macLimit": macLimit,
       "macLimitAction": macLimitAction,
       "onuPortPkgSuppress": onuPortPkgSuppress,
       "pkgSuppressEthNo": pkgSuppressEthNo,
       "pkgBroadcast": pkgBroadcast,
       "pkgMulticast": pkgMulticast,
       "pkgUnknown": pkgUnknown,
       "pkgSuppressAction": pkgSuppressAction,
       "onuPortIsolateEnable": onuPortIsolateEnable,
       "portIsolateEnable": portIsolateEnable,
       "portIsolateAction": portIsolateAction,
       "onuPortModeControl": onuPortModeControl,
       "modeControlEthNo": modeControlEthNo,
       "modeControl": modeControl,
       "modeControlAction": modeControlAction,
       "onuDhcpServer": onuDhcpServer,
       "dhcpLanip": dhcpLanip,
       "dhcplanMask": dhcplanMask,
       "dhcpServerEnable": dhcpServerEnable,
       "dhcpLease": dhcpLease,
       "dhcpBeginIp": dhcpBeginIp,
       "dhcpEndIp": dhcpEndIp,
       "dhcpPoolType": dhcpPoolType,
       "dhcpMasterDns": dhcpMasterDns,
       "dhcpSlaveDns": dhcpSlaveDns,
       "dhcpGateway": dhcpGateway,
       "dhcpRelayIp": dhcpRelayIp,
       "dhcpAction": dhcpAction,
       "onuDhcpOption82": onuDhcpOption82,
       "dhcpOption82Enable": dhcpOption82Enable,
       "dhcpOption82Action": dhcpOption82Action,
       "onuPPPoE": onuPPPoE,
       "pppoeEnable": pppoeEnable,
       "pppoeAction": pppoeAction,
       "onuDhcpV6": onuDhcpV6,
       "dhcpV6Option18Enable": dhcpV6Option18Enable,
       "dhcpV6Option37Enable": dhcpV6Option37Enable,
       "dhcpV6Action": dhcpV6Action,
       "onuSecurity": onuSecurity,
       "onuUsername": onuUsername,
       "adminControl": adminControl,
       "adminName": adminName,
       "adminPwd": adminPwd,
       "userControl": userControl,
       "username": username,
       "userPwd": userPwd,
       "controlAction": controlAction,
       "onuFirewall": onuFirewall,
       "level": level,
       "onuAclCommit": onuAclCommit,
       "onuAcl": onuAcl,
       "aclProtocolType": aclProtocolType,
       "aclControl": aclControl,
       "aclLanControl": aclLanControl,
       "aclWanControl": aclWanControl,
       "aclIPv4Control": aclIPv4Control,
       "aclIPv4Addr": aclIPv4Addr,
       "aclIPv4Mask": aclIPv4Mask,
       "aclIPv6Control": aclIPv6Control,
       "aclIPv6Address": aclIPv6Address,
       "aclIPv6Prefix": aclIPv6Prefix,
       "aclProtocolPort": aclProtocolPort,
       "aclAction": aclAction,
       "onuWifiSwitch1": onuWifiSwitch1,
       "wifiApmoduleEnable": wifiApmoduleEnable,
       "wifiCountry": wifiCountry,
       "wifiChannel": wifiChannel,
       "wifiStandard": wifiStandard,
       "wifiPower": wifiPower,
       "wifiSwitchAction": wifiSwitchAction,
       "wifiChannelWidth": wifiChannelWidth,
       "wifiEasyMeshStatus": wifiEasyMeshStatus,
       "onuDhcpv6Server": onuDhcpv6Server,
       "dhcpv6Lanip": dhcpv6Lanip,
       "dhcpv6lanPrefixlen": dhcpv6lanPrefixlen,
       "dhcpv6PrefixMode": dhcpv6PrefixMode,
       "dhcpv6PrefixModeIp": dhcpv6PrefixModeIp,
       "dhcpv6ServerEnable": dhcpv6ServerEnable,
       "dhcpv6Preference": dhcpv6Preference,
       "dhcpv6BeginIp": dhcpv6BeginIp,
       "dhcpv6EndIp": dhcpv6EndIp,
       "dhcpv6PoolType": dhcpv6PoolType,
       "dhcpv6MasterDns": dhcpv6MasterDns,
       "dhcpv6SlaveDns": dhcpv6SlaveDns,
       "dhcpv6Gateway": dhcpv6Gateway,
       "dhcpv6RelayIp": dhcpv6RelayIp,
       "dhcpv6RA": dhcpv6RA,
       "dhcpv6RAManage": dhcpv6RAManage,
       "dhcpv6RAOther": dhcpv6RAOther,
       "dhcpv6RAMaxInterval": dhcpv6RAMaxInterval,
       "dhcpv6RAMinInterval": dhcpv6RAMinInterval,
       "dhcpv6Action": dhcpv6Action,
       "dhcpv6Valid": dhcpv6Valid,
       "dhcpv6DnsMode": dhcpv6DnsMode,
       "onuWanConnV6": onuWanConnV6,
       "v6WanConnAdd": v6WanConnAdd,
       "v6connType": v6connType,
       "v6connAddAction": v6connAddAction,
       "v6WanConnDelete": v6WanConnDelete,
       "v6connIndexD": v6connIndexD,
       "v6connDeleteAction": v6connDeleteAction,
       "v6WanConnCfg": v6WanConnCfg,
       "v6ConnIndex": v6ConnIndex,
       "v6ConnBindLan": v6ConnBindLan,
       "v6ConnBindSsid": v6ConnBindSsid,
       "v6WanMode": v6WanMode,
       "v6ConnTypeCfg": v6ConnTypeCfg,
       "v6ConnVlanId": v6ConnVlanId,
       "v6ConnCos": v6ConnCos,
       "v6ConnIpProtocol": v6ConnIpProtocol,
       "v6ConnModeCfg": v6ConnModeCfg,
       "v6ConnIpAddressIpv4": v6ConnIpAddressIpv4,
       "v6ConnIpNetMaskIpv4": v6ConnIpNetMaskIpv4,
       "v6ConnGatewayIpv4": v6ConnGatewayIpv4,
       "v6ConnDnsEnableIpv4": v6ConnDnsEnableIpv4,
       "v6ConnMasterDnsIpv4": v6ConnMasterDnsIpv4,
       "v6ConnSlaveDnsIpv4": v6ConnSlaveDnsIpv4,
       "v6ConnNatEnable": v6ConnNatEnable,
       "v6ConnAddressIpv6": v6ConnAddressIpv6,
       "v6ConnPrefixLenIpv6": v6ConnPrefixLenIpv6,
       "v6ConnGatewayIpv6": v6ConnGatewayIpv6,
       "v6ConnDnsEnableIpv6": v6ConnDnsEnableIpv6,
       "v6ConnMasterDnsIpv6": v6ConnMasterDnsIpv6,
       "v6ConnSlaveDnsIpv6": v6ConnSlaveDnsIpv6,
       "v6ConnSlaac": v6ConnSlaac,
       "v6ConnPppoeProxy": v6ConnPppoeProxy,
       "v6ConnPppoeUsername": v6ConnPppoeUsername,
       "v6ConnPppoePassword": v6ConnPppoePassword,
       "v6ConnPppoeSerName": v6ConnPppoeSerName,
       "v6ConnPppoeMode": v6ConnPppoeMode,
       "v6ConnDhcpv6ClientAddress": v6ConnDhcpv6ClientAddress,
       "v6ConnDhcpv6ClientPrefix": v6ConnDhcpv6ClientPrefix,
       "v6ConnDsLiteEnable": v6ConnDsLiteEnable,
       "v6ConnDsLiteAftrMode": v6ConnDsLiteAftrMode,
       "v6ConnDsLiteAddressType": v6ConnDsLiteAddressType,
       "v6ConnDsLiteAddress": v6ConnDsLiteAddress,
       "v6ConnQosEnable": v6ConnQosEnable,
       "v6ConnVlanMode": v6ConnVlanMode,
       "v6ConnTranslationEnable": v6ConnTranslationEnable,
       "v6ConnTranslationVlan": v6ConnTranslationVlan,
       "v6ConnTranslationCos": v6ConnTranslationCos,
       "v6ConnQinqEnable": v6ConnQinqEnable,
       "v6ConnQinqTpid": v6ConnQinqTpid,
       "v6ConnWanSvlanId": v6ConnWanSvlanId,
       "v6ConnSvlanCos": v6ConnSvlanCos,
       "v6ConnRouteMtu": v6ConnRouteMtu,
       "v6ConnCfgAction": v6ConnCfgAction,
       "v6WanConnCommit": v6WanConnCommit,
       "v6ConnCommitAction": v6ConnCommitAction,
       "onuTr069": onuTr069,
       "onuTr069Manage": onuTr069Manage,
       "mngStatus": mngStatus,
       "mngAcsAddress": mngAcsAddress,
       "mngAcsUsername": mngAcsUsername,
       "mngAcsPassword": mngAcsPassword,
       "mngCertificateEn": mngCertificateEn,
       "mngInformEn": mngInformEn,
       "mngInformIntervalTime": mngInformIntervalTime,
       "mngRevConnUsername": mngRevConnUsername,
       "mngRevConnPassword": mngRevConnPassword,
       "mngAction": mngAction,
       "onuTr069Stun": onuTr069Stun,
       "stunStatus": stunStatus,
       "stunServerAddress": stunServerAddress,
       "stunServerPort": stunServerPort,
       "stunServerUsername": stunServerUsername,
       "stunServerPassword": stunServerPassword,
       "stunAction": stunAction,
       "voipProfileEdit": voipProfileEdit,
       "voipProfileNo": voipProfileNo,
       "onuPotsCountConfig": onuPotsCountConfig,
       "potsCount": potsCount,
       "potsCountAction": potsCountAction,
       "voipGlobalConfig": voipGlobalConfig,
       "ctcIpMode": ctcIpMode,
       "ctcStaticIpAddr": ctcStaticIpAddr,
       "ctcStaticIpMask": ctcStaticIpMask,
       "ctcStaticIpGw": ctcStaticIpGw,
       "ctcPppoeMode": ctcPppoeMode,
       "ctcPppoeUsr": ctcPppoeUsr,
       "ctcPppoePw": ctcPppoePw,
       "voipVlanMode": voipVlanMode,
       "voipCvlan": voipCvlan,
       "voipSvlan": voipSvlan,
       "voipPri": voipPri,
       "ctcVoipGlobalAction": ctcVoipGlobalAction,
       "voipH248Config": voipH248Config,
       "h248ProParamConfig": h248ProParamConfig,
       "ctcMgPort": ctcMgPort,
       "ctcMgcIp": ctcMgcIp,
       "ctcMgComPort": ctcMgComPort,
       "ctcBakMgcIp": ctcBakMgcIp,
       "ctcBakMgcPort": ctcBakMgcPort,
       "ctcRegMode": ctcRegMode,
       "ctcMID": ctcMID,
       "ctcHeartbeatMode": ctcHeartbeatMode,
       "ctcHeartbeatCycle": ctcHeartbeatCycle,
       "ctcHeartbeatCount": ctcHeartbeatCount,
       "ctcH248ProParamAction": ctcH248ProParamAction,
       "h248RtpTidConfig": h248RtpTidConfig,
       "ctcRtpTidNumber": ctcRtpTidNumber,
       "ctcRtpTidPrefix": ctcRtpTidPrefix,
       "ctcDigitBegin0": ctcDigitBegin0,
       "ctcDigitBegin1": ctcDigitBegin1,
       "ctcRtpTidMode": ctcRtpTidMode,
       "ctcDigitLength": ctcDigitLength,
       "ctcRtpTidAction": ctcRtpTidAction,
       "h248UserTidConfig": h248UserTidConfig,
       "ctcUserTidPotsNo": ctcUserTidPotsNo,
       "ctcUserTid": ctcUserTid,
       "ctcUserTidAction": ctcUserTidAction,
       "voipSipConfig": voipSipConfig,
       "sipProParamConfig": sipProParamConfig,
       "ctcMgPortVal": ctcMgPortVal,
       "ctcProxySrvIp": ctcProxySrvIp,
       "ctcProxySrvPort": ctcProxySrvPort,
       "ctcBakProxySrvIp": ctcBakProxySrvIp,
       "ctcBakProxySrvPort": ctcBakProxySrvPort,
       "ctcRegSrvIp": ctcRegSrvIp,
       "ctcRegSrvPort": ctcRegSrvPort,
       "ctcBakRegSrvIp": ctcBakRegSrvIp,
       "ctcBakRegSrvPort": ctcBakRegSrvPort,
       "ctcOutBoundServIp": ctcOutBoundServIp,
       "ctcOutBoundServPort": ctcOutBoundServPort,
       "ctcRegInterVal": ctcRegInterVal,
       "ctcHbeartEn": ctcHbeartEn,
       "ctcHbeatCycle": ctcHbeatCycle,
       "ctcHbeatCount": ctcHbeatCount,
       "ctcRegSrvAction": ctcRegSrvAction,
       "sipUserParamConfig": sipUserParamConfig,
       "ctcUserPotsNo": ctcUserPotsNo,
       "ctcUserAccount": ctcUserAccount,
       "ctcUserName": ctcUserName,
       "ctcUserPw": ctcUserPw,
       "ctcUserAction": ctcUserAction,
       "sipDigitConfig": sipDigitConfig,
       "ctcDigitNum": ctcDigitNum,
       "ctcDigitNumBlock": ctcDigitNumBlock,
       "ctcDigitMap": ctcDigitMap,
       "ctcDigitMapAction": ctcDigitMapAction,
       "voipFaxModemCfg": voipFaxModemCfg,
       "ctcT38En": ctcT38En,
       "ctcControl": ctcControl,
       "ctcFaxModemAction": ctcFaxModemAction,
       "voipPotsManage": voipPotsManage,
       "ctcPotsNo": ctcPotsNo,
       "ctcPotsEnable": ctcPotsEnable,
       "ctcPotsMgAction": ctcPotsMgAction,
       "voipTimerConfig": voipTimerConfig,
       "maxWaitTime": maxWaitTime,
       "startTimer": startTimer,
       "longTimer": longTimer,
       "shortTimer": shortTimer,
       "digitmapNotify": digitmapNotify,
       "voipTimerAction": voipTimerAction,
       "voipPotsParameter": voipPotsParameter,
       "priPotsPtNo": priPotsPtNo,
       "priVad": priVad,
       "priEchoCancel": priEchoCancel,
       "priInputGain": priInputGain,
       "priOutputGain": priOutputGain,
       "priDtmfMode": priDtmfMode,
       "priPotsParameterAction": priPotsParameterAction,
       "onuVoipParam": onuVoipParam,
       "ipMode": ipMode,
       "ip": ip,
       "mask": mask,
       "gw": gw,
       "rtpIp": rtpIp,
       "rtpMask": rtpMask,
       "rtpGw": rtpGw,
       "dnsMaster": dnsMaster,
       "dnsSlave": dnsSlave,
       "dhcpOption60Enable": dhcpOption60Enable,
       "dhcpOption60Base": dhcpOption60Base,
       "dhcpOption60Value": dhcpOption60Value,
       "pppoeMode": pppoeMode,
       "pppoeUsername": pppoeUsername,
       "pppoePassword": pppoePassword,
       "svlanTpid": svlanTpid,
       "svlanId": svlanId,
       "svlanCos": svlanCos,
       "cvlanTpid": cvlanTpid,
       "cvlanId": cvlanId,
       "cvlanCos": cvlanCos,
       "rtpSVlanTpid": rtpSVlanTpid,
       "rtpSVlanId": rtpSVlanId,
       "rtpSVlanCos": rtpSVlanCos,
       "rtpCVlanTpid": rtpCVlanTpid,
       "rtpCVlanId": rtpCVlanId,
       "rtpCVlanCos": rtpCVlanCos,
       "voipParamAction": voipParamAction,
       "onuSipParam": onuSipParam,
       "proxyServName": proxyServName,
       "proxyServPort": proxyServPort,
       "bakProxyServName": bakProxyServName,
       "bakProxyServPort": bakProxyServPort,
       "regServName": regServName,
       "regServPort": regServPort,
       "bakRegServName": bakRegServName,
       "bakRegServPort": bakRegServPort,
       "outBndServName": outBndServName,
       "outBndServPort": outBndServPort,
       "sipParamMgPort": sipParamMgPort,
       "regInterval": regInterval,
       "hBeatCfg": hBeatCfg,
       "hBeatCycle": hBeatCycle,
       "hBeatCount": hBeatCount,
       "sipGloParamAction": sipGloParamAction,
       "alarmProfileEdit": alarmProfileEdit,
       "alarmProfileNo": alarmProfileNo,
       "alarmOnuConfig": alarmOnuConfig,
       "alarmOnuTpye": alarmOnuTpye,
       "alarmOnuEn": alarmOnuEn,
       "alarmOnuAction": alarmOnuAction,
       "onuTempAlarm": onuTempAlarm,
       "onuTempAlarmType": onuTempAlarmType,
       "onuTempAlarmEn": onuTempAlarmEn,
       "onuTempAlarmThld": onuTempAlarmThld,
       "onuTempClearThld": onuTempClearThld,
       "onuTempAlarmAction": onuTempAlarmAction,
       "onuVccLowAlarm": onuVccLowAlarm,
       "onuVccAlarmEn": onuVccAlarmEn,
       "onuVccAlarmThld": onuVccAlarmThld,
       "onuVccClearThld": onuVccClearThld,
       "onuVccAlarmAction": onuVccAlarmAction,
       "ponVccAlarm": ponVccAlarm,
       "ponVccAlarmType": ponVccAlarmType,
       "ponVccAlarmTypeEn": ponVccAlarmTypeEn,
       "ponVccAlarmThld": ponVccAlarmThld,
       "ponVccClearThld": ponVccClearThld,
       "ponVccAlarmAction": ponVccAlarmAction,
       "ponBiasAlarm": ponBiasAlarm,
       "ponBiasAlarmType": ponBiasAlarmType,
       "ponBiasAlarmTypeEn": ponBiasAlarmTypeEn,
       "ponBiasAlarmThld": ponBiasAlarmThld,
       "ponBiasClearThld": ponBiasClearThld,
       "ponBiasAlarmAction": ponBiasAlarmAction,
       "ponPowerAlarm": ponPowerAlarm,
       "ponPowerAlarmType": ponPowerAlarmType,
       "ponPowerAlarmTypeEn": ponPowerAlarmTypeEn,
       "ponPowerAlarmThld": ponPowerAlarmThld,
       "ponPowerClearThld": ponPowerClearThld,
       "ponPowerAlarmAction": ponPowerAlarmAction,
       "ponTempAlarm": ponTempAlarm,
       "ponTempAlarmType": ponTempAlarmType,
       "ponTempAlarmTypeEn": ponTempAlarmTypeEn,
       "ponTempAlarmThld": ponTempAlarmThld,
       "ponTempClearThld": ponTempClearThld,
       "ponTempAlarmAction": ponTempAlarmAction,
       "ponStatAlarm": ponStatAlarm,
       "ponStatAlarmType": ponStatAlarmType,
       "ponStatAlarmTypeEn": ponStatAlarmTypeEn,
       "ponStatAlarmThld": ponStatAlarmThld,
       "ponStatAlarmAction": ponStatAlarmAction,
       "portAlarmStatus": portAlarmStatus,
       "portAlarmEthNo": portAlarmEthNo,
       "portAlarmStatusType": portAlarmStatusType,
       "portAlarmStatusEn": portAlarmStatusEn,
       "portAlarmStatusAction": portAlarmStatusAction,
       "portStatAlarm": portStatAlarm,
       "portStatAlarmEthNo": portStatAlarmEthNo,
       "portStatAlarmType": portStatAlarmType,
       "portStatAlarmTypeEn": portStatAlarmTypeEn,
       "portStatAlarmTld": portStatAlarmTld,
       "portStatAlarmAction": portStatAlarmAction,
       "potsAlarmStatus": potsAlarmStatus,
       "potsAlarmPotsNo": potsAlarmPotsNo,
       "potsPortFailAlarmEn": potsPortFailAlarmEn,
       "potsAlarmStatusAction": potsAlarmStatusAction,
       "e1AlarmStatus": e1AlarmStatus,
       "e1AlarmE1No": e1AlarmE1No,
       "e1AlarmType": e1AlarmType,
       "e1AlarmTypeEn": e1AlarmTypeEn,
       "e1AlarmStatusAction": e1AlarmStatusAction,
       "profileManualBind": profileManualBind,
       "profileBindTpye": profileBindTpye,
       "profileBindPon": profileBindPon,
       "profileBindOnu": profileBindOnu,
       "profileBindId": profileBindId,
       "profileBindAction": profileBindAction,
       "profileAutoBind": profileAutoBind,
       "profileAutoBindDba": profileAutoBindDba,
       "profileAutoBindSrv": profileAutoBindSrv,
       "profileAutoBindVoip": profileAutoBindVoip,
       "profileAutoBindAlarm": profileAutoBindAlarm,
       "profileOnuType": profileOnuType,
       "profileAutoBindAction": profileAutoBindAction,
       "profileDescrEdit": profileDescrEdit,
       "profileDescrType": profileDescrType,
       "profileDescrId": profileDescrId,
       "profileDescrStr": profileDescrStr,
       "profileDescrAction": profileDescrAction,
       "onuProfileShow": onuProfileShow,
       "dbaProfileShow": dbaProfileShow,
       "upsteamPFTable": upsteamPFTable,
       "upsteamPFEntry": upsteamPFEntry,
       "upstreamDbaId": upstreamDbaId,
       "upstreamFirS": upstreamFirS,
       "upstreamCirS": upstreamCirS,
       "upstreamPirS": upstreamPirS,
       "upstreamWeightS": upstreamWeightS,
       "dnstreamPFTable": dnstreamPFTable,
       "dnstreamPFEntry": dnstreamPFEntry,
       "dnstreamDbaId": dnstreamDbaId,
       "dnstreamPirS": dnstreamPirS,
       "dnstreamWeightS": dnstreamWeightS,
       "srvProfileShow": srvProfileShow,
       "onuLanCountPFTable": onuLanCountPFTable,
       "onuLanCountPFEntry": onuLanCountPFEntry,
       "onuLanCountSrvId": onuLanCountSrvId,
       "onuLanCountS": onuLanCountS,
       "onuFastleavePFTable": onuFastleavePFTable,
       "onuFastleavePFEntry": onuFastleavePFEntry,
       "onuFastleaveSrvId": onuFastleaveSrvId,
       "onuFastleaveEnableS": onuFastleaveEnableS,
       "onuFecModePFTable": onuFecModePFTable,
       "onuFecModePFEntry": onuFecModePFEntry,
       "onuFecModeSrvId": onuFecModeSrvId,
       "onuFecModeEnableS": onuFecModeEnableS,
       "ctcMcModePFTable": ctcMcModePFTable,
       "ctcMcModePFEntry": ctcMcModePFEntry,
       "ctcMcModeSrvId": ctcMcModeSrvId,
       "ctcMcModeS": ctcMcModeS,
       "ctcMultiLlidPFTable": ctcMultiLlidPFTable,
       "ctcMultiLlidPFEntry": ctcMultiLlidPFEntry,
       "ctcMultiLlidSrvId": ctcMultiLlidSrvId,
       "ctcMultiLlidS": ctcMultiLlidS,
       "ctcActivePonPFTable": ctcActivePonPFTable,
       "ctcActivePonPFEntry": ctcActivePonPFEntry,
       "ctcActivePonSrvId": ctcActivePonSrvId,
       "ctcActivePonS": ctcActivePonS,
       "ctcHoldoverPFTable": ctcHoldoverPFTable,
       "ctcHoldoverPFEntry": ctcHoldoverPFEntry,
       "ctcHoldoverSrvId": ctcHoldoverSrvId,
       "ctcHoldoverS": ctcHoldoverS,
       "onuMgmtIpPFTable": onuMgmtIpPFTable,
       "onuMgmtIpPFEntry": onuMgmtIpPFEntry,
       "onuMgmtIpSrvId": onuMgmtIpSrvId,
       "onuMgmtIpAddrS": onuMgmtIpAddrS,
       "onuMgmtIpMaskS": onuMgmtIpMaskS,
       "onuMgmtIpGwS": onuMgmtIpGwS,
       "onuMgmtIpCvlanS": onuMgmtIpCvlanS,
       "onuMgmtIpSvlanS": onuMgmtIpSvlanS,
       "onuMgmtIpPriS": onuMgmtIpPriS,
       "onuSnmpProPFTable": onuSnmpProPFTable,
       "onuSnmpProPFEntry": onuSnmpProPFEntry,
       "onuSnmpProSrvId": onuSnmpProSrvId,
       "onuSnmpProHostS": onuSnmpProHostS,
       "onuSnmpProTrapPortS": onuSnmpProTrapPortS,
       "onuSnmpProPortS": onuSnmpProPortS,
       "onuSnmpProNameS": onuSnmpProNameS,
       "onuSnmpProComRdS": onuSnmpProComRdS,
       "onuSnmpProComWrS": onuSnmpProComWrS,
       "onuSlaPFTable": onuSlaPFTable,
       "onuSlaPFEntry": onuSlaPFEntry,
       "onuSlaSrvId": onuSlaSrvId,
       "onuSlaEnableS": onuSlaEnableS,
       "onuCtcPausePFTable": onuCtcPausePFTable,
       "onuCtcPausePFEntry": onuCtcPausePFEntry,
       "onuCtcPauseSrvId": onuCtcPauseSrvId,
       "pausePortIndexS": pausePortIndexS,
       "onuCtcPauseEnS": onuCtcPauseEnS,
       "onuCtcLoopdetectPFTable": onuCtcLoopdetectPFTable,
       "onuCtcLoopdetectPFEntry": onuCtcLoopdetectPFEntry,
       "onuCtcLoopdetectSrvId": onuCtcLoopdetectSrvId,
       "loopdetectPortIndexS": loopdetectPortIndexS,
       "onuCtcLoopdetectEnS": onuCtcLoopdetectEnS,
       "onuMcTagstripPFTable": onuMcTagstripPFTable,
       "onuMcTagstripPFEntry": onuMcTagstripPFEntry,
       "onuMcTagstripSrvId": onuMcTagstripSrvId,
       "tagstripPortIndexS": tagstripPortIndexS,
       "onuMcTagstripEnS": onuMcTagstripEnS,
       "onuMcVlanTransPFTable": onuMcVlanTransPFTable,
       "onuMcVlanTransPFEntry": onuMcVlanTransPFEntry,
       "onuMcVlanTransnSrvId": onuMcVlanTransnSrvId,
       "mcVlanTransPortIndexS": mcVlanTransPortIndexS,
       "onuMcVlanTransVlanStrS": onuMcVlanTransVlanStrS,
       "onuPortPhyAdminPFTable": onuPortPhyAdminPFTable,
       "onuPortPhyAdminPFEntry": onuPortPhyAdminPFEntry,
       "onuPortPhyAdminSrvId": onuPortPhyAdminSrvId,
       "adminPortIndexS": adminPortIndexS,
       "onuPortPhyAdminEnS": onuPortPhyAdminEnS,
       "portAutoNegPFTable": portAutoNegPFTable,
       "portAutoNegPFEntry": portAutoNegPFEntry,
       "portAutoNegSrvId": portAutoNegSrvId,
       "autoNegPortIndexS": autoNegPortIndexS,
       "portAutoNegEnS": portAutoNegEnS,
       "maxIgmpGrpPFTable": maxIgmpGrpPFTable,
       "maxIgmpGrpPFEntry": maxIgmpGrpPFEntry,
       "maxIgmpGrpSrvId": maxIgmpGrpSrvId,
       "maxIgmpPortIndexS": maxIgmpPortIndexS,
       "maxIgmpGrpS": maxIgmpGrpS,
       "onuPortUpLimitPFTable": onuPortUpLimitPFTable,
       "onuPortUpLimitPFEntry": onuPortUpLimitPFEntry,
       "onuPortUpLimitSrvId": onuPortUpLimitSrvId,
       "upLimitPortIndexS": upLimitPortIndexS,
       "onuPortUpLimitCirS": onuPortUpLimitCirS,
       "onuPortUpLimitCbsS": onuPortUpLimitCbsS,
       "onuPortUpLimitEbsS": onuPortUpLimitEbsS,
       "onuPortDownLimitPFTable": onuPortDownLimitPFTable,
       "onuPortDownLimitPFEntry": onuPortDownLimitPFEntry,
       "onuPortDownLimitSrvId": onuPortDownLimitSrvId,
       "downLimitPortIndexS": downLimitPortIndexS,
       "onuPortDownLimitCirS": onuPortDownLimitCirS,
       "onuPortDownLimitPirS": onuPortDownLimitPirS,
       "portVlanModePFTable": portVlanModePFTable,
       "portVlanModePFEntry": portVlanModePFEntry,
       "portVlanModeSrvId": portVlanModeSrvId,
       "vlanModePortIndexS": vlanModePortIndexS,
       "onuCtcPortVlanModeS": onuCtcPortVlanModeS,
       "portVlanPvidPFTable": portVlanPvidPFTable,
       "portVlanPvidPFEntry": portVlanPvidPFEntry,
       "portVlanPvidSrvId": portVlanPvidSrvId,
       "vlanPvidPortIndexS": vlanPvidPortIndexS,
       "vlanPvidS": vlanPvidS,
       "vlanTpidS": vlanTpidS,
       "vlanPvidPriS": vlanPvidPriS,
       "portVlanTranslatePFTable": portVlanTranslatePFTable,
       "portVlanTranslatePFEntry": portVlanTranslatePFEntry,
       "portVlanTranslateSrvId": portVlanTranslateSrvId,
       "vlanTransPortIndexS": vlanTransPortIndexS,
       "portVlanTransVlanStrS": portVlanTransVlanStrS,
       "portVlanTrunkPFTable": portVlanTrunkPFTable,
       "portVlanTrunkPFEntry": portVlanTrunkPFEntry,
       "portVlanTrunkSrvId": portVlanTrunkSrvId,
       "trunkPortIndexS": trunkPortIndexS,
       "portVlanTrunkVidStrS": portVlanTrunkVidStrS,
       "portVlanAggPFTable": portVlanAggPFTable,
       "portVlanAggPFEntry": portVlanAggPFEntry,
       "portVlanAggSrvId": portVlanAggSrvId,
       "vlanAggPortIndexS": vlanAggPortIndexS,
       "portVlanAggNewVlanS": portVlanAggNewVlanS,
       "portVlanAggOldVlanStrS": portVlanAggOldVlanStrS,
       "portMcVlanPFTable": portMcVlanPFTable,
       "portMcVlanPFEntry": portMcVlanPFEntry,
       "portMcVlanSrvId": portMcVlanSrvId,
       "mcVlanPortIndexS": mcVlanPortIndexS,
       "portMcVlanStrS": portMcVlanStrS,
       "onuClassifyPFTable": onuClassifyPFTable,
       "onuClassifyPFEntry": onuClassifyPFEntry,
       "onuClassifySrvId": onuClassifySrvId,
       "cfyPortIndexS": cfyPortIndexS,
       "ctcCfyPrecedenceS": ctcCfyPrecedenceS,
       "ctcCfyPriS": ctcCfyPriS,
       "ctcCfyDstMacEqualS": ctcCfyDstMacEqualS,
       "ctcCfyDstMacValueS": ctcCfyDstMacValueS,
       "ctcCfySrcMacEqualS": ctcCfySrcMacEqualS,
       "ctcCfySrcMacValueS": ctcCfySrcMacValueS,
       "ctcCfyVlanEqualS": ctcCfyVlanEqualS,
       "ctcCfyVlanValueS": ctcCfyVlanValueS,
       "ctcCfyCosEqualS": ctcCfyCosEqualS,
       "ctcCfyCosValueS": ctcCfyCosValueS,
       "ctcCfyEthTypeEqualS": ctcCfyEthTypeEqualS,
       "ctcCfyEthTypeValueS": ctcCfyEthTypeValueS,
       "ctcCfySrcIpEqualS": ctcCfySrcIpEqualS,
       "ctcCfySrcIpValueS": ctcCfySrcIpValueS,
       "ctcCfyDestIpEqualS": ctcCfyDestIpEqualS,
       "ctcCfyDestIpValueS": ctcCfyDestIpValueS,
       "ctcCfyProEqualS": ctcCfyProEqualS,
       "ctcCfyProValueS": ctcCfyProValueS,
       "ctcCfyTosDscpEuqalS": ctcCfyTosDscpEuqalS,
       "ctcCfyTosDscpValueS": ctcCfyTosDscpValueS,
       "ctcCfySrcPortEqualS": ctcCfySrcPortEqualS,
       "ctcCfySrcPortValueS": ctcCfySrcPortValueS,
       "ctcCfyDestPortEqualS": ctcCfyDestPortEqualS,
       "ctcCfyDestPortValueS": ctcCfyDestPortValueS,
       "onuCfyQueueS": onuCfyQueueS,
       "onuMacAgetimePFTable": onuMacAgetimePFTable,
       "onuMacAgetimePFEntry": onuMacAgetimePFEntry,
       "onuMacAgetimeSrvId": onuMacAgetimeSrvId,
       "onuMacAgetimeS": onuMacAgetimeS,
       "onuPonProtectPFTable": onuPonProtectPFTable,
       "onuPonProtectPFEntry": onuPonProtectPFEntry,
       "onuPonProtectSrvId": onuPonProtectSrvId,
       "onuPonProtectLosOpS": onuPonProtectLosOpS,
       "onuPonProtectLosMpcpS": onuPonProtectLosMpcpS,
       "onuPowerSavePFTable": onuPowerSavePFTable,
       "onuPowerSavePFEntry": onuPowerSavePFEntry,
       "onuPowerSaveSrvId": onuPowerSaveSrvId,
       "onuPSEarlyWakeupS": onuPSEarlyWakeupS,
       "onuPSSleepDurationMaxS": onuPSSleepDurationMaxS,
       "onuSleepPFTable": onuSleepPFTable,
       "onuSleepPFEntry": onuSleepPFEntry,
       "onuSleepSrvId": onuSleepSrvId,
       "onuSleepDurationS": onuSleepDurationS,
       "onuWakeDurationS": onuWakeDurationS,
       "onuSleepFlagS": onuSleepFlagS,
       "onuSleepModeS": onuSleepModeS,
       "onuDisableLoopPFTable": onuDisableLoopPFTable,
       "onuDisableLoopPFEntry": onuDisableLoopPFEntry,
       "onuDisableLoopSrvId": onuDisableLoopSrvId,
       "disableLoopPortIndexS": disableLoopPortIndexS,
       "onuDisableLoopS": onuDisableLoopS,
       "onuPortStatPFTable": onuPortStatPFTable,
       "onuPortStatPFEntry": onuPortStatPFEntry,
       "onuPortStatSrvId": onuPortStatSrvId,
       "onuPortStatPortIdS": onuPortStatPortIdS,
       "onuPortStatStatusS": onuPortStatStatusS,
       "onuPortStatCountS": onuPortStatCountS,
       "onuPortStatClearPFTable": onuPortStatClearPFTable,
       "onuPortStatClearPFEntry": onuPortStatClearPFEntry,
       "onuPortStatClearSrvId": onuPortStatClearSrvId,
       "onuPortStatClearPortIdS": onuPortStatClearPortIdS,
       "onuIgmpAdminPFTable": onuIgmpAdminPFTable,
       "onuIgmpAdminPFEntry": onuIgmpAdminPFEntry,
       "onuIgmpAdminSrvID": onuIgmpAdminSrvID,
       "onuIgmpAdminEnableS": onuIgmpAdminEnableS,
       "onuCatvStatusPFTable": onuCatvStatusPFTable,
       "onuCatvStatusPFEntry": onuCatvStatusPFEntry,
       "onuCatvSatusSrvId": onuCatvSatusSrvId,
       "onuCatvStatusS": onuCatvStatusS,
       "onuCtcoamSkipPFTable": onuCtcoamSkipPFTable,
       "onuCtcoamSkipPFEntry": onuCtcoamSkipPFEntry,
       "onuCtcOamSkipSrvId": onuCtcOamSkipSrvId,
       "onuCtcoamSkipS": onuCtcoamSkipS,
       "onuWifiSwichPFTable": onuWifiSwichPFTable,
       "onuWifiSwichPFEntry": onuWifiSwichPFEntry,
       "onuWifiSwichSrvId": onuWifiSwichSrvId,
       "onuWifiSwichActive": onuWifiSwichActive,
       "onuWifiSwichAPModuleS": onuWifiSwichAPModuleS,
       "onuWifiSwichCountry": onuWifiSwichCountry,
       "onuWifiSwichChannelS": onuWifiSwichChannelS,
       "onuWifiSwichStandardS": onuWifiSwichStandardS,
       "onuWifiSwitchPower": onuWifiSwitchPower,
       "onuWifiSwichChannelWidth": onuWifiSwichChannelWidth,
       "onuWifiSsidPFTable": onuWifiSsidPFTable,
       "onuWifiSsidPFEntry": onuWifiSsidPFEntry,
       "onuWifiSsidSrvId": onuWifiSsidSrvId,
       "onuWifiSsidIdS": onuWifiSsidIdS,
       "onuWifiSsidNameS": onuWifiSsidNameS,
       "onuWifiSsidEnableS": onuWifiSsidEnableS,
       "onuWifiSsidHideS": onuWifiSsidHideS,
       "onuWifiSsidAuthMode": onuWifiSsidAuthMode,
       "onuWifiSsidEncryTpeS": onuWifiSsidEncryTpeS,
       "ssidPreshareKeyS": ssidPreshareKeyS,
       "ssidWpaRekeyIntervalS": ssidWpaRekeyIntervalS,
       "ssidRadiusServIpTypeS": ssidRadiusServIpTypeS,
       "ssidRadiusServIp": ssidRadiusServIp,
       "ssidRadiusServIpPrefixLenS": ssidRadiusServIpPrefixLenS,
       "ssidRadiusPortS": ssidRadiusPortS,
       "ssidRadiusKeyS": ssidRadiusKeyS,
       "ssidWepEncryptionLevelS": ssidWepEncryptionLevelS,
       "ssidWepKeyIndexS": ssidWepKeyIndexS,
       "ssidWepKey1S": ssidWepKey1S,
       "ssidWepKey2S": ssidWepKey2S,
       "ssidWepKey3S": ssidWepKey3S,
       "ssidWepKey4S": ssidWepKey4S,
       "onuWanConnPFTable": onuWanConnPFTable,
       "onuWanConnPFEntry": onuWanConnPFEntry,
       "wanConnSrvId": wanConnSrvId,
       "wanConnIndexS": wanConnIndexS,
       "wanConnBindLanS": wanConnBindLanS,
       "wanConnBindSsidS": wanConnBindSsidS,
       "wanModeS": wanModeS,
       "wanConnTypeS": wanConnTypeS,
       "wanConnVlanIdS": wanConnVlanIdS,
       "wanConnVlanCosS": wanConnVlanCosS,
       "wanConnNatEnableS": wanConnNatEnableS,
       "wanConnModeS": wanConnModeS,
       "wanConnIpAddressS": wanConnIpAddressS,
       "wanConnIpMaskS": wanConnIpMaskS,
       "wanConnGatewayS": wanConnGatewayS,
       "wanConnMasterDns": wanConnMasterDns,
       "wanConnSlaveDns": wanConnSlaveDns,
       "wanConnPppoeProxyS": wanConnPppoeProxyS,
       "wanConnPppoeUsernameS": wanConnPppoeUsernameS,
       "wanConnPppoePasswordS": wanConnPppoePasswordS,
       "wanConnPppoeSerName": wanConnPppoeSerName,
       "wanConnPppoeModeS": wanConnPppoeModeS,
       "wanConnQosEnableS": wanConnQosEnableS,
       "wanConnVlanModeS": wanConnVlanModeS,
       "wanConnTranslationEnableS": wanConnTranslationEnableS,
       "wanConnTranslationVlanS": wanConnTranslationVlanS,
       "wanConnTranslationCosS": wanConnTranslationCosS,
       "wanConnQinqEnableS": wanConnQinqEnableS,
       "wanConnQinqTpidS": wanConnQinqTpidS,
       "wanConnSvlanIdS": wanConnSvlanIdS,
       "wanConnSvlanCosS": wanConnSvlanCosS,
       "wanConnRouteMtuS": wanConnRouteMtuS,
       "portMacLimitPFTable": portMacLimitPFTable,
       "portMacLimitPFEntry": portMacLimitPFEntry,
       "portMacLimitSrvId": portMacLimitSrvId,
       "portMacLimitEthNoS": portMacLimitEthNoS,
       "portMacLimitS": portMacLimitS,
       "portPkgSuppressPFTable": portPkgSuppressPFTable,
       "portPkgSuppressPFEntry": portPkgSuppressPFEntry,
       "portPkgSuppressSrvId": portPkgSuppressSrvId,
       "portPkgSuppressEthNoS": portPkgSuppressEthNoS,
       "portPkgSuppressBroadcastS": portPkgSuppressBroadcastS,
       "portPkgSuppressMulticastS": portPkgSuppressMulticastS,
       "portPkgSuppressUnkownS": portPkgSuppressUnkownS,
       "portIsolateTable": portIsolateTable,
       "portIsolateEntry": portIsolateEntry,
       "portIsolateSrvId": portIsolateSrvId,
       "portIsolateS": portIsolateS,
       "portModeControlTable": portModeControlTable,
       "portModeControlEntry": portModeControlEntry,
       "portModeControlSrvId": portModeControlSrvId,
       "portModeControlEthNoS": portModeControlEthNoS,
       "portModeControlS": portModeControlS,
       "onuDhcpServerTable": onuDhcpServerTable,
       "onuDhcpServerEntry": onuDhcpServerEntry,
       "onuDhcpSrvId": onuDhcpSrvId,
       "onuDhcpLanIp": onuDhcpLanIp,
       "onuDhcpMask": onuDhcpMask,
       "onuDhcpServerEable": onuDhcpServerEable,
       "onuDhcpLease": onuDhcpLease,
       "onuDhcpBeginIp": onuDhcpBeginIp,
       "onuDhcpEndIp": onuDhcpEndIp,
       "onuDhcpPoolType": onuDhcpPoolType,
       "onuDhcpMasterDns": onuDhcpMasterDns,
       "onuDhcpSlaveDns": onuDhcpSlaveDns,
       "onuDhcpGateway": onuDhcpGateway,
       "onuDhcpRelayIp": onuDhcpRelayIp,
       "onuDhcpOption82Table": onuDhcpOption82Table,
       "onuDhcpOption82Entry": onuDhcpOption82Entry,
       "onuDhcpOption82SrvId": onuDhcpOption82SrvId,
       "onuDhcpOption82Enable": onuDhcpOption82Enable,
       "onuPPPoETable": onuPPPoETable,
       "onuPPPoEEntry": onuPPPoEEntry,
       "onuPPPoESrvId": onuPPPoESrvId,
       "onuPPPoEEnable": onuPPPoEEnable,
       "onuDhcpV6Table": onuDhcpV6Table,
       "onuDhcpV6Entry": onuDhcpV6Entry,
       "onuDhcpV6SrvId": onuDhcpV6SrvId,
       "onuDhcpV6Option18Enable": onuDhcpV6Option18Enable,
       "onuDhcpV6Option37Enable": onuDhcpV6Option37Enable,
       "onuUsernameTable": onuUsernameTable,
       "onuUsernameEntry": onuUsernameEntry,
       "onuUsernamenSrvId": onuUsernamenSrvId,
       "adminCtl": adminCtl,
       "adminNameStr": adminNameStr,
       "adminPwdStr": adminPwdStr,
       "userCtl": userCtl,
       "userNameStr": userNameStr,
       "userPwdStr": userPwdStr,
       "onuFirewallTable": onuFirewallTable,
       "onuFirewallEntry": onuFirewallEntry,
       "onuFirewallSrvId": onuFirewallSrvId,
       "firewallLevel": firewallLevel,
       "onuAclTable": onuAclTable,
       "onuAclEntry": onuAclEntry,
       "onuAclSrvId": onuAclSrvId,
       "onuAclProtocolType": onuAclProtocolType,
       "onuAclCtl": onuAclCtl,
       "onuAclLanCtl": onuAclLanCtl,
       "onuAclWanCtl": onuAclWanCtl,
       "onuAclIPv4Ctl": onuAclIPv4Ctl,
       "onuAclIPv4Addr": onuAclIPv4Addr,
       "onuAclIPv4Mask": onuAclIPv4Mask,
       "onuAclIPv6Ctl": onuAclIPv6Ctl,
       "onuAclIPv6Addr": onuAclIPv6Addr,
       "onuAclPort": onuAclPort,
       "onuWifiSwitch1PFTable": onuWifiSwitch1PFTable,
       "onuWifiSwitch1PFEntry": onuWifiSwitch1PFEntry,
       "onuWifiSwitchSrvId": onuWifiSwitchSrvId,
       "onuWifiSwitchActive": onuWifiSwitchActive,
       "onuWifiSwitchAPModuleS": onuWifiSwitchAPModuleS,
       "onuWifiSwitchCountry": onuWifiSwitchCountry,
       "onuWifiSwitchChannelS": onuWifiSwitchChannelS,
       "onuWifiSwitchStandardS": onuWifiSwitchStandardS,
       "onuWifiSwitchPower1": onuWifiSwitchPower1,
       "onuWifiSwitchChannelWidth": onuWifiSwitchChannelWidth,
       "onuWifiSwitchEasyMeshStatus": onuWifiSwitchEasyMeshStatus,
       "onuDhcpv6ServerTable": onuDhcpv6ServerTable,
       "onuDhcpv6ServerEntry": onuDhcpv6ServerEntry,
       "onuDhcpv6SrvId": onuDhcpv6SrvId,
       "onuDhcpv6LanIp": onuDhcpv6LanIp,
       "onuDhcpv6Prefixlen": onuDhcpv6Prefixlen,
       "onuDhcpv6PrefixMode": onuDhcpv6PrefixMode,
       "onuDhcpv6PrefixModeIp": onuDhcpv6PrefixModeIp,
       "onuDhcpv6ServerEable": onuDhcpv6ServerEable,
       "onuDhcpv6Preference": onuDhcpv6Preference,
       "onuDhcpv6BeginIp": onuDhcpv6BeginIp,
       "onuDhcpv6EndIp": onuDhcpv6EndIp,
       "onuDhcpv6PoolType": onuDhcpv6PoolType,
       "onuDhcpv6MasterDns": onuDhcpv6MasterDns,
       "onuDhcpv6SlaveDns": onuDhcpv6SlaveDns,
       "onuDhcpv6Gateway": onuDhcpv6Gateway,
       "onuDhcpv6RelayIp": onuDhcpv6RelayIp,
       "onuDhcpv6RA": onuDhcpv6RA,
       "onuDhcpv6RAManage": onuDhcpv6RAManage,
       "onuDhcpv6RAOther": onuDhcpv6RAOther,
       "onuDhcpv6RAMaxInterval": onuDhcpv6RAMaxInterval,
       "onuDhcpv6RAMinInterval": onuDhcpv6RAMinInterval,
       "onuDhcpv6Valid": onuDhcpv6Valid,
       "onuDhcpv6DnsMode": onuDhcpv6DnsMode,
       "onuWanConnV6Table": onuWanConnV6Table,
       "onuWanConnV6Entry": onuWanConnV6Entry,
       "v6wanConnSrvId": v6wanConnSrvId,
       "v6wanConnIndexS": v6wanConnIndexS,
       "v6wanConnBindLanS": v6wanConnBindLanS,
       "v6wanConnBindSsidS": v6wanConnBindSsidS,
       "v6WanModeS": v6WanModeS,
       "v6wanConnTypeS": v6wanConnTypeS,
       "v6wanConnVlanIdS": v6wanConnVlanIdS,
       "v6wanConnVlanCosS": v6wanConnVlanCosS,
       "v6wanConnIpProtocolS": v6wanConnIpProtocolS,
       "v6WanConnModeS": v6WanConnModeS,
       "v6wanConnIpAddressIpv4S": v6wanConnIpAddressIpv4S,
       "v6wanConnIpNetMaskIpv4S": v6wanConnIpNetMaskIpv4S,
       "v6wanConnGatewayIpv4S": v6wanConnGatewayIpv4S,
       "v6wanConnDnsEnableIpv4S": v6wanConnDnsEnableIpv4S,
       "v6wanConnMasterDnsIpv4S": v6wanConnMasterDnsIpv4S,
       "v6wanConnSlaveDnsIpv4S": v6wanConnSlaveDnsIpv4S,
       "v6wanConnNatEnableS": v6wanConnNatEnableS,
       "v6wanConnAddressIpv6S": v6wanConnAddressIpv6S,
       "v6wanConnPrefixLenIpv6S": v6wanConnPrefixLenIpv6S,
       "v6wanConnGatewayIpv6S": v6wanConnGatewayIpv6S,
       "v6wanConnDnsEnableIpv6S": v6wanConnDnsEnableIpv6S,
       "v6wanConnMsaterDnsIpv6S": v6wanConnMsaterDnsIpv6S,
       "v6wanConnSlaveDnsIpv6S": v6wanConnSlaveDnsIpv6S,
       "v6wanConnSlaacS": v6wanConnSlaacS,
       "v6wanConnPppoeProxyS": v6wanConnPppoeProxyS,
       "v6wanConnPppoeUsernameS": v6wanConnPppoeUsernameS,
       "v6wanConnPppoePasswordS": v6wanConnPppoePasswordS,
       "v6wanConnPppoeSerNameS": v6wanConnPppoeSerNameS,
       "v6wanConnPppoeModeS": v6wanConnPppoeModeS,
       "v6wanConnDhcpv6ClientAddressS": v6wanConnDhcpv6ClientAddressS,
       "v6wanConnDhcpv6ClientPrefixS": v6wanConnDhcpv6ClientPrefixS,
       "v6wanConnDsLiteEnableS": v6wanConnDsLiteEnableS,
       "v6wanConnDsLiteAftrModeS": v6wanConnDsLiteAftrModeS,
       "v6wanConnDsLiteAddressTypeS": v6wanConnDsLiteAddressTypeS,
       "v6wanConnDsLiteAddressS": v6wanConnDsLiteAddressS,
       "v6wanConnQosEnableS": v6wanConnQosEnableS,
       "v6wanConnVlanModeS": v6wanConnVlanModeS,
       "v6wanConnTranslationEnableS": v6wanConnTranslationEnableS,
       "v6wanConnTranslationVlanS": v6wanConnTranslationVlanS,
       "v6wanConnTranslationCosS": v6wanConnTranslationCosS,
       "v6wanConnQinqEnableS": v6wanConnQinqEnableS,
       "v6wanConnQinqTpidS": v6wanConnQinqTpidS,
       "v6wanConnSvlanIdS": v6wanConnSvlanIdS,
       "v6wanConnSvlanCosS": v6wanConnSvlanCosS,
       "v6wanConnRouteMtuS": v6wanConnRouteMtuS,
       "onuTr069ManageTable": onuTr069ManageTable,
       "onuTr069ManageEntry": onuTr069ManageEntry,
       "onuMngSrvId": onuMngSrvId,
       "onuMngAcsAddress": onuMngAcsAddress,
       "onuMngAcsUsername": onuMngAcsUsername,
       "onuMngAcsPassword": onuMngAcsPassword,
       "onuMngCertificateEn": onuMngCertificateEn,
       "onuMngInformEn": onuMngInformEn,
       "onuMngInformIntervalTime": onuMngInformIntervalTime,
       "onuMngRevConnUsername": onuMngRevConnUsername,
       "onuMngRevConnPassword": onuMngRevConnPassword,
       "onuMngStatus": onuMngStatus,
       "onuTr069StunTable": onuTr069StunTable,
       "onuTr069StunEntry": onuTr069StunEntry,
       "onuStunSrvId": onuStunSrvId,
       "onuStunServerAddress": onuStunServerAddress,
       "onuStunServerPort": onuStunServerPort,
       "onuStunServerUsername": onuStunServerUsername,
       "onuStunServerPassword": onuStunServerPassword,
       "onuStunStatus": onuStunStatus,
       "voipProfileShow": voipProfileShow,
       "onuPotsCountPFTable": onuPotsCountPFTable,
       "onuPotsCountPFEntry": onuPotsCountPFEntry,
       "onuPotsCountVoipId": onuPotsCountVoipId,
       "onuPotsCountS": onuPotsCountS,
       "voipGlobalPFTable": voipGlobalPFTable,
       "voipGlobalPFEntry": voipGlobalPFEntry,
       "voipGlobalVoipId": voipGlobalVoipId,
       "voipGlobalIpModeS": voipGlobalIpModeS,
       "voipGlobalIpAddrS": voipGlobalIpAddrS,
       "voipGlobalIpMaskS": voipGlobalIpMaskS,
       "voipGlobalIpGwS": voipGlobalIpGwS,
       "voipGlobalPppoeModeS": voipGlobalPppoeModeS,
       "voipGlobalPppoeUsrS": voipGlobalPppoeUsrS,
       "voipGlobalPppoePwS": voipGlobalPppoePwS,
       "voipGlobalModeS": voipGlobalModeS,
       "voipGlobalCvlanS": voipGlobalCvlanS,
       "voipGlobalSvlanS": voipGlobalSvlanS,
       "voipGlobalPriS": voipGlobalPriS,
       "h248ProPFTable": h248ProPFTable,
       "h248ProPFEntry": h248ProPFEntry,
       "h248ProVoipId": h248ProVoipId,
       "h248ProMgPortS": h248ProMgPortS,
       "h248ProMgcIpS": h248ProMgcIpS,
       "h248ProMgComPortS": h248ProMgComPortS,
       "h248ProBakMgcIpS": h248ProBakMgcIpS,
       "h248ProBakMgcPortS": h248ProBakMgcPortS,
       "h248ProRegModeS": h248ProRegModeS,
       "h248ProMIDS": h248ProMIDS,
       "h248ProHBModeS": h248ProHBModeS,
       "h248ProHBCycleS": h248ProHBCycleS,
       "h248ProHBCountS": h248ProHBCountS,
       "h248RtpTidPFTable": h248RtpTidPFTable,
       "h248RtpTidPFEntry": h248RtpTidPFEntry,
       "h248RtpTidVoipId": h248RtpTidVoipId,
       "h248RtpTidNumberS": h248RtpTidNumberS,
       "h248RtpTidPrefixS": h248RtpTidPrefixS,
       "h248RtpTidBegin0S": h248RtpTidBegin0S,
       "h248RtpTidBegin1S": h248RtpTidBegin1S,
       "h248RtpTidModeS": h248RtpTidModeS,
       "h248RtpTidDGLengthS": h248RtpTidDGLengthS,
       "h248UserTidPFTable": h248UserTidPFTable,
       "h248UserTidPFEntry": h248UserTidPFEntry,
       "h248UserTidVoipId": h248UserTidVoipId,
       "h248UserTidPotsNoS": h248UserTidPotsNoS,
       "h248UserTidS": h248UserTidS,
       "sipProPFTable": sipProPFTable,
       "sipProPFEntry": sipProPFEntry,
       "sipProVoipId": sipProVoipId,
       "sipProMgPortS": sipProMgPortS,
       "sipProProxySrvIpS": sipProProxySrvIpS,
       "sipProProxySrvPortS": sipProProxySrvPortS,
       "sipProBKProxySrvIpS": sipProBKProxySrvIpS,
       "sipProBKProxySrvPortS": sipProBKProxySrvPortS,
       "sipProRegSrvIpS": sipProRegSrvIpS,
       "sipProRegSrvPortS": sipProRegSrvPortS,
       "sipProBKRegSrvIpS": sipProBKRegSrvIpS,
       "sipProBKRegSrvPortS": sipProBKRegSrvPortS,
       "sipProOutBoundServIpS": sipProOutBoundServIpS,
       "sipProOutBoundServPortS": sipProOutBoundServPortS,
       "sipProRegInterS": sipProRegInterS,
       "sipProHBEnableS": sipProHBEnableS,
       "sipProHBCycleS": sipProHBCycleS,
       "sipProHBCountS": sipProHBCountS,
       "sipUserPFTable": sipUserPFTable,
       "sipUserPFEntry": sipUserPFEntry,
       "sipUserVoipId": sipUserVoipId,
       "sipUserPotsNoS": sipUserPotsNoS,
       "sipUserAccountS": sipUserAccountS,
       "sipUserNameS": sipUserNameS,
       "sipUserPwS": sipUserPwS,
       "sipDigitPFTable": sipDigitPFTable,
       "sipDigitPFEntry": sipDigitPFEntry,
       "sipDigitVoipID": sipDigitVoipID,
       "sipDigitNumS": sipDigitNumS,
       "sipDigitNumBlockS": sipDigitNumBlockS,
       "sipDigitMapS": sipDigitMapS,
       "voipFaxModemPFTable": voipFaxModemPFTable,
       "voipFaxModemPFEntry": voipFaxModemPFEntry,
       "voipFaxModemVoipId": voipFaxModemVoipId,
       "voipFaxModemT38EnS": voipFaxModemT38EnS,
       "voipFaxModemControlS": voipFaxModemControlS,
       "voipPotsManagePFTable": voipPotsManagePFTable,
       "voipPotsManagePFEntry": voipPotsManagePFEntry,
       "voipPotsManageVoipId": voipPotsManageVoipId,
       "voipPotsManagNoS": voipPotsManagNoS,
       "voipPotsManageEnableS": voipPotsManageEnableS,
       "voipTimerTable": voipTimerTable,
       "voipTimerEntry": voipTimerEntry,
       "voipTimerPfId": voipTimerPfId,
       "voipMaxWaitTime": voipMaxWaitTime,
       "voipStartTimer": voipStartTimer,
       "voipLongTimer": voipLongTimer,
       "voipShortTimer": voipShortTimer,
       "voipDigitMapNotify": voipDigitMapNotify,
       "potsParamterTable": potsParamterTable,
       "potsParamterEntry": potsParamterEntry,
       "potsPtPfId": potsPtPfId,
       "potsPtPotsNo": potsPtPotsNo,
       "potsPtVad": potsPtVad,
       "potsPtEchoCancel": potsPtEchoCancel,
       "potsPtInputGain": potsPtInputGain,
       "potsPtOutputGain": potsPtOutputGain,
       "potsPtDtmfMode": potsPtDtmfMode,
       "voipParamTable": voipParamTable,
       "voipParamEntry": voipParamEntry,
       "voipParamVoipId": voipParamVoipId,
       "voipParamIpMode": voipParamIpMode,
       "voipParamIp": voipParamIp,
       "voipParamMask": voipParamMask,
       "voipParamGw": voipParamGw,
       "voipRtpIp": voipRtpIp,
       "voipRtpMask": voipRtpMask,
       "voipRtpGw": voipRtpGw,
       "voipDnsMaster": voipDnsMaster,
       "voipDnsSlave": voipDnsSlave,
       "voipDhcpOption60En": voipDhcpOption60En,
       "voipDhcpOption60Base": voipDhcpOption60Base,
       "voipDhcpOption60Val": voipDhcpOption60Val,
       "voipParamPPPoEMode": voipParamPPPoEMode,
       "voipPPPoEUsername": voipPPPoEUsername,
       "voipPPPoEPassword": voipPPPoEPassword,
       "voipSVlanTpid": voipSVlanTpid,
       "voipSVlanId": voipSVlanId,
       "voipSVlanCos": voipSVlanCos,
       "voipCVlanTpid": voipCVlanTpid,
       "voipCVlanId": voipCVlanId,
       "voipCVlanCos": voipCVlanCos,
       "voipRtpSVlanTpid": voipRtpSVlanTpid,
       "voipRtpSVlanId": voipRtpSVlanId,
       "voipRtpSVlanCos": voipRtpSVlanCos,
       "voipRtpCVlanTpid": voipRtpCVlanTpid,
       "voipRtpCVlanId": voipRtpCVlanId,
       "voipRtpCVlanCos": voipRtpCVlanCos,
       "voipSipParamTable": voipSipParamTable,
       "voipSipParamEntry": voipSipParamEntry,
       "sipVoipId": sipVoipId,
       "sipProxyServName": sipProxyServName,
       "sipProxyServPort": sipProxyServPort,
       "sipBakProxyServName": sipBakProxyServName,
       "sipBakProxyServPort": sipBakProxyServPort,
       "sipRegServName": sipRegServName,
       "sipRegServPort": sipRegServPort,
       "sipBakRegServName": sipBakRegServName,
       "sipBakRegServPort": sipBakRegServPort,
       "sipOutBndServName": sipOutBndServName,
       "sipOutBndServPort": sipOutBndServPort,
       "sipMgPort": sipMgPort,
       "sipRegInterValue": sipRegInterValue,
       "sipHBeatCfg": sipHBeatCfg,
       "sipHBeatCycle": sipHBeatCycle,
       "sipHBeatCount": sipHBeatCount,
       "alarmProfileShow": alarmProfileShow,
       "alarmOnuPFTable": alarmOnuPFTable,
       "alarmOnuPFEntry": alarmOnuPFEntry,
       "alarmOnuAlarmId": alarmOnuAlarmId,
       "alarmOnunTypeS": alarmOnunTypeS,
       "alarmOnuEnableS": alarmOnuEnableS,
       "alarmOnuThrPFTable": alarmOnuThrPFTable,
       "alarmOnuThrPFEntry": alarmOnuThrPFEntry,
       "alarmOnuThrAlarmId": alarmOnuThrAlarmId,
       "alarmOnuThrTypeS": alarmOnuThrTypeS,
       "alarmOnuThrEnS": alarmOnuThrEnS,
       "alarmOnuThrAlarmS": alarmOnuThrAlarmS,
       "alarmOnuThrClearS": alarmOnuThrClearS,
       "alarmPonPFTable": alarmPonPFTable,
       "alarmPonPFEntry": alarmPonPFEntry,
       "alarmPonAlarmId": alarmPonAlarmId,
       "alarmPonTypeS": alarmPonTypeS,
       "alarmPonEnableS": alarmPonEnableS,
       "alarmPonAlarmS": alarmPonAlarmS,
       "alarmPonClearS": alarmPonClearS,
       "alarmPonStatPFTable": alarmPonStatPFTable,
       "alarmPonStatPFEntry": alarmPonStatPFEntry,
       "alarmPonStatAlarmId": alarmPonStatAlarmId,
       "alarmPonStatTypeS": alarmPonStatTypeS,
       "alarmPonStatEnableS": alarmPonStatEnableS,
       "alarmPonStatThldS": alarmPonStatThldS,
       "alarmPortPFTable": alarmPortPFTable,
       "alarmPortPFEntry": alarmPortPFEntry,
       "alarmPortAlarmId": alarmPortAlarmId,
       "alarmPortNoS": alarmPortNoS,
       "alarmPortTpyeS": alarmPortTpyeS,
       "alarmPortEnableS": alarmPortEnableS,
       "alarmPortStatPFTable": alarmPortStatPFTable,
       "alarmPortStatPFEntry": alarmPortStatPFEntry,
       "alarmPortStatAlarmID": alarmPortStatAlarmID,
       "alarmPortStatEthNoS": alarmPortStatEthNoS,
       "alarmPortStatTypeS": alarmPortStatTypeS,
       "alarmPortStatEnableS": alarmPortStatEnableS,
       "alarmPortStatTrldS": alarmPortStatTrldS,
       "alarmPotsPFTable": alarmPotsPFTable,
       "alarmPotsPFEntry": alarmPotsPFEntry,
       "alarmPotsAlarmId": alarmPotsAlarmId,
       "alarmPotsNoS": alarmPotsNoS,
       "alarmPotsFailEnableS": alarmPotsFailEnableS,
       "alarmE1PFTable": alarmE1PFTable,
       "alarmE1PFEntry": alarmE1PFEntry,
       "alarmE1AlarmId": alarmE1AlarmId,
       "alarmE1NoS": alarmE1NoS,
       "alarmE1TypeS": alarmE1TypeS,
       "alarmE1EnableS": alarmE1EnableS,
       "profileManualBindShow": profileManualBindShow,
       "profileBindTable": profileBindTable,
       "profileBindEntry": profileBindEntry,
       "profileBindPonS": profileBindPonS,
       "profileBindOnuS": profileBindOnuS,
       "profileBindTypeS": profileBindTypeS,
       "profileBindIdS": profileBindIdS,
       "profileAutoBindShow": profileAutoBindShow,
       "profileAutoBindTable": profileAutoBindTable,
       "profileAutoBindEntry": profileAutoBindEntry,
       "profileAutoBindId": profileAutoBindId,
       "profileAutoBindDbaS": profileAutoBindDbaS,
       "profileAutoBindSrvS": profileAutoBindSrvS,
       "profileAutoBindVoipS": profileAutoBindVoipS,
       "profileAutoBindAlarmS": profileAutoBindAlarmS,
       "profileOnuTypeS": profileOnuTypeS,
       "profileShow": profileShow,
       "profileTable": profileTable,
       "profileEntry": profileEntry,
       "profileIdexShow": profileIdexShow,
       "profileTypeShow": profileTypeShow,
       "profileIdShow": profileIdShow,
       "profileIdDescr": profileIdDescr,
       "enterpriseID": enterpriseID,
       "snmpEnterpriseID": snmpEnterpriseID}
)
